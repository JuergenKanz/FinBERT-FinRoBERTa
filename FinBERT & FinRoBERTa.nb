(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3230123,      49173]
NotebookOptionsPosition[   3224111,      49063]
NotebookOutlinePosition[   3224704,      49084]
CellTagsIndexPosition[   3224661,      49081]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["FinBert & FinRoberta for Mathematica",
 FontSize->24,
 FontColor->RGBColor[0, 0, 1]]], "Title",
 CellChangeTimes->{{3.8732706683748827`*^9, 3.8732706792618814`*^9}, {
  3.8830361460600233`*^9, 
  3.883036150883051*^9}},ExpressionUUID->"ca8aae2a-8ff6-4bab-a453-\
968b890a65b4"],

Cell["\<\
by J\[UDoubleDot]rgen Kanz, on January 18th 2023
\
\>", "Text",
 CellChangeTimes->{{3.8830361904596925`*^9, 3.8830362127393317`*^9}, {
  3.883036259354373*^9, 3.8830362770265756`*^9}, {3.88305163753018*^9, 
  3.8830516501511803`*^9}, {3.88305170265024*^9, 
  3.8830517033962154`*^9}},ExpressionUUID->"3e69ced5-0093-46ba-9425-\
8a4bcdc3236f"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.8732707080479336`*^9, 
  3.873270710861881*^9}},ExpressionUUID->"6bd81347-6538-4eee-b272-\
ddd3f2a415c7"],

Cell[TextData[{
 "FinBert is an open source Natural Language Processing (NLP) model that has \
been trained on Financial data and outperforms almost all other NLP \
techniques for financial sentiment analysis.\n\nFinancial data sentiment \
analysis is more complicated than normal use cases. Let\[CloseCurlyQuote]s \
take a look at an example:\n\n",
 StyleBox["\[OpenCurlyDoubleQuote]Although the global market is experiencing \
a downturn, food companies are doing well thanks to Covid.\
\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 "\n\nNormal NLP techniques will not be able to determine whether the above \
sentence is good news or has a positive sentiment for food companies. This is \
because normal NLP techniques, like word2vec, look at each word separately \
and do not provide context for the words. In order to understand the \
sentiment of the above sentence, we would need to be aware of the context.\n\n\
Context awareness is enabled by BERT for sentences. BERT is the acronym for \
Bidirectional Encoder Representation from Transformer. It is one of the most \
popular state-of-the-art text embedding models published by Google. "
}], "Text",
 CellChangeTimes->{{3.87327076756077*^9, 3.873270794845769*^9}, 
   3.8732708431967707`*^9, 
   3.8830303238927245`*^9},ExpressionUUID->"7c8b96c7-8f6b-43e0-b2fc-\
81de31bdd4bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Domain Specific Fine-Tuning of BERT", "Section",
 CellChangeTimes->{
  3.873271061660858*^9},ExpressionUUID->"fd770504-02ce-4349-bde3-\
6c341dc61dba"],

Cell["\<\
Many domain specific models have emerged using BERT as the base and are being \
used for NLP tasks. Some of them are: FinBERT for Finance, BioBERT for \
Biomedical, VideoBERT for Video captioning categorization, ClinicalBERT for \
hospitals, and many more continue to evolve.\
\>", "Text",
 CellChangeTimes->{
  3.873270938043274*^9, {3.873271049372822*^9, 3.8732710739838057`*^9}, 
   3.873271702831979*^9},ExpressionUUID->"6b31f098-dc27-47c3-af1d-\
07f2c24a52c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["BERT, RoBERTa and the Wolfram Neural Net Repository", "Section",
 CellChangeTimes->{{3.8732713613457375`*^9, 3.873271391142806*^9}, {
  3.8830349926191545`*^9, 
  3.8830349960984135`*^9}},ExpressionUUID->"12b386a3-01ba-4149-9fcd-\
5ec2891d395e"],

Cell["\<\
BERT is available in the Wolfram Neural Net Repository [1]. Furthermore, \
Wolfram provides domain specific fine-tuned versions of BERT like BioBERT, \
DistilBERT, Pre-trained Distill BERT, and SciBERT [2].
FinBERT is currently not available as a Wolfram Resource.

\[OpenCurlyDoubleQuote]The better BERT\[CloseCurlyDoubleQuote] is RoBERTa. \
RoBERTa is a robustly optimized BERT pretraining approach [3]. While BERT is \
trained on BookCorpus and Wikipedia Data, it is RoBERTa that is already \
trained on BookCorpus, English Wikipedia, CC-News, OpenWebText and Stories \
Datasets.

Consequently, the author decided to train BERT and RoBERTa on the enhanced \
Financial Phrase-bank.\
\>", "Text",
 CellChangeTimes->{{3.873271411505807*^9, 3.8732715528608065`*^9}, {
   3.873271608965858*^9, 3.873271614099859*^9}, {3.8732716518650317`*^9, 
   3.8732716589849787`*^9}, {3.873271792408183*^9, 3.873271822932062*^9}, {
   3.873272355611496*^9, 3.873272441849445*^9}, {3.8732725609240327`*^9, 
   3.873272613860716*^9}, {3.8732727606968403`*^9, 3.8732727944971714`*^9}, {
   3.8732789246382837`*^9, 3.8732790040016265`*^9}, {3.88303040377282*^9, 
   3.8830304057699656`*^9}, 3.8830324265656366`*^9, {3.883035013948634*^9, 
   3.8830350339380035`*^9}, {3.8830351019596543`*^9, 
   3.8830351691277514`*^9}, {3.8830352210487523`*^9, 
   3.8830352573041363`*^9}, {3.8830352931517324`*^9, 
   3.8830353507732525`*^9}},ExpressionUUID->"3c93e734-1e8b-4367-9f21-\
ede99a081a94"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Datasets", "Section",
 CellChangeTimes->{{3.8830328779741297`*^9, 
  3.883032886207692*^9}},ExpressionUUID->"8d692d9c-5f50-46e7-830f-\
0481be4b4bd8"],

Cell[CellGroupData[{

Cell["Financial PhraseBank", "Subsection",
 CellChangeTimes->{{3.8732729439768777`*^9, 3.8732729489349055`*^9}, 
   3.8732746998617573`*^9},ExpressionUUID->"37a89efe-12c0-408d-be55-\
3c59c6f695ce"],

Cell[TextData[{
 "For training of the networks, the sentiment analysis dataset used is the \
Financial Phrase-bank [4] from Malo et al. (2014)  [5]. The \
\[OpenCurlyDoubleQuote]Financial Phrase-bank\[CloseCurlyDoubleQuote] consists \
of, 4845 English sentences selected randomly from financial news found on the \
LexisNexis database. These sentences then were annotated by 16 people with \
background in finance and business. The annotators were asked to give labels \
according to how they think the information in the sentence might affect the \
mentioned company stock price. The dataset also includes information \
regarding the agreement levels on sentences among annotators. The \
distribution of agreement levels and sentiment labels can be seen on the \
following table. \n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3XnUNcldH/YnxtgIxGYwSwgYYmM7AcfxgmMn3uIsjv+Kg0MIi40hbDYO
DssBi00jgxEEYUsggQBJEUL7ipBmpNFoJM2g0TZIjARotRAIkMkQpEOQgYjD
efP83udtzZ07XdVV3dV9u/t+6pyPsWbmubdvL9VV9a2u/owv++ef+5V/6OLi
4hs+7PL/+dwv/eb/+uu//ksf8g8+5vJ/fN7XfsM/+aqv/Yov/3tf+41f8VVf
8fV/9cs+5PIfvufy/7njj15c/OELRVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEU5YzLfwAAAAAAAADA2dpqOfV+AwAAAAAA
AGAb1lpOvV8AAAAAAAAA2L5Tl9rt/UMAAAAAAAAAnJUtZOFj8u4PAQAAAAAA
AOAsjcnFlyg1uXfqt/1hAAAAAAAAAM5CSSZ+qiy8JPseyrs/9MgfAQAAAAAA
AGBXjnPhoVy8JAtvXWqy7+PM+/j3/tEbPgwAAAAAAACAXepy4b58PJWHD2Xh
rUpp/t2Xex9n3Q868OFHPgIAAAAAAACATTrOfw+z4eNsvC8PXzIHT+Xfx89+
H2bfx5n34W9/8KWPPPJRGR8NAAAAAAAAwCrkst3jHPjBN3RZ8XEmPpSFz5GB
D+Xfx89+H2bf3e/ofl+3Tz7mho+94Y8BAAAAAAAAsAtdDtzlwl1O3OXGh3n4
cRa+RA5ekn8frnneZd/ds95d5t1l3R936eMv/fEbPuGGTwQAAAAAAABg07r8
t8uDIxuOjLjLxrtMvHtG/DAL79ZI754JnyMHz73/uy//7t7p/ZF3veX2n37t
O+64BgAAAAAAAADHXv32V7zzIAvv3h9ek4O3ysD78u8H3dim2LZY4/1jXvnm
l77y1PsMAAAAAAAAgHW6kYEfPhfePRPe5eCH66K3eBZ8aA304+e/u3XP4/n1
j7/t7hf+aGz3nW998bUfvOMhAAAAAAAAAHDttp9/3vUM/I6fu/Xmi6u10j92
IAdv9Sx47hnwD73xfV3+/eDD/PvSJ97yqud9f2z3K95y87WHvfhLAQAAAAAA
AODai970jOsZ+MvecMszLq7eIR4Z8x87yME//OK+94Mfronevbt7TAZe8gx4
fOeD+vLvS5/ywlc++9/IwAEAAAAAAAA41GXgt/3MC58V2fKlT7r0xw9y8Aff
yKI/7KLds+BDz4B37wCP59Ajh/+Yw/z70p94/h3PfJQMHAAAAAAAAIBDXQb+
krtf8OyLi4tPv5Exd8+Dx7PXH3Vx/zXRj58Fb5GBDz0DHnn8J9zYtk+79Cef
e/vTHi0DBwAAAAAAAOBQl4G/+DXPf+7FxcWfimesD3Lwj7vxDPbhmuhDz4LX
5t+p94B/xI38PXL4eC79ky996qX/+NKfedZLnvxDMnAAAAAAAAAADnUZ+C2v
et5PXlxc/Nl4xvrGs9affHHfmugtnwXPZeB/5OK+ddC7Z8A/7uK+NdA//dKf
vvTZz3jxkx4rAwcAAAAAAADgUJeB33zXc58f2XI8Y33pMy79Rxf3rYkeWfRH
XvS/F7x1Bh6f/+EX970HvHsG/NNu5PP/yaU//9QX/l8/dl8G/o8BAAAAAAAA
4IMZ+At++tkvuLi4+M8v/acX962J/h/eyKA/9kYm/RGJDLxmPfSSd4F366Af
vgf8g8+AX/pLT3nBEx4nAwcAAAAAAADgUJeBP/+OZ958cXHxly/9uYsHPgse
WfRHX9y3HnqXgaeeBR+Tgcf66t066B9xcf910GM74j3gsVb7n7/0V37i+Y97
ggwcAAAAAAAAgENdBv6TL3/GLRcXF//FxX3PgnfvBf+ki6v10GNd8gdflL0T
vDQDP1wH/TADf/CN74vv7dZBj2fTP+vSX7z01574vB99ogwcAAAAAAAAgENd
Bv7c25/24ouLi//y0l+6uFpv/DMvrtZD/+SDDLx7J/gcGXi3DvqDLu7/LvBY
j/3TL67WQY9n1ONZ9b/+hOc89kkycAAAAAAAAAAOdRn4c1761FsvLi7+xqXP
ubj/euifcnH/d4J/+EX/O8FbZeAffuN7PvbG937Kje2I7bm+Dvqlv/WEZ//w
T8jAAQAAAAAAADjUZeDPvu0pL7m4uPjbF1froUfW/Gcv7nsn+CdcXL0T/KMu
rt7VPXcG/lE3vu8Tbnz/Z9zYnlin/a/Gdj7+WT/0ZBk4AAAAAAAAAIeOMvC/
c+mvXfoLF/e9Ezwy6E+8kUl/dCID/5CGGfhHHGTgn3jj+//kje35Cze27+88
7hmPeUqXgd90+TsAAAAAAAAAoMvAn/WSJ992cXHx31z6ry6u3gn+WZf+1KVP
vZFFf9yCGfhHH2Tgn3qQgf/FG9v33/7Y0x/zVBk4AAAAAAAAAIe6DPyZtz75
pRcXF//dQQb+2Zc+89KnXfqkRAb+oTNm4B93IwP/tBtZ/Gfd2K7rGfiPPu3R
T5OBAwAAAAAAAHCoJwP/G5f+ck8G/vELZOAPOsrAP+kgA//sG9v112M7ZeAA
AAAAAAAAHOsy8Ge8+Cduv7i4+Ls3MvDPufTnbmTgf+LSJx9l4A9aOAP/zIMM
PLbvv5eBAwAAAAAAAHCsJwP/mwcZ+J8+ysA/5tKDF8rAPz6Xgf/IU3/w6TJw
AAAAAAAAAA71ZOB/69JfWUkG/sk3vv84A/+7MnAAAAAAAAAAjh1l4P9DTwb+
6SvJwGN7Pqc/A/8SAAAAAAAAAMhl4P/ZpT+zwgz8b8rAAQAAAAAAAOhzlIH/
PRk4AAAAAAAAAFslAwcAAAAAAABgL2TgAAAAAAAAAOyFDBwAAAAAAACAvZCB
AwAAAAAAALAXMnAAAAAAAAAA9mIXGfiLvgQAAAAAAAAAZOAAAAAAAAAA7IYM
HAAAAAAAAIC9kIEDAAAAAAAAsBcycAAAAAAAAAD2QgYOAAAAAAAAwF7IwAEA
AAAAAADYi31k4P8IAAAAAAAAAGTgAAAAAAAAAOyGDBwAAAAAAACAvZCBAwAA
AAAAALAXMnAAAAAAAAAA9kIGDgAAAAAAAMBeyMABAAAAAAAA2Is9ZOAPvfwd
AAAAAAAAACADBwAAAAAAAGAvZOAAAAAAAAAA7IUMHAAAAAAAAIC9kIEDAAAA
AAAAsBcycAAAAAAAAAD2QgYOAAAAAAAAwF7IwAEAAAAAAADYi31k4P8QAAAA
AAAAAK696E1Pl4EDAAAAAAAAsAsycAAAAAAAAAD2QgYOAAAAAAAAwF7IwAEA
AAAAAADYCxk4AAAAAAAAAHshAwcAAAAAAABgL2TgAAAAAAAAAOyFDBwAAAAA
AACAvZCBAwAAAAAAALAXMnAAAAAAAAAA9kIGDgAAAAAAAMBeyMABAAAAAAAA
2AsZOAAAAAAAAAB7sY8M/IsBAAAAAAAAQAYOAAAAAAAAwG7IwAEAAAAAAADY
Cxk4AAAAAAAAAHshAwcAAAAAAABgL2TgAAAAAAAAAOyFDBwAAAAAAACAvZCB
AwAAAAAAALAXe8jAv+PydwAAAAAAAACADBwAAAAAAACAvZCBAwAAAAAAALAX
MnAAAAAAAAAA9kIGDgAAAAAAAMBeyMABAAAAAAAA2AsZOAAAAAAAAAB7sf0M
/IWXv+OLAAAAAAAAAEAGDgAAAAAAAMBuyMABAAAAAAAA2AsZOAAAAAAAAAB7
IQMHAAAAAAAAYC9k4AAAAAAAAADshQwcAAAAAAAAgL2QgQMAAAAAAACwFzJw
AAAAAAAAAPZCBg4AAAAAAADAXsjAAQAAAAAAANgLGTgAAAAAAAAAeyEDBwAA
AAAAAGAvZOAAAAAAAAAA7IUMHAAAAAAAAIC92EcG/oUAAAAAAAAAIAMHAAAA
AAAAYDdk4AAAAAAAAADshQwcAAAAAAAA+v3LW7/k2hNe+53Xbnvb06+96T2v
uvau33zzA8Q/f/k7nnPtWff84LUfuPMbT77NcO5k4P2++6Vffu33/+AD11Il
6rNTHzsAvvB62zNV4t+devtwbrB///oV/zx5rk0p0RY97Eu/4zfuud6XftFb
nnTth+56yMl/N1947X2/c2/vsYvjZHvYqtR5FOUNv3rHYtuRu48/702PPfl+
Yv+i7uwrcY2cetvYp6jbUuV3P/Dvr/2fL/uni21L6l5gPJQ9yLUxom936u1j
XaLvHW2Cf/dbv5Q8b3Il6u9oQ//oq7/j5L8FzpEMPLFf3vKkwfrLPB7gnEUd
+NQ3/OuTb4ecE+cGpzZXBj5Ufvv33nd9jrnz+XTmypxjjHtMxicDp4VcBh7l
SXd/7yLbIQOnpXheq/ZvZOAsLZeBR4n5kEttiwx8GyJTk6vVk4FTIp7jHpt7
p8pvvP/Xrn/uqX8b+xFrE0SWeertWDMZeL+S+u1V73rRyY8fwNJinYw73/n8
6/XgGsbU5Zw4Nzi1U2XghyXGI53Xy2udOUf/NXKaWANgzPO2MnBaGMrAY/5N
tAfn3g4ZOC3EeRTjzVFq/1YGztKGMvAl6z8Z+LrFffh1736pe+JIMnByYl7J
UHt4aom61POVTBXPpkXfTNs0bw8Z+Ldf/o6WHnPXQ4rqqljH4mG3fknz7wdY
q2fe84PX761dedk7nnPybRrKOU+9fTg32L/vX0EG3pWYo3Tq/XFOUmMjY+6P
8Wxtl9NEiQz8lNvD+SoZ8xtzftbK3cef+6bHnnw/sW7f+7J/en2tlMNS+xkv
y2Tgp/597NNzCzLwGIuM83vubUndC37xN9988v107n7q5x9//TxwTxwv18aI
vt2pt4/TueUtT8q+H7dlie9x/TLGo+78xmtv/417PnguaZvm3SIDf4B4vru0
qKeAcxD31ujrHpc1jKnLOXFucGprysCjLJFNcaVF5hzj2G/+9bubHEcZOC2U
PvcS8zbm3A4ZOGO95G1Pv18+1JXaz5GBs7SSDDxKjHvPvS0y8PWJZ1Pf/b53
uCc2IAPn2L966Zf39smWKPpqlIrnceO5h+N5GtqmeTLwB55HfX2lvn8WJdZM
P/UxBJjbmsfU5Zw4Nzi1tWXgUTwPvowW98e+OWZRZOCcSmkGHmsDxXjhXNsh
A2eMXIZY+1kycJZWmoEvUQ/KwNfHPbEdGTiHYk3gw/W4hkrUg9FXi3ZCrJcZ
51O0iWOeSswRjX8e7yqoeZd4/Pen3g+sn7bpODLw+4t6q6+85MZ7+fpK1JOn
Po4Ac1rzmLqcE+cGp5bLwKPfG+fbVNEWjTr3cL2roRJ98FPvm72TgbNHNe8/
nHPdCRk4Y8jA2bKaDHzuNdFl4OvjntiODJxO5Dola5/HfxM5de35Eedaqr93
XOI9B6feH6ybtuk4MvD7S40rRv12/C6prpinA+zdmsfU5Zw4Nzi1XAY+xzhh
jHfGu3uG+uqRv8caR6feP3sW74uLe+GxmjqmZQbeYnugJgOPMtea6DJwxmiZ
gcc52FenRl176t/JPtVk4FHmXBNdBr4+7ontyMAJ0Vceev47+tzR95465yjO
ub53GRx/l3ns5MjAx5GB3yc1ftmdQ6m2aNRPc64BB3BqMnC2yLnBUpbOwDuR
Ow3l4LHG0an3D3ktM3BooTYDn2tNdBk4Y7TMwGFptRl4lLmeG5SBr497Yjsy
cEJk27kS9WDL8yEy96F13cxjJ0cGPo4MfPgcivow/n3061PjjOYBA3smA2eL
nBss5VQZeIgcPFfe/Ot3n3z/kCcDZ21qM/C5zlcZOGPIwNmyMRl4jFPOkdnJ
wNfHPbEdGThD/ejW+Xcn8u2htdHlTKTIwMfZRwb+BU2k2ndPuvt7PvjfpObq
xBydVtsBsDbpDPzZJ9+24Zzz9PsP5wb79v2v+NrkufaLv/kLs39/5NypcrVe
0f928n1EWpwjfeUqUzz99nF+xmTgUQ77zS3kM/AfPvl+Yp3i3EiVU28bDMmd
v7kyR3sznYHP37aln3tiO/kM/GtPvn3M63tf9k+ur2OUKlf593znwdD3x797
2K3/6OT7ifWJcfjUOXvqbVuzW970NBn4peiv95UYNzysc555zw8k6yfj6cBe
ycDZIucGSzl1Bv6Yu/5F8vujRPv11PuINBk4a5Nq98V43NB4Xcs5NzJwxpCB
s2W58zeevcmVqzXR222LDHx93BPbkYGft6E55EucA099w/dn63TXNX1k4OPI
wK+86T2v6j1/jtt2kYen1kOPzzj18QSYgwycLXJusJRTZ+Dh3e97R3Ib1lBX
kyYDZ21S7b7456m543OctzJwxpCBs2W58zfq39w6Ha1zGxn4+rgntiMDP19D
88df9a5bFtuW3NwmdS19ZODjyMC/4Ppc9fx7vu//36fy8viMWMvi1Mc07uOH
1njv/tFXf/us2xefebwfwhqOz5a2MXXMWm5nfM5aztmtHZNH3fkNi22rDHzb
58paLL3fZOAsZQ0ZeKp9GuV1776t+ff1XctrqQf72hbRjjn1dqXIwOc//mvt
E61VLgOPfx/nZq60WhP9lBl43zm0pnqkr0116m06FuMsqXvFnNsrA29v7dfD
nuTO327f50rLduepMvC+cY61tDFP7VT3xHA4JjjHsYhccsn+hQz8fEXGnSpL
ZztDz4LPcS6mrrWoe099bLaqr/8Z+3mO75KBjyMD/4LrOXeq9F3/ubnvL3nb
0xY9fvFcemx/tEFTOX6UWJcu6vi+3xN907h+jvXl/31Sfx/1+PF/F/sntX5e
rEMyth8VdU2s+xSfkdsPUX73A//++jhxtBGXvK+dehtLj1Mn7rNxvIbeB/j2
37inepwr1mTNjdVHie+N8bW537+yxmOS6r/Efx/bm3vWr9vW2Hexn8e8PybO
ieNtis/sK1H39P2GJbPxJXLOU5wr8X1L7tu43vu+a8oayqe+xmTgLGUNGXiq
LxQlrsEWvzHqibjvl1zP8Z1x/c89hhT1RWxX7OehNUKj/Mb7f+36nICo21qs
2Rzt5b66M1XHxD8//m9Tba34PbX3gdrtif2Q+o453kGXurdNGbuN4xh/H/eQ
VHulK3HuLnVubtlQBh77fIk10ZfMwOO7or8cdcRQiWvzznc+f9EMMMbR4hwf
2r6oo2Pf9F2/fW380GqMLvZH6X3i8FyJazL+bszYa19/Kre+aaq+q6mzc2Ml
8Rtqv2PqPk9935T29Nqvhz0bysDjv4l2TK60WhN9qQw87sddn3GoHPYZW717
I74/dR21+o7U5+fq3746O1Vi39XUVanffFxPRT2SGw+KYzHmHhLfH8cwxq2G
xhwPS4yFRX2TGsesIQM/T7nnIKMs+Qx4iPZaX5u667O2aKN1Y8lxveba712J
Oj7aZS0z3No+aq1UG7c02wpRJ9X0u+M7Y58OtXljf8Z2jKlX+urq1Pz5qKdT
9xp1mgw8pMbLUvMnUvVT7m9aG2qH5Er0SQ/7Q6lx29Lfkvr7w2dXor4tGZeM
Etdyaf83fkdu/tZQiXpqrjG+tW1jyXHqtrek73Fc4nwZunfFOGvJ/fa4xH2/
5TFa+zHpewdDtPPHlNjftX3goWd7Sstc19SxOXPOU54ruWPeegwttxbUmDGU
tVxjMnCWsoYMPK7VObahy12mlKgPWs87jH0+dbu6fuKU8c3adVJy45c1pdX2
5M6bFuOLh+IcSJUx84i77Ks0a+srcW62fH/1Xgxl4GGJNdGXyMDjPC/J+VIl
xuPnzP5iP6fGunIl6rfjfZRq40/dl/H3NRlGrkQ/tKaNlrv/1pTaOjs1VpIb
W5+jPZDqt0cfcI/XwzkoycCjj7TEmuhzZ+DRLpgy9hD1XLQf5uwztsoNUiVX
/7YYl0nVVanffFgX1ozjxjhzyb6KfsWY8cbUb4t27NjjLwM/T7nnrk+1vm/0
R+L+Gf83tq9V36QblxuTHXUlru0WWfjca4um6suanC7V3j7+78ZmG1Fq+55D
a7+UFuOfMvDcuH/uOszNu2w9XnQsPn/KWE+UqP+6Z/vmzsBr2k1dKWlvTB3z
OixRd0151nEL21iSgUedOLYejxK/tW8bo006NFd5qMQ51KIduoVjctinjDGE
KeMQXYn2VOl9Vga+jnMl5gKlSuv1cVN5dfz+2vb3qffbEucGHFtDBp6bdzKm
zoh7d6v7QZRunLLFb43xwlb1TLdtYzOgrWfgubwm5hi0PEdza2/VjjfFmOeU
8ZzDEp9T84zAOSjJwMNQHTG1XzxnBh7jAENrK9WUGNNvOZ8iPivGHaeW+Ixu
u1pn4HF8W2Xfx6X0Oay1ZeAhNz+rZa4S9Waq/o65tHu6Hs5JSQYellgTfc4M
PM7Rln3GKX07Gfh9pasLa8dxh7LD2I+tsu/jMnasUAZ+nnLXVYu109Yi+jYt
+8sxpr/kvPFWx7VlBh6/v0W9HH3P0nkFMvCG18SZZ+C58cLcPS9yqVSZs87M
tYfHlPi8uTPw2uwz+l6574sx2anP/aRKq7HZNW7j0HFqeW4dZlaxL2rnQKRK
nBtj53hu6Zh0fcqh52tqSxyHkjbLuWfgazpXUmNR0WZquTZCau5LTf6xpv02
17kBKWvIwHNZSe2abtEnazH/qq9EPTGl/mqVIfeVMTnQ1jPwkKq7x8yDykm1
B+PcrfmcqfMqU2XptQ/XrDQDL1kTfep6zKkyJQOPz201h+KwRL3ZYtx8zBzy
XOn6AC0z8NwaEq1KyfytNWbgS707L3cMataVX/v1cG5KM/Aw95roc2Tg0QZs
Mb+n5e+Vgd9Xurqwtl+fa8vFPpxrvlRXor1R+z4NGfh5yp2Le5gT22oOZV+Z
8mza1jPw2K8t67HSHFwG3s45Z+C5Nc1L2nS5scE51s6I/tIcZUy/7lAuW83N
FUiVXLs16pwxa8HVlKnPV651G3PHKfrpLeeHxXXVjW+3nutZO6d9i8cktjXu
hXOMRUQ/eWi7zjkDX9u5khsDabV2RW6cLv7dFvfbHOcG5KwhA8/lUDX9+bnu
P4eldE7Wsdzada1Kbd26hww8dx9otd50bm2T0n0+55hOV6LdOuc7kraiNAMf
On+iTFlPYI4MPM63lv2e41LzbEefuJ/MMQcp6t1Uv6x2X845F+m4DNUPa8zA
c9dQHNtW12lqruzQMwVbuh7OUU0GPvea6K0z8BgnbTm/p6+MyVNk4Pfff1Ev
1JZUXb1Ev6IrNXXfUseddcm9lynK1u9XredQ9pWx9/UtZ+Bxr225Vk5XYvxm
aExEBt7OOWfguft6ST8wl0mPyenGbmtX4nqM/Pj4+okxp6hTauerTM3AY7yj
tv8+9LxJScYS3xvHJq7vw8+KOiv2Y/z7oX7elDp4rduYOk5x3qTapHHvjO+J
MefY1hjjiv9dMic0xttT7zOOcyvGMOOz4jPjs+N3Rz471D4e8/zr1o5JXDe5
sccYv+o7LqX35KH2SnxufN6h1HGJfXv833Za1oE5LXPOtZ0r8Zmpz2q15kjq
eq55j+Da9tsc5wbknDoDz73bJ0ppP7XkOY24TuN6jbby8efG3Mdoi5bUCfHf
1NzPY8wi10aIOivaHXFtH89Fje+Jfx5tk6F3vhzO4ytR25+P7Ti+X6Y+o2uH
1dxjx44vTJkXXCLVJqxp15WMBXfty77zINo38RlDbU3Pg9dl4CXHZuy8vdYZ
eMk4UlwLXQZwXMd1/eqhPu7Y599L1s+K8zf6TMfvXD5sT9WWmn1Zsg/jN8Rn
xn97/FxebHdXH5eM0w7VydGmPK4fc3OwU3Vqql04NgPPzRNoMcaem1dU+izs
2q+Hc1WTgZccxyn38ZYZeGmGEPVb1A/xuw6v/bjWS+u42vvDWjPwvnGZVOnG
iI6l5sGmfnPs/9r3I+baciX3tK79fnx+x77vxgpL5wO0up/JwPcpN28z+rhb
ngdbusZG1N9dHXv493FPLx2Xizqi9hrZcgaeWzMt/ibqsGh7dfVY7N/YnpI5
hkP9ztjPx/V6ajujPk21c9Vp552Bp+qG0novN3+odvwsJ/e8evddJff5+JzI
H0rn+U7NwFPfE/VAV9/Gdse12LWLcs8JDM03j/1Q+sxi1O1D94Yx+ciat7Fm
jnzUp8fjKseG3h2eGl+Me0Pu2ih5/2jNGld7OSZxPcX1O1SvxGcO9S3HPE87
d3tlilY551rPldT10GKN2lzGXjqXa637reW5AUNOmYEPZSal81lKspe4Pkv7
T9GOGPq8mqwxlaFGGWpbHBtaw7fmufkW98dUP3bJ+3WuLm/RZ061GUvWpwlD
7+ypead79OGGxtCnvsd662oz8LnWRG+Zgcf3D43rxzVX2raKeiI3n2JM3R+f
mSuRcZTsx9p3O9fsy1y9Hv9uqA95rOSd4qXtyE6uvqg9JmMz8Fy7oMXzEqnt
Ku0fbOF6OFe1GXiYa030lhl47j2UUWIuRWn9EX3G3HzLuA5q3weQKqfMwOf8
nNRv7hsbiH8W51iX8cT/PZzDmWrL5drb8Znx72va7yXvFK95v44M/Pzk2llb
v08N3Qeiji0dA4s2wtC1Vvuu0i1n4H2lpE0ebajcGEaUMXMvpq7nfK7ONQPP
5dc14025sfpWYye5tmKc37X35tK1aKZm4Mcl6pLctkbfNjUnemhua+yjMXMO
cllr7TyGtW9j6XGqWQMyPrN0TkWMidTMec/dv0uff93LMYl6pmbccOi9zGOe
pd97Br7mcyW3bVPf8ZYbYykZN1jzfmt1bkCJU2bgQ/2q0px5KHsZU9+XzEcv
bS9PzVBrfm+0WUo/Zy8ZeO4cnvr+2lxdXDLeHfejXHsz2jxj5oTlcv9oK53z
c4u1GXiYY030lhl4blwrfldtdhuG+tU182nifMud52Pq4NbPzeXqzTHPBHWG
5mDV1oVryMBz51zNWkspqWu09Dpb+/VwzsZk4HOtid4qAx+6P9TOZezk6ria
tpwMPF2GxqKiHd83bjA0N27KOEZuTdaa5wRk4OcnV2dMfS/qKQ2tCRfX8Zg6
duh5l5r57HvJwOPzWs7NjFKbH8rAxznXDDx3HdeMi+fWKG8x5hn1WKovHP2L
sffl3OfWXjslOd7Y+raTm8c+5R1zIZcV1vTT1r6NpcepdtuG5vNGGfPsR25u
eum5uYdjUrtWbGeoz1F7z957Br72c6X1u9g6qWyq9F1aa99vMnCWcqoMfKg/
FW29kvvv0JpDU+r6oRy8ZIwy16+fklPm5reXjp/tJQPPbcfU99emxiRKx6dz
94Padz8eG1pfYMpnb9mYDDx3rLtSuyZ6qwx8aO3LKWtT5/rVNfP2cuf5lPX5
W64bnKojpu7DoWNdO6a3lgx8TJZZIvLpVCnp423hejhnY8+bOdZEb9UHbTnH
5ViujivNFWTg/WXKOG5urHxq+yq2KfcOhhbPQcjA9ymXcW653Z/r007NY3L5
WelYQ9hDBl67xkjJ9kWpndMvAx/nXDPwsf36Y1GP5Oa6jr02Orn23Jh3oB3K
zZ2r2RdDOV5NndgnN+7Z4t1SuaywdI72Frax5DiNOV+H5ptFGbsmQu4eMbRP
93JMpqx1nbvGa5/p2nMGvoVzJXcsx/bPcuuhlNxftrDfZOAsZekMPM7fkvd9
tXgGvMX2D625OtROiH/fV2qe8emTywFK2y57ysBz4+5jM5HcOzdK5jPlno2d
Mg5xuH2psflzzmvG9pVbr4neKgMfej/01P2Va6eVPOuWe7dzjPNPOQ+Hjknp
vsy1G0vX6BqSy9hrPmctGXhurGhK7pdaL610/Gbt18O5mzJ3ovWa6C0y8Fxb
K+qmqe/2yrUTSufJycAfWKaO4+be59ZinZ3cdVJ6nsvAz08u49zqWiVzj8sN
7bfS8YY9ZOBT2jC5dnTtnG4Z+DjnmIHn7nNjrr1cO3PKnO1cn2nqMw+d3HzM
Vhn4lH0QcvMAap8lSF4HmbHfkjHQLWzjnMcpt+7WlDo49/6goTbpuR+TkGsL
1c4z23MGvoVzJddeGrtGbWp8qvR9NFvYbzJwlpKrz6OtFefbVFHfxnU3lGV0
pabPm/rMsWtn9knl2FGG1qFJjXNNfT65a2uH6PPG/o39HN9X+rv3lIHn8uqx
z0akjl3pGGjuOe2pa7SXnJtbHQ+basp88ZZrorfIwHP5ctTPLeY55NbSKJmr
k8sMa9duqj3HS/dlLm9o9Q643LhKzRjuWjLw3G8a826q7lxLjRGV1PNbuB7O
3ZQMvPWa6C0y8Nycixb1W8i1FUrm8MnAH1jmGstuNWcqtx5GaRtcBn5+chnI
1OcMT2WJcbncXKPS9szWM/AWc6Nz865rPkcGPs4+MvD/tcqb3nNX8pz+/lf8
79Wfl7v3XtUF/7D6M8MTXvsvk597VY/Vf+axn/r5xyW/4+raGf6M2Ge5Er9j
7PbFvkvVs1ft7un7oPuefBtt29s493F69/venvzcq/vZuM/NXQNX7yjb9zF5
1J1fP3kbU9t3lTeUf06+vdJmf85xngyd11s5V0Lqmc+rDKh+m1Ltrzf86iuK
fs8W9tuUcwNqDNXnS5e4PkvP8cfc9c3Jzymtn0rlxmX/1Uu/LPl3T33DI5J/
d+prucX9MZ2BD9fHrbcnvrOvXPXN6/dP6t5Vem7ls9h2xzG1pmbLe9qWTN3v
Q88ilvZlc/fxq7HK4c/IvwOtXf2Ry7Gjns39bf49BG22Lzd/qmRfRr/klrf8
+PX9Gdd11/+7GhMcN95Rsw9rxmnyGXjdNuXHGYf/PjdWNGZMJ3c/LNlHW7ge
zl0+Ax8+RrlzLkpcu6Xbks/Ah/8+2napUjsekZPrM15lufm/z91rxowR90mV
0ntZ68/J/eYoU67TOB5RV0V9E+3KOF+64xP/vMX+/N6XfXVy20vbvEscd9Yl
1xc9dZ9yrFTd17J9FlJ9xNLreu4x5dT21fQZ82vl/+Tkbcy9S7bmc6a2Tc/V
uWXg0QabY9w+9y6S2rbI0LUxJVev2R+tMvDcmOaQXJukpC1bIzU/dWjMbwvb
OHScrp77HH9O5eb2Tmnj5vpvufbJHo5JXOcttm9qv3Xoc7aegW/lXAm5d2rV
9lFzmVdJ238r+00GzlLWloHXtD0j00iVJ9398Kb7KfddufZCZC+pEvfLU46n
7y0DH9v26pMbnyxpH+auq9bzM3L9rlOdW6c0NQOPfkVunPFqnYqvHvycFhl4
bjxrSj/1WK5tFfPOU3+Xy4iu1jpos30xdjd1X84tl/1tNQMPqbGiMfVYql1c
2rdb+/XA9Aw85K73KKV1y9SxhNycjdbjCKlzuyTzl4Hfv1y9f+L018LYfSED
JyX3HHir+RlLyt1rW2S2pd9VMga49Qy8xfmRm4fY4nNk4Hl7yMC/7fJ3lHp+
5rnn51y2GWo+61Bunut7LuvYMZ+Zqh+i3zN2O/ukrvH4/pK/f0RmfGrsb+/k
6oenXNY/LfdD7rviN255G4eOU5wDU7YrNx/suy770mM/N7fNj79sr+75mMS8
6Bbbl7q+a495rr3Scn+O8fhM3yV3nmzpXAk3Zea333HZvq3ZljsS4yKl9f5W
9tuUcwNq5OrzJUvUEbXndmo8Pca/ltxPd132nVN/F/Vf7hnG2Nao10rq0tZa
3B9zGfgptufeRF5Tuz2p/lEcyzimQ3//nEwOEPMpWh7H3HfFmM/S59Wp5TLw
0s/I3YOjxNpsUz6jpO9+U2bdmqn91Jrvyl07S517U/flEnL7oqZ+z31O7Tbl
xhlLPyP3/qGavvJ3ZZ5f2Mv1QP78LW3jxf5P3cu7cy/mFw59Ti4DL9mOuzLP
vLXui6W+K37rUJsjVz+2alumSm392+pzcr956vjgUlKltM27xHFnXVLrU425
htYgN7/8R1797c2/L3VPKGlDzD2mnMvASz8jl4F/z8u+etbjVfM5Ldqm5+jc
MvD3JOb8lLSLcr4n85xDlNr+a2xLqrTOnFJtxRYZeG48s0Tu+eIW9c+hp2Tm
qD7jnh/Y9DYOHaep/dBcBj7lc8dm4Hs4JrWZZooMPN+33sq50knV15En1GxL
KksqPZ5b2W8ycJayhgw88qQx4zWpuTVzjX+lvm+o75zrMx5/TtxDf/zuhy9y
7PeYgafymjh2Nf2lVL+rtH+QGztvPa6Te7ahdd6+BS0y8DC0JvqU+3jJWGXu
uMa2td5vqXM+sqjU36TmJU4dnzj2XZnnzU897hvbFudCbuxxyxl4tI1TeXA8
o1H6OannOUrPlS1cD7TJwMOPFKyJPvQZUzPw3DvzWtZvQ/ttqM0gA79/aTUW
NZeoy1L3zigycFJyY9drGNuslZvL3rqOzX1flKE5fVvOwGvHW1NatU9l4OOc
Uwaea/O3mIuam09U26fIjaW2fsbuGYn1dVtk4FPrslQd2T3n1FJqPwz9ji1s
49BxmtrGTd1rYh9M+dyxGfgejkmrdoAMPD9OsJVzpZO7j5XmPfHfpUppX28r
+00GzlJOlYHHNTf1+edUmTqPMSXVdx5qd0aGkMrPUyX6/zE3IHKDucay9piB
5+b2ls7Zyt2vSucG5/KwuJe1vt+kytrHgpc8r2vHVm4qWBM9N3cud1xKxvtz
Y01Rx7U+h3LjAaltTPWjWj+XG1LPhS6Zgcfxjn0Vc23it+eeVT0sW87AQ+re
V5JDdlJ5Yum9YgvXA+0y8JDLCaPEdZj7+6kZeO69i63PtylrfubuNeeYga9p
7l83HhB1cZx3qXPqsMjAScmtMbjF9n6qrzRHGzLk5qQPXTNbzsBbZcsy8NM6
pww89yxBtP2mtrly7cvada6WHLdPfVeLDHxq22ktJXcvXEsZul/Pmbe2uNfU
bnPuOlhLmXJMWvU7ZOD5+nItpaa9nXqmonT8K3W91pwTaylD+00GzlLmzsDj
uo9rNES9G/MhS9awnLLdc2UiqTqoZO31eI6nZOwrVSJrif5Ay2fE95iBh1R2
UfpOplS/qGZMJpedLlnOcd3eVhl4yN2Lo+TWRJ+agefGOpcuNyWex2nVVi+R
+q7W9X2Me3SZVByDqE9yz4OWlK1n4Ll1jUp+29h+8dauB9pm4DdNXBN9aga+
ljK03oIMfNpnTRXt+6gjo46KNlecX7l3IA0VGTgpuQx3i+39VB0912+Zst7G
ljPwVnMKZOCndS4Z+E0D7xFcotRkWrnn3lq/ky61RlKLDHxq22ktJXf/WEsZ
usfNmbfKwPvLlGPSqt8hA99GBl7TRk2120vWO7op826+mnNuLWVov8nAWUqu
Pl/zO/Vi3DNV5hr/yo3Bl/x9tJGn5OBd6Z4RL32uOWWvGXiqL1I6rzfV76pp
c64lAy/N/fekZQYexq6JvqcMPDWensqn5jjvUnNbptb38du6Z/Rq1+uYuv/6
rDEDz41HldTPLbZjC9cDbTPwMGVN9CkZ+BreE9SVKWuHnWMG3nrt0UNRF8a2
xj2udB2Q2iIDJyWXtUQb6dTbVyvVrpgrA58yvrblDLzVeI4M/LTOJQPPzbtd
qtTMG5myvkStVNu0RQY+pe20pjZzagxiC9tYsq1Txz3WlIE7JvcnA0+3w7Z0
rhzKvVNwKMvJZRqlz2Nsab/JwFnKVjPw3DUy1/u0c2PwpW3cyO6nPlN4WCKz
ie0a81zaXjPw2BepLGvoearUOzfiXpNb9/rYWsqar+G5tM7Ax66JPjUDz733
cemSmseeus7mGL9M7Y+x/Y74TUvt461n4CG1LmHJ+7FTWVFN3b6F64H2GXgY
uyb6lAw8N89y6TL0fh8Z+P3LHP3kmD8Z49xLPJsmA2fMMd9ifpgqc63rPqVd
LgOXgZ/auWTguXcRLVlarFPVYu3LQ3Nm4FPaTmvKWVL13Ra2sWRbZeDzlFMe
k44MfBsZeO3xSL1TcGjuaupeGM9ntbguly5D+00GzlK2moGnsso5r5EWGXgn
5vW0zMK791PWbMNeM/CQymuGzul4vr6v1D7Xupay5mt4Lq0z8DC0JnpfG2ZP
GXiqbkmV3BrxY7XKwCO/bD2+EvVDqu6IsocMPPZbquTWEM09x1szr2gL1wPz
ZOBj10SfkoEP1flLlilrh8nAp4t6tOUaIXFe5voTMnBSYi5GrmzpuEe9PvUa
qCUDn0YGflrnkIFHv2AtpbQvG89XpMqW3gcuA1+uyMAdkz4y8H1m4GOescvd
C4fe3bPV/SYDZylbzcBPsQ5ibsyqZI3t1P6PZ5ha5OFRj9Y8A7/nDDyX16TG
iHLv3KhdW2AtZc3X8FzmyMDD0Jrox+3fc8jAU8/ErfV94HEdt8gyYltink3c
a7q6Pzc2uIcMPKTuU7nnVFPXTe26rVu4HpgnAw9j1kSfkoHn2hBLFxl43W9u
dX1G3d5ivlTM34ix9BgnP5yrkSoycHJSbaEoU98TOkXMBYzrJfq0peNzqTK0
9sVYU8YOZOAy8FM7hww86o+1lNI1AOdq9/ZZawaem58117oee9zGkuO0pwzc
Mbk/GXi6DtrSudInNWaaWqM29Y6NkvUXt7rfZOAsZasZ+CneB556tjhKi8+P
OiqeD4+2ydj3SUd7vbSO2HMGHuJdTn0ltW5qqg8T96za707lbHM8H0vZeTS1
bT+0Jnoc88O+8tQMPFffjHn3wZL7eo0ZeIzJpua4pEr8vhjTjToo6ubcGtjn
kIGnnnVI1ZG594gPvQNpi9cD844F1q6JPtf7wFNtiFOZOwvNPa+55wy8dm5q
3F+6+VExdhHbkaubUkUGTk7u3bO1a1a10jeHOP53l4mn5okv/T7w3HuGvQ98
mAz8tM4hA8/1s6MNGOdOa7m+YUl7b2p/v0bq/bCnzsBDqtTOeZ7TFrZx6Djt
KQN3TO5PBp6vg7ZyrvRJjWH0zeEPtTnGHvabDJylbDUDz2330Dufx0q1GaLt
PMf3Rc4fvyXGNGqeXYw6s+Tz956B186fSv2WMXOkUr+ldu4W9ebKwEPNmuhT
+8S5dSdq1sCZU+qamWMcK7UWcsm+HJq/cHj8SrKLPrlx6b1k4DGOXbNWRmq8
Oe5ntft3C9cD82bgtWuiT8nAc7nv2uayzZ2Fthz3afU5c/eTc/VNV+JcjLw7
6r4x+zlVZODk5K7HuLeeYpty7yeLknqWMlVHz1XH5u5PQ+2IuceUU+/TkYHT
2XsGnrunzTkmmVtnquSczNXJrde0SM0HXkMGnprTdKr70la3ceg47S0Dd0zu
IwPP10FbOVf65J7fPO6z5f7bmvcIbm2/ycBZylYz8JAqc62hlpqPs1SuGdd+
rCtbkofnnlfs7D0Dj3tEKq85fndo7p0bfe8ZHZJ7fmjsuvlMO49aja2Urok+
NQPPvV/slOtdHsqNG7Q8z3Pr+JTsy6HnR2PscUyb8lAuM9lLBh5S47R9dX7q
v41rqPZ7t3A9MP+akDVrok9dpyJV1jaXLXevGdN+OXZuGXiu7Rglzqva9+Mc
y93TZOAMyc0FmnpujhFztVMlV9+m+pClc7lr5daTGWoDpu4nrdaSbDGnVAa+
b3vPwHN9yrmebwlD7cqSdywu9W6w1PtZ1pCB597TMbWP3coWtnHoOO0tA3dM
hveFDHxb50pKKh84vr+lxi3HPre9lf0mA2cpW87AU/X7HH3n3Luil15HIsbO
cv34KCUZw94z8JAalzn+zNT7p1LrkwzJ9eM8szivuTPw0jXRp2bgub8fkyHO
IZdLtmyr5MYnhvZlbj3uKK3mTOXq5D1l4KnnvY7XQ889Mz6mDtzC9cAy70Us
XRN9agaemvcYZU1z2ebuM7Zc57PV58z5m3PnV5xTcz9bLwNnSO4cnSs/Thma
M5LLrpaaR9lJ9VlL1nNr2d+t+XwZOJ09Z+C5PkP887nbXLl5RSXvmEiNN8W2
t3pfU3xO6jmYNWTgubngJfMIlrCFbRw6TnvLwB2T+8jA83XQVs6VlFQb6vj4
po5f7XsEt7bfZOAsZcsZeG5t8tbvB81lMHM9dz4kV5+V5PLnkIGn1uI9fo4r
NdY9dt5xbpzAM4vzmjsDDyVrok/NDXLzbpYe40yJ9SZSpWU7OzVHpWRf5tbo
bLkfc89B7SkDD6lr7LB9mvodY5+h3cL1wDIZeOma6FMz8Ny8ljXNZcu1T1vs
89wx3WMGnpsz1eoZ29z2y8AZMvTc4pzPTB7L1ZNRF+eeMVniftHJ5UclbYhU
f7fVuu1Ts63cNsrA92EfGfjn98rNqb66xvr/rpWXvO2pye+P8j0v+6rs3+e2
/xn3PKrJNsbnpMrVtTP8GY94xT9LfsbjX/uwSduXGnOLcrVeRrvj9eN3f/f1
ei3GW172jmddF9s/9Bu2sI1Dx+k5b/qhSduVz8DHf+7Yc8sxuU/+Hl7+Oekx
9Wc13Z9jxL4ec55s6VxJuenWL+4dy7pvntfnX7bvv6339/3uB95//e/HfO9W
9tuUcwNq5Orz2vp2aXG/SZVW7c3OXe+6OfldV/Nn+v8uMqKoC+L6jzZH7NMp
ddihVD0a5SpnyP99i/tjPgOv+z1z3K9jH6XGM+Pcj//mUXd+Xe+/P7wf1cpl
g637cvFdcRxCd6+Jcy7uFS3Os63JZ+Dtvud1735J8hh310CqlLaV3/Nb72p+
bqbEeRnnUPyuOIdiG+Mc6q6TlNT1VVIHlcrlXUP7MjeuEf+u1TZGvZ4qQ/vw
UO6+VrtNcRz7ytRrIfW5h+3o1Hp9U/b5Fq6Hc5c7f1v2X1J9xK7EGi75DHza
b2lZd3TfddhnjM+P/RW/c+hvc+34XPu0VIt7WafV58zVT45x7lRpeU/LPccb
/Y2p+0A9tX+p+2GUaJct0f6P/kfuGfChczlXd8W9t+W25sYAS665VmPTqf2Y
KjXttTm3MbRqn87VNt27PWfguXfItWjHDMnd+6MM5QS559ivnkuZvo25fbSG
DDz3jpfYNy3bJbn7X+53bGEbh47T3jJwx+Q+MvD8MdjKuZKTuv66cyg1vjyl
TbyV/SYDZylbzsBT2WXrbY9xhFy+kRp7z/UVI6NssW2p9nBJO+YcMvCQGmvs
xrBTffGpWXXunLl6X3ub8/PNv/665Pe0apNtyVIZeNQLuTXRc6X0uOTm3rQc
H8yNDQ7Vpbmx/JL8ZkjUlVP2ZW6uQovtC0N53N4y8FS7ofvc3FjS0LMUW78e
zt1SGXgYWhN96jHMtY8jY5pyLh/KzdWLMtReyG3n1boz07Yvd5+rbWOkfmft
ds7VT87V5S3nL+bmdZW2n2Xg5y13n4rSOkM+FvVWbqzr6hnw4ToyVSdcrenW
LsdPzcuLUpKxpfpaLebGRP2XKjJwPnie7DQDz80BWWo+T8iNp5RsR66PMvXZ
nNy1V3PtzJmBD+3DVnMBcve+uCftYRvPKQN3TO4zdwbe+pnfMab237Zwroz5
/V0fM9UmnjpmuYX9JgNnKVvOwMNcc3QO5Z4jzO2jJea3p35/ybE7lww8NVfi
6l3f6X04dZ5Cri809f7ZWUu/cU2WysBD7l6dK6Vt5dzxjdIqw83Vo0NjgzHG
mV6j+l2TzsH421xWULIvc88wtpqLkmtX1h6n3DhH7b6cc5wxVfdHfZtaE3Bq
G3sL18O5WzIDL6kf+kpN2zZ1nkcZ087pk8s/unbKkFSJumnKtg3lbLXjPq3a
eXP1k3Of2yoDH9qnMnBK5e5VUUrXFBgj17aq+e5cX6nVM0u5uS2lWXtuPuWU
+VBDcwlk4HT2moEvNb91yNC9eaj9PzQmM/a+HH+Xe66i5tqZOwMf6qdNnQsw
VF9evQdk+9t4bhn4uR+TztwZeKt+6xRT+29bOFeG9I1dRFs0tW9azLXcwn6T
gbOUrWfgufZq1P9TM8AYz8+t8zbUHk7N5WnxDFFuXYuSPsOcGfiYscI5121J
PS+fGheJ4zP1O3PZYJQW99Dccw1rmOt3Cktm4GFoTfS+UtNWzuWrUzPmkHu/
WOl1kNvGKedhblykdF/mjk+La3Bobn6UmnZb7vNqx0/mHGdMnTfxnal6qcU7
SrZwPZyzJTPwMLQGQ1+padsOjYlOnXcx9Ax46ZyL3LOUY9uaLeYgHVt7Bp47
n1qMQcSxyB3vKKXtZxk4Q33UKHHPbD0fdij/jrymtN7J9ZXin0+dqzhUj5Vm
9an2VJQp7dzcHKgo55SBa2MNnCs7zMCH2kCt5raWGNqWkuso1+eMa7n23hz/
fcmac2vJwMPQezqmtE+ifZT77NJ73dq38dwy8HM/Jp1W9/C52wJTtOi/rf1c
GZJ6vjL1u1qs6baF/SYDZylbz8CH2qsxFj+2roqMOVdXlDzLm8twpu7fXH+8
JNtpMRaZakeNec55zgw89Vxi6vi2evYgl9fEGNGUe03u3Joy7r11S2fgY9ZE
r2krD2UwU8beht7lWNrmivM49zljrqdc/VazL3PreEx9RnJo/3Wlpt3Wsv03
ZwaeekdIjDX37ZNW/YYtXA/nbOkMPNSuiV7b9sq1A+N8H/su+rgecvPYavKA
XFtj7HNULeYgHWv1bMIp3gceZUqbLY53bl2BrpSenzJwwlCGGiXqsBZ9gviM
knO4tl7I1V9jcqNDuby+pq+Uu96irh5zHyhpQ+4xA899ztj76TnYYwaea9O3
mHdWa6jdE/OOcn8/NC4Z/abSvkRcJ0PPf3dlTRn40Bp5sX/GzG0aOjY1/b+1
b+M5ZuDnfEw6c2fg0d5Ycl5R7XEurYPWfq4MGeprHh+zVmP6a99vMnCWsvUM
PAw9hzcmB4+6Zug9Z0Pt4O5zcmVs1prrM5RmDXNm4LF/atcSnzMDjz51SVbV
lVbjh0PPaETfZkxbZCgfbPneyq1ZOgMPtWui17aVh8Ycx2QcQ2urxXlbMxY1
NA4b9XBpnZnLhWr35dBzomP7LfF3pXVKqwy8NrOfe73JmjUQWq7JuoXr4Vyd
IgOvXRO9tm0bbZlcie8e02bIzZmOUjPnYqgdXNOOivN86P0OXWl1L4trr+T+
0Jmzn5w7l2JNoTFzeeK3Da1b3RUZOLVK20zRZxszvhXnfNRHJXnMmP7HUF9p
TA4e2zz0vHpt/ZX7/XF917QRYs2ZkjbkuWXgreag79EeM/BcW+MU50Lq/Xld
KenLDLUZo0Q7I35f3Me7NkX83/jfUdfWvudnTRl4GBqnirovcpGSOjO2a6jf
V1v/rn0bzzEDP+dj0ml1D8+Nz0ROEM+Gxf7pLDnHv1X/bc3nSonSdvvU53W2
tN9k4CxlDxl4GOrnxn29NJMt6efX3OuGcoLYz6XXdeRD0f5u8axai8w594xl
bGN8VuT13T027rmpenDODDwMjTcfHo+W52bJWslxTEvuDzF2NTQ2PfWZia07
RQYeavLA2rZyyfqp0cYoqUfiPItrqmUd10m9c6ArUSfEdRhjf4d5R/z/o56I
erxmrkrpdub2XXxfzTueY1tL65Ku1KwBPjRvKr477mVdndrVr32fNXcGXrMO
dat3r2/pejhHp8jAa8/FMff4oTnOcf5Ee6h0ra+SPmNN1loyzy/qjlzbIK6r
+A0165q0ft4zrsXD+i21ptGc/eRcu7bbj6Vz8uMYxm8ofZYrSuk74GXgdIbe
w3dcov6JdsnQHNw4x6LuG7rfdmXKGOFQX6mrY0s+K+qQoQxpzHsxh+4D8Z1D
7cnYtlQ92FeH7zEDH7pfR38qvqu7D8S52rINuVVbz8Bf/pYXXvvWWz7/gx5+
+8C6Ky//Z/f775eS68tGPfTQF3/x4Gc8543DYz+1JeqHVL323st6ouS3xT5N
lce95mFN92PJmiGxP98Y4wI/+6jr39958usfce32y/ZgyWfEbx97rqx1G3PH
Kc6tKcfl9Ykx89JzaO5z6xyPydBvj39e8zm3vjXfj+krj7zj65pe/ylxnFKl
tg5a67lSIranpMR2tj4Ga91vLc8NyMnV57X17SlFe7RkzmT8N9GHfeJlH/T4
en7tL7+kqJ8f9UHttpWufxh1SoyXHW5bbGv889i+oTHOGH8oaZuH9ybGOeO7
Sn9baf19WB77qm+bbXtycvXqYWnVjjmUam8elji2cW7F9/cd/5LnsuJ+9ehX
fvPJr8dTSp1HU9v2Q+K6S313i3Os9PyNOiDOl8NzKNz85h+/XveVjMWPvea+
87b8+yPGltxnluzLkrGI+I6oz/rqp/hn8Rm5cZG4flP7NvoiNfuxdh5A6p50
eyIDb3ktlNx3Y9+2vt62cD2co9y1Nnf/pXRN9DFt26jfh+b4RIk2ZNzvo005
ts8Y52zUpbXbWLJ2eZS333vP9W3pxN/ltiuukVRdUnsvq123Pkpfm3bOfnJ8
31BfoNsn8V3Hxyr6VfHPo82eq19S3xH/vGQ7c/vgVNkBpxPnYe2zg4fnc9QB
nZK67rjE342ptw6V9JW6OvZ4XC5E/VKyD6INVNpXPhSZXUn7rBtrOKxnow+X
6yNEO7Hv39e011qNn6fk7u+1+7G21Laj92hvGXgupznlGGTq/XldKW33pNpN
Y0rUOzEeNDW/XDIDj/tBSZt3SpmaTa11G885Az/HY9JpdQ+PPLu2zJG19mnZ
f1vruVKipK8Z/35MW3Wr+00GzlL2koF3v2WO/OWwRLthTF0UdU1pPja21I6b
tsicx/Rjo28x1/aM/c1diT7GHPea+Mw3Vj47Wlvk3/ljPHcGHuaeZxFjfrX5
aG2Zer1FPdyyrou8JteWL92XY8Z0S0uMd8Y2pjKo2ntpbV2RypiXyMAjSx4q
8d/Mcb1t4Xo4N6fMwEvnQo5t20b7as56JMqUvnbNPKzSEtdXHLfUca29l5Xe
Iw9LX7tm7n7y0Bj4lBL7ND4/fleqlJwDMnCORR1V+h6DliW+s0XfaYm+UtTh
U66PMfN4hko3j/FcMvBQO1+j9vmDPdpbBp47B1JjRUuIejTXt6iZ1xvXTM06
MH0lcpCuXZPKL6NeK9meJTPwEHV6ydymMaXVuNcat/GcM/BzPCadlvfw2v03
11jNsdb9tzWeK6WG5q7Hv5/ru9e432TgLGVPGXiIdmtkJq1LN2Y1ZdsiI5na
Dk6V6++jrOzTt8qca8cDUvX5Ehn40JzcuBfMeX7OMXYSpZsffOrrbw1OmYGH
ePZrqExpK8czyXPVI63O/5gb06Ie7uYc5e5Tpef9XPOQDudFxRzaVKmpn+Ne
UZPtxvnQ9zlLZOBDz0XFv4v/Zq7rbQvXwzk5ZQbenQ9DZUrbds6MpsVc85Zz
kOLajXkmueM65l5We2/otuHQEv3kls9wdSXa6ofjAqlnAEr2qwyclBjLnHt+
WJS4986xdtZcfaVon7fI6luOGx7OHzinDPyJBe9MPixzrCe0NXvKwHP3r6i7
pq4pMdXQNV4zvh99oDF1Rvde1sM6K9V+Kr3Gl87AOzGGWvpOjZIS+6F133JN
23juGfi5HZNOy3t47bztaB+1vJ5S5uq/relcKZWbCx1liWfb1rTfZOAsZW8Z
eOf2gvd7lpbjMasp4nNaPkfU1z4u1Spzju+uee4g6sY5t2fs+R5lifo1crKW
WVxcp0u9w2ULTp2BlzyLN7WtHOdxy2d95hrHjHN9TLsqxroO1yTP5Vo112y0
yUrmKJRu4/G6UdHfSJXadRzjeNSMYfe1N5fIwEPuXIx/N/c1t5Xr4RycOgMP
Q/lJi7ZtZEwt+4yRq7fqa8f1MHWNs25ti6HjOuY6id9Z8wxgHM/jz1iqnxy/
r8Vxjro85n8ej+unxiJL6k0ZODlxncU5N1cW3rLO6tOyrxT39L65NFNE+2rK
vo2/PW4XnlMGHmreWRr769TX1KntKQPPZcJreOZ/aM2aMXlR3JcjbxiaBxj9
y2hj9t3Hp17jp8rAQ4yPTG07x76bc83mtWyjDPy8jkmn9T089l1pO7B0LYmp
5n6X1RrOlRqpNYyXnPe3lv0mA2cpe83AQ4w1xdjZ2D5qtMHnerY27pVT1m3v
3h09JftsnTmXzjtIvetwiQw8pNoXS2Wkh+fAlPGdaKu0HtPZg1Nn4GGo79yq
rRxzaqZkf3EtRh059zzHqEdjvCB3vkfd0b1Ht2Z/jmkTxX4bmxH1Zd+HUnOc
IvOp3c7I/kuzor571VIZeO759yX7EVu5HvZsDRn40Jrordq2rfqMc7Uzx8xB
inq4b15lywy823el85H68uAl+8mxrWPzri77TtUpuetlaO6tDJwSce5FPdXi
XWFd/bDk+TXlGZVoj8U1Nsc7rrp9O2ZdkKj3+67vc8vAQ81ch3Of772nDDz6
N3EP67OW+1dq+8LhPO1W31Fyfqeu8dJ1q6IuTP2mJZ+9j/ov5sAMPRcUdX+0
AeO/Xfq8OOU25o7T1D5qnGdznNNLnFt7PSaHv6/v86c+ixf7P+7f0R+JOqQT
7Zfo30QbsVWdVrItS9RBW6hjQup6PFV755T7balzA3L1+V7eLRy/McYYo97P
jYvGtR73g7iWlxoDj/ot7j3RHx7qA8b2dRlRi/58qv8xpR6L7YpcNsZIDu+x
UUfG74x9mxqfnGN7+sTnreleE98bbY+hecGH95pzHwfISZ1HS7XthrajZVu5
E+2CuO6ifhgaK4x6JOrCU86fOL4Gh+qzucb6oy6NfZYbG44MI667uEZLrrtU
W3ZKLhP34qg/YzsO69WoZ+Ofx+/oO6dSdV3rayHXjphr7HlP18OexHm4hv5L
6tyfq23b9RmHcqZo58WYQ+oZnznEb468OXUtRK4VdUtcA6nrNXVcp97L4pyI
jCu2LzUu03e8TtFPjt8a2xTbN/Su0KhTSuY25OrOofMjtw9OUe+yft1ziN04
6FCJ8zz6JnHeT2nDtBDtlqFxuejjx++K+mTJflLUDbFfc/s0tnto/kBfv6Gm
vTbX+Pnh72zdvu3EZ3TjIYf3gvhnIerTcx8D3VMGzjipccy+9XK2KOq7pcdr
9riN58YxoZRzxX6Dc9b15U69HX268VvPo52vbizk1NvBdnV13NbrkchmUqX1
WH83hnjq30x7e7ke2I61zic1p7oNdQp70c3f29Ic224OyRrrsujHr7HuZ7v2
kYH/L0yQmn939V6F028fAAAAME7qnYFX7wc8/fYBAADMQQa+Xt9525feWC/j
pmuPfuU3zfIdj3j51yTng1+tO3P6/QAAAAB79OTXf9/1dwxFvz/GAOb4jtf/
6suTa0ue+vcDAADMRQa+Xn359L3v/9Xr6/m36hvf8c7nJTPwufrfAAAAwAPz
6Xg2O/r8N7/5iU0+P/r1qbXf4p2Wp/79AAAAc5GBr9dDX/xFyXz6GT/7yCaf
/9u/977ez3/v79x78t8PAAAAe5aalx7z31t8fmTpqRLPn5/69wMAAMxFBr5u
v/uB9/f2VWOu+NTPTr0TLEr0w0/92wEAAGDPchl1rA035bPjGfDUvPd4Ntza
bwAAwJ7JwNct9d6uKFPe1x3zvVMl+sJT+9oAAABAXt870LoSa6LH+m1jPjfy
7ff81ruSn/3aX37JyX87AADAnGTg6xZrnuey6ie//vuqPzM3zzzK7e941sl/
NwAAAJyDWPc8Vd7866+79vDbv7Lq8yJXz+Xf8Wx47WcCAABsjQx83WLOd67v
GiX+/VAWHp8T2XdqHbSuvPt9bz/5bwYAAIBzkZv7HiXmv9/1rpsHc+tHv/Kb
rmfmQ2XKmnIAAABbIQNfv8e95qbBPmxXIuOO9dIOlRZroAMAAMDyavruMXf9
sM//3t+5t/hvrYEOAACcCxn4NuTe392iRJ/5sa/61pP/TgAAADg3Q+/vblHi
WfKx7xcHAADYGhn4dkQO/rsfeH/zfvDb7/3Z6/3tU/8+AAAAOFfRL695Hry0
xDhCrLd+6t8HAACwJBn4tsT7v974nrua9IPj2e9b3/rUk/8mAAAA4Erk1fGe
sxYl3g/+yDu+7uS/CQAAYGl7yMC/5fJ3nJt/c9mHfcU7n1f13q8oMf873v/1
w6/61pP/BgAAAOCBvuPFX3Tt6T/7yGu/8Ouvq869433hP/nzP3btX972pSf/
HQAAAKciA9++eDb8iXd/97Xb3/Gs6yLjjvXT4v/G/46+74+95qbrTr2tAAAA
QJ2Yxx59+67f/7Z7f/a67n/HmED0+b/v5V9z8m0FAABYAxk4AAAAAAAAAHux
jwz88wAAAAAAAADg2i1veqoMHAAAAAAAAIBdkIEDAAAAAAAAsBcycAAAAAAA
AAD2QgYOAAAAAAAAwF7IwAEAAAAAAADYCxk4AAAAAAAAAHshAwcAAAAAAABg
L2TgAAAAAAAAAOyFDBwAAAAAAACAvZCBAwAAAAAAALAXMnAAAAAAAAAA9kIG
DgAAAAAAAMBeyMABAAAAAAAA2AsZOAAAAAAAAAB7IQMHAAAAAAAAYC9k4AAA
AAAAAADsxT4y8P8ZAAAAAAAAAGTgAAAAAAAAAOyGDBwAAAAAAACAvZCBAwAA
AAAAALAXMnAAAAAAAAAA9mIPGfhDLn8HAAAAAAAAANwsAwcAAAAAAABgJ2Tg
AAAAAAAAAOyFDBwAAAAAAACAvZCBAwAAAAAAALAXMnAAAAAAAAAA9kIGDgAA
AAAAAMBeyMABAAAAAAAA2AsZOAAAAAAAAAB7IQMHAAAAAAAAYC9k4AAAAAAA
AADshQwcAAAAAAAAgL2QgQMAAAAAAACwFzJwAAAAAAAAAPZCBg4AAAAAAADA
Xmw/A3/BtYfc/A8AAAAAAAAA4NrNb5SBAwAAAAAAALAPMnAAAAAAAAAA9kIG
DgAAAAAAAMBeyMABAAAAAAAA2AsZOAAAAAAAAAB7IQMHAAAAAAAAYC9k4AAA
AAAAAADshQwcAAAAAAAAgL2QgQMAAAAAAACwFzJwAAAAAAAAAPZCBg4AAAAA
AADAXsjAAQAAAAAAANgLGTgAAAAAAAAAe7GHDPxfXP4OAAAAAAAAAJCBAwAA
AAAAALAXMnAAAAAAAAAA9kIGDgAAAAAAAMBeyMABAAAAAAAA2It9ZOCfCwAA
AAAAAAAycAAAAAAAAAB2QwYOAAAAAAAAwF7IwAEAAAAAAADYCxk4AAAAAAAA
AHshAwcAAAAAAABgL2TgAAAAAAAAAOyFDBwAAAAAAACAvZCBAwAAAAAAALAX
MnAAAAAAAAAA9kIGDgAAAAAAAMBeyMABAAAAAAAA2AsZOAAAAAAAAAB7IQMH
AAAAAAAAYC9k4AAAAAAAAADshQwcAAAAAAAAgL2QgQMAAAAAAACwF/vIwP8n
AAAAAAAAALh28xufIgMHAAAAAAAAYBdk4AAAAAAAAADshQwcAAAAAAAAgL2Q
gQMAAAAAAACwFzJwAAAAAAAAAPZCBg4AAAAAAADAXsjAAQAAAAAAANiLPWTg
33z5OwAAAAAAAABABg4AAAAAAADAXsjAAQAAAAAAANgLGTgAAAAAAAAAeyED
BwAAAAAAAGAvZOAAAAAAAAAA7IUMHAAAAAAAAIC92EcG/vcBAAAAAAAAQAYO
AAAAAAAAwG7IwAEAAAAAAADYCxk4AAAAAAAAAHshAwcAAAAAAABgL2TgAAAA
AAAAAOyFDBwAAAAAAACAvdhFBv7Cvw8AAAAAAAAAMnAAAAAAAAAAdkMGDgAA
AAAAAMBeyMABAAAAAAAA2AsZOAAAAAAAAAB7IQMHAAAAAAAAYC9k4JyDH3n1
t1277e1Pv58XveVJ1x7xiq+Z/bu/9ZbPu/a2e99w7Z3/z8/dz6Pu/LqT7xcA
AGjlMa/8pge0ucNS7d57fu2ntbmB1fiu2/7xtef+3A8/oE586hsecX2cYO7v
f+Y9P/CAOvGnf/GnTr5fgPP1pJ95+MnGZ6NOPq4TQ/zzU+8XAOYjAx/2Pbd/
5bXf/4MPXDss0ZdY8jhF/+jxr33Y9bZBd4/+f3/vfdd+5wPv/+D/jn8X23XT
rV90knNpbdsY2/Pyf/uc69uQK+/9nf/7er90ru14wS88/gHf+Wu/9YsnOUYA
wDpE+zLGwKOt0rWTon3QtU26f/aaX3rx9f/O2IzjcqivzR39le5/x/ZH+3ap
fkGMXcb+GWpzR7t4rtwnxlS1ufctrrvjc2rJ74/rPa772I7uWovrLq6/tfTJ
T+lnfuX2B+QKUTcs8d2RnUSd123DL7/vbR+sA+J/xz9fcj5OzAeK7x0qMW8n
7jtzbEPUtX1jIVFXnvpcoU6ct3H+/vy/e839zu/Ddkn8+3j249Tb2rftx+Op
a9zOOcT9oi9vXeK74x4U1/phezbGZrv7VTyns+R8nNieuHfGNuTKvb/9q7OO
t8ccoOMS19WpzxX2Jc73rq92+ExclMOMJNoA0XZZYv7HFrfxcFujXojr97Dv
G+XUffMt7cdzt48M/H+cVV/f5Zn3PGr27w1x7b7ml1402E44LL//B//f5bV1
52W78lvPdhsfdef/MTgOd1zu/e1fuex/fkXT7bjqd773Ad/1pJ/57kWODQCw
HtEuiDZktDnGlBjLn6sNGm25JcpSbei9HJdD0eZ++b99dm/bMleizT1X2zPa
zt0cgdISbfRoq7felr7t0Obej+g39p1LS313XEc1pevvxrjYqffdEl7wC4/r
3Q+RPc/5vTHe+cvve2vVsYm6PrL5m279wlm2qS9jGSpXcwXmPyZX84JOf74w
rLvn145rRRthzvO7Vt+9eamxylOK9lFqjHTu7402fdyDSktsZ9TVc7TNQhzv
2rZrnDetx2fjmurbL3P9bs5PtPnedu/rq871rixVd29hGzvRvy6ZT3hc5qzP
trgfuSIDz4s5Gn1liXGu+I6aXLmvxHU/5zW1xm2Mem7sNsXftawn9TsBgNCi
zdSV6De1bovW5phjy9oy8LUfl5bbGc+5tGxzx9hk7dh8V+K3tMwGIwc7Ltrc
+xHzVPrOtbkz8BgvHzu+dVjiM66eSzn9vpxDPNOSylvmysBbHJuos1vPUYjf
O7a03Ffm4m9XHLsYG596z4+/j3vjKX9L/I6+cg4ZeC63mXN/12TffSXmXVw9
F95mm2JNjLHbFPf4ljl4+hnw058vbFuc52PnUh+XuF5aX4db2cZO3CNajE1E
u+qc9yP3JwNPi3tt6l499/hdy2dx4tqcY/7LGrcx1dc7LFdr1qXbYNHOajE+
mNoWcwwB4HxEm6L2+cHS0rJfN3XMrLSsJQPfynEJ0TduVaJt2mrseWhsIp7N
zJ1XMT7fYmxT1rN/qX7nnBl4jHHVPreWK3G+r6X+aymuv9xY4BwZeGTureYu
RYk6tsV2pZ6F70qcr0PjpvEZc22LrGf9xqxnOFSi/jzVb0m1Afaegaey/67M
8Z0t27RRT12t1zttm0rHZ4e2pUWb2jPgzGXoeh9boh/Vag7IFrYxxLXeun/e
cs3frexH+snA+w091zBn//W2tz+t+fXUaoxp7duY6nf2zfHOzd1p0T/U7wSA
8xb9uNo1WmtLfP7UsaEY/1mqrCED2spxCak1qaaUGAOMdvCU7Yp8ua/05Xxx
fqXy8thPU/eRdZf2LdfvnCsDz61hO7XMseb1KQ2t+906A5+y/kSuxO+Ysl25
rCcyyMN1AGIOVuq8blE/m4u/TVPWMxwqc7+ToPa37DkDL3nuufV3tpwr2ZWo
Q6auX5Ian406/PgciP+dqttbzOPwDDhzGPPuk5rSIifZwjaGaLu0WHupr7RY
U2Ir+5E0GfgDlfSr5lzncKhEbht9pkMl9UT8XYvnm9e6jam+Xm7OT3xXat7h
lL5nfK5+JwCctxhbKSnR7oz2yHG7qXSdrZgvPWU7+9aRnqusIQPfynGJ+Zsl
2xhjn4fbWDJ/PtqpU/rZfZl2fGaqrZsb15jyvLZnwPdtaN71HBl4nFMl6y/G
/I3IlSLTjjq0pn7Yy/nZ947249Iye4s+9tCxiewpvvOwToxxy5Jn+mPO0dht
S2U9uTkPcd70ZWVxHk3ZT33PKcl61q00/442Sdzz43yL9lSc26XvSo1rYS2/
Za8Z+NC6GF1p+Z1D609EifvVmPHZKfM5U+2zqMNT2Xr881QdP6XN6hlw5lBy
7UWJ+jDq6aivD/tqpfOxp+QkW9jGUJp/x/d0bbxoS3d1WUkbb8qaElvZj+TJ
wO+vdF7xHON3Q+Nccc3kctnY9qH3T03t+6x5G1N10lC7Jtb46StTxi3NMQSA
81bSV4r2wlA/J8ZtSjLNKWP3c89rPiynzsC3clxya4hGGWpzx/YNPRc0dmwz
9Qz4UK6XGoOc0kb2DPh+law7NkcGPnRdx9jW0BqxUc/lMqC4DlqsM3tKqTnf
x6VVBh51VS7ri30a2W+u7o7MObfNY5/BTmU9JXVb6nwbe37IeranJDeN6yiX
AcZnDL2rcIl6pzTL32sGXvq+yFbfNzSHNbKh3DGPc2poXujYOnzs+GxqzHnK
Wh19v3HptRHYl5I11IauvxB1d7R3h9aOGJNPbGEbO0Nt/ujbDfUzo+4Yuv+M
effNlvYjeTLw+9S886v1+N3Qe1JqrtPUfOKujJ13vvZt7Nu26CeX/G3ffKPY
vjHjgvqdAHDeoi2Q64PFWGftOHuMF+bGSKPtMXbNwtS861bvSF2LLR2X3LOO
Ne8bj+3L/eYx757tm8temkWmxlrHzHm33u8+lWQ5teddqdwcmbiWa8YA4rrP
Pfex9fnRpe9rbJUz5I5NnAel2V5uHbgoY+bQpN5ZUZLzxT2nr4x9Ztdc/O3J
vV806p3jd/rlDGUAc54LJflDzbWxNSVr93SlxfcNjc/WzMGMe1tufHZMu2rs
vKDQ166Oc2vMfurLr6b0mSDk2nd974UaEvNRhp6Drs1JtrCN3efm6p/4ztJ+
b1zXuW2M76mtz7ayHxm2hwz8my5/x1Q/VbiuQVfiHG/xvZ0fTzxPESX6MbWf
l2t/Rb9ub9v40Mu+bF+55bI/UfL3T0nMn3z0ZZ+09nel+p0tzxcAYL1yz1WP
bYeF77zs1+XGu8a0x0JqzDLafqfel+d4XB6ZmW8+pk35yMwz5bHd33LL500+
X179Sy8q+tvHJtZOHnOu9fXftLm37eG3f0XROuRdieyz1XfHdZDLb+J8q/3M
obrh+17xNSff52OUvButK3f/yu1NvjN1XsQxi/Om9ljncvDa+qjv3hLbVVq3
9uU9b7339aPOt766Pu4Bpz5n6PfwzNh/l3/Xfmbunh9ljnqnZN2OwxJtgVPv
+5aG6vrj0uI7c2PYcTxqPy81Jhqltm0V53VfiVy+5O9vScwLGVOX9c29HNtf
gpDLRqLujfpg7GcPzdHb0zZ23prJg+Pf1fZThz6ztM+6tf3IsHPPwCM7LX0n
4GFpnYGn+nRTzvtUuyHKmHGmNW9jaqywtM/wfYn10GvHOvQ7AeC8DeUoU9sE
Q32x2n5itF1SpTZXWLMtHZdU32RMXt3JjW3WtHdT805LxzVT51vteG1qvFmb
e7viGip9hrArLTPwXJ4Q41RjPzd37W1xHD6X2fWVFhl4rn4dO1froZm13GvH
N/rq7HhuqPTv+56pj2uh9jeZi789ubHIMfl3J5dJt6x3HjqwrkKq7C0Drx1T
nvp935J5BnzK+GzuHTo17avUfMfSZ4xSz0vVjsP3jRNPza0gl6+OmS95KNpY
ubZwad25hW0Mufbd2Pw7fGdm7beaOYpb2Y+UOecMPO6rQ+/dSZWWGfgcfbqQ
axfV9Mm2sI2p7Sud45oaj6vts/f1O7c4tgEAjJPLO2JsqcV3RPskVeL7az4r
1YYaM/6+Zls5LrlnwKf2tVPzWWtyxNT21ayd1FdatLllPf8/e/fiu9uX14X9
X+vFtl5bL7XatFKrxlsUWhkahwZQwCFhaAYF7RiFCFZUEC8zAw6XgQEHuQkM
A2VqAUNQQjVoUo2NbdP8et7nccv39/3ttfbae699fV4reWXmd855nmdf117r
81lr7WtKDqW2RkOt9MyB57vGSurCtfHy0jqKV6xna/syVnrkwLcYix+1cQ9z
8o9j25e8duvnf7Cw9v+ccWhjY/Hles6tNA8jZe3zrBZn61Vvpv04Z+7zy3Kn
2H5pXYzaWKGtfjNlq/jsnGuytH2t9VGprTl3vKQ54PRWGzs+N89SUru/W+Yw
X2EbB6U2ZY/2S20sWEs9eaXjSJtnzIHnedoyVrE2HqNnDnyrPl3U+nVz+lRn
38bSd8zZx7Eyp8+u3wkAlN6ROmfM8ZTS/Iq5bZcorcmzZB3WM7vKedliDvig
Nqa1NYdd+o45be6xXOOcebbWXbqHXM+pf1rmfpf+Ta9cTmnd1pQeYytKOc6U
jAE4+ly0KsUTs3+l+MraHPhWY/GHa7CU75mz3WPX55zPl47rnHrVWPzrKc25
7RVDqo3LW1PvpK1Tez/qUJ5hfltpXYzse23Ny7W/e0R8NvvZet2Uru3Wbegx
R8kccLaQda9KZcm7VMekbVIaQ9PS7r3CNkZtHFiP9kttXHnLeJqrHEfaPVMO
PM+6WjvwZUmbLtd0qfTKgdf620ve4TJ2P5Xanq3vyr7CNpbiCnNihWP93znx
X2MMAYBea/DUlNajTpm7Zm8p59prbvRZXOG81PrBvd6pW5rr2nq+SzHdObma
sdj5nOvWHPDry7oIpWvxZcn9kBhUqQ/fKz5Um4fRo99fG/PdK462tWznWP2U
c1B7v/bauqt07pe8+2NMqU5rHR9VytXMeYaW4qyt14ZczzWV6sBeMaTa+JEl
66wnX9G65nfqg1r+4S458NJYgDzjas+VNb9ZO66t76WpqbVlW5+HpXp7znaM
lTnPk7E1jMVnWas0pjql15jqKI1zabmPrrCNURr/lz57r/GhpedsS7/xKseR
ds+UA2/pZ6ckn5rruZb77ZUDr7WLes1lKLVTW2N+V9jGHm2sNXNS9DsBgFrc
qPd6VqX3+czNCZW+Z+38ujO5ynnZcr7jYG0uscd8xbFcWWub2xzw66v1LV+W
xMCGHODWOfDkK0o53DnXdknp3aYpc99fcYTERkqxlOEcbZUDXxO/bFHLJ7Xk
CUsxozlzBUr3RGue0Fj86ynNt+kZQ8p9m+swUs/keorW9wW+1lqGa68WT71D
DrzUHhrqvK1y4L3W+qwp5WRa5wgdnQMfa0+nTSE+y1qleyP9v56/U1s/aOo+
v8I2RqnP3DoXskWefamr853DM7D1+XOV40g7OfBfLXkmvuzn7JEDL7UNer4b
rNZGahlbc4VtLLU/54wdGountb7HS78TAKitIbT2Xc6vlfINc3JCtdzwnfpc
Vzkve6yXvHZsa+nzc66XsZhHaw58bA54rzny7KMlB55z+vKa3zoH/lLyQ4mf
p3/Za4xMYnClcoVcUOn4v8zzbpEDr8VjetbdpTXpWvvzaz4bpbnoLblKY/Gv
qfS8n/Me+b1NlTnx1CvUezWlduXL+Ytb5cDH5jen9HwejrW1UlrX3zg6Bz6W
u+rd3uc5ldbr6r0eVe1d1lN9ritsY61vfpYYxBWOI/PcIwf+nzap5cB/9B9/
95u2yn/5rn//FZ/4fcV//8iBt/1uTWncy6Ptu/7746u///OK+/F1P/wnbrGN
5Tkpv695G8ZKrosl2/7od/433Y4PAHB+efZ/+Ae/8K1v/+w3vG2fpC2R3ED+
rOdvlWL2j7HJbd+RbRorj3GOxx/PZzsvpTU1H+si9dm+Wv/mb/7Un5v8fCmm
+8FP/uHmbRjrk7X0K3IeX8cjtLmvp5YXeORQ3tv3y/06Vh4x/+P3aUp93l57
f/UIpfUpUi994bf/5//u35Vz4NP96ZK/8uMfLB63OXXOlJ/+5R8s7mPL59fu
95pYxti2/71/9HcOv26oK8XYcs0fvW0ltZK1/1/WB1Frb/Rue+0p+1mKLb/c
r3oOfPnvl97ts6aufa22LtHXfuoLJj9fqtNeXyMlic2Plcc7JuZve45Z629D
Sa6hoT+ZPlOu8zxv0/55jLHo91uldklKrd9zhW2M9MfHSs8+793PNfM9ew48
48NK7a+tc+C5p0ol9UHP87z0d66wjVFqX7a0z2rn+jG2vf5Z/U4AYE+1Nupj
Pm3b95TyMo+1Do/fz6tZe15K+fPHXNR+27nmd0rjJh5rtU//dqlv0dJ21ua+
h7F+W8YyJLb9ekz64Oo58FJ+OPt99LbVJPY2lm/Jdr/OQW+RA881scdxK+Vr
Wn9nLM405zk6dn0/5lvWczbG4l9TLcZ25nM3Vh7v/f680X9/1xx46Xn0uj2y
RQ68lBtOaRnH2Kp27lryP6X+RevYpdIcqZbfLs8BP/7agVa1OZxHb1uPbSy9
a/sZ+3VXONd38aw58Pz/qTGWW+fAa3Ofe4//LN1TU3MurrCNkbbUmm3MfIOx
MhXPGzs+j/WPxuM3AABr1eZnzMmXluJ4LfMs6HteEvculd7jTkvvN2sZe1+K
v7ZuY6lvMdW3kuu5j9d5gdRDU+fxyjnwWn864zqO3r6a0pq7Y/mELXLgpbkx
c9Y7WXJNviwtOZuxWO6cbRxbAyT19JLj0/t5QX+lOiFxpKO3reb19Tm1XuMd
c+Cldl7u99djVrbIgWeOT6m0rJ+59Hy/LC39jNI13rqNpeM8dd2YA84d1Ma6
9G7/HLWNpb7omddCOeNxZJ5ny4Gnf9Gav946B15b26t1/nKrpWsrXmEbB2Nz
WlrjCqUx5lO57LFtNsYQANhSbc2sOX3HUv/z9RjAxJzSViq11dJHSw4g7eNn
zkmuOS+l+dVzz2mLUl6rNf4+toZrS74mSmvfTa35aw74faSeSL8tcfTWdcCv
mgNP3L1Uz6aU5k+eQWkeX2lNiy1y4KX1onuvVVIaD5/SkrMpHauW85t4w9g7
J6fqt7Ftluu5hlKMrTV29XKN1sEeba/h3mtd9+VuOfDauhhj9/oWOfC143Xm
KK253lL/5hodq9da36eZ9sHYcZ6q38wB5w5q78/pvTbYUdtYetf2nLUiXj4D
z9yevvq5vpNnyoHPbRNsnQPPWjWl0rsNW1pnYirWdYVtHJRiI1N1YdpRY+27
qTUrjTEEAPZWm1PYEh8alOJTKWkD5+/TDqytz1UqadOd/R23Zzsvtbhm73Gn
Y7HFobRcP8nNjJWWmPZYfHIqf24O+L3kvM1dM+uKOfDsYykvnHLmOeCJm4w9
HzJ2oXTfbZEDL+VgescFS2vKpbSsL1yKG7Wc41L8c6o+leu5rtIztHZdZ8xD
7qVSuy0l90u+o/d84EHPeOoVc+Cl8YOl9ydukQMvvbchpXccsjbudenxamm7
leKzU/Xp2PEWn+VqStf/UM5Qd67dxlqbq3S/5nmS+m8qLpF6Iu22K/QRr3Cu
7+aZcuBzbZ0DX/veqTlK85xTrr6Ng9K6QFPjFEu/OzW+Vb8TANhbbU5h6/yK
KOVsk+NI/HRJ7vtlGd7v+yyxp7XnpTQ/OqV3P772Wy1jF0rXTnJgtfNdGls7
1a8yB5wr5cCT+849VotrZbvP+u6s2tz12poUW+TAS6X3et+19zOX8luvlfJj
tTFMqW/HrpOpcUHG4l9b6VoZu64TX6rVJaWSa+jo+PmdcuCl9kttzcotcuCl
MYxbrKNfmqOUfkLL50vrmU+NYSrFZ2tzm0q5pJ7vSIc9lMZIbXWfH7GNpbph
7LO570vjcWolcYi0387a1r7Kub4bOfCyrXPge/bla+MFa3XCFbbxpVLdmH7G
2HeU2pD6nQDA2dTeN50yZx2wWmyuZ0le5Mz9z7Ocl7VjQeeonfvW+fuldd/T
Fh8736X9S5+i1n42B5w4ew48901yOolnjb2f62VJn/HM62SU7tWpXHbvHPjW
sZjXSqV1vE1pPfXUV2Nj61O3lXKbxuLfW2mM4csxJnnGlXLlc0qe1UfFqO6S
Ay+ti5E/q9XlW+TAS3npLZ6Fpedu6/bnuitd6/nu19dl/rv0m1NzwMfW02h9
Rw+cRer92lofZ3jO99jGUt34ekxRxoXVfqulpJ3Vez21sxxH5pMDL9u631Vq
027Rflk63+MK2/hSqX2aknhE2k7JtaftWGqP5fNT6zzpdwIAeyq9h3Aoc9fV
rY097l3S5jpzzucM52VtrHGOWly2NS6d/S7l+vLn6UOkzZ39qrW5p+ISY32R
3nNAOb8z5sCT8y29r7pUEt878zsLc/+PldRxU2OZeufAS2u8pWyRAy/FEOZs
f60eT/wgz92MMaitkT/1e8biX1/pmTg8fzOeYmoszZySa++IsYh3yIHX1sWY
qoe2yIGX6o7W9cnnqL03p3UcYumZkpJ6K3HZIT5bakvnz2u/V5oD3vreejiL
WtvgLM/5HttYyv0M76PNd5TGWi8pad/V1jG66nFkPjnwsq1z4KVrfou+/NJY
1xW28bXUbWvKVN2o3wkA7CltjNo6YEvmxdb6XmMl/z4Sqxpym3O+I/G5u80H
73lerpYDj8Tp14zPn+pPaXMzOFsOPPf1nJJ81tnXZE39PJWbq+mdA6/lTrbI
gZf2fYjJtqjly1pKPjtVvxmLf32l52au+czF6Jn/HsoR71+4Qw68tC5Gy/jG
PXPgc+qpVrV1OueMa63NdZoquVemrhVzwLmDqbHpZxjT0WsbS3XL8B7b0noX
a8sWbce7nuu7kgMvOyoHvsUYvt458DNt45jUGXNjcqV1yl5Kn3RsvP/ZxhQB
APcx1RdckltpibEmZprYVS2Pm5hq2nAt7w8f+rZ30fO8lMa7p33ae7tr40Xn
trmX5sFb+lJyPQzOlgOvzVEeK6n7cq8cfRxrSvVZ61rge+bAt+h798iBR56J
S9awLr277aWxeElL3pxzKZXEomptqWEcYv5d7o/If7fOl9siT1pz9Rx4bV2M
lvGNW+TAS2NszpwDj9L71Gslbcup56Y54NzB1P2R9tmdtrGUA057sTZmJvd6
1qfItgzPwPz/fF9LHKJl/bErHUfmkwMvOyoHvkX7pXcO/EzbWJIxtK3zk/Lv
ptY/D2MMAYA91eYHp6QvOPc7a23coaQ/OTeu3jLX4y45zN7nZc+1l2q5paVt
7tacT+ta0OaA89LZcuBL1x0bxhWdbU2MUj88Y79b77k9c+Bb5M965cAHOc8t
Y83yb1re7yDXcw85j6VSWgs699BUzjF1StptU2PSktfca1+vnAOvrYvRes9t
kQPvXU/V9MyBR3JPretkZFxHy2+Iz3J1tXpiuJ6P7vv03sZam7705y31bv7N
1DuKjlgT5Urn+u7kwMvkwK+xjVPS1kp/INs89EPTv8h/Z22j1nFAPfudubbO
/C44AOB4U3nW5BOX9JXG8otDaVkXZ+q7azHYO+QxtzgvV86BD9KmHt51O7SZ
hzZ32uJzvrvXHPDM1Tp6zD/rnS0HvmZt12G7l+QQtpDtGMvVph6f01+VA3+v
1D+JcSSf87JOyzMic33yd63vy+iZ68nxO9s4jGfRMgbx5T04d/2I3LO1sRdL
3p2zxb6ePQdeeubMqc/kwMflms440Zfx2ezXsM5B63Mn1/FYf0N8lquYyonm
/ji6rbjFNk71o1+W/Ns5fer826l12lrXNzr7cWQ+OfAyOfBrbONe1vQ7Mz+m
tD5H6rqhD3z0PgIAx0v/bap/uCaHUmtz9Vhjdqqfd9W54FuelzvkwHtZMwc8
xz4x1LF5AImVDm3uq4/DeDZny4GnDnu5JnHyiYmf57+HtYmn5mOmD3iGmHup
7pk7X1QOfDtrxuLns0MefqwknpGxS2Kv+2jNgc8dg/L6N2r1z17x/6vmwEvr
fKSOmNN2kAPf1th6yhlf1PLZjI1MHn6sXs2f5bnlfZdsaWpN7CVjoK6yja3r
9S5Z625Qy4PvORbsKuf6WciBlx2VA299bs/ROwd+pm3cw9J+Z+IhqbdbS+J1
R+8rAHCctDmm1pXuNYcwv5V2R/pdiXX1jPfU2j9H5a3OfF5KffW0P3vvS853
qZyhHbpkDnjOT/I4rSVtbvGG6zhbDrxFxkCnz1wriXsdec+V5rMv6evvmQPf
4t49cw586Vj8HKeWd2QOJXWo+eHbas2Br13jvrZWxV7x/yvmwHNcSvPo564p
s0UOvPRMebYceGkO+NS4kdRvc+ag5nhbS4jeavdWyhlyoltuY0sOfO26caU6
Yihp71z9ODKfHHjZ1jnw0ljcLfrytfZXrf1yhW3cw5J+Z9pXre+7eV2uOj8K
AFgubYepnMmZ1tCtmYrzXmEf9jwvtZhc7/0587jTsW2bmnuVv1va5m55Dy/H
u2IOfJBrrBaHO+rdpYnrj21X/qznWhZLc+DJZZTKFuunlXLFS7e/l6Vj8afW
YymVXI9Xej5fTUsOPDG4HtdNbfzDHmsQXjEHXqrHluRLtsiB77lO55lz4GNz
wKfum+TE5owJGkqeidbspJepOXJnyIluvY1Ta5WnrB0HFrWxYHu0va9wrp/N
PXLgv2kTX/GJ31u8Vr/501+9+vvrffm++1JbeyH7eeVt3NqXfMfvLPQ7/1Tx
M1/47b/tTZ3688X9aSmPmNwx+wwA7OuDn/xDo+s3v25/Hdkmmqs2b/oj/+tf
OHz7znRe6jnwvvuUfkypPOLSxxzrtJ/ntrmnrrOW8lgX9vhrjbI9+6RbqN1z
Ldd4b7nXSvXa0jjHz//KZ0a/75FDnv99W8diXhure9Zsfy9jMdzEGWqf+Ss/
/pXV622q5L76su/6nEP3+64SW5oqj7ms638r9UqpJAex9b7W7uEj2xolpXxJ
7rfUmXO/r1bvL93GUj37WLuj7/H43p/7luL2H9kXSd1UngM+/pke8dnUq0df
o1xX6v7SHMOhPHKiX3L7bZxai+ExnmX9/pT6lUPZqp1zhXP9rL7tJ/8XOfCC
O+XAv+t//6bivpwlB750G7c2NsYwsbbaZxLXLZXUhWlfp77LPtfaYl/7qfcd
tt8AwD4SCyytvTiUtBfSpzp6W+eoxf+Oziuc7bzU2sF7npcj29xj7eepXE8t
xp/2etrcOY85vrW5/OIQ53b1HHjUxmpMXee9/eAvfHvxnln6nVfPgZfKkc+q
Uq6nFiOoxXxzvyS2kVxO5h9k30rPuDXXAsuutZTedUHpWsh533o/r5QDT/60
tC5GxkIu+c4tcuB7Pgv3HJs5R3kOePkzpfhszm/Gg+Tvh/hsaXzYmmuB55a6
cGoMRurkXuOfzr6NpTboUHqOC62N5dmiLXmFc/3M5MDr1+6W90rpXny896/v
viyNq11hG7e0dIzhWF8j31MaO1g6znvHQwCAfSUOXVsnNyWx6Kvlv6PWlk6+
5OjtO9N5qbWDl8w/qqmN1Txq7t/SOeClOEPO39i/L83zerx3ru9xpp875MBz
b9XG1Ow1DiO/U7oH1tz/vXPguR9LpXR/r1EqqZuPumZ65npyfsaeV8nplNYH
3nt9gmdRK73XJSndlylbj3m7Sg68ti7GmjWL7poDT9v4qHOVa6pXfDbP49Jz
t5SjE59lroxZq81FHu7fI8dX7L2NtT5vSs9jUVsXp3f77grn+tnJgZdtnQOv
3fe945ylZ/jU+M8rbOOWlvQ7S/NRptbOGfutFPNSAOCeamOTh5L5CVfOzZXK
meNIR5yX2jvLeveVa/t31DHvOQd8qs1dOtbyPed1hxx41O69Pd6DlRx3KT63
9vrvnQOPUumdJ8xxKZWj3tuxZCx+jI0LmlrLufRbW6yvzG+aeE9333lptfl2
W8fhr5IDL8Xh1o7V3CIHXjqfW+SlS2uXHPncHVtfeOm4oKk1N0vH2vxNWqVd
NTWeOs/nI9fgOmIba3mm3nVZ7tdS6bnOzxXONXLgNVvnwGvjUXo/V5e2X66w
jVvp2e9sWUus1Pfe411NAMB+EovO832q3OE9xaV5j2fMXR15XkpzM1N6j4cs
7eMW6zy1Hvdec8BbxlaU2vhnX5vgmd0lB17rWyfevvXvT8292btM3XOluZm9
3hU5SC6kVLZYK7NFz7H4Le9XK+V7zFfqr3Rdp/TODdfG122dh75KDvxspZYj
2XMdn9J1etTYmFIua8kc8JZnSOn3rvAuJ45Xu1eHUlqf5e7bmLV8SqX3GPna
mkK9ci1XONc8yIGXbZ0Dr41H6T0PodR+mcrNXmEbt7Kk31k6Xq3rtY2Nazxy
HjwA0Ff6P7W1Kee2Hc6uNN/pbLmro89LbR5i798svRf7qLn5S+aAl/pprXNp
x/I9yYtfec2FO7tLDjz5xFLZo897tRz4WN84pXddVRub0JI/7m3pWPyx49U6
tqkUxzhqHvydla7rlN654dK4iC1+6zU58GWllgOvjZfsXVeV5jT2HoPUauy+
mRqTmutsrEytFzQYm6d1tXYH+yutLfGypF17ZJ/jyG2sjTvcYg5gaf2jHmOf
r3Cu+VVy4GVb58Br41F69zVK7ZepNsMVtnELS/udpT5G6/jp0npJ1tsBgOtL
27L0/uKhpP1xpzWZS+27M62FfpbzUpoz3/t9ZaVxCXvMQ32t1OaeOtaluGZr
DLiU8zoi38W0u+TAo1QnZjz41r99tRx4ae343mPEa3Nlj5i3s2Qsfow9x+bE
k8eeDUflu+6sdr31XvellgPf+nknB76s1HLgtfGSrXndFrXf2eO9Ha+NjdHJ
s3Rq7nspvto6Z750r/aec889tK4nlrbNM29j2lWlssV40FIOfM2aDmc4jsx3
hxz4F7zZjy18oNJm++tvnqU9fqMUb/v+N/2eXvvxxZX6Je2kO2xjbz8xUpel
/zf1udIaGO9/Uz+2/O5fLIzrPOIYAAD9pF1ZewdkSv7+Q9//eYdva0+l8nO/
8pnDt+1s56U0Pzvt0l6/8f6J8a17H//vH8n1JP4x9bm/Xohrful3fU7T75Zy
6EccA6bVcuBHb9tctbUxtv7t7zxZDnzqOfCXKvm7xA96HZexeijln/6rf7z7
9ZFnzdg4iZZn0Ng4qu/5uW9p/u2xZ9ARx+Duatf1t/7Un+v6W7V8e9o/W+5n
LZ6aZ/DR52FwtjJ1XkrjJXu2Xz5UWQ801+/e52hsDnhLPHrsmZfj1/q7pbbm
EceAc0v/qvR+16Hk2X5kbP9M21jKSyf/1PN3armmOe2jsx5H5vmYHHjRHjnw
sVxr7/u+1sZu6UtdYRt7Gmvvpf7KXO6pz46tq5i6fc1vp4jHAcB1teRZ065q
zd+tkbZGYo9pyyY2FMkvJRfRM6cw/Fap5Dedl3crvY+1Z26slPtN2Tsm/aWF
OeAtbf/vKcwPnXPux0ruh6OvS95ryxx46r30tXLuE2dPXThcl1vEuUuld9xv
zNVy4LW143uem9KY/5Yx8L2N5XpanpdfWpi3OSenWnov297H4O5q1/XSmHxJ
qV2RsvV+yoEvK1M58NJ4yZ71Ve39tluPnXitFJ9taZuPxbJz/Fp/uzRHqVc+
gHtoyYnmWfo1n3qfbfy3Su8EmZM/aVGLRSwZc3a248g8cuBle+TAa22LXnHI
0rjm1v7MFbaxp6VjDKP0vpjW3y71XcXjAOCaWvKsaT+0rhmzVimXlNI7plNr
Qx4dPzrbeYn0xUulV8yxlANLPHHPfY2x9n9rDHcsrjmn31CaD99znSv62TIH
Xup/bXE91H6rZf2Dta6WA4/SnMde56Y2R2jvcehrcj1fU3i/5pxnbSlfuucx
eBaldyLMyc+1yD02VvZYd0IOfFmZau/tETst5aeOWHtl7Bpurf/HxgvMWYeq
VK+ao8SgJSea+2bvsSNn38Zae7Rl/mGr0ruvUjLG5erHkXnkwMv2yIHXfqPX
2ObSuObWdRWvsI29rOl3xlj7bO76YWNFDhwArqclz5qY857bVMtL92531fqJ
R/YPz3heopYf69X3KMXD98i/vd7XpXPAS/sxNzY7Vs6wPgHvtfVa6KU8a+91
oEvrqqZcffxFqW5Ze0+Vzn2vefO19eh6xmFbrBmLX1rjY85anKWY9NHX1h3V
xiP2bB+V2jp7vI/mKjnwrdTq+zXfW1vPp9camqVn4t5t47H6eU58duz6n9Pe
tWYQNS050YzD6L3O2h22sTY/u+f9Vcu1z3nWnvU4Mo8ceNkeOfDYci2bWr0y
Zx+usI09rOl3xtp4XGlOijYWAFxLnumlMX5DyXsa996u0rp+KT3nkNTyuXus
+Xu18zIo5ZF6tLlLeeeU3u8gnbJmDnisnQceY+WIsQ9M2zoHXotr9VzPsPY7
V88JbZUDrz2zeuR7zjLfce1Y/FJebE48Ze07JmhXy2P2aoMcHWeTA98mBx6l
d+n2GEtVGxc0d97kWmPt9Tn7uHYeeOm9BUf2EziP2rsmUtK+2HuNrSttY8aZ
jpVe40+zX6XfmDsO7MzHkXZy4GV75cDz/CyVtf262jsW5tyfV9jGtdb2O0v7
ku9Ye81pYwHAtZTWKhzKUWuBp21Vmt+R0iu+Vdv/I9cQPOt5GdRipmvb3KV9
T1t1z3Hrae+umQMepZzonO0YK8adntPWOfDa+hi91gao5aNSJ189drZVDrz2
zFo7Nqh2TvZ+Tq0di1/alzlxhLH7bE4sg3lKecz8eY9ncinOtte7T+TAt8uB
l/Ixc+OXY0rjRPceFzSWi58bI147R6nH2CLuqTZWJOUM60qdfRtreaY5a9iU
1Nr2c8Z+n/040k4OvGyvHHjtd9asSVnr083NqV5hG9da856ZQakt2tpO6/Ee
LwDgWFN9paPXvK2NZU5saG3stTa/ae8xjlc6L5FjX5qrvSbfU5sDvvd+j8Xl
5+5bKZ/fuq6dcafXsnUOvLZuRcra8Sep80o54iPuwS1slQOvnf+UNeuVl3KE
e49JGHtmzs1lla7hzO1u/Y6xdQqOeP/vsyjNu09ZuyZJrR22V7xeDny7HHjt
/M6551+rtZP3Hhc0loufuw1r5yiVjkeP/BzXlbqtNp486w8cPa7xCttYa3uv
HQuW7y7t/5yx31c4jrSTA69f66XSOydZ6n+lLHnndu7n0rt/lo4NvMI2LrX2
PTOD0jij1nhc2lJjpdd7fQCAbaXtUJrbk3KGvlJtDGLKmlxr2jy1/T9qDvgV
zsuglu9ZsmZ59qv0XqO929yla29uW7cUW279nlL8+Bni8le0dQ48auuUZy3F
NfVDbdzR3vfgVrbMgdeeWUvr7tr8oL3HJKxd73cwFqedc/zH1gzt8R4OxtVi
9ClLn0eJs9XaOz3f71AjB75dDjxK87XzTFlyjmvt973Hr/aYAx6ldwG35r/W
xne5p9qYxtTpZ7g+rrCNUWsfr2k/1r53TrvmKseRNvfIgf/GTXzgE7+neK3/
9U9/qPtvleZm5M8/9P2f2/xd7//23zoxzvxv33YblxprPz7WQpz3PTkGY+Uv
/YMvb/r8WD39GKe437EAAJZLG6ZUEr/50u/6XYdvY/zEL31fcTtTvv2zf2n2
d6YdNDVWeu535nilzVjSejyvcl6Gfa61uR/r1fc51/m7PfdtfL3f+e3+Uj/t
McZi+vO5vsfKF3/H7zj8/PNe9Rx4n99I/VW671L+t3/2D972Yed+79Q7BJf0
OXPPlOrE3nGKVvUc+Prvrx3HufVY7R3jjzEJ+z0PEid4XZY+k8bq18Q5Wj6b
3xsrS9oCtPvWn/qz1WvxMd+0/fvyDCvlRlN63Y8tavHUD//g+7v+Vu7pWlvx
iHOburhUenz/13zq84vfnzokx7/XddPatuqlPAd83veM1a8prfHZsbZH+jlH
XE+cQ+maGkrvuu2u2zhI3VMbs5X23dy2d2nsS0qeq61145WOI23kwMv2zIHH
1H3a8sz/4Cf/4Oj43Zffs6ZPd4VtnKvU71wS48hnxmK/rTHfsXnxR7XZAYB5
arnLlDznazG6Xlq3tZavHtogabdNfVfaP4mT1/Y9f9fyXa/V2uMpLf3YK52X
QW2OYkpLXiL7XZr/PZyTOWNY1xobK7qm3T8WM0kfo+WzY/m6JWM02MceOfCo
rU2ckmuuNXae67025jslcf4lfc7a9y7JqfewdQ489cTUWh4tz4NaPCPlDGPx
l+abSmN7WsZNlfJ1Yrzbm6onUi+1jM9KTrQWZ3usLbvfOK89c+C1fHPKEed1
6xx41NYNShu/ZQxFrpvS+pzDdbPkObXUWPt36Tbkeh8rj3mg9c+WYrt7jx3l
XGpjRXK97NGfnOq7XWEbXyqthzuUtO9avi/3e61OTJmTy7vacWSaHHjZ3jnw
PGNr/bqU3IP57dfP/8QUMza6Ft9LmTtv5IrbOFfPfmeUxqhP1V2lMcCtcRYA
4Fi1ucZ7ltbtnepzpqTdlv1Ke+R1Djttm+QTarGzoSxtO/fIgV/tvETa0bW+
d0pi3Wk/ltrcU2Mc5s4vW6vXHPBBKZc11XYuzQHNsTy6DmHcXjnwqbXKhpI5
4bleXudxEn9LXVd7h9jLbV86/uMZc+AxNTYoz6vUfa+fVTmvOS9TdWr2Yc9c
T8+x+FGayz2V78nvjT3HW+eQs06u16nndf4+z8ux3HGuo6m1fVL2jrPJgW+f
A58a45mSem2svZfc91S+aO+xkqV485r4bOl5PNV/KD1vctyOuJ443tS84L1K
rf68wjaOmVozKSVt7+zf63s3z9C0fadyVfn8nc4188mBl+2dA4+pNSTXlF7b
fIVtbNW73xmlNYnSryzNf8p2jLVd9x5zCQAst1X7aG6Zs81TccMeZU37rkcO
/IrnZdj3lvEFS8re61r2ngMepXxPzncpRpk/H7setLnPba8ceEytCduj5Bpc
si7G4Flz4LVrYW3JOd/7XQi9x+JHYrxjJXOJS9d76TN7PyeeWZ6RU/H7NeWI
ekEOfPsceGRsw1QefElZ8u6dtXrOAX95fMZKxpGW+hA5d2PH1Lig59YyvnGP
Uqs/r7CNJVu171Jyv8/pc175OFImB152RA48tsgx927zXmEbp5Tm1/To65Xq
7hyzfH+OX34/9VltbpI54ABwDXmmn6XM3fbMZ9wifpayts28Ngd+5fMy7H/v
PHgpF7KlsfxYjzWHS3PBcz3n74ZceK6D/HfpOj/qHcq02TMHHskL1t4jsKbk
e9e+9+uZc+C162FpyXU05925PYytw9JjLE7GVpTqucR0E1/I9Z1/V5sbn+vU
uKB9bfG8X/JO8Z77Uypy4H1/a4s8+N7totIc8B4x0dI4n8Rn0wdKfDb1Yo5j
6fmS42sO+PPK9blVX3luKdWfV9jGKVvkwXP/zxnjeIfjyDg58LKjcuCRPkmP
fnfrO7rvuo01W4wxHKR+XTuOd+93kQEAy5Xew3lEWbL9adfV3iM5t7S+u2vK
2hz41c/LcAxK8bu55Yj899i6S2vngA9a1oyfKlvk6Ohr7xz4YOr94HNL+nc9
+prPngOP1O09YpSt7xHvaYv1fl8fmzUleaG9jwkPeS72ygHkGjsyZycHvl8O
PKbeB99aWt8j3ttYfLbXvOvcV2vjs0c9WzmH0nqvR5RS/XmFbWyRurPXuihL
8ip3OY68lxx42ZE58EF+Z+l86/Tn9mjzXmEbX9u63zlcP0vH8YrFAcC1lOaj
HlGW7kPaR5kPsWYeUtpXvdtTtTIVp7/DeRkkJrk0JpA44lGx8LEcdc+xnmvW
rs68SHMdz++oHHjkvlm7JmK2v2dOUQ78IXmNpeODEr/IGIcj7v8tx+IPlj77
clz2fP8v41LvLH2u5VrK+e8xzmwNOfB9c+CDNeODUp+ueU/HUlvOAR+sed+A
+UmcaV2xUv15hW1slb5dbc3cqfITv/R9i7fhTseRd5MDr99zaTuO2bNfkPZA
Yl65h6faMhn3l37m3jGuK2zjS2P9zsRQeveB0+6vxShel6PmxAMA6wxrLZ9B
j/1J3OkHf+Hbm+aUJKaUf7tFP63WHo+ptc3udl7mtLnTtj26zT02BzzXS+/Y
fK6DOXnKHLsj5sSz/Doau6f27Del/594XGteKrmE5CK2mE+b3EqpnjkqXlba
pj3e7ZWcTX5r6nmV+z5984z12vvd34NSrifb1Pu3cn/MmatwxJx46lLv5Nqe
qndybafOOdN7PWrtt97X2XCctmx/9dymPY59roWWdlGurbThj8h9D8bWrtji
3du57uasZTqslX7UceE8cu0c3Y+cqj+vsI1zDXVZa64pfbu1v33H48iDHPj1
pG2Svu1rR/XjrraNe4wxfC2xylouPNuTGOXRY3UBAF5L+2SsXWeu2PHSNx47
N2dpU47F7bfMW+ZdjrWY79DmPjLWy/WlTzvca0Pu9+X9d/T2PbP09c/8vNpy
vd8xeRYkv1Wb/5ic0FHvjGae13E27yemReq/sXrxDOvgpI4ay21tHZ+t5cIz
hjRj3s7SlgYextp47lNayYHzbIZx4i9l3OEevz3ES9Lmym+eqT8OAAC9JCYx
NqZ9j5jrECNJDHVoc8sVAEfLnMLXdeJeddOQB0udmHjEWeYoAM8r9d9R8dlh
jG/GsmV8Uv6/MZIA9yQHDgAAAAAAAMBdyIEDAAAAAAAAcBdy4AAAAAAAAADc
hRw4AAAAAAAAAHdx/Rz4R97sx28AAAAAAAAAADlwAAAAAAAAAG5DDhwAAAAA
AACAu5ADBwAAAAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADuQg4cAAAAAAAA
gLuQAwcAAAAAAADgLu6QA3/fm/0AAAAAAAAAADlwAAAAAAAAAO5CDhwAAAAA
AACAu5ADBwAAAAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADuQg4cAAAAAAAA
gLu4Rw781wMAAAAAAACAHDgAAAAAAAAAtyEHDgAAAAAAAMBdyIEDAAAAAAAA
cBdy4AAAAAAAAADchRw4AAAAAAAAAHchBw4AAAAAAADAXciBAwAAAAAAAHAX
cuAAAAAAAAAA3IUcOAAAAAAAAAB3IQcOAAAAAAAAwF3IgQMAAAAAAABwF3Lg
AAAAAAAAANyFHDgAAAAAAAAAdyEHDgAAAAAAAMBd3CMH/usAAAAAAAAA4J2P
/eRflgMHAAAAAAAA4BaungP/ns9+5J3Pf7MfAAAAAAAAACAHDgAAAAAAAMBd
yIEDAAAAAAAAcBdy4AAAAAAAAADchRw4AAAAAAAAAHchBw4AAAAAAADAXciB
AwAAAAAAAHAXcuAAAAAAAAAA3IUcOAAAAAAAAAB3IQcOAAAAAAAAwF3IgQMA
AAAAAABwF3LgAAAAAAAAANzFPXLgvxYAAAAAAAAA5MABAAAAAAAAuA05cAAA
AAAAAADuQg4cAAAAAAAAgLuQAwcAAAAAAADgLuTAAQAAAAAAALgLOXAAAAAA
AAAA7kIOHAAAAAAAAIC7uHwO/Gc+8s4f++ivBQAAAAAAAAA5cAAAAAAAAABu
Qw4cAAAAAAAAgLuQAwcAAAAAAADgLuTAAQAAAAAAALgLOXAAAAAAAAAA7kIO
HAAAAAAAAIC7uEcO/D8BAAAAAAAAADlwAAAAAAAAAG5DDhwAAAAAAACAu5AD
BwAAAAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADuQg4cAAAAAAAAgLuQAwcA
AAAAAADgLuTAAQAAAAAAALgLOXAAAAAAAAAA7kIOHAAAAAAAAIC7kANnjf/h
237TO3/5xz7wznf8w7/8zvf9o7/5zs/9yk++84mf/Wtv//vP/v0v2OX3P/vP
fvTt7770P33fHz782MAS7ikA4Kq+/kf/5LvaMPnf/Hf+fI/f//Ff+qQ2DLDI
l3/ic9752z/94bd11k/98g+8rU/y///GZ/7MO1/ynb9z89//q5/+qvfUX6lD
jz4uAL28jHf9wC987F3xrj/9qc/b/PdTl7+uZ2OPOh6A49whB/7fv9mP1774
zfMr+aKjZTvGtq/mK77395122wZf+PHf9ra98v/+f//3O7XyL//Nv3jnY5/9
+ne+4E07Z+lv1fytN33U1+Wf/J8/t8lv0e6rvu8Pvz3vP/umLRn/1//zr96e
m3/+r/+Pt/+dvvzH37Rxv/pNG9c2PrinAJ5LnkPf8pk/886P/OJ3vn3u/MK/
+Oy76t5/+q9+8e2fJwaff5f24ZHbmufi8MzMs2goeX7mz/IM+8Yf+8Db59nR
x/bu+5w2QH532L60XcaumzzTv+wTn7PL9nz3z/61f9eWKpX8fdpWWx2v5Nm1
YRjkOst9MtSxuRaGkv/+zC//wNvr8Zs+/VWr+sVnknvxz//Q//h2v4a662Xf
Yqgfckyy33vUD2NSv2YbM+725bMv2zpsd+qU7Mse25PYyOtn8FjJ9mbbtzp3
L58zQ0m9dvR1xfFyjabN8Tp2kfIyfpHrZas4wZjUs/nNsfZIrudhez/+b8fz
H30cn+W8RJ5rqeeHZ+DLbcvzcHgWpI+xRzs229Ma70r7davjlfPxuqQ9cPS1
xHPL/fiy5N585u0Z6q/0Z7Mtab+mDO3E/HmeK2ePPRx9HHm3j940B5575Qwl
27H2HjnTtkXaeWP9s1rJv+/dXyz1E7fqlzJ9PtJWnXttpG+QdvcefYKzbqN7
CuA5pI+WcUwvY4Rzn0d5ju0Vq0oOYu62pm+aGNdRuZU773O+P78zlWt+XdK3
WNrun5I2whCXaC1pa/QeYyh/xCDXZOLZc0viUldt8+aZkFjg3LohJfXDXrnm
9KeW1BfJWWw1TiF16tySz/TejrFxyMm5H31tcZzhmT83TpB6IG2ZLcf2LG2P
pH2VuuqKbcQrnJfIcyz5obkln9nqWZDvnXut5FnR+zrJsR/LwV/12c89pG30
uhyZKz1ye1JXtIxJfFlSt6SdeLbnytnOK3LgW5cl8aYlfde9ti1tg6lxe6WS
/erZthjrJxq/d4yMvZrbBxi7PtIf2irPfNZtdE8BPIfUsUvr+7H6P9+31bYm
T9+jPZrvOfq432Wf049ee/0kn9Iz9ppYw9K2VfalZ6zVOjbk2l4S939dkhM+
cq2quVI39Ki7EnPcKjeTdUzmxjRfl+xj77E8iUUuLT3jmMYh8/p6SK507TM/
n99i/FvaOWtLti1119HH+k7nJRKrWltSt/Uca5u23lniXeaAczbpS43dH0fl
So/antznPeaDZjuPXDvv6ONI3T1y4P/xe5wrB/7e7Sv5sk/8rtNu2xd822+s
xrmGdSFr/yZ/98Xf+Ttm/e6cbfmq7/tDq7+becbakWvKL/yLn3nT5v6tT7GN
7imA+8vzIrnHLUriNj2fmWmHzp2jN1W2eK73dIV97tmOSdsi4wJ7bNfLtaVf
l2Gtutqc+vybr/je37t6O0ptmK//0T9x+PXFPtJeXbq+RunanNtX3lvqmB//
pe/tts8pqR/+7N9/X/dz03OM/4/84ne8vefXbtff+un/ufo7qd9Sl9dK8k09
jtHYtjzyMsdfZ+wr98vacftj11KPeybfMXVPzC2PsXnrYxnPfF4GPfsaaRf3
iAPl3Nby38N6+bVjm2d7jzZ1aVvEuzhK7v9S3jdtnWfZnvTXes0TSEmb8zGW
1Xnl3eTAty1z+86598+6baV+Ytokr9sNiSeW4mKpC9Zet+Xxe8ffU88i9fpW
Mf1cO73yumfeRvcUwL0lZlPLE/Yo+f4eMbQ8Z3rmkF6WPKd6xvl6ucI+f+yz
X9d92xJnWJvnKvVZxnJoOc6lWEDi6WuP0Vh76jEH/PhrjO39+R/6wq6xs5fl
Wz7zpw/fvzFb9nF61A+DrerYtX2U2jjkzPN8XXfX8uVrj1X6k2NjBORlnk/v
8SIvS8bLrN2+Je+YaCmpI86cBz/7eYnkVXqX7HPq8DXbVRrDOZZjz3+XxqT2
yBuNjRnrdfxhrql23N650qO2Z2o84tLyWG/sC5/+vPJucuDblrl55h5r12yx
baV+Yi0PWLv31/QVjd87h9Y+UK6RXNeJIeW85/+nLTwVD8nfr21zn3kb3VMA
9zYnR5E8YOIwef4kt5j/TR+pdU2wtfmA1jxF9ifbljbk8LzMb7d89mxxpivs
c+ZrT5WhDZMYwnDt5D2VUznBtbHNsbEdOSaled25H0pzVtfM17aOzXPLPI+W
/Hf+TerUoY7NvTXcy1Ol11zfnlryHcklZP+y/YkDpg5L/ybPlZb6Ye0aDRkD
NrXGRn4n9dWwjanH8v9b1uZYc15KsaLamIfSWIu1Y5GNQyZa8qy5/oZ7OnVY
rsn8/7RTWuYoZ3zH0u1riVOmLZu6KWP30l7K/ZTfbKlz8tkzjpU8+3lpPTcv
27LD869lHZHUxUvPSz43dt7TfizN666NHV7TrstnX5ds25nHXnBfLTGCPXOl
R21PSz83JfXo0FYcni35/y1xkj3XdDrbeeW95MC3K2kvzF2zZauxlWNlTl1Q
Gpsz1Q4pre2+pl+nn3i8lrFaqfunYifpH9RiHImlLm1zn30b3VMA9zY1fzex
l7H5Zq+lLdmyFvaafMDU2pbpr03lS/Ncm4pxnmlt6rPvc/r4te/O9tfaDLlu
cg3WvmNpbLM0B3xqX0tj7tIeW3oerSH8vHKNT41FSe4i90HtOm+pY880H3xq
3bjcY9nn2nek/zMVO1y7lkLt+3Nepo5p6sCpXPjSOT5jOZaWeqM09mBpbsY4
ZCL109R7Q1JHTeXr0qaslXzPkmtrqs5JfmLqXkx7aio3kBzH0efiSuclpuLe
qbNq25e/mxpTtXQ851j7rOUdOKn7x0qO9dJzORZnX/N9sFTrGPm9cqVHbU/q
gak+dJ4tU33LPFum8mi93/FzpuPIPHfNge+hNu489+qSuRWlNtbR/e6x8Yut
Y57H6qMctyUxN/3E442NoXx9budcr7kOau3uJTH9K2yjewrgvqbef5f85dw5
dml31vK2S+cz5HlYK3PGTGafatuYZ98Z5vlcYZ9ra+jPmTOU66YWw02Mcu62
je1vfqPls6V5R0ve9ZjPmAP+vKZiXrlO59SJuVdK8/1ynZ1hvljqklpeeO6z
ZSp/snT+TC1nNmfd46l3ni/J0ydXN1ZaYqSlPubSMWjGIRO1HOnc9VxTj9Xm
Hs9dtyD1SW0edPLWc9o4U3XOmZ7fZz4vUXunQ0rmWLZ+19T7eJecl7Fta63f
xtrAuQ6XnEdzwDmLXHNTY7CHskeu9KjtmRpfNPzenGdL6rtSHdbrvXFnO47M
Jwe+TG3c+dJxfPnOUjmyLVjartaYWakPvGQszlg/8WzjRe+uFm9a886NUh+j
Zazo1bbRPQVwb6lHS2XN+49LOb+hzJ2rkT5b7fuW5D+m+rV7rkl21X2u5Y+W
9J1rMewlOfqx72qdT5M48FhZMl9e/uh5TY13zVyMJfGujGEv1Q9niFvV1o1c
+n6DWp4nx2LJdpbG8CzdxtrcmrlzBcbWDZ4zlnhs35bkr8bGyq2ZD8o11ebC
LY1bTM2vm3ONbdGerX3nWeIQZz8vUVv3cMn4xlrbc+65Lq1d2NoeXrpm4hhz
wDmDxGpb3o0wlK3bnEduz9SarUt/qzTGMWVJnXj248h8cuDL1HJsS2N7pTVf
ls7v7KUUY2ht96Wt16MOKvUTjd87/lpYe+1HbRzrnDUyr7yN7imA6yu9/26o
Y9e+Y7XUXhy+f8582loccs0aRLVtXPvu1LWusM+lfM+aefS13Nmc9kNpHF/r
sUsbY6zMfR+mdWyeW60vvub9pVGLzWUMx5H7XVuXamkfZ2pu+dwxtrU8ytJ3
Q2QbS3n1ufXi2DGcM598bF76kvmJY2N45GWeT218x9Jx+1F7H8+c66wU+8jz
d8l4lqiNGzxLLOLs56UWl1ozFrC2fXPq71KbuPUZWsplzW2nmwPOGbS8p/N1
2TJXevT21NY6WxsnKLWTt7jvjz6OzCcHPt/Y2OEe13Pp/ln7Lq61Sv3Y1hhu
KdY191iN9Tf1E/dVi7ssfU/QS7W1sVrb3FfYRvcUwH3Vco1r3tn9Ui2P27r2
YelZktKj7VmLHy5Z97qHK+xzbSzf2jHstRxS63eUtm9ObnCszG3DmAP+vErz
y4aydpxRLSd8dL+8tJ7D2u2q5a3n9g1K9cyW2zhnzd+x9Srn1B2ld8fPyQca
h0yU1kVJ6TEfupQjbX13SW1s39r2SC2mMud+fsbzErXcy5qxgL3mfJTeOdRa
x/V674Q54Bwp7dGWd0SPlS1ypWfYntpc7bRx17aDau+j67UPZziOLCMHPk+t
HZg2y5qYXil3d/R6QKWxgHP6eWvvfeP3zqG2zmeveTeluElr/voK2+ieAriv
0vzEnu/CrrVHW59FtXdiL3m3xpzvXzOHZqttOss+b3n91HJIrftfGuMxpw0z
1labM+7fHPDnVsud9BoHUbtX1ubYl6qN4Vk7zrf2TrY592Yttrl0DvhLa/tg
MZbfmdOH6tGPk5chau9Z69Enr80NaIlb1sZbLp0DPqiN95u7LsyznZfYYg74
oJRfn7PWVOkYtm5DjzkfY8/xHjk2mJJrrFZ/vryn9nj/zpm2pzSOMKVXO6g0
b3XtGstnOo4sIwc+73qvrfO/dm20Up9uzbqMPZTu8TnfMXbc5vSn9ROPV+un
9Jx3U4qttjyvrrCN4Z4CuK9SW3HNe8Bf65GvGJsLl9LreVmbq5kcwhHn5uz7
nPNaGrve6xldGivYOua2R/5n7DzMacOMxU/EFJ5HbR30HmNZBqW54L3W85ir
9C6klB7vOSw9u3IcWr+j1Mfp9W63Wm6m9fvXntPSGIzWa884ZAale65XDrg2
lqdlXF5p+3qsh1F7b1CPtfvufF5qMa817/0b1PoYrd9fyvPP2Y6xMqetNxZf
3+qdwBC5d9KeKNVtL0vqmeSQ0v9Ze61fZXtij/dg1J4vS9YZOeNxZBk58Ha1
/vba9lDtHj16TkOPfN2a+R76iedQW2+pR1t7UIvvTM0fuMI2hnsK4J5qcaPe
6/qU8jMtaynWcrU92515LkdyA4Ojzs0V9nmL9+i+VopLtq6HXsqBz2lDjMUF
Wtsw1hCmtB74kncy14y9MyjlqPXQa+t/9OjnlOJ1c9bnLcU2177fcVDL/bTG
NcfKnjlw45CJ0v3ca7xI5HtybWdOzdAeaW3v5JmaOnAsj9grF7x1fXHH8xK1
d3avnZ8/KM3Pal0PfaytmWM4ZxvGSmv+aKw93XM9LhhTW+PhZclY4OFe3TJX
erbtqfXFe9f7pTpsyX6c7TiynBx4m1pMKvfW2mdpqT/Xs621VGkdiTnrvo/l
91vHd+onnkNtzZJebe3a9dJy3q+wjeGeArin2jsEe889WJOvKMXP5sz3u5or
7HOP9TGn1NaRblnTqvT5Oe2ssfEbrbGPsbykNszzqI0z6v0++Fqeodf9OEdt
LfQeOam170CvjRHuOXe+NAaiNa44VubUIaU6sGWNfOOQGZTGxB89B7ok7YNc
+6lr1q5/OdhyPe87n5ce45WmlOJqrfHpo+eBmwPOEaZypbl/Xq8LdmQOfO/t
qY3l7L3GUmkO65J+/9mOI8vJgU/LM762XkOPuSOlvtRR48xfKuXr9nh38Vg/
MW3lI+IOz27tvKE5SjGYqfjoFbYx3FMA95V6Nn28zElLfR95NvSKGQ5KeYCW
vl3mcYyVo9b43cMV9rk0Zr3n2PjaGPyW+OCa/M9gLO7dEl+WP6J2/fa+l0vv
Pko5ak2L0hjctTmjxDtKpTX3UztePdfaWBvXHIvrzIlJltYda+nHGYfMoBRL
WLJO6xXV6pwj74krnJdS+7/ncavNAWvpz5TiXa3zu0rj3VrGe5kDzlFqudLM
ER7rKx2VAz9ie2rtxJb3QMyRuqJU5sa+z3YcWU4OfFrp+Z3Sq51RGmfXe93M
JUr1VGsstxSraIlTjNUbxu8dY4/xpoNSbGNqjcMrbGO4pwBYY+1aYqW5N737
n2dyhX0u5bd69wfWzKMsrXXQulZ7Ke7d0qeSP2Lr9cBfqq27fVTbuTROZm1f
p7aGSesc81q8sWfuoRabaYlrjh3DOeOMxuaJtsyNLI1DNobn+dTyv89yPdRy
IVkj3HkZV1sPpOdxWzteMtsyVlrHS5aevy2/bQ44RxnLleY5X2uf7p0DP3J7
SvVCSu+xpbV1z+b+1tmOI8vdIwf+H23myz7xXxfjUf/y3/zzN/2s39Lld372
Vz49+huPdkz5c/n93L+9tqN0DMbKN336g02fT2xxrDxijuXPff2PfsnoMf+C
b/sNm55zxmV801jJtdv7t2rjrB79j+tuY7inAFhjrD4fyg/8wkern02bsVS2
bE8e6Qr7XItrPtZX6/dbpTxa2lFTn02bYax8/B9+Y9Nvf9X3/cHRz+eanvu5
X50Dfvz5Yx+lNnBKazu6Vam9njJVz26ltj77mnqi1IdKyb3X8h2l8cHpa/Q8
BjnPpfLVn/rcyc/n3K3ZxrFj1VJ3fvaf/ch7PvfIy+x/HXGs0nOw971yZqX4
55HP9Sucl9RxpTIVC5qrVFqef6Vj2bqNpX7O1PPoG3/sT42eP/Eu9vAyRpzx
xmmXTV17pbrwkSu91/akr1gqaXP3PBc9+wtnO44s99Gf/EY58IpSXy5lKj89
R2k+xstnfO6x3Ku5Z2prs2ebs20965Cx7Us/ruWz3/2zf3V0W6dijuXxe8ff
N8+oVIc/1uvv+1tjMYKxe+KK2zhwTwGwVK19mvhP7bOl+FlrjC/ty4y/TJs0
7c38/zhzfOkK+1yb3zp1TntdP63HY2yt0Mc6xNOfLcU/pvot43PAv/Xwa4t9
1e6T3m3aWq7hsfb4/vuf3FBpfH7+/Cu+9/fM/s5aTHLOfpbWEG7JD/e6Blrq
ytI8pKlxOJG+1tjxn6qLjEPmpdI12Hq/5T7PfZDvSbtkaJMcvV+tSu8TaLmX
nv281MYALan/a0ox59aY1Vhd2Xosx+abPNbbKNeZ+bvUq69Lz7g91Ay5mlxz
rWOst86Bn2l7avPAW8Yw9vqt1nHbZz2OLCcHXlabY9Mzp5a2ylgZnvHp62as
XSlPXit5f1ePXPjYeOmUqVxfqR0y1fbRTzyf0rznx9p7fX9r7JoZSi0+cYVt
HLinAFiiFv+fig9FqU9YWzMlz5C0KUu5l5fPojn9w71cYZ/Xzm2co9QGSWlp
FyRGPVam2j/57rHxeFP9KnPAGew5N7t2T24xvrZV6f4btqt13vawj7U6bs53
lWIVj/eJ99v/UuwkpWUufGnNjZbcTCl3N3WcjEPmpdI9XKrD8uzM+I7a+MeU
3IO533qPm+uplv8++rl+hfNSG7PUO65TWh+kdczj2HFpOcdpTy+Jd41dW0c+
q3k+S3IvW+ZKz7Y9Y+s0DKX3WJVaW3nuvpztOLKcHPi4tB9K495SWnJcrUq5
9jyv8xxfkvt+WdLOyLzRNW2i0lo2ua9r37s0RqafeD6lc9kSb5+jtl5pSu3Z
eIVtHLinAFiitI51SkuuofQcGfts8iO1MV+lks+c6RlzhX2urXHcOyZc+62W
fn4pD5k2TG0sQGkdm6m48Fgctff68FxDrQ3ee75xLddw5Nq46SfU1qNKmer7
J49cis8NZe5akbVt6b3/a3+rlLOqrdObYzb2bJjKsRiHzGul+3fsuZY/WxIP
TCyzZ8xyrTzna+3XlKO39wrnpTSGcYtnUtrIYyX73fL5Upx7qq9S+t3aWKPS
PJGjrymYcrZc6ZbbUxvH33sNkNrYpNa1LM56HFlODnzcnuO+S/Gg3mUqLjWl
dA8n3vD6e9MGKbVdpuIT+onnVBuz27NtWcoND6W2bskVtvEl9xQAc9Tapykt
c/ZKa6a8zB3kGTQ1r6WlZK5I7/d7LXGFfa6NV9/zOmrd9tKxSj9p7DtKcdsc
r1p7RBuG10p5h9a4fKtSu3ur+3KOljx4xgCnr5F7L32TyD7V3v09lLn579r8
/LlrTrYoldbYYikOm2M2tu/596Xrbur9tsYh81pprs3L8WAZc9Fyr06VtTHA
pYZ3yGRuQG1u0VDm1jnPel5Kba8t1j0stZ1TWr+j9I6M7Mfrdlz+u7R/U3lz
c8C5qrPlSreel14qvfPSpbonpbYO3BWOI8vJgY+rjVHsPZasR7yttaRttDQW
mc/VxjrmHk8fN3VX6d+lXzn1+2PH/gxt4mdXy/v2XOOulsdOqcVRrrCNL7mn
AGg19cxoXQe41Ccbnl2luW5LS7a591rec11hn3vEGlvVcuCt767M3PTaMcsx
zxiDqTbM1Psr5Y94rdZ37vU+1NKcspfl6OOQbUwdtnbNuJdl6RzF2rvTt1iz
obR++5zYYm3cUY5DvivP1VpcaOq5awwPY0q51uH5m3EVPe/r0ti03mr3VKnk
fjjLXN0rnJdSe7Z1ffI5au/NaV2fKM+GUn09jNPKcyz/W/p3uUZq4wXMAefK
zpYr3Xp7SvVs6tZe47VSP9Xe8yMH/rzkwN9rr/eAD+bE3FIvvB7PHYkFTL2v
cChpHy2tW3JsWn/ndcnnpsZJG793brU2/9S5bTH1rEqZyi9fYRtfck8BMCXt
ttp45jnvUCz1yZKnyO+0zNeZW7J9R+bBr7DPV8uBR/7t0jZMytR4PPkjxtTG
ovZaD722DvpQjj4Og9T9yT2tuReHdzksvbdq61tuMe62VGfPiWtmX6fWg6+V
jO+ZOl7G8DCmdK/mPsqY/jX3cqnkntn6Xdtz5/ZknNwRc9SvfF5KddYWOZ3a
c3BO7j5rASwtie1NrXEl3sWVnS1XuvX21Pq7reP5p0w9i7ZYN+Ps55UHOfD2
azWl91iyqfcKDyX9+fQfp/pZWaenFiMdypp1JpJzm9v+a8nVGb93frU1AfMc
WRuTrI01HcpUfvkK2/iaewqAkpY1b6fep/xSaU5bYlS1NnD+Lv8mscBBnkN5
LraM59wj/nrlfS711/O87308cr2UypwceCTPP3deVEsbpnTe5I/IXO9ayT27
5vtbxrumHH0cBokntK43XCp5xsy991+6Yg48Wp6vpeM11accy/vIyxClkmdz
7T5OOyH308s2ST6TmHrLczgxxS3HkE297/tlyX5mHOJR7cKrnpfSMT5zDjym
3uU0Vlry37l+xo6xeBdXcbZc6dbbM1UXrB0zn/7lVJEDf153yIH/d2/2o5cP
VtZSTnuj52/Fhyfuz/S/E+uZ+70ffdOenCpLvnfwpW/aPK39xbQJv+hN22Tq
O0vj93ofc5ar3R8pGcu71XcPJW3xq2/jGPcUAK+9ryE+/8l/9K2zvrMUxyv9
eZ45eUZNfe83f+ZPT+aF0x884jheYZ9LfeVsY+/j8bWVfFX+bu73pU0y9e7k
oeR6/sD3/p7J7/y6whzw3BNHXEOcS22OR+LhLe3kJd/9shx9DFJHZTxOz7V5
k4vJvTd3W2p1SuKdvfe9lgNf8n2py1uOY+qglv15X2Ec8pJjy73k2iiVsWsw
8cC086bqtPc1vhthbptxjqXvlEn7YUnb4xnPS++6r6aWA29pI7+WWFrru9R/
+Be/o+k5/smR9ffFu7iSUv8v98Adt6fUPnp5/y7t6+VzLXNCt+hbn/288iAH
/m61Pu8WfZbaWm5pJ33oU5+7+Ls/PDG3tEccKTGs5Ntzfw/tmfz/yL61xLii
Vz8x35P2c6yJfVA2FRdaMrYi7eHWuQst+eUrbGOJewqAaMl/59kwty3XGqNM
G/IbfuxPzfru93/8t0zGt47IAVxhn6+cAx+kjZK2yss2TP43/522TdpSrd9V
mgO+ZF9jSbyW85oal5rrZ8k5H4unl8qR+/91K96l1FJy36Zua92eq+fAI8/S
1P+JT+Z78tzI7+T/589yzFuft73GIadOzbFdExPiXFIvtZbEA+c+k1tiFnOe
xa1qOeTWknaC81L/nivnwF8ei8xLyTYPbb38//R5Une2fvcXFdZsmXt9v4x3
zXnuQQ9ny5XusT21PFhK6oK592L+feucMjnw5yUH/qtq7Z6txpKlnTcWl8uz
vMdYyKl1JtbMBe9pTT8xx+mHK+sMpR7M2G7zRvpomQudsbytbdec+znzF1ry
y1fYxq25pwCuqyX/nTp9SaymtWQs5dJtr62HecT8jCvs8x1y4L18w8ha7TkO
Le2OtAFra9UPMVZtmOubGvPaOmc3kmucuyb2UfvdsqZs+jmJM4zF9JNPTf5h
amzQnGfMHXLgvawZh5zjnfqp9DzJfqd+2yKHyT5ac63phy89z/mNWuwi11Dv
/Uo+MvVKnt8v2xH5/6kDEh9pmZ+3xbbd6bzcIQfey9iYtbQLWj6b9n4p3pVY
fL4n8a6j95H7O1uudI/tSTtpakxQ2kGtfdL8uznv4tgjFnG288qDHPivqo37
3mPOyjDON8/anr9Xiw9cuZ84Z93FlNSxS2ObvFvLWvspOT/pB72OM+ZaT5u6
9NxL+7/0d6355Sts41bcUwDX1TKveGn+O1rK2v7Z1Lt+9n52XGGf8/tjJc/z
3sejtq1H58CXtmFyP6Rt1lryG3Pn/HMuabe2rNGUf5O2+eu1lIZ5v6W2b2Lj
yemUyhH7XMtJDNd1a/2a/U++tTafvPVZc5YceMYxHH1dLh2HnGtxzlrSqe/M
Wbye1lzr2nZSbZ5d7vmj1ndLjGZqDYsj7uOrnJdSXuXZcuBL54Dnc3PGu2Xc
hngXWzpbrnSv7cl4zJb1jBITSY7sdd2Y/077snQ/p51YyvHtkQc723nlQQ78
IX3A0v2X/u+V5wpMzYk9uu80FluYqpNaYx5j5cg1lu6k9V15c0uecbVxYXPy
y1fYxi24pwCuKXXx1DjmNfnvmIqxr32X7qD2DN57ns8V9rmUA0/pfTxq80iP
zoEvyR/lfpgz/v9l2fLdqGyvNYa2pGTcRe1e2Xtfp/r0qUOWPBum1uhtmVdX
27Y9c+BHxxaXjuFpHbv9uiQ/c3Quinlacq2tc1lrptanOXKOa8Yjne29OVc5
L3LgD0vmgGebl8a7zAlnK2fLle65PS3rGi0p6dcPc9rGihz485IDfxhbc+9O
12jp/ks54r2MgyXj96bajS3lqHhX6vjh3c49HPl+5pyH3jnm9OOHfSq1T+fE
Ua6wje4pAKLlXYFr898x9Ru94jzpe5ZyU3u8h+tq+1ybw9z7eJw1B740f7S2
DXPU2qv0kTlac95Z1FKG94WV7pW967DYcm231F21Yzg1t66WP9ri3WulbT06
brNkDE8tDtVSciyOzkfRLm24qdJrrfvami898rlrTK2Fu/d7c65yXkpzHrc4
XrV1Uo+sc5bEu3J+l+a/h3KW94hyL2fLle69PVPvBp9bUjcMazeUxpfv8fw7
23nlQQ78obb+7x3WPqmN4TtyzuqS8Xu1OjL1SWIVid/l39Vy/0fE+KbWr5tb
ztDfnbPuZK28nrtQKkvuxytso3sK4HklxzeVw0n922Ptnqn3MfZc+6i23uCe
bZgr7HOtjdj7eNRy4Ee2LZfkj3LvlEraMBnfMLRhajnEI8cEs15i33PWkS6V
12uJl+7LzGHce/9KJfG+HvdtbT3zlvl1pbJFrKFUjhzPUsrL1PpHpXE/KcMa
/vl86qf08UrthDO83452tdI7l1nK++VaOvo41OqclL2fy1c4L6WczhbjsvZc
n2iOsbbc0nhX6uw8N4Z4V9bkKMW78m+z9syR+879nC1XesT2pK7vsaZT+vsv
33tUqsP2aCue7bzycI8c+K9Z5X3f9uuL99vjHXzrvv8Mvvbvf36xnnjcg/tv
0xd9539RGL/3B6rnaqyfmLbih3/o/aOf+Vs//edG9/vRTtx3n/vnwP+rw6+t
yDNr6bjKnLtv+vRXvuc7S6V2fVx9G91TAM+nVKe+LJ/55U+9ra97/F5tLFP6
jj33rTYGrfSM2cIV9rnWRnz/x3/zbtdc2hJ7nZeXSu2RRwy8/LmxOeBpCz3e
9f3ef//Nn/nq0f3Ob/e6xzhGrt01414zfuX19V+6L1Mn77lvP/5L31Pc7lzT
vX4n+1UqU/2JUnnkwPsejz1/q9X4OOT6dVKqi0vP/PT9S+tejPVVOadaeayt
1u+36uPyjo8l1ersx9gO5+Wleg687/Eo/VbaWEddL3kOjZWl8a4PfeqPjn5m
7N2CKY+xEMfsO/dUz5U+z/Z84Hv/22q9OFVSR79uN5X2ZY+24tnOKw9y4L+m
uv7UY3zI8edprbSjSiX1zBHb1LOfWGq7DEptmKm4Wm93zYFHnjc5P63rUWb+
RPrqY/37PP9KZU1s9grb6J4CeB61ORZD6d1XquWDe+d1arnWPeP1V9jn2ufS
5ui5jaVneMpe56Rl/6dijaU54KX899Sxnvoc15BYeHLGLeujD3PASvdYKfe8
d4ygNI6393j9tP9LZSpmWCq9n2G1uEbu7SOuuZ7jkKdiMxkTNfZbcjPXURuX
37ttVMsx925bLFG7n/eej3SF81Jbn7z38Si1nY+c9zA2TmtqfMLSeFfpWE99
DuY4W6706O3JePHaeMyXJc+I9GlLeZEjxwwefRwZJwdeH1ed+dNHn6Me0lcq
lb3HV8ae/cTa7+2d/79zDvylbFfamtnf3F+5xlLX578TX5zqb5XGpTzWhnqe
bZzjWe8pgCtK/dsy1vmjn/2L3X+71u5NP7Lnb6UfWyp75iqusM+1z/WeM186
Hketf5U2xVi+cskc8JY8UGkNsMf61vvvP9vJvZO2fe7ztPUj//+xxvTnT66x
UHqPwt651lLZYj56aexA6o0lx6p336CWpz9qLvSe45BLv9f6WY5XG4/fO/5Y
G193llhnbbzSnuuzXOG8lNaySek9D6NUpx/VVhqbA562XG2/S/GulmdnaXzG
1LMQ5jhbrvQs25N7NzH3tNfT5sl2pT2Z/079OVUn19Z73mMturMcR97t2XPg
tfvibuv6lsoROfCxeU9T7ZDSujetfd2xeN/e+cpnyYGvVZqfdKbY5Nm28Vnv
KYCrSc5laj2StE23iuUnr14qvX+zNr9nzzVrr7DPieGVSs+1jiNtlbFyVBtm
LJ8z1T8pHefWcSNjv5n7znroDGrre+/5LodandJ7DE+U5t9M1Q+lz/V+30Rt
Db8jcsBLxiGXjldr/Km0HtlR8+CZZ885OKX1Urb4raVqa/Xs+Y65K5yX2jsu
e9d/pTj5UTngJXPAS8erdd2fNfU0tDhbrvRs27NUKdad0vsdY3c+jnfz7Dnw
Wh9qiz7lUWpxtb3fZ1Yavzc177bUTmxdwykxzrGyZ7s62zDMQejhqDW3t1aa
G3emdxOcaRuf+Z4CuJLkMmprLaZkLNGWccla3K33vPPae0P2nK93lX0uzYXq
3ScZmxOTckQbZmn+qBTXbI0Bl66Js+QEOF5tvvGefbDaGhFbrN9fWqN3apxr
aaxR73fH1sY0HTGGZckc8BgbCzcntzTWltg7rsMytWu493vFzjZmZExtfe89
37N2hfNSi+v2fB7UfmeLNaqmLJkDHqV4VWsOrHRN3HUuEvs7W670bNuzVKmO
3WvNs7scx7t59hx4bazfWdqEPdTGj+99Dy4Zv/f2Wi20P1r7uqX4wVFrpjEu
57MUA+49D+ou2+ieAji/xG+m3k+b+XJbv5+xFtdqeXbMcZb5R1fZ59L87J5z
bmrvRzpiDuHS/FFpPdDW3GQpv2keJYNSO3nvdwaUYvgpW8QrauuW1T5Xq/t6
zrkZW/sqpfd88xaJsSwZwxNjn5sz3mnseWF+4jXU7pXesYRaXnfJWJ4tcn+1
OmeLcT5XPy+lvkTP9kttvvme4xIGY/NPWtrvY2s3zlm3sPT8PeIYcE9ny5We
bXuWKo3n3OvdnXc5jnfz7Dnw0lycPfoP6RsN7zeI3KPD/N7eazPU2nN7rkW5
dPxejNVhc2IQpbUwxLrOpTbXYeu8wBW30T0FcH4t+e8t2n8lS9/3Olctxrf3
8/IK+1zqr/fsl9T6BHuP/106BzxK76Rp/e3S+OA9+0Wc2x5jUlrsnYsorWk+
NZ+7tgZGz+0sxW+OmAM9dqxatqM0LmtOnm3st72T6hpq90rvdV9K7YqU2ufS
n8/zMPmCtE+HZ/UW71GszQPfc7zkFc5LlJ5NPevA2riEvdeiHGu3tsa7xua8
zXnvjzkfbO1sudKzbc9SpTXP9urn3eU43s0tcuAf+TWLfOl3l+dGv20/LPze
VqX+ZcrX/ciXdP2tT/58pV35A5+/+b7W9jnb1vLZz/7T9479exsTbPztL/qO
8b7m2zpwp/2/oxzX6PV91fjvjbdxKfcUwLmlvVnqhw0l/aH3fezX77ZNpX5Z
4uc9t6MW49tzf6+yz9/8k+Nzm1NyHfXYvlKfoPdxWLotrX2wH/8n741rvs3/
zPj9sdLahuJ8PvjJP9Dtu0pt3JRv+omv3HW/PvA95bzM23GnnX8v86nHSksf
oTTWqNd9VYvfpP7c+3p7XZKXaamrP/T3xtehmHNtlZ41ex4Dliu9a/ntegYd
f6fU9pm6n8fiBMM13rutUIuL9mr73OW8RK0dt/X29T4OLcbeG9H6TBkbL/B2
HEfjb4/V8ylbPHt5TtVc6RNtT9q6vb4rOa5S6dlXOONxpO6Zc+DJM5fKHs+0
2ti63vdFqS+7RRu2pNRPbM1NjtUhc3OOY0W+rt2wVsHrtmSvY5hrsZQnaG3n
XmEbe3FPAZxbYndT7/9+O7dk5+1KO7dUMueh1++U5qocEUO7wj6//+/+5mL8
tVfebSyWmLLH+N+X0lYZnQPeGJvYqg0jNnF+yR8Oa6e9bJPneso91OM3avVF
r99oVcvHZyxIz99KP6dUWvIGpXXKU+/02L7Ug6Wyd65szTjkUnx2Tj1fiiXt
eQxYrnSvpPTMBZTiFslx1z5XWmsl5e365J22L3VOaezMnrHKq5yX2Dq/k2Ne
aovuHe8ai9nn2LU+h8f6YHNy4KVxV+Jd9HK2XOnW25Pnx9CGf1n394wNnGHO
2tnOKw/PnAOvzY3eY2xILQff896s/c6c5/9aY2NJ57Sh1sa60k4aK9ov7Up9
oV5xjVq8qfWevMI29uKeAjivxJBKYxCHsve8tUEp/5jSq29Wmjtx1HPiKvtc
mnvVI0dd2769r8XiGsKNnzcP/HnVcsI9cjO18a57jxUZlMauzBn72qI0Pzml
ZbxW7X1RPfpJpfmie6/FtXYcco8ceCmWdcT1yXy1PGavNlLtmT9VV+bvS6Vn
PViLVR5R3579vAy2nJNROyc9x4y2GHv2zZmvZh44Z3e2XOnW21N9r2iHcUa1
/v6efbyznVcenjkHXlsTcY9jXxtfl9JrjfJSLC2l95rrJWPtqLl99rE+79v3
kjV+vjSG76M/8xd3veeurNYnWDv2vle86Qrb2IN7CuDcanNJUvZeT/e12jtf
e+Qqau3PvefrXWmfa/Mc125jaf/TttlzrlUppjhn/0r3V+vnS/NdjeO7hlJ7
vMe86DONdx3U1o/rGYsvxUdSWmMTW/WVanmjvfMRa+aA1/ZlTh9qrA6c04/j
eKV1ghKP7DG2pfTMb3n3SW1dmp5jb0rje1KOaief+bwMSvM+epyb0jnpNaek
VWkO+Jz26to5Hz3GK0HN2XKlW29PaR5VSo84cml8YO8xo0cfR5Z55hx4qU23
Zy6rFh/N3KG18ajaewX3XIdyrB01d+3P0noWrceox3u3KL/nbW3sobbe1tx4
0xW2cS33FMB51ebPLKmvt1Cb55F5E2f97rNuV6/vrsWd1/RRavmjvec+r80f
RSnG0TrWwDi+axtbByBl7XrouS7OMt71pdr87NZ3UE+pxQ1yTFq/p9S/SFnT
XzrzGJ65sdXSWgZz2gZjY672ng/POrWxLWvH89Tm2uUebfmOUj2b0qM+rNU5
iefs/d6Jq5yXqD0T1rTpam3ZvWM8a+eAx9o5H6Xj0fN9ADy3s+VK99ie0jp5
a8fZZMxKqQ+9d+zlbOeVh2fNgZ9lfcbanNW190f2sTbPfK82TI/xe1FqI6+d
V3PUeP6rKo3byLW2dO2S3mtgXWEb13BPAZxXYtulsVgpe76HZkpt/s3ScWN5
FtW+96j136+0z7Uc0pJtTBy5FG/Ye1x8j/xRlMaZJC7c8vlSH6zXOlxsq9aH
XpqjyH08tm7qUI5u35ZywCnZ7jV54LT9a3GDOfVOLQaRemhJXqs2N3/vtRvG
rpElOaexsRZzYj9jc1WPHKfBfHnulcbcpCxds7E2lieltS6bilWuyQPmWd2r
znm28zKoPa+WrFme7Sv1X/YeazQWp1qyDaXxDK3PodKz56j1rLifs+VK99ie
Ldp0tXp77/rrjOeVh2fNgdfuub3WBx/U+rMpS2KFafPU2pQZN7zX/vUYvxel
cQutufyxvOhe697fSW1u25K1C/J9tWt1SbzpCtu4hnsK4LxK81NTErM+al7L
mKnxknPHTOf5WlsPfMlc69J83aHMjUNdYZ97xl+ntm/OvKMeeswBr10Xre2h
Ulx07xgJy5XWq02ZO9Y79XJtHfA1ucXa986JhU3VXalrloxnSS6qNEYmJf2O
ufdF7TmY+mjO99XGIe89hqfHu6gGY3Vh6zzutfUf51F7/0nK3Fhgro1a3Tj3
mV+bC55rf0muNZ+pjRVdkq+YOo53Oy9Rm9eV4zsnRpU6rPYc2LNuKb1/cMk2
lJ4fre3oset/zrooMOVsudI9tqf2zu78eet45kHmuZ2l/jrreeXhWXPgtfVt
9s5nTY27TklfsWX+avrvtT5nSq/32LToNV91MNYWalkvo9SO2nMswJ3UYjn5
u5Z7qOVaXROXvcI2LuGeAjivWp8uJfGvPIO2Nmeba+/5SEmcviXPnP5qbU7K
0rVYeufAr7DPURuvm5J9mHr257dr89N7vQe9Va854IOxdkhrbHLsuBy5Tj/z
1ca8pr+b/n5L+zhzHWu5iXzX0vs4euXAoxbDGLa1dW5mSz8nZcnaCPnu2jie
xCpbjulUXb332pY93kU1KK3H1ZKbKT0f5saNOYfaOLWUxBtanpPJLdfuu9Rz
c2MGU2sbpaQea9m+1AtTdVjaBEvqnN458LOfl0Ft3aAcy5ZcfY73Vtu3xFj9
tjTeVXq/UEvMKr83du2vXQ8fXjpbrnSv7am1P3O/t44zSpu39ozau/4663nl
4fo58L/zZj/+w9l++Bc/XrxH3v93/7NF37nGVJstJc/uT/7833j7bz/09/7I
v/vsF33Hb3/TV/riN+2fj1TbLimP8YC/f7f9Ks9XXfZ92f+xMrVPpX5ijtve
5/oOcs1NXWu5x3J8X56bfO5rf+CPvb1Wp8Z95PN338Yl3FMA51WqU/cuc7b5
fR/7ddU86VCSF/7wD/3xdz7wPb/7XZ9PvV9rVw/l0Zedf0zbcuDzvvPs+zyY
2sZ//q9/+Z2P/sxfeNczO/uWbc72TbVj8u/2vD/G4sm5Z5Z+X/Z9rEy1RfL3
Y+UbfuzLdz0erFcbg5KSvkDarGnbp40/fC596fSpp+6xHn3neg58fl9iag25
Yb+Tm81+v6wj89+pl3LfTfWTUtbUYS3xjeQSUg+l3ho+l/o25yz1W608chj7
XWtj9cYjL/PrFn1frsexOvqx5kD5c/m98hjm4+9J5nvMEa5f77lWUl+8vqcT
u8y9NpWvTclnl2xf7tGpkroydU6eo6/rzCFWOZVLT1n6HJ7Ogd/vvERLzCtj
jrItr7cv52Vq+x5jwH734u2bq1S/rWmflZ6ZU/tVamPuGU/n/sq50v1jzXtu
T+lef1nSrkk7NHXky7ZW/rulnZi/XxInuNJxZJ5nzYGXnvVpwxx2LgrP2F5l
7/x3efzesn5iZPvHSr63tG9p7431L1MfHn3/XVmeO1uVXs+FK2zjHO4pgPNK
XdwS39ujzN32xMKmcklryppn5hY58LPv88t9n+rfLy2PtaL3uz/G8kePOeC/
ffF3lnJIuQ9L+f38+dh9urY9xTG2vEd69Z1758Bbx/CsLR//h9+wet/zHVuU
x/vP971fe49DjtJYquQLx/597bm1d51OX1vWZT2u1ZYxLUdu4xY58Cucl8hz
aov+x2NN4j+yevvmGIt3rR3fU4oJ5ryW8uCldToe6wUdU0dwT2fLle65PemT
TY3XXlqOzH+f8bzy8Kw58FLfIWPkjjwfeeZvUQfsnf8ujenp0cZLn3Cs5LgN
492HufG1OTprxlvysEVco/cz4Qrb2MI9BXBuW467mluWbH+eMy3zVeaWtc+p
rXLgZ97n1/vfO/7aI7c111j+aM0c8EFtDHG+P/GVtGHyv7V1Gqxjc11bxP97
9p1758AjdVfLWhRLyq+un9vn/PTuiyVes/e6fb3ngA9SN5Wu3Vw3yeslR5M8
VG3O0+MdKMffi6yzxfM+11ev51vm4m4Vq1y7jVvlwK9wXmKL5+DeawWV4l09
jlPpvfY5ZmlHDvP4c42Xnq2P9weZA05fZ8uV7r09W+TBj85/n/G88vCsOfBS
G2bvNbXG5Lmavl2vkuf9mjkWS4yN38sx7zFeO9+xtg36eG/X8fffHfQat5Hv
SPvzWbexZR9eF/cUwHlsvZ7PnLJ2P3rE0XrF97bMgZ91n19LO75l/eOpknZM
z/x8q1L+qFf/ZO18/tKcS64j9UCvdR0yXqNnnHuLHPggueqeeY/EILaI8Sc/
1WM7c46PiGtuMQd8UHo3Q2vJcd071sN2Mr6j13t10r/vfT9nTEbPWGWve3rL
HPgVzstwbno8B1OnHPFumC3mgL88f2vjXUe0n7m/s+VKj9iejPPr9VxJTu8M
baKznVcenjUHXipnuR6Tk0qfds1zOnXI3mP3hm3favzeIO3kpWvAydX1lzb8
mnlUGaex9XuGrrCNJe4pgPPbas3XJWXtvqTvWJozMVWG99D26n/ukQM/2z6X
pF2/tG+QvvhR7Zgt80eR2GYtz1grZ+n70Ueuq5b3XI+V3FtbxLi3zIFHrv88
f9bkmLPvW6+lnfpx6dz1nNMzjUPu/e6EpetM19by5doSu1iaz8x1kVjiVusl
5NpveRdrraRd0DOWsXUO/ArnZbBmbNQR86ei9G6b3vGupdfsUc8f7u9sudKj
tmcYZ7S07kr+60xrep3tvPLwrDnw9BPHnHEt32Htvpb8VO777MeRfaEtx++9
lDpyzpyY1KXek7WtXHe5Vqf6BTkXeSbkWtm7jX2FbXzNPQVwfmlDltqXe+u1
T3n+pZ7Ps6G2nkryARlntsUzYcjvlPSOJZ5hn1uutcxdnsr1pa2TNs+R/YKt
1hB+Ld9XerfLWDlybR+2lWthuIen7pG0pxOP2nLceLalVH/1jNelLszcvdwH
LfNp0s85Iv6RPET6NlOxjZy7nMMj+xpbvovqtZy7OeM3zjLXiW0N98vUOK/c
87lf9p4Dk/szdWhLbjFtktQ5W7xjOrnpPdrFVzkvqbtSpySnPbUe4vAsOLI+
GZtjv0W8K+dtzryY1MlHzInneZTaiEflc4/enrRlM44n9+lUPnzo557xHQVH
H0fGPWsO/MoSx0pf9aWjt2mwx3zV19KerMUp0+7M3Jy93xv27HItvL5O40xj
1a+yje4pAM4i/cwzPi+feZ8TTz5r32DrOeBjxyIx31LcJHH65Ajljp7HWN85
eo/DOKNc52etG2rbePR7HAd7zAF/KX2r9LFKYxjSNzsin8a5vLxXzvQsy317
9tjKM56Xse2LLcYiLLHHHPDX8t21uR9pu2acpHgXHOtlH/xsdRfXc4cc+Oe9
2Q/O4Y+/aSN8zZs66bU9fjt90de/+yfftMOPPiawhnsKALiisXbE1/zb3OMe
v//6dxOHP/qYANfxlZ/8/YfVI/mdI/p/AHtKDvxM8a5sz9HHBID+5MABAAAA
AAAAuAs5cAAAAAAAAADuQg4cAAAAAAAAgLuQAwcAAAAAAADgLuTAAQAAAAAA
ALgLOXAAAAAAAAAA7uIeOfD/AAAAAAAAAADkwAEAAAAAAAC4DTlwAAAAAAAA
AO5CDhwAAAAAAACAu5ADBwAAAAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADu
Qg4cAAAAAAAAgLuQAwcAAAAAAADgLuTAAQAAAAAAALgLOXAAAAAAAAAA7kIO
HAAAAAAAAIC7kAMHAAAAAAAA4C7kwAEAAAAAAAC4CzlwAAAAAAAAAO5CDhwA
AAAAAACAu5ADBwAAAAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADuQg4cAAAA
AAAAgLuQAwcAAAAAAADgLuTAAQAAAAAAALiLO+TAP/fv/PsAAAAAAAAA8M5H
P/0NcuAAAAAAAAAA3IIcOAAAAAAAAAB3IQcOAAAAAAAAwF3IgQMAAAAAAABw
F3LgAAAAAAAAANyFHDgAAAAAAAAAdyEHDgAAAAAAAMBdyIEDAAAAAAAAcBdy
4AAAAAAAAADchRw4AAAAAAAAAHchBw4AAAAAAADAXciBAwAAAAAAAHAXcuAA
AAAAAAAA3IUcOAAAAAAAAAB3IQcOAAAAAAAAwF3IgQMAAAAAAABwF3LgAAAA
AAAAANyFHDgAAAAAAAAAdyEHDgAAAAAAAMBdyIEDAAAAAAAAcBdy4AAAAAAA
AADchRw4AAAAAAAAAHchBw4AAAAAAADAXciBAwAAAAAAAHAXcuAAAAAAAAAA
3IUcOAAAAAAAAAB3IQcOAAAAAAAAwF3IgQMAAAAAAABwF3LgAAAAAAAAANzF
HXLgf/Rv/3sAAAAAAAAA8M5H5MABAAAAAAAAuAk5cAAAAAAAAADuQg4cAAAA
AAAAgLuQAwcAAAAAAADgLuTAAQAAAAAAALgLOXAAAAAAAAAA7kIOHAAAAAAA
AIC7kAMHAAAAAAAA4C7kwAEAAAAAAAC4CzlwAAAAAAAAAO5CDhwAAAAAAACA
u5ADBwAAAAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADuQg4cAAAAAAAAgLuQ
AwcAAAAAAADgLuTAAQAAAAAAALgLOXAAAAAAAAAA7kIOHAAAAAAAAIC7kAMH
AAAAAAAA4C7kwAEAAAAAAAC4CzlwAAAAAAAAAO5CDhwAAAAAAACAu5ADBwAA
AAAAAOAu5MABAAAAAAAAuAs5cAAAAAAAAADuQg4cAACA/5+9e/Hdr0vru/53
aQ/URDSxmogaq8aqsVpbIRYMRME4DYIpUUiKjTQUK0TadDjN8AzMDIeBdphy
pjNFZ2iBMi2lQquMShEJpMlPPr/Jbu65n3Vd63TtdbrfK3mF4Xme7/e773vv
tfZa17UOAAAAAAAApyAHDgAAAAAAAAAAAAA4xRE58Pf/IQAAAAAAAAAAAAAA
yIEDAAAAAAAAAAAAAI5BDhwAAAAAAAAAAAAAcApy4AAAAAAAAAAAAACAU5AD
BwAAAAAAAAAAAACcghw4AAAAAAAAAAAAAOAU5MABAAAAAAAAAAAAAKcgBw4A
AAAAAAAAAAAAOAU5cAAAAAAAAAAAAADAKciBAwAAAAAAAAAAAABOQQ4cAAAA
AAAAAAAAAHAKcuAAAAAAAAAAAAAAgFOQAwcAAAAAAAAAAAAAnIIcOAAAAAAA
AAAAAADgFOTAAQAAAAAAAAAAAACnOCEH/kXv/zwAAAAAAAAAAAAAAMiBAwAA
AAAAAAAAAACOQQ4cAAAAAAAAAAAAAHAKcuAAAAAAAAAAAAAAgFOQAwcAAAAA
AAAAAAAAnIIcOAAAAAAAAAAAAADgFOTAAQAAAAAAAAAAAACnIAcOAAAAAAAA
AAAAADgFOXAAAAAAAAAAAAAAwCnIgQMAAAAAAAAAAAAATkEOHFG+9qN/8s3X
f+xPvf2/M/7uoy/73j88/fsAelGnAADAjh77ErP+7uUrPvwF078PAK9N7dCM
Nunx716+5of/2PTvAwCuNml0vOu5TSTeBQDnIwf+ud7z/X/k7fvvm3/6K998
6G998+f41r/xZ97++9n3bJVr/KqP/NE3P/x3vuPNZ37r196kyq/8P7/49pru
HONp/PZcfuO3P/PmSz7w+dPvE86g5/e5nskdfWTqFAC8FrXnqf6c/tlqceor
jv4XfuK/etf1vvdvft3bd9jsa3w16vOr7/98P2bE83Qt+tv/8B//crIPo38+
ow/zu//kd8iBH0TP9eOz/l3/65+bch1Xe6i277n+6ZpOnHuhHMU7n/rGz/ms
+v+v9maFsYKu4fkZeXynjnxP6VrUPv/sr34s2Sb+f7/7m29+5ld+6O079c7r
SP39WfUGZ9M7+LlNvNrD0fPhRlAfS5/rsR92tYkr9YlXui+6lo99+p238SUr
3qVru7P/qjaXeBdwv6tPluqXqa0cPfcFIAf+2ZiN3rN635YU5af03h6ZD1/p
GtWO/cDP/+Wi61DR+E5t3B3fC2O6cb7hx77szS/8n5+YTtcx8nNbcYvIukWd
AoDXcc2tsnKFz0V9Ov33M+ZhXv3Pv/uZTxVdq2JIP/HLH14q9ier9GEUJ+39
LPpuvfjhY1H+d0SORXEM/a2Sov9Oz/MdscZUH0ZzC2c/f4ihtvP5uVf7OOrv
K4an+mTNVU0Vjd31DK7WJpZS26F6VVK/9d+o/R89VrtyzaVxEr179V67c46C
4rql73gVvR/umPPG3Oa9qK0Y0ReJfNb0rKveKz6RK/pv1H/ZOe9x9eFL+8Vq
B9Q+ja5zq90X5bT1fJcWXdNdMajUu4J4F2ZRmzJ7fCpR4yXV9Wv+X2nfUf/t
XWNVtWsjvj+NhWc/S8h75Ry42hr1C3qK6uqd46fVrlF9t0/9w59sug7FDCL7
fozpxtJ7bIUSET+O+MxRuQjqFAC8Bo0JFWMqzRWmisZYI3Ip17X2lLv7yDVW
6cP0zF/TPdF7v7XofX5Hbqp1nKK+T+Q6H9aAny/1/I/IgWsNcU0+03vmd1kL
qVhkTa7/uai9GTFm098oyfFYRe1X9DhH7WzLe16fI/r5YG7zXkrmtkWUiOfs
ytu0FrWpO+XC1V/RmoXWPrzu7d174ax6X9TGls5Rei5qoyOvhTXgWI3iyisU
tRu9n0X9i54+mfqd0WNV5aZHlOi2Cvc4Igf+vs+r9s4nv7Grbj6WtzGlH/2y
puvY7RqtNbGlRT8f9f2Y8/eC7wM+61t/Zo34sa5jxOd9z/f9EXeMo38f8Xeo
UwBwvq/9a3VrwryivuGd78Le8evztX7zT33l9O9/lT7M2xx4w/V/zQ/9sbDY
+NuczzufH/K9/vAvlq/pSRWto4q6llR/qvX7xnrUjqTK2xz4TX/zy77nD3f3
01NFeZTZ36f3mXvn3z+Wt3Ndfu93Rl+n2o2oe/M25/N77+iI69Lv6Znnpp+N
upa/8ONGrieozUWsr/jQF/Q8xlXl63/kT3Vdq+KKEf1EPe+Kec7+7nNUJ6P6
xfrMqpt3XOeq96V1vcdVNCc34jrU9qX60iuMU/C6FFdeobzNgTd+hsg4h4r6
yVF9lZ754zXlbQ58gecJvlfMgUeO6x5L5LtzxWtU/M0qul7FF9Wf1t/wYmIR
OTXGdOOtEj8elQPP7W8VkQOnTgHA+RST6omJWyVyDtTlrv7nqHe3ZZU+TEtO
Vv2NqNjrVTTnrTcvpXi99Vzr2bz6MOpfqA9j/bcReepUf4o+zDl0f606cFcO
XPWuZx10rmiccUduuFfP+kGrqC7qHkZeZ/S7Su3TnesFrjNN1CaK8kvWukj9
txHPBnOb96Lnb1TpyYHrZ6P7tHf0Z6MoDnNHHz66X7zqfUnFmK6ivqG+3yve
5e0/FTFvQO3fc1E7OfsZw2vbPQd+V5xDc2civt/I3LxXyIHv4dVy4DXjpWtf
/9K4U9TYadVrtMZ07/3E1yX/e2se4tt9CT/0BV3fEWO68VaJH4+IoytGkSsR
OXDqFACcrWZcqPb96teVlqi1EVLT/1T+pqb/qTJzncUqfZjafK/yIKV5uOue
lK4X741tWnPzrDWuinFaz0tvn8rc73eBNgB9vPy3yh05cPWpa/Pfqn+1cTbF
91aap1Gzr4PGDTXtjf673rHKRW1M6d/UNZbuwavnrKctsuY26++nPru3ll33
ouc7Ym7zfjQvYlRpzYHn2uPHcvVnS/vAK+6PYe0/kir6nNdnLn0XRK21Xvm+
pNpf/W0rpqd/nrq23vbLWgN+15p8oNTOOfCaOIfaxZr2UaU3r6x6P6qQA9/D
K+XAc+Ml1V2NN1JjFLVLej/m6mvvu3nVa7TGdLl+mzXvr6e/l/qdilMwprvX
KvHjqP3hLPr9JaU3XkudAoCzqa+Wi0mpz6Y22OrXaU5U7ndE5PpG9D/1OaJy
ILVW6cPUxNr0Ds7lbjQHItUvUu5cz0Uuj9ca27TWgOfmZFjr3HryPYrlPxdy
PWcoietH58D13OT2glJRrEvP81f94B9NXrf+XcnviZzH1COX61F91xyeVHuj
76zk80acfZBax/dY1GaqvU+to9Y15vbk1XusdQ12Kp+ttij3+1LtvJ77nu8q
9TutOdZYwx3nLlilJQee2xtDz6z6FKk2UT+rf5drz1fak7rkXIOrb5za50L1
V58n1y725sFXvi9W3Cr3+6x2vme8wxpwrGqVHHhtf7Qk/62cd+p9o/ZR/7xk
/n3PPJXS2H5EIQe+h1fJgXt7DqtoPFQSl1NdzdXT1jjOytdojelKxmapPpl+
tvWZTY3pmL93Pz2fin3cKReDv3vsrue5dN3HHWuWqFMAcA7v/KnrrL2SNl99
v1zcvmefWcXFvDGs4nel/c/ce3zWfpcj+jDifY+1cU5vTab6ASVzAkvO9m15
dlLXVronTXS+h31szuTtG/BcFyL/bi7HWnt2tPKxuc8RsY9cD7UBXtulGGYq
f5Kids77XT3zXXKxktI2NndPWq7RuraStsiao9U67k3lncj1rM+aR6h+U3Rf
pSWO4c3JUz+x5Heqj+DlhCP2totQsgeP+uWl36O1tvn6zD19+JXvS+ra9Jzn
fk79wdT31dqOsQYcK1N7M2KM6s1VVz+vZhym/9b7fepjlfaVc32ynnnNVp9e
vzP6+6U92cOr5MC9vkHLPmTeXOnIPsIq15gqpfOErHanpe/NmO5sXpx2xP5Y
NfvA9ubAqVMAcK7U2tTH0rIGx8up96wl9PLrLedGe2f/qUSfC7sK7xyV2vvj
nbWtuGzt+967tpZ5CanYcOm5bcrrRD0X7Pd7ppo9gSNz4Kp33t7eqsctz5ba
UC9WOLvf7cUgWtoH71zjnvku3jrZ2rOyvD0G1PZGtbGl88dSz13rmiLmNu9H
bYRV7t4Dr4TXp9XzVlunvbrcew5AhNy5EC1102tzWs/hXfm+WM906ZlA1j1o
2aeDNeB4dV5b0bL/jddPVztXO6ZTn8vrf7fObVa/PVUUU5l9TzDHK+TArViL
Ss85XF4ssnatx8rXaO3NUbonjrX/RO1Y1Vqjy5juDN4+pSPWjeVi9s+lJwdO
nQKAs1ljLpXW+J6Xn2mdf+nNl2zJf1+89eCr7P0byYsttMQ2vfhrazzcm+dX
G6tIldL4hNUHaolvsAb8LGpvavcDjsyBezE9xQh75lbk1lrPWgvu5at7zvD2
3oEtddRbA976TvH28awde6ba15L1jpfUXLSWZzsVUyLXsz5vv9YV5nRZ7XLJ
Xv8p3pkTs9eCe3MQVXpyJ959btlvfOX7YrXZpe86KzZXG6fS98AacLwyL36g
fHVtXFv/vdVGtuS/L15/tKY/9cia48lY8XWdngPXe9yab9e7TsDrH9XU0dWv
0WqLSmNwVqyrNgbM/L1zefuw9sRfSuXWfaRKTw6cOgUAZ7PeKb15FG++WMu+
qdE59Yu1rk1Ffd7Z9ydSLrZQ+z16ffeeOYHePan5veqzpUppPFHXkSq166pY
A34W9YFLzyN6LJE5cG+tdsRaTC/HPuscQW/OQU9e3mtvlGOJus7ed5U336h0
/3dJ5Y1K98YQa45STR6L/X73Ze3xtsK43Jt/0pNH8H7vzLXguXNoevsY1p4R
tf2X1e+LNce2tF215guUriP37mfruntgR3rerdLSP/DWWfb2N7w+aUtu3RpP
t+zHhzOcngP31rdEzP3w6n/pmGX1a7TWqJfmACNiXYzpzpU7S2TE+8nqF3hr
pnpy4NQpADiXtya4dr+OZ95+mbU5FG++de1+RineWvCT9kOPji145xH3fm/e
7y7NI1nPTU2+KDX3tza/n5rb37KOCnPpuas5i+i5ROXArbkdKpF7V1h5Yf3z
0d+9deaqSkue+pkXg6jJ9XjzgnpzZd7vrsm19O5lbr0va8abzG3el7Vvwqy5
MY+8tca9+WDvd8/6vN5crIg4iTc/qGYu6+r3xZrzVXptEWs+rPb9pDEI4PHO
wmrpPykOYfWZaub9WbzYRG1uzJvP07rPHfZ3eg7cen/3rsO5ePnr0j7S6tdo
jclq2o3eWBdjunN5c71q53m2sOLBitt4eYyeHDh1CgDO5e0BG7GviRU7q13X
YOWdotbS3jkXYBXeeqHW3Ix1fyNiC17OqzT22juPT1JzH2ue39QacPowe1Gf
V/1hb8/Zx2fDGi9E5cC9+SGR+5R7456esUULr42OGIN5695r5sx4MdyId6r1
zi7dM8+am1zzDrCev9JcDXOb97bqfq3evMuINsLbG3zGOj0r76oS2cew+o6l
c492uC9Wu1pzHalSMy8k9T2POGMRWIF31qfas5axvrcfXcTcEm+cWjsnzMqD
te6rjjOcnAP35qhEjQeufcw1Nr9oPK++R8meaTtcoxUjrbmG1HzK0lgXY7pz
WXFUldb3cg1rD/brDKW7cuDUKQA4l5XDjIqfReSCvHN4WvZUt1j9zxP2IMud
W9bSh7lrb8tH1rr10j6ElY+q6RelroE+zOvQ+NNqf57LtQbb6jtH5cDvnrt0
8fK5o9emedcSsfe7F3+tqa/W+bRR71TvOkty9VberCYXZcWVS9+VzG3emxUP
jKiHPbx8R1Q/znoXRO6/EfF5I+cjeP3Hkr7UDvclIt6VKqV5MNaA45Xp+bfq
sOpFaz3QfOxU0fqxqGtXnEP9lyt2oDZH/ana+fPWXKPIa8V+Ts6BW32DmXvr
7HiN1prVmt/Rs2Y1NaZj/t7+vL3n9M9r1ge0UAzVmnN9jR1GrwOv+R3UKQBY
l94fams1brvyfVHnG0bkwK250Xr/cp5ynreXpUpr3NrLSUX1i3rXVEasA0/1
v0pz4OR69ufF76+ifu5jvOvuHLiVZ9V1RH52L986Y26Q2hVdk9oFxTbVrkV9
5ogcuLfeUeOpiOvsXVNprQOvyYH3rAO33kfkevbgzX2b3R+z2t3IvuJK+6F7
c6Ei65N39kbJPNQd7svsHDhrwPHK7thrVWNEq6w4t93K18/eXwVznZwDt575
qPFShB2uMWK9R6qU9F/UzjKmO5N3RlzEOaQ5Vh76cW7rXTlw6hQAoJW1jrdm
r2wrNsXc6DLeWec9fXhrXBCV5xOvb1OSl7LylzV9mNReNiXPL2vAz5DLgetZ
eJ6PcXcOXDExxQzVvj7u1R89v8LbA2vFGOJd97l03OGtl4z8vqx50aU5k1Sp
2bezZ2yY+llyPfuw5iSuMLcrdW5J9PPlnUNx95qIZ1Z8KnoulFilZJ31DvfF
WoNZ+vetuUUl3w9rwPHKvH5Tz16rO6zffGStgz+tr406J+fArfUZKz3zO1yj
1f8p7ZNac6tL+i/M3zuTF38dMd6z/v7z3qV35cCpUwCAFt45WTX7Rlrx/lPO
6b6TYmjWPWjdA/1ijQsi5yZYcUWVkvy9tbazZu176vsryRexBvwMXhxN+aDU
z9ydA7dE52C8dYaj8z13s+6ZSmk76eVhItfIWvma0thuKtZa025bfz+3Nwe5
nv1Z97727NNoXl8hcr2Ctw7eeh/cxZpjekc/w8pj5/7WLvdF15IqpWeL9Jwx
kXr3EO/CK1D7kJpnfJWevsGq76oUb826Yumzrw/znJoD9/a0WuWZ3+EaRTGt
VNH8opKft/pPuTgrY7pzWbF3lbvPvVLdSsWY9aw9/+27cuDUKQBAC2u9kErN
Od5WDpf3QZ4VI1XpWY88Ys/fixUfKVmLbcUlS58/6+dze9OxBvwczzlw5Q8V
L/dymrNy4NG8MdBK4/9eupfWGpyafJI1ZyB63ZGXay/J2aT28ND++qV/P7Vv
acmzzdzm/a26X+uo3PTIvk+OlZcuPaulhtWXVP/8hPvSO1/SisPl+nyp72fE
OYvACrzzrmrmyqes+q5KsdoftfGzrw1znZoDt3JMKz3zO1yjWGuOSs+1tPZ8
y/VDGNOdyYsxjNiD1drjKjWn9K4cOHUKAFDLmsOlon9euibOOocwF3eDPweh
931qjQtUauY3lLBir6VjkFRuq/TzW2uAc/MvUv3HmhwT1nE9A2q31P8uyf2e
kAO35qLW1L1deOvda+atWOe0R9d97+zykpxNKu6se1265jH1bs+Ni5nbfAZr
rkjqudM/03whjen1HhflJfT8SeRaAq+/E71mwfoORp/PY80PvCMHbrVtKt47
cZf7YuXQS/NlVi4v119IzScqjbEBO1N82upjqo9R2h+xWDGIu9ewtbD2oUi1
Xfpe1K6qzbnORBK1G/pnGrP0fndYx6k5cCvPlovPKOeleW165h/7JfrfVz2I
2qd8h2u8pPpoal9L4q2p+UK5uduM6c6k+2r1pWviBK2suKsVR7krBy7UKQBA
KcV8vPXHNXOwrVh/bm2exrgaC15jw8ef0/+vnEfpfiY7stYhX+/v3jUmXg4m
+nu18oml8yBSMcbSflzqZ3NzOKz5H/Rh9qT+tfrkNXtZn5ADt/aRVBm93vFO
3pnnteu3rZxUdG6sd22ldf5myb691vyn3Nwn5jbvz9uv9WofFXPQvbZiKM9F
/53qR+/7sXdvhBrW/hij57lZ/ew7zrv17qfXn9zpvqTW1ZfO2U397dw4xVoD
Tv4KryA1vrpK71zq1j2M9f5Sm3Xllq92T307/f96V6mPFb0PkvVdXPEStUEa
h3hzkZ6L/tvoOekY79QcuDX3ODUHTO9EjTu9cxOei97duT3bcna4xouVO8zF
XK0xXe6sGsZ0Z/LOhbs79qP3b2qs4cWt78yBU6cAACWUG7X2Z1RRTKimr2fN
jU69EzQmVQy/pv+pd63e6Sft6yte/ipijYmXN4rew9HbK68kVmjl63N9OSvP
lPv+6MNg9xy46rC1Pkclev76DBobeeu/VWrn81gletzo5SJLz9hNvSdL8j2p
uc16j3o/x9zmM3hzEnWPvdhJSVF+oTVmoTqWKnfsGWTtsTu6fbeuQyWyT+vl
k1S898FO98Uab+T2ArHqRS7/xBpwvCpvHnXN+TMWKwatvkrqv1es25u7nyo9
76tnVtzkmoNrzWkvKWr/OIdrX6fmwK369jyG0TisdE5lqqjutD7/O1zjxTrT
S30t6wxitZPWz3jxtdQeHszf2583v37E/bXqm9eXvjMHTp0CAHj0LvBy3yoa
h9XG5ayY6vM5YXoH9owR9b46Zb60lx+Jep96eemI+ayPvHx7af/Gejase65+
YOpnct8fuR7I7jlwb31ORHxyJuX3S3J11vjG4rW7d7xbrFKab7fyPVo7lHpP
q123vrdc3iY114Bcz36sZ0btWk/877Ho97TEAke2uV77MfJ+eNcRud+vd/aN
irf3xE73xWrD9Uxa86Gs2HduPhFrwPHKvHhBRL7WWr/1fI6P6ltt7vu5qC/T
M+715hjl4io1RTn76PE57ndqDtzat+Uae6le9M6rfCwtc5F3uMZHVrunoutU
26o2T/0W/S1rrntu/Mv8vTNZ53CPuL9WXFlzW72fuzMHLtQpAIDiNtdZjnov
aezorRe8isZxLe8iKxdz7dmq8Zy1zqSl6H22+xjx7jXgMjIG7PU/SuO83pqD
qw+j5/M6w8l6ptnHBiV2zoF74wmVndaAX+8q5WD1rirdI6R0LfUj5datUptP
L2EVPXslP6/3nBVf1fekvb70vtfnUg7fihPrd5DreQ3e3JjoUnNmjljP5+hc
68g9hbx9xiPn3Xh9MBWvfdvtvnjzO9W/U5xLfUX9X6+vnXtPEu/Cq7p7DbhY
baPao+u/UbsVNXfr2gul5Vpzc4wiS891Yo5Tc+DWeOzqT3j73LSW0vHRTtf4
zMtjlpRczIox3ZmsNTwj7q/egam/rbmkub97dw5cqFMA8Nq8mFuqqA1XTKk1
r2zFz64ceG4v25aiPu2uefBRfZhVcuA1+TgvXln6XLR896wBfz275sCts5iu
stN8jtz+vamiNdCt9dUbh92RA7f2tqi5R/qsJXPYrKKfzc1DItdzjppzZiJK
zVwUq694xxnd3rzLqJhLCW/eTW5uSin9Dmst1FVacuAr35eaM3dTJde+pXKA
xLvwKrz2JGrPbmsuy5UD194V0UXvx5b2vzau0lv0bjjt/LeTvVoOXGOpXLxG
z7Dq8qPScsUPS+xwjc/UZ2vN2ZXsFcGY7kwj1k+lePPxvT2mLiNy4NQpAHht
NTlnxXR61wxafUbF3HLjRvVdn/ufpfH+3nmYs1h7lapE5q92zIHnrtsrJfMi
WAOOy445cMXEvH0XlRsfmd/p5Z1rlSq9dXV0DtyKzTyucyq97pa1UPqZXPvL
3OZz1MwpUQ5Rz3xqPonytuq75fKqVynNiVh9xdr6UMJbKzy6jfTmJfTEUS8l
+ZmWHPjK90XPeuv+yCVjh9SzH3GvgNV5a55z5wfUsNoC1U9rzdlV1Ld5jh2U
nrXWMveodFyq61IMRv2u5xy2/n/lC/S7SuIcuTndWMepOXCrWLkmPdeKs6gP
mfp9qgPqi5TM1SztV+5wjRZvT8PUdZfsw86Y7kx6LmetAbfyCqVx+BE58At1
CgBeU8u+P/qZkrlcKVY/0et/6n1qreXT2FTXUhJ/rd2LczZ9Nm+cHrke2YoP
6u9Hfy7tOWmVljkWio3UrH1UHyYX02ANOB7tlgPX+CfXJkatzxnF22/TKro/
mkfUMvbwxmHWWbI9onLgonaqNCepov+2pG1jbvM5cmckqNTuo6A6mosFlsYC
IutDzko5cG/thr47KxZbwttX6LF4OfBd74v6fLVzfkv2LUi9lyJzf8DKvPM0
IsfcVh/cy2fr2rx+rt6BJeeB1M6nzPW91LbouyltI9Rul6xZ6z17GGO8Wg7c
qlM14zJvPYhK6Tt3h2v0qP+nttBq8/TP9e9L+4mM6c7kzXW98/5acRqNG0r3
KhmZAxfqFAC8Hm+dYK7ovVB6fvOlZu9NxV9r3nd653vxvd3mYXl9mOj1yCPP
ePT6N637DOg5UXwzqg+Tirfo989+JjDHTjnwkvz3jrGy3v0la8cgd7RTnjty
SzpD2NsHWP+u9Jxh5jafJVefWtuIkjW3JXVx11xrr1yeWnW2Zd9bxV5L57ye
mAO/aMyifJK1V4Y+n/p6pe1a6l2723xboIW3N0/0PJCaPb/0t2v6aPpvc+vC
S+eM6jN77bfai9Z5TOqrnRTjeFUn5sD13JWW1n0ZvT0EVXLv3R2usYb6Mmq7
LrVrNHrHdGrHlPdXPPJxjw3123abY38Sb/3Une8I/V7r79a+j61y93iMOgUA
r0Fts2JqivmojRX979J9xvXf1KyJK12vW3LeRoquxfsbO83F8uYnRK9H3j0H
/kjfzcw+jPpoGufoGU71YVgftJ9dcuAl+e9d90xU263xla7/eleJ6lbp3CqN
K0rrX/R+FTl35pbUdj22iam9N3N65jZf+7Xov39sE1Wv1FbutCf/KbycQs25
3db99vLgJe9Tqz7c0X6tlAOXknMpa/Ioqus1ez615MB3vC/PbWJtbqp3Dbj6
mvqMj/Gu6/12x14jQCRvX4XoeSCl7Zf6vy1tg37G60fq95b8Hm9eQMS53cqD
e2WnGMerOjEHrvpTWj97YiBevzX37t3hGkdKxQpK+v7KE5bsM6Z5hvp9q3ze
V+G9I+58P1jv6Nr51DNz4L2oUwBwBsWEvHVkVyk9H7WkaBza077rfWuVXeZJ
e/v+3nEmtbUf3I458Du+i5J+o+pKyZmTegYV46QPs48dcuBq10ry36c+d/pc
Ghvk5lmpjpbEIU9YBx7FyvXkvkfdk9LztvQ5OWtiHH3Xuq96F11zE9R+RO13
4q0JUMm9U622bJf1xj1Ur0rm9eT2ttE90GdLrXn25lh6/flXvi8l30VJ7k/5
7ZI9uHTfWFOOFXn7VdyR5ykdW/X0IXLng5Ssw1Lbrd+jvqjaL/W5r/3ao9os
r5+v76A3z457nZgDL11jXbt3ZOrveOMJr++ywzWO0jp/z+uTWUV9nRX6a6/C
ez/cdR+svHvLfJJdc+DUKQA4T0luoWTsWRIL713/kDtHW++b2d9njjfevyP/
4s1bjf5b3l5Rs3PgrWvAc+dApYpi3OR89rB6Djy3hkXl5Pz3o5J5WyXziLxx
2B0xDOv+aT+J2d9pS66n5JlMld41yFiHt996ru20+kCvkmtVHLZ03yTFQ9Sm
XXtj6H3ltYHKrXprorz27dXvy0X7WjyXknhXzZnkV1H7u8PcXbwOr27eMcYu
WQceccaPdz74CvMRxVtrrsKeqWs7MQcuuRI1v9LrV+b2MN/hGkdoGdO15Oqu
oj7nrHiX+orPe/70WDmOoviHVTQmuOtvpsYqrXPSds2Bv1KdAoBXovecdYae
SkleIRcTj4r3e3nWVcaxFm+u6l05N3Lgn9WyBjy3N51XVJ/Y83J9K+fA1QfO
nWX4KvnvR3qXeCU3dmjNEbWy3o2z4yUtc5tb89+rfGbEyM1H9OIZ5Fo/m2ct
zYOXFv2+q59lFS+Hwn2xn+tcvMvboypX1J6uHP/Da/H2MbjjOc2dB967f9zF
W8Opf75KP9o7L4P90Nf2ijnwyP0JVAetWGRuTL7DNd6tZUyXm3ej/F/uXDL9
uxl7VPTkGVNl5X6Y91kVq4z+e3pmrPm2rfPZd8yBv1qdAoBX4+UvVXJ5hVxc
PPL9Zo3RVxrHpng51Yh57ilebG7kMzRzTlvLGvBcH0bPYK4Po34Sa3zWtmoO
vCRH8or5b9G4wMu/5eZsjc6BW2V2PrhlbrO3lkpxoevsW6+wB/AZvNyFV4+s
OSx3tLneNc6OL2iOnDf3tKaoPbzy3/pcVvH2AuW+pNd45XJw3vlGKoojXnsm
W0X9yVd8l2MtM9aa5XLgkX0yb6+G2fO0L97Ys/Tscsxxag7ce3dFz5Hz9oXw
4ik7XOPdIsd0qfiC3g9W/HXGvmavlAP35qbd8cxZseOeurRjDvzV6hQAvCKv
X5fLK+T2Z4y8Tm8dYO95P3fycgN35Yi9PmL03/Jy4DP7Ny1rwK0+TOrMYX02
65yeO854R5wVc+Al++/Pzp/OpvyRV7z21NuPY2QO/K55TyUi5zZrrkZqzwvr
3dN7tifW4L3vvT1zR7a5I/fBaaF64J3xV1LUJ3mMgXlzfLx+2KvfF2sNeG7/
Yev+pd7Rut/WvEnWeGI2b7x419y13B4KkX2F1DkHV1nprBZrbpT6TrOvDbbd
c+A/9HPvvPnC7/qD7/Lrzlz/7/zZP5f8mVY//Ivfbv6tr/2rf8L8uR2u8U7f
aIzpvvi7/3nzZ/7MR/7D5Gf48b/3IfNnvvQD/9KbX/g/0rHM93z43xz6mT/4
c99s3oeWMvr6S/03P/DvmtesexH99/7sj/xnyb/19qylju/I+r2rfvevWKcA
4BV9+Qf/VfP9pLGX97NW+63y6c98KvQ6vX7P//yTXzn9e6z9bjUH7K6/631X
0e9W72/N+t5TfRg9y7oftffqZ37lI2bfR//cqgPqE81+/pCmfmmqaDw9+lr0
DOkZy5Xv/9t/afr3tgLvu/orH/8692etojYs8ho1trGKYq6zvrtU3iYXJ/rZ
//1H3vUzGhN77Vuq/VXxxoPYgxfP8O6v1ebqWYq+xtQzqzKjffeovcqde/Fc
1K/WPITn32XFYFS82M2r3xe1f89F7aT3M4p3p4pi5NbP6J2QWveR65cCd/PW
mt31bObyGF6bVcuqryof+/R3T//+L5921hREfh+I9YFPnJkD99qFVB+kh/pC
VlGf0/q5Ha7xLmoTUnMAWsZ0uRyfWH1/r99zh1fJgXufM/rZFms+id5LupZW
1hhDRc+O9XMz7sur1ikAeFWtY2BvDXn02FJ5bqvc0R+I4PWZ78yFeN9VdF/d
6t/k5k/cqSXXk5rjqz6MYpfez1mx55ViK/hcq+TAvXmgjyWX230lXpuamydg
5Zuic7NePmrWuyr1vbXObS5ZX5F6rsn37E9xCasoDmD9nLfPRe4dW8tao3vn
vMMemjOi/kKqfVKdUV1SG+XNO7H6fLl+2CvfF7V9qe9c98P7uVS8S58tF++y
5gbNnBeF1+atNdP4/q6/67U70e2BNydxpXl53lhg1TwNzs2BW3PWVP7Hv/6l
od+hN7fSGzPtcI13sebvef0Qa61H6TzwVB9udNzkVXLg3vmf0X1zWa3MmFfy
qnUKAF6V14/09vjx9gaK3ofIyytEr+OLMmtM631X0WvmrXkQs+KaLfvYqD+Z
Ooe5NI+dmr9/xzoqxFghB6767809UtEzGT2O3523psfLwYnVVkXvK6Z7ZpVc
fuUOVq4n9y5Q+5d6JkvWJFn5nlXnq6GMlwP36pH1PKgoDxN5jdZclztzOpFU
v2rjP5r/kyq5/Zhe+b60rAG3coaleezUd5D7m8BdRq81u3jtTq4f18LaZ/yO
PWVbeevlVs3T4NwcuDdPJXoc483F8f7WDtd4h9b5e9bYtHQvd+v7viMna3mF
HPiMuWmrldE58FeuUwDwqrx+pDcO9tYbR+fAvdhr9N+K4O2DHr1P/DO9y60S
vebEyuPdEcco0bIG3JozUDqusdamrti3xvwcuJ43KyZ3FfXF2U//3bw1Pblc
gjVnS9915DV6a9VnrINuyfVIam5P6fhb76DUM84eX3vz+mHemjovphM5z8fr
+5z87Fnze3Lz+F71vqgdbol3Wbm70nd1aq5C6bwiINrotWYXb3x8x9jR2ud1
1jg1xTvnh7Hkuk7NgXvzVKJjbt7f8nJJO1zjHVrHdNbYtHRcasV8R84BUFuo
/GiUFfteM87+XK2MzoG/cp0CgFelPLdVvDXWI9dme+v/VnxXeHmQEXsbW7GN
6D26U+un77j/JVrWgIvVByldB2XtkcWaxzXNzIErr2DVmauo382e0TZrPWHu
/nltcuQ42FqTOWNviNa5zdb3XPP+SL2DWPO4N6/Pl3s2rBLZH/Jyuie/j602
sSQO/Ir3JTUfqqRtSs0Xrjn3x3oHzdj3Ea/Nq5PKx97990euzbb63CudWeXt
Gzf72mA7NQfutQ+5c6dqpfJPV/Hmf+xwjdF6xnTWHLzSv02sawzr3KA750uu
Vkb2ialTALAWzcNW+6h2WDlFxW3uOL/Ky4F77bC3tiP6Or38xYrrJb395Ufk
t6w55ZE5CC8ePmNeQssacLH2QSjta1rjsFX36H91s3LgJflv1dsV5yWXUHug
95Xqk559rU2M3k9XrO8wd/6CN48qcrxlxTJn7LvZOrfZerfX7COS+h445+pe
1z7acsfaFG+f/9z7zpqXF9lX9PqyK/YTI3jtWskz8Gr3Rf3v1DukZN176nyI
mnN/OCMCq/ByOnetNXuU2mdGJbqP4OXJasZoV/9W7hjDW3kPztVa26k5cLHG
WtFjmdR79Sq5n93hGiO1jukkFResaW+tfaCIdcXRGG7UM/1otTIyB06dAoB1
eP2t6D3KvH1XcrlMK34Wvd+3tbZOZcU1k9bea6PWwXn720c9P14MZfRZJqm1
3CVrwMWqa6V/29qfmT7MmmbkwEvy37vu1evNhYk+e8Gbd5UbH3r7qEfVVW/8
Oro96JnbbMWNa3I1Vj2b/byexjtHdKW+ojUvMLLdtb6Lk/MI1j0p/cyvdl9S
a8BL90RO7TlfE5dkzQdWMfK9kWKNu6L3YffmbXn1Tu8za616dF/O65uudGY5
3u3kHLh1xopKZNzNmjdcMr9sh2uMonaidUwnqXlHNf08a/xNrCuON6c1em+D
R5H7yz/KzbWzfm5UDJk6BQBr8d4b0WtsvTXLuXUkXq4+cn8g6xpr9hwZxTvr
7I51/Ckj9o637sno/W6tXE/peVCpMVRt/HfmvUad0Tnwkvx3dK54tFHzlq0c
Qml9u3uNtnd9o/e7Tc2DKm2brbhxTa7Gmrc2+1k9jXeOaHRuzduvNRez8NYC
R/UVVzv3Vf2wx70xVCf0HUa2Bb3ruF/pvlhrwEvXoqe+65p3B2s+sAqr3Ri1
V4t1BpVK5HvLi6V48Q0vdx49x987a5i2YW0n58C9Ohp1Vor6jdZck5KzCna4
xiitZ7hcIvbmShXaqDgjY/8jeDGRkWcIWKhTALAW770ReVaX8odW307/PLeO
1su1RuV1rBxn9HcRxRvPjlzvYcUdI/rs3nMzej1rqs+o+E7pntLkwF/LyBy4
2kcv/61/d8IaMGsfR5XIufjenKuS79E6UyPqnC1rTead53ilWLme0jF0xHpF
67uY/ayexouZRL6DvD1lS2IGiiNabWFEG2jlF1VK58NFs9rFqPvi9TVL6/or
3ZeeNeBCDhwn8NYdjxq3eGNIjcmi/o41Vzu3T5j3HalE9mu9dQij506izsk5
cK+ORq11SL2Tr1JylssO1xjBGtPVtA+pWJfawdKfp/9yP+9dMHp/zQgr58Cp
UwCwHm9P1ci9wiLip9Z88po8pMfb17vkDL/RvP7yHefjWrx8TO/43XtuRp7v
2LPf7yViz95UoQ+zplE5cLXR1jyUqx6u2H618HLTUXOhrPHKVUraNG+Pjt58
jLWnlsrItQKSegfV5GqsuW016yrYC30ML8YQude016/p2XNFJSJWaV1fRH+n
ldUu1sRIPFaOvfb7fIX70rsGXFJrPmq+I/ZCxwq8uTNRaydLePuhR4yVvTn6
JXO1vf57VJ31zhIatSYf7U7OgYs3tusdMyn/Y43pap79Ha6xV+/8Pekdk0Wc
kQXf7HM0o62cA6dOAcCavPO6Is4F8dZXq5TmEb0cdW8e0Mt7lJ73PJq1X+jo
sw+9dVs9a7W952b03papXHxtX9GqZ6XzTKy8GjnwNY3KgXvtt8qO+1pZvFij
2oqIOVteDq4mv2u1z73vE+/6Rs4Lisj1RMxNTu3RTUz3Hl6sPuI9pL6ENyez
tN54+273tIdeP3H0vjSln7d3/VDEGvBXui+p9qi2v5p6d9TMZ4g4YwLoZc2P
VhnZV/H6jRHn03j7E5W0v973pHduRL/WO8941v4lKHd6Dtybo9E7j81b81rT
b93hGntEjOnEas9Kc5FWn/OkWMZM3hz9meOYHqvmwKlTALAu790RMU/aO0ey
Jo/oxbl6r9Ob3zl6bV0p67uYcSalFQPQNbb2P6xzXlVGvrcj1oCLtaa99Lm1
4jg6p2r2s4h3G5ED93IKKifOj/DycL1ttXc2o0rNenprP3SV1rllGjet0u5H
zG229qGp2Sc19e7ZdS776rx3su5jT75Vz4K1149KTWzG23dbf6M1p2DFKWeu
ARevb9yT41HfLXL/z9PvixUjr413WfOcSn/eeveM2k8VECvvOnqetnh56p65
Id45wWrTSn6Hd46DSu++8d5+aqvO8cfnOj0HLl4cTvW3JZbkjZH17Nf2D3a4
xlYRYzqx8m2l/Q8r37fjHt0rWuUczUir5sCpUwCwtk9/5lPm+0M5hzvymCq1
eURvLbiusyUP7vU/W3K4eqfofWOJeOd481Fn5L28/kdLbNOLK4zOb0SsARcr
h12aV7Oe09n7/CDt7hx4bn+NGXNhPHp+rTax5lykXN6/dY9N1U8r39P6fXpx
19q5K4qDePn/kec5Rs1ttr6j0nM6rRz6rnPZV+ft16jSumZNP2Ptm3D93to4
vRf3bzkH1uvLtra1qi9eX7Hmd0WvI9I98dqv1nmIO9yXVql70HIN1juudHyT
irvV7KMARLD6UxFrr2t5a8FVN1raM7XfXp+xpo/nrRVQac1N5PrLu+Y8Xs0r
5MBzY1r9u5oxRnT8cZdrbBE5plPfMVVK56j3ngUDn7fvyMg4QqQVc+DUKQBY
n5dTVVG/rqYvpvbai8mpKO/ecq1eXE7j0Zp3uLdWT6Uln5Kb0x3xPvbGtbPG
tN791r0ujd/pO/fi7CPXgKsPE7EGXKx8TWmMNJVTZc/fdd2dA/dyCWoH9Yyq
LbxTzfx0L8dVm6PxfpeK4go1uTi1mV6bo3/XMm7JxV1L96BU2+mtkR09loma
22z9LpWSZ8sa97K/1328eYgqek5r+mCqV16fTqUlLqP3rfd7lW8taSP0e7zz
B1Ra9/XN5Sdqfldun86aOqF2y4vztvbdd7kvLVLff+s6dOtels7tSb0rZuQd
8bq8cXDvuuZWufaiZk/w3JxJ5bRrrk3thPf7VNSvLZ3HUtI+tsw5whyvkAMX
b43qY93y3u3qL3rrelR62qAdrrFW1Py9S2qMXtIfsvo+GnfMroOn8N4Lu66p
WTEHTp0CgD3k5iOqaMzktbd61yifkRvL9ZxxlcvXX+8ZL26q8Wsuj9I6PhyR
A/fi0LPm8Xn7caro3+m6rfuu+5qbN7HCfr89+SZrrn9ufoD13bLecV135sBz
c9FHlZr5NpE5cNWX3DtG309uHY7+fS7/ptKTU82t79F7xtrPSm2l4rLeZ9W/
m53rUWm9BmvsWtK2pd4X+j5Y73gffbe52J2K2j+vj6c6nIvRq/Tsa5M720Bt
hNow63nRz+c+a8/1RebAxXrnXEVtjdfX0L/L/Y6efaF2uS8tUm1RT/8slccu
2bfYmnfFmb8YyZv/N+uMnpJ+s/qDXr9WbZ+3H/JVT1viG7k5+Spqf729w/R3
1a/19gy6fs/M8ztQ51Vy4JLrF11FfQCNK699c/QOLhkXt+wrtOM1looe04m1
l6OX17f2Hpp91tBpvJjE7GtrtVoOnDoFAHvJxb8e20/16xTjUb9O79SSXIKK
YtQRMTQv33oVXZOuU/n96zpzY8PrGlvfDyNy4KvO4ysZw7c+O/qZkbkNK+/c
kw+z+mmKTVufTf/cOldv1zmbr+DOHHjp+PvuMisHLqpLJe8AFbUvamf0d/Qu
0LWU/mxv7iC3h/lVlPO4rlFtY8k16t+PnvMUPbdZUvmeXG7fqgPMC7qfxtXe
vgTP9/GxD6b/XVIfVCJyJbl8xeM1XnFKvW9LrrF0H7raZ/gqtb+vtK3Rf/N8
T0rmNUTkv3e4L7Ui14BfrH1evPZNf681dw5EWvXMUbVfNW2k2hK1Pfq/pTGO
0vOtUrx9ap+L2uyrz6j/m5vX//jZGDvu5ZVy4KJ8T+kYraaozkSdgbvDNZZI
jel616Crv2GNEVLxLs2/tNpl9VNn17+TWO+JnfeVXC0HTp0CgP2U5sFbitrv
ljO7U0rz4C3X2PPOHJEDX3ke3x35OcUeRo4JJHK/30dW/zP1GRXTtOIus/YT
RJk7c+C5/RJGlZk5cLnrHaCi39t6tviz0rhrbRm957eV6+l9p1vvDP3uVDzZ
2rOmZ+4a6tz1TF8lcq3gHX3aiL5AdA78ui+5PTJayh15k1XvS63UHMXeuTje
mlX1/5/jXWqbrfrIGnCM5s2Hnn3m6F3vLrW7PfnvS00evLaQ/97Tq+XARe1E
5H5n6m9EzwXb4Ro9d8zfu3h7gahca5S870/xWObvxbLyqD1nHM22Ug6cOgUA
+/LOmm0tqbhNL733IseypWcRekbkwK18kt57s58dyZ2vW1N65yS0sNaAR+w5
rM/ifTf6vLm1ciP3yUKbO3Pgd+Q4WsrsHLioTpauSS0taket/clbqd5HXueM
tVTR+/0+sva6ULnWg+bWqs5cX/aK1FeKzmPqXkfNPXlUsu64tHj7ttS4Iwcu
Xj60pdzZB1vxvtRIrXeNind5cT2Va59VL97FOeCYwcvjRs2D76H2rHTddElR
exv5ubTGNLqfnzvLDut6xRy4qI9Zck6jV1Q37+hT7nSNljvHdNKzJob5Ovew
3iuK0c++tlYr5cCpUwCwN+UASvf+8op+x53r1RTz0ni7J+eqGFLUuqMROXAr
vrnSPD7FA7y8RklRfHRGrveuNeCXnvWro8//RZu7cuCqD6uUFXLgohiE6mzv
vBvVLV3LnXtOvPPJb+y6TuWjovPzJe6c23zdw57+xqwzRvEHi84fLSl6x94Z
o1e96ZmHoudd9Tfqeu7KgYvqk7dfUM3nvbsPttp9qZFqsyLjXT1rQmfMHwXE
mxu10vxdvbt61nGq7dFnvaPPqHdhbxuuos83es8gxHrVHPhF7zG9V2v6CRpz
qn6Pukc7XOOju8d0l5Y1MepXMV/nHnrmUmbMwYiiZ9n6XCOfI+oUAJxD+bra
XKbaZv3MyHGX+p+KF9XE0ZUz1rskckyud4z1Lo56H+u7Tf3uFfMA6t/X7N18
xRRmrRW4cw34I9Wr2nn+zOHbh2LyqTraO9c2176MVLPv43XGdUrU+l19N/o7
tfVKMYu7c9+p66zJG97xrqpx99xm0fdfci7xc9l57H4Svetr+4qqA5rrNnJe
h56XmjWAyiFonU/0u1ftp9e+RvwN9Vtq1+rrnuj9NTpessp9KXXnGvBHLes+
Rp8pCjxSvUy1aTPOKshRPVHbU/PuGtlGqn3TO7I2V6/vWm0H7cD+Xj0H/kix
Ie1VqTHb47hS/79oTejsvSZ2uMbUWCt6TPf4fZS0rxq7z5rPCPSiTgHAeRR7
V8xO/TfF1J7HthrzXn272deqMePV/3wci1/XqM/BWtqxNA7XePz5nlz3Re/o
FZ6d1Lz7u+I2pfP8FVfV97bS+glgZWrf9Q5IxWL1/lJ9Uns0e16srvOKi6gt
eJwroX+mvOLseS96X6bapLu+O923knkM+p5mx5GQpnf59Vw/ztlTPOD657P7
YHp+lft4jlNesUo9hzP2XLj7njx/1se2ZoX6tMt9Sc23vevsbd2XkvkBypMx
Jwho8zhOfXx3KQd9tZEzx6lqB662Udf03IZf10je+yzkwBHJWjd793hYY1m1
X88xZLVb7FWBnVGnAADAjqw1tnfH6vV3FXd5jGk89mHIfQOYJbWGf8S84mvO
3fP8BeWZZs8LAPC6UvGuEeeRX+vLHudL6e+uMv8YABCLHDgAAAAAAAAAAAAA
4BTkwAEAAAAAAAAAAAAApyAHDgAAAAAAAAAAAAA4BTlwAAAAAAAAAAAAAMAp
yIEDAAAAAAAAAAAAAE5BDhwAAAAAAAAAAAAAcApy4AAAAAAAAAAAAACAU5yQ
A/9Pv/MPAAAAAAAAAAAAAADw5gOf+BZy4AAAAAAAAAAAAACAI5ADBwAAAAAA
AAAAAACcghw4AAAAAAAAAAAAAOAU5MABAAAAAAAAAAAAAKcgBw4AAAAAAAAA
AAAAOAU5cAAAAAAAAAAAAADAKciBAwAAAAAAAAAAAABOQQ4cAAAAAAAAAAAA
AHAKcuAAAAAAAAAAAAAAgFOQAwcAAAAAAAAAAAAAnIIcOAAAAAAAAAAAAADg
FOTAAQAAAAAAAAAAAACnIAcOAAAAAAAAAAAAADgFOXAAAAAAAAAAAAAAwCnI
gQMAAAAAAAAAAAAATkEOHAAAAAAAAAAAAABwCnLgAAAAAAAAAAAAAIBTkAMH
AAAAAAAAAAAAAJyCHDgAAAAAAAAAAAAA4BTkwAEAAAAAAAAAAAAApyAHDgAA
AAAAAAAAAAA4BTlwAAAAAAAAAAAAAMApyIEDAAAAAAAAAAAAAE5BDhwAAAAA
AAAAAAAAcApy4AAAAAAAAAAAAACAU5ADBwAAAAAAAAAAAACcghw4AAAAAAAA
AAAAAOAU5MABAAAAAAAAAAAAAKfYPgf+qXfe/Mnv+AMAAAAAAAAAAAAAALx5
hxw4AAAAAAAAAAAAAOAQ5MABAAAAAAAAAAAAAKcgBw4AAAAAAAAAAAAAOAU5
cAAAAAAAAAAAAADAKciBAwAAAAAAAAAAAABOQQ4cAAAAAAAAAAAAAHAKcuAA
AAAAAAAAAAAAgFOQAwcAAAAAAAAAAAAAnIIcOAAAAAAAAAAAAADgFOTAAQAA
AAAAAAAAAACnIAcOAAAAAAAAAAAAADgFOXAAAAAAAAAAAAAAwCnIgQMAAAAA
AAAAAAAATkEOHAAAAAAAAAAAAABwijNy4L8fAAAAAAAAAAAAAABy4AAAAAAA
AAAAAACAY5ADBwAAAAAAAAAAAACcghw4AAAAAAAAAAAAAOAU5MABAAAAAAAA
AAAAAKcgBw4AAAAAAAAAAAAAOAU5cAAAAAAAAAAAAADAKciBAwAAAAAAAAAA
AABOQQ4cAAAAAAAAAAAAAHAKcuAAAAAAAAAAAAAAgFOQAwcAAAAAAAAAAAAA
nIIcOAAAAAAAAAAAAADgFOTAAQAAAAAAAAAAAACnIAcOAAAAAAAAAAAAADgF
OXAAAAAAAAAAAAAAwClOyIH/iW///QAAAAAAAAAAAAAAkAMHAAAAAAAAAAAA
AByDHDgAAAAAAAAAAAAA4BTkwAEAAAAAAAAAAAAApyAHDgAAAAAAAAAAAAA4
BTlwAAAAAAAAAAAAAMApyIEDAAAAAAAAAAAAAE5BDhwAAAAAAAAAAAAAcApy
4AAAAAAAAAAAAACAU5ADBwAAAAAAAAAAAACcghw4AAAAAAAAAAAAAOAU5MAB
AAAAAAAAAAAAAKcgBw4AAAAAAAAAAAAAOAU5cAAAAAAAAAAAAADAKciBAwAA
AAAAAAAAAABOQQ4cAAAAAAAAAAAAAHAKcuAAAAAAAAAAAAAAgFOQAwcAAAAA
AAAAAAAAnIIcOAAAAAAAAAAAAADgFOTAAQAAAAAAAAAAAACnIAcOAAAAAAAA
AAAAADgFOXAAAAAAAAAAAAAAwCnIgQMAAAAAAAAAAAAATkEOHAAAAAAAAAAA
AABwCnLgAAAAAAAAAAAAAIBTkAMHAAAAAAAAAAAAAJyCHDgAAAAAAAAAAAAA
4BTkwAEAAAAAAAAAAAAApyAHDgAAAAAAAAAAAAA4xf458O9+85982+8DAAAA
AAAAAAAAAODNOx8nBw4AAAAAAAAAAAAAOAM5cAAAAAAAAAAAAADAKciBAwAA
AAAAAAAAAABOQQ4cAAAAAAAAAAAAAHAKcuAAAAAAAAAAAAAAgFOQAwcAAAAA
AAAAAAAAnIIcOAAAAAAAAAAAAADgFOTAAQAAAAAAAAAAAACnIAcOAAAAAAAA
AAAAADgFOXAAAAAAAAAAAAAAwCnIgQMAAAAAAAAAAAAATkEOHAAAAAAAAAAA
AABwCnLgAAAAAAAAAAAAAIBTkAMHAAAAAAAAAAAAAJyCHDgAAAAAAAAAAAAA
4BTkwAEAAAAAAAAAAAAApyAHDgAAAAAAAAAAAAA4BTlw9PiK7/033nz7J77+
zY/93Q+++fl/9PF/6qd/+QfffMtP/rdvvuR9/+Ktf/+LvvOfe/PJX/uJz/nb
8mXv/CvTvxugBXUKALCTr/7+/+DN1/3VL/qnXuF98YqfuYS+h7/8M//9u/ow
n/gHP/L2n9/9PVl9GN2v2d8NYugZeqx7X/ORPz79mgDPn//r/+Wb7/nkX3xX
u/Thv/WtQ9omjR+f//b7f/bPT/9eALymK96l+NZzvOubfvxP3x7vUj/iuU0k
3gUA53u1HPif/tC/8znj5rtEvz913Ro7Ka7zW7/7m2+ey6//v7/69r390b/z
/iFjKV2PrqWk6Jru6k9o/PZcFGebXa/w+972XTXm1v3Qs5kqepb179UHVl/4
rmvZod5TpwDgdVy5QsV7fuO3P5Ns6/Xu1HtB/93d8aBWenf/7j/5nc+5br37
Z1/X6Z9Z16D3td7PuXHBiByhnmc9yyVF+fG7+jDqTz6Xv/9//8L0ZwZxnvvK
etZnX1OK5mP82j/+e8nnf/a1nfiZ9bfVDqvNU51PleudOmJOsag9SrXPz0XP
sPLkd1yDPmeqj8G8oDU9z6+7y6w+peKZqTL7ez/1vui6r/k3z/1WFbXX13wc
xaLu/h71N6y44GPRtX7k57/ttudU74nnQrwLO1F7oedY9cmKI3z61z/5tm7r
vx19bWp3VKesa7vaH30GzXuJGBeqHziinc6hf7W2V8uBqx0YUaJiYf/DR//z
on7Cc1F7ctf8Xn22VB/KKxr/6bNEXofaydR10ObMpe9f77uWop+74x29er2n
TgHAa1B7qnxAbZuvonfkXXHyVqk+6uk58JmfWfns0vlyj0U5Fo0LFB+Ivib1
RUryPI9Fz3/0s6zPRq7nbKpnqWd79nWlKH6fKifnwGd8ZuVIFONtaYM0b+eO
9kHX1DL21Ds+uo1O3RNyPeuy5m9El9E5EVH/xer7zv7eT7sv6pe1tEH6nJp3
e8d3qN/bEu+KbqP1+56Lros14Fid+hbKGXt5Zauor6w6eMc4UFR/NM7U32kt
6pP1zNvW/PAViuIEs58V2F4tB147PmotvbEwtU3WOLKmqO8TOadP/anWor5F
ZM6OMd1a9N5LzalsKbq3ke/nles9dQoAXkNqn42WonzCCuvCNZZOlZNz4LM+
s/pEyvP0Fs2RjYwn6ne1zOe443tLrQGnD3MOjTOsPQ9mX9szr29/ag58xmdW
rLQn3qqi9ity3YDa6pb1C1fRHKeoMTBzm/ei+z6qjM6B67N5dXX2d3/KfdHY
QO1tb1E7FJkTTs1fKy3R8a7UWh3FwGY/Z4BH48+ImLbmuUTv+aD6HRlvb21/
yIGjxCvlwFXXR5WemM51ll1UUXuk/SV6nxVrHHUVtafKgXpzDvXzEW0uY7q1
tKwByhU9TxEx/pXrPXUKAM7XuibMK5oDPmMdz8XLfZ6aA5/5mVv310kVfQbl
i3uvyVp3fRX1Ya5zwb1ridirnTXgZ/PyiqvlwNWf9urFiTnwGZ9ZY8+e+TfP
RbGXiHGnt4bhOgPMOwMl8vtibvNeUutT7yqj+4+5vOzs7/6E+6L3ZORYI2rP
wVy8S9es58O7drWXETl51oBjN3fEEKLmlajNKT0Hq7a0xDnIgaPEK+XAtefe
qNITC7ujHVE719vXtcZ0qVyl2kMrXhdxLl/qWk6MKewgOgaRe7ZqrVzvqVMA
cDa15XftoRjRt2uhGJI37+3EHPjMzxyxL1Sq9M6PTa27VlFOUnGIx//Wi5Po
v+9d95haI0+u5wy5ueGr5cBz81VO7FuP/sy9+09YRc9Zz3V5uZ7UO8KbQ957
VkTqWqLmTeMe1j4zd5SRfceSWMzs7/6E+xK5huoqajN65xJafVjliZ7jXfr/
rfluEX061oBjJ3fHEHrz4He0Oc/XWNMmkgNHiVfKgUfsIVhaWmNhuTiX2gGN
I9UXU3sg6lfq53LnQmiM9RyTKqX4Q2qMluq7PLLiXT3jOmtMx/y98fT85WIQ
em70fD4+s6of+mclc9p6+7ur1nvqFACcr2RPVL0Lv+eTf/FtTvJ6T+qdqfdX
bp/Xnr5di1wuWOW0HPjMz2zlma9ynWn72MdSTKPk2eldg6191Z+L/pnXd7DG
OT3fH/vYnKtkb7SVcuAl+72elgMf/Zn1vsu1x2qH9E5VW3i1i2pLS+K1PfkQ
67wTb4xm5fN75zen2lpyPWu7a75bqozKgef2iLjK7O9+9/uSW2evNlN7C6q9
fo4h59pTvWNbY0JW/8w788Hb96WnX8cacOykNP+tWLn6O49jQP3/qmO5ut3z
/JecuaC2Q3VZY9LHcaquL7f3w1Vq4hzkwFHilXLg1hzlq25GaplTk4tzqe3I
rZPQ2Cu310zLc5K6Nv2dXHvk9Xtan1nGdGvI7YGp+673W24dt2L+ufdzT353
1XpPnQKAs+XWjugdmntv6F2b69sp3h91fqinJBesclIOfOZnzq2dKjkXPndG
W+sabOvacjl1/a3ofA/7/Z6p9GywVXLgWl9bsjb5pBz46M+s9s6b26N3Ya4N
0jXn4q4tcRxrXKy8U+5nrRxb6xwl5jbvyXou9VxHxyxGzRErXSc4+7vf+b5Y
c2+uohiy9/PXOMMrrTHkVNtW0hZZ+8/39O1YA46dqO/gFT3PufaipL/TUqdK
9vYoyV2J+lu5OdulY0S1K9Ftcop3vRF7Z+Ber5QDt/J1K8TqcvnEmrGY6pxX
LxWTrb2+1LWV5tysdaste1wzf28d3vrq2r1VrveVVXriW6vWe+oUAJxLbaiX
e1ROoCb3qHGs10+MON/Zo/FuSS5YZfb79ZTP7M3/r+nLa26d97tanp1UTEXx
4JKftfI9LfsZsAb8TLqvpecfrpADrzmH9ZQc+IzP7K0X0Diy5p3qre1smRtk
zXkryWPr/Z4qrfkZcj17umtf/Flq9hCffa273hfv/IXaeJzaKq/P2/J5U9dW
+j5IvV/0+1rmbWrtaep3Ee/CilQXvaJ1ZjW/L7cvas3+E6p/qX3ArqJ6Wzt/
T78zd40tOaw75OZiRpyzjnu9Sg5cz6pVVoiTeGO6lriat25FMdSavoP13ZXG
zNQOpErLXj+M6dbgzftvPVtEz2T0+2TVek+dAoCzebG/1nXbVtuv0rtvqqd2
H8gTcuCzP7M3x7429iHKL1t9LI0XauOAqTFGad/Biu20xFdT90nzBGc/P2in
vmzp3BOVFXLgqpOl5ZQc+OjP7K0X0PuvZR6wt5dn7dygVFuk57j051P5npb9
NJnbvCdrHoTKjveudI+Iq8y+3l3vi9dX1V6Ltb9P/TPrvtWOM6zvrvS6rHFU
SwwvNQ/07rnDQCtv3nLLGFC8deU14yYvb6U+Wktf7OL1yWpzWHex9phVWSVP
D9+r5MCtuKHe8bPvgTem69nvRf0Lq9S8861YVWlO0ur/1LbfjOnW4a3Z7pn7
5MX3W+rCqvWeOgUAZ7Pek717ZHnjw+g1KTVrMR/LzjnwVT6zFf/omevgrSuo
mfum7yhVSuOa1s/Xzr9jv9/z1ORVrzI7B55br/NcTsiBz/jMXty19Z2qGIzV
1tbGW1N7PtfsH5za46tlzSNzm/dkzXvTczj72mrV7BFxldnXvON90fdszRfr
iSF7bW3NOMOKw5WuEU2t3VapzV2n7uEq+TTgmVf/Ss5WsXjrzWrGTl7b3jLv
5lFujXXv77/z3pzQt38VJ+TA//h7/9ms9xlnnPzS79Xhkp+/07d93K5LX/V9
/37X77bGdWpbSn/HN/3Ye5K/4z0f+reLfv6Lv+tfSP78j376g1Wf5RP/4KPv
+h0f+fn3Tr9/r0b33Sq6R72//5eM96rezV/4HX+o6netWu+pUwBwri/97nSO
T+XDP/e/dP1u9QutEtl+/6Wf/u/e/MZv/7r5t7zyLT/51dPvwc6f+Rs+Zq8B
17/r+d2p976K4qilfayv+cH/OPk79M9LryNVavswqTUN9GH2pHbNm1/rlZox
bTTVmVS8TmMWqy2pfc5XM+Mz629av7t37Om1tzXt+q/9xrv3Bv2pX/7B4p9X
25UqX/49/3rx70j1D3Rf1CeZ/dzAp77hHc/3DNZcJq9/Nfuad7wvd8WQvfZW
7+nS36M+daqUtkdWzFHPV83nScXD9d3Nvn9AipUDVp1UDLjnd3tthuLTuZ/3
8gCf/NUfD/n8X++siZvZf9YY19ojQ/2/2jwF5nmVHPhPGefnrhArsfoYEe2I
N64rjVVZecSaMVlvG5Ya0+l7Y0w3njUW0DuhNIfb8ryp1PbnV6331CkAOJcV
92l5j6VYY7CImJz6jalY/nPx9mnbLQe+2me25gLqGnt/tzeHQnGHkt9hzeOr
6cOkYjw1sVVyPWfQM2P11Z/vrRUXnJkDV787VdTPt3L6u+fAZ3xm751aM/fG
YrXtNbGY1Hu55nNbecOadjU1x6k2X4Q59Kylym7372t/+AuTn0PttFePZ1/3
bvflznlB4uXKSvtZVsyw9Boi1nykYuH63shXYUXWHGOViHkb6k9YpSQ+7sXp
I/piFyvOofnaM+6L2iJvDX1EDgTjvEoO3IptzY7TebGoqPlpVn0t7btZZ0f0
XkNNrCs1pmP+3hzW8xSVV/bml9Xe81XrPXUKAM5l5QGixm5WjlRx/Nbfqbil
9Xufi94fih9ZZfY7dufPbMX8VKL6WVa+pzSuGDGPL/W99/ZhZs9vRDk954qP
l5wXq3i1YmtW7nVWDtyaC3I9xyfmwGd9Zm//iojPpfY7VUr3ILP2fqnJk1nX
oPdUyc9bc5vJ9ezBymf27v0ykpcnUBtuPeMqs699t/tizTVQieiPqt2w3s+a
y1DyO6z5bTXXkSo17xPWgGMn1n4walej3uVWfLxkzp83ZzWyr+GNzWfcF6sP
qqIx8eznBnVeIQfuxawi1uP08ObY1cSSPFbMoHQ9yex8XWo/DMZ0c1hz06LX
3qhff2nd82Xlek+dAoAzqR1V3FvjpedxZs2+qJ47ckHe+VuP5TGmb5VdcuAr
fmYvRlyaC8mxYiyl+6FH5MBTubLSPgxrwPfnPeePRXGw676ulAPXNaXOYdVz
eNWD03LgMz+zdeZt1HfprY0q2R90hRx4KmZMrmcP3vk5O73XrDb6qge75cBX
vi/WvhGR12a156V9Net5qLmGVClt91kDjt1Yc24ix9Vab3bF2WvXL1tzqCP2
KXtkjVNVonJkpbx83ezzVdHmFXLgXt5u9vdvzSmJHM97/c2SNsTqY9XkJlOl
tP/C/L11WLnbqPM/Iq1c76lTAPA6NM7UuomofcKsuFTPWCyXD9b49vn6rXJK
DnzGZ7ZihqXrEUt45ySV5FusccWovdBZA76/XA5cz/vz2oqVcuBWG/zYDpyW
A5/1mb098yLfNdb7oPTaU6WmXerZC51cz96s8091D2dfWylrjwj1S6/ncLcc
+Mr3xWpre/aDeubl2UtiVhFrPlKlpE3WM5dq04l3YVXW3g7qD/eeAx7lzrPY
HlnnKKiMzIFbcz+v+8Ie6Ht6hRy4dfbMCvM2rLk+keNjb25zyT4+vedTWetx
Sz4jY7q1WHO/SubIj7ZyvadOAQBaWbH6nnXm3jlXGoum3hFW2T0HPvMzW/2s
mn3Cc7z91kvig1Ycu2aPndT4p6QPwxrwM3i5EPXTU3GlVXLg1pqQ5xjgSTnw
mZ/ZO0M4MhZqPV+lOaXez23FfEs+I3Ob92btrRKdV7iLt0fEY1u+Ww585fti
5WUi5wN6+62XzJfsXfPRs79G6p2ldpJ4F1ZltTerrTVT/b3WkeuaVR81Xyjy
b3h7j4+cD2D1C1XYA31fr5ADt+agzV4z4O3VHF2nrKLxVu5nrfUipXtzWec7
l3xGxnRrseZ+jd6TpMSq9V6oUwCAFtYeJyo1+64+S+WDlVP33u9W2TkHPvsz
W/0s9WkiP7s1B7dkHoW1LrN0PqSVgy/pn6XiIsQh9pPKhag+es/QCjlw9b9T
dVT16Xkexik58Nmf2coNR+/r5a15LMmbpMZXNXOXUudslnxG5jbvzzpjtadP
N5JV75/jC7vlwFe9L94e7aVndZfw1lGNmC9pjXdyf1ttX6qPO/sMd8Czansz
gzVGHbmfqxdvYT7N3l4hB546H0nFi1c9nkcsd+T4vL29otfV9qwZsvpZpX2s
1nwfY7q1WHlXzUOdfW0pq9Z7oU4BAFpYY2SVnrWwj/1ExTNLYlRW2TEHvsJn
tvpZKtF5Xmu9ecleOdYc3tI4jbW2KBefTP0cfZg9PcbGdQ8V087dx9k5cF2f
zkdIldQamBNy4Ct8Zms9UPT5k15+rmS/y9Tc65o9k1tz6Mxt3p9Vx6x3ourl
qJhFjrVHROrZ3S0Hvup9sfZoV4lej2mVknmZvfMlW3Po1hrw2c8T4LHGZa82
d8Ob4xPd72u5Hyql69awplfIgVtrKh7fn6prel9aY7fH96fmI0ec6Widm6MS
dWbkpffMmNRcnNKfTY0JS841TLU7kXMbUcd6XkvG54odXOehKkYqqm93jtlW
rfcX6hQAoIa3J2zv3owaVypPUbOftVV2yYGv9pm9uGb03Fgrr1Q6rzHVnyjN
R7fuj0mu5xyqL7qf+r+lcxhm58C1T0GqWPndE3LgK3xmKw8VvT+ot+9vSQza
ej+X/Gzrnr+puc2qD8wL2oe3L+TjvEbFS/Q8WHP8r3LFLGr6Na2sPSLUj0jN
ydwpB77yffHGAtHn01rrqErb39Se7aXjldQ7P9dHZQ04dtW63+q1N7me8SvO
fu1PPuI9EM3bk6dkD+MI1twulZ5z57CG03Pg1pqKax8F/XtvTY1X1NfpmQPi
1a3oc+2suEFprMsaA+c+v9rkVD8k1/dJ5VuZvzeXtRedFde48stW7OL53up9
F/Xcr1zvL9QpAEApb0yod1vvOLflfC2r7JIDX+0ze/Hh6LmxVh9EpeR7sZ7H
XJzRik/m4qnsY3OWlvs2Mwdu5Ue9fOPuOfBVPrN17m30+RC9+/5qDJuKYZfM
FbfOAfXe67oHqXlB5Hr2Yu23eu0hoH+v92NLKd3fpoW3R4Q1Z2+nHPjK96X3
3IYaVpte+t613tu5XL3VnubOzGENOHbk7QNm/Yza2ZJ4ttos9Zd2WLts1fur
RI+Fa69B/zw6T4fxTs+BW2tX1Wezcnq1RW1PSxzN+vt37C3t9ZVKft5ql9Wn
sD67+mBWu+y1X8zfW5O1Zuh5jrrunxdb9Yqeff2+3v77yvX+Qp0CAHjUditm
aK3DuEr0GuFSVtklB77aZ7byICo9/Y3av1WyP48VI1A/y4sPWPHQXH+ENeCY
lQO35p6qeH3vnXPgq3xmby3mHfXfKqXnPFhjNO/9oO8z1Zbm5gWR6zmDtaZX
dSm171tLUf2Lzo1asR5vjdxOOfCV74v192vOXijVu47Kmkul9s367Prn1vwC
r39KvAu7ss65TPVvtb7bmhuYK4rnR+8VEclqb1RG9W+8eQW5OTjYw+k58Kh8
V64o5lPbnowcy3s58NK5LFZ7oOt97o9o7GyNgxnT7cm6n497aWscX7LuO1dS
z1SNlev9I+oUAOCi/pjiRcpp6z1m5SAey8w8oFXIgbfx5g9Gf47es2/FG8c8
r3FSH8aKaebWSbIGHDIrB2711XN50Z1z4Kt8Zm9t9h3vGauUrjlXu2etH0p9
d3rXW/89c5tfQ1Q+NVc07o86f87Ka+qZ9Obr7ZQDX/m+WOtS7ngXejmp0t9h
7ROfWvehcZB1Dm+uHU71oYl3YQdW26i6c/03qitefawpK47T1X/yyoj+jXcW
OWvAz3F6Drx1j5qWovk4Nfva9O4tU8Pbd7203+XNCb+uW5/Jy4Hq5722gzHd
uqx1aNc71BvHtxTVp9b9Tlau94+oUwAA72w/r+2ftf77YpUVx9Y7fOaIWGMp
LxZdul+e+hfeHgVXH8aKZ6qoD5Ubh7AGHDIjB27VEz2TuTkYu+bAV/rM3hnd
d7xnrLVVNdfv7bGhou9IvDFzbq4Bc5vPkTtHOrKo39i7BtCLXeT6DjvlwFe+
L1Y7e0cb4M3NLI0h67/z2jvFuXLxLv077/1j7U00Yu9koJe1XvGaI6znO2Kd
2WMZdbZ2Cb1XvM83qn/jtXesAT/H6TnwkjU0V9EYWvPL1AYprij63/pnuX0o
r5LLRz0amQOPiHWJcn2te2+U5AoZ063LqgPKpVr7uPUW/c6WvuvK9f4ZdQoA
Xlvt3iX676P3xm5hFXLgbXbLgUtPH0Z9PO3p5/3+1Bpw7zxinGt0DtyK2+uf
leQrdsyBr/aZR+fArXFfyZneJc9qScl9V8xtPktN/EQ5AsXhFafQ/W6JWei/
6+k/WntElOQHdsqBr3xfrHa2tp0q4e0lWrN+XX291lhhyf6QqdyV1svPfo6A
ElY90zOsd/5dc3JWyevm1q+NOMucc8Bfx8k5cG8vg8eitiUXgxHFeaw+x2NR
G1USmxk5hy8q1nV9DzU5RhX997lcHWO6tVnvBD1b1vOgf66xvO7h9ZwphqL/
rXd9yXy22rHa6vXe+hvUKQB4Td7ZU6mi/77k/XU3q5ADb2PFAErPXaxhnT2n
UjsuUGyyNM77+JlK+jCp30sf5jWNzoFbMcfSPQh2zIGv9pm9HPgd7UBUDlxa
9lIu2XOduc3nUEykpKj+lKwJUH0piVnov2mJWVjxxNwa3dzPq8y+FzvdFyt+
tnIOXFrOMS7Jf1u5q9Z9GoHRrP6C2hgvRqB4ttpVtTGKl4v+t/6ZdWbCc5k9
psrNGcztixPF28NnlbkCiHFyDlzvWa/oHdxS50v2fC4ZK46cwxeZAxe1r95e
EY+ldL1Sakz3eAYG5rJKqi+rf6b3Vcl9Vx3M5cJz510/Wr3eW6hTAPCaWud3
KzakMdusNbFWIQfeZuT+UF5uqWVcoGdQfZOSdT6K9bT2Ycj1vK6ROfDcvpQl
dsuBr/iZo9upnMgcuGhMWjLfW/9Nyeex5javMCcO9RRb8IrudctzrvN1omMW
ykOmYj76O6W5xl1y4Kvfl+h2yhOZAxflq0vm/ep70t8uGd+wBhy7s/q31pwR
Pd8le/OojuZy4fobvWdkRH/u0fXY6ltdZdb3g3ucnAP35nKo79Czn0Fu7z/V
odYzs3bIgV8Uw1I/UX2P63wrURxM/7x0/W7E/D39Dn2WRy19M7ybnuXSUrI+
OfUc5ebHluatV6/3Jd8FdQoAXkfrXtJX0TyxGXujW4UceJudc+AXqw+j/1/f
UelzGrGPzbUe4hFxjH2NyoFb5zupna4ZQ+yUA1/1M++eA79o7KXxqeK5V5uo
PJD+Wc24LCLXo3v93C7Ofv5elXcOjuZG9vTrcufU1cYsrLpds0Zvlxz46vdl
5xz4Re8VPQ+aE/kc71I/r/TZjIh36XM8t4nse4yRavaDa1lz5cXHVWbMGcnl
v3vP7aiRmnM987vBvU7OgeudrXfpcwwlaq5Lbr1prn06IQcepWdMpzmVXv5U
c6vVn6Iv0059w5JSel5civq63lz50udh9Xo/CnUKAPagsan6Ys8xn2s/s5I9
VbU+dnQe3CrkwNuckAOP0rMGXDl4b92Dvk/VKfowexmRA/fGInquan7XLjnw
lT/zKTnwCD25Ho1/1eZZ65z0e9Vmzt4T9dVoLK1n63keZO+c/UtuPXNpzMLK
g9buLbdTDnzl+3JCDjxKql8QFe9Sn7N0X0ugR8lZCSqKF7T+Da8ujz7vuiT/
PbJ98XIQnKlwnpNz4M+uc4gj1wB4exfnYjWrnAdeco7NnVrHdLqPNfuHqh+7
Sn5yN6U58N7zOrzzKUueCes5Wanej0CdAoCzqK+W21NVY8aR+6JbhRx4G28v
vOjPEXkeeLTWNeDqq1pnqqeK+kk98SSMNSIHbv0NrdGp/V275MBX/syrnAde
cybXXVrnNquNKzmj4iq6hyvktl6RxunRe65588FKcqbWumX9s9rr3CUHvvp9
GbmOauUcuO5LquTiXfr3tfGuk8c1mK8kB94bY87t9z3izGtdQ25v9tH5b288
zBrwM71SDvwOVq7pKt68MWvPizvWe3h9ztn9l5YxnXJ1rXuHahw+6+zMXZXs
ha7YfMT36r0Xe3PsUXrq/QjUKQA4j9pZbw6Wysh5SVY5OVZ052f25sVHf46V
94dqWQOusYyVv8oVjcfow6zv7hy4FQdTzLClX79DDnz1z6yxiVXueM9Ybcjs
e9Y6t7lkD5lU0Xhw9hoJxLDyhCp6prx3n7dHREv92zUHvtp9IQf+WamYYa6t
zp1r6BXtDzD7ucGZSvZCj1iP7OV778hBPVKfMjdPeXT+W7xr0v6vs58NxCMH
3s/L2Xn9w1Hnmol3xsHM/kvLmE59wtY411VmjWX1PDyeedNr5J4luRIVM1W8
w8ovr7AX3aW13t/t1eoUALwab6xce8ZjjxXfgTt/Zi9fEf05Vs2Bt6wBj+jD
MNd/fXeOm9V3ttbHtNaH1XPgO3xmbx+yO94zVm5k9j1rmdusfX57Ss/5ZliL
t8bQi/FbfZLWfRHIgcfcFytnc8dehN6825kx5NQcgtx+zvp3rfnvq6yyHgdn
ye0NHrlG22t37qrT+r0le9mNblOUl7fyDiPjKRiLHHg/L7/szRcbmQP35vDN
PA+vZUxnfd9qv/R9X3sVKV7mxRNnxGi9+9BSRr4nvHXP0c+stz/R7DXWuedQ
ZeY80VerUwDwarzchcqoteCv+C648zN7fcToz7Hq/lCpPkxu/mOuD6NYsuqM
+jBePFc5o9nPF2x3jputnEJP3HH1HPgOn3l0DtwqGvvMuk+tc5utPoLukb47
5be11lvtpxWbjtrjDXN5fQsrp6f3ZqrouWqNHZID778vMjKGPHJ/ohqptSi5
d5fV/1NeXGdGKN6lZ1vntXufe/ZeSThPbs+WyPXIXgz7jviB+hm5uSfqa8wY
e3rvpJn9PtyLHHg/by8bb8xn9XvuOPdvZFyt5nuLGtPpn1k/p35M6u/MmNuz
cw7cW2MTfX6It8ZtlTnprfX+7mt6tToFAK9I7bBV7t7P7GIVcuBtvD5i9Pw/
LwYya65hZK7H28tXufBUPCa3/yjmuivub9WF3vzfyjnwnT6zVe6I1Vpl5tq/
1Ji4dW6zFdNVm2/du5Hnq+AeVj5bJRXD8eZZenuy5JAD77svlxVy4HfEq0u1
rgFP9S+9taeaF2n9zOxnB2fJ5Qgi1yx67U70Oi61+d46OhWtfZs17vT2QWeu
y7nIgffz5ih7ewVpvplVotsBq/+i/u2s761l/p41psudj2H9nGLIIz/zqTnw
6Hi3VzdWeR+11vs7vWKdAoBX5a0FH5HLswo58DZeXjriHLhH3nroWd9t5D42
ue/LisWT71nXHXF/6/wl/bPe85BXzYHv9pmt+Gn0/GtvXDdrj4iWXI81LyjX
llo/p3kRM59X3PMceXXTOu+tt+0iB953Xy4j+29Wmz4zDxy1BjzXlooVu+2Z
CwI883IE0fNN1Ae0SmT/tCTvobo8a+6x/q7Vv2Sey9nIgfdT/bGKt3+f3p1W
6R2DPrP6L7PGNZFjOs2Pzv0966yH0edL75wD984Oie4HenVjlT5na72/y6vW
KQB4Vd785eicaYpVyIG38ebmR/d9rBj3rHF/5BrwknmI1s9qPcLsZwxpd+TA
o8dlvWVEH3q3z6wzblMler6x5lhbZdb83si5zSX7qGkNWKqsMv8cbbz5Han6
t1qZeT7LSvflojk5o74raw3MrHhPqp/cuga8ZK9j62dLYmVAKW9+0B3jEqvk
5sqVyp1vXlr/7uTtpzfzXFPcjxx4DKt4/QNvDk70WMvqv0S1c7VaxnSaF5Aq
pXHH1Dkbo/c93DkH7s05jR4be3Vjpdi6VWaMC161TgHAq/LeyyPmi+3wnt7p
M2tumVWi1yEqppIqs3LALWvArb5i6Xdl1Z9Ze/LBRw48xm6f2TofK3oevxeD
HjGn7FnL3GZJzY0rrSP63akycy949PNyran37GrlFXPgXv/Hit+oRMfkrDIr
B5yaE5WLd1nzS0vPWE7F2GbuBY/zjD5j8665LRo/efPzr6I9X2d/5zucvYp7
kAPv5/Vfcv0Da/+F6HbB+jsz5ri0jumsuTql/WJrbDtyXKt+qcaRUUbG6bw5
p9Hx7pF9+1Y99T7aK9cpAHhV3nt5xJ7OViEH3s7a3z66v279nej9hUu0rAEX
K65Z2gex9hxapZ+Jz0UOPMZun9k6H0ttRuT34p3DNWNub8vcZtHcgOdSE0NP
xcZnrZlADC9mkXo2ViuvmAP36qw3XzJyHZU1J0ZlxrkxqT6b+rK5eJc1ViqN
o1p7a5z6XGK80fuLag5HqvTk21UPrX17rqJ+2wrnZnr7oHP+y/nIgfdr7b+I
1U5Ezvfxrm/GvtKtYzprbFr6d609zk6O1Uby8tLR88O9uP4q87J66n006hQA
rEs5uTvmBnnr1siB7/mZrfnzkTmIkevNS6RymyWftzeuafVrV1ifgLLnRIUc
+Nmf2TsfKzIHYT1fitWMftZb5zZLKq5bM05PnX3G2Zh78/b5T82vW62cmmus
vS+PrHmMkTE57/pK11BHSsXNS8Y6qTMe9P2V/l1rrLVCLg/nSM1fU4nOyXpj
wNb51mqjrbXlj3VulXVSXr+SMeD5Ts2BKy5yrZVVPEn9edG4IHrtrFeHcu9l
aw+GyLGGFyMd3adM9aVKx3SpfZdrvidrz0TauTLe+zJ63bN1HpmKNxd/l3of
iToFAOvQu0H5O717HudZ37FvnrU2QWVEbMYq5MDbWftzRz4/Xv9ldHzC2v+v
5DqsvmLp37bmMrLv75rIgcfY7TOPOh/Lit+OntcsqTx0ydxma91mzfeUik1F
r7nHZ/tvqZhFTW6ulBcLTD0bq5WR8cqV78sja75k5DvEe1eMPjPGWgNeskdH
qk2r+Z5Y84ERUmuaruc88u9469pa5kGX5L81f6UkNj2Kd5bcKnl63OfUHLi3
v3/0+8qrQ2pjvJ/11rtG9ffuiBm0ajnD5dI7L9nK4RLrKme936LfzVYfIBcD
3qXeR6JOAcA6vDlc0eMq7z00Yj9nq5wcF7r7M1tnlEQ+PyPy7KVa97Gxfrb2
M6TKjP3gkXfHeFb19spxRLP2mtSYyfqZEc/ejp/ZWvMYlZ/29vYa/T5L5XpK
5zZH5Gqs98PI7+AVeGemRvffrLZTJdWvuKt9sNY5qng/NzJ3svJ9eWSNNdRW
RJ3dkIoTqczYG6N1Dbj1szU5cGuu5oz94HEub85JZNvjzb2p3SNYseDc/udq
U0fPmcmx2rYZ42CMd0QO/K/8M+/yvr/5DWY9/NFPf2/yZ1pZecG3fZBv/zz3
Z7/0/f+yeZ3f8hNffev1RX8POd/wsf/iXdfwdv5e5ju6/Pw/+hvv+vm3cY+K
a0iV7/nf/qeh38PO9F1Z5Wt/6AvD/o71zOoZ8H5ul3ofhToFAGtJtct3tY1e
PFH9y7s/q1Wi+q8ruvsz6/1tnVH2bR//syF/4+//X+l4xSd+5aNDv8uv+r5/
713X8DbXU/js3tWHGT0+Qhndl1SpveejpJ7P05+vuz7zR3/xfbfee7XfVvny
D/xrQ7/DVPtc2vZrLJ4qNe8na6w/+9k6jTdfMrKvqD6FNYfkt37nN4d+Zq+e
zb4fu92Xr/mB/8i8zoiYnNcX/cjffu/Qe9Ib70rF7HIxxUd6B9z9PADWc6ai
PlDU3/HauJr+zhd/1+eb48mrqO83Ki5ew2rbatoF7Oudj3/zkTlwLwYZ2d/z
/k5pLMkaL0bEorzr078b+az1jOms76lm7Kt2OlXov5Qb8W72ntncGH6neh+B
OgUAa/Hek5G5mlT+8Cq/9OufHPJZrUIOvI+1p43e+Xc+N6Pvm/pLz6Umtpr6
nmr7eqkyOr6LMuTA13fXZ7Zyuypq03qv24rjRrS5NXpzPRE5cLV/qTL72TrN
N/3of20+05HPnbfn5Nuz7AZ+5h1y4DvdF2s9RkQfRvEkq0Sue8mx5grUxLs0
JnouNbkuq98cNS8VuFh9qJp+gEexW2vuTW3+17rWq7w9W3yB7/SZNw4mhv0a
Ts2Bq41QHMQqX//XviTk+/PmvpT2D7z+YO+4zro+rR0a+Zz1junEigmW/rwV
l6b/Usd632k+Ve/zqufBemY/e6b352d/fpd634s6BQBrSsVbot9DqfzhVbQn
yojPaRVy4H28GGzv/FXruYmKr5TqXQMuVk609HPov0sVYiBrIge+vjs/s5Xv
6Z177M1rVls88vvrndv8ng/+W8nPUdOmperZ6PXCr0AxDWstmoruZe/f8OIq
KhHzR2rskAPf6b5YezbU9qVS12flyUbPC0rl4mv7q71rPiLmFgElvDYyYmxv
zXGrfZ69OTIqK4+jvGuPitFgbafmwMXaN0tF787efSK9faFr+gdeX0vnJ7Re
nxdDG52j6h3Tefczlxe9WHsGjR7f7s57N/euPfPeSaVzYnep972oUwCwJm99
h+Yg9uYavZh9b+yrhlVOjguN+MzeHpQ9/Qxv78zR44LeNeBixXJK9/Kz8kXM
41sTOfD13fmZvf071ba1/E4vFzV6XlDE3GbrjL2atjV1HvLotROvwpvLGNFX
9PIdM/Z83SEHvtN9sfowKj37M3rxuJH7iFq5+Nr+tnU/S3/eiqmP3lMV5/PG
f/rnPWez6Ge9313arqm/5c0TGn2uVi1rLKFSGgPH3k7OgXv7HPTWT80R8Urt
HBKvL9Qy50d9Ims97OgxXarf0HINVr+59F1gxaRHz4HdXW7uauu8L91Ha86p
Smmd2qnet6JOAcC6NIby9iTpiU2pffXGniP3cbYKOfB+Xr6n5R4rN2KtoyzZ
ZydSqi/VMnfDmgtSmg+z+nSt+TTcixz4+u78zGofrHefnoGWuV/evOmRc2Gs
sXXLNaTa+ZrvPzUWXz2mvStvPmNvvfHyzSoz3nO75MB3ui9evr5lTYKX31ph
DXjLNSiWniql74zenwdqWM+bivpYreO11Py2q5SOK9VXscaSKpojtHoeWdeY
KqPbN8xzcg5cvHkeKooxReWNrtLSL9I71Mv/1cTWlL/y2qZRe2RKxBkul96z
WNjbK463lkilNr6fe2Zr69Qu9b4FdQoA1pfbJ0zjzdr3kHJ2Xm595BpwsUp0
Ptg7Y12lZ178qp/Z24tSpeadr3iEN3dx9PnXqWtpzeunSulczNS+PjVrITAW
OfCy319TB3b7zLm9uGpir97v0nt2ZDsQsd/vJZUTK/1dnHE1npeXUGmpy7n+
56xzWu/OgediNSfeF6178tZ21qzP0O+Kikf3svrALWuvrfmOpXMEUs/Cqv0O
7C+33kz/rnbc68XGVc9K+05eG6b2JuKsiDvpc1qldM9Z7O/0HLjiI168UEVz
QUrm3KmtyfWH9D5snfvi7Z2porYrN37JxUdb50m3ihzTSaovVLI/l3VONG1d
O2/uvIriICX1Sv3p3DNb+7zsVO9rUacAYA/eGPZqa0viU3qnefsFXWX0vnxW
IQceI7cWSe/bXN9D/Rwvpqn3+MhxQeoz9VxDqo6V9olSawF6zqDCvciBl/1+
lVNz4Lk1SKr7OrvV+x1qM9V2emXX9QJixZNK8j3W+rPV49o78/anvYrOmiuJ
Weg+5WIWEXt5t9opB77TffH2DVIpya3ru/M+r/pas+cFta7TtM4dLfl91v4j
o+eO4rXk1pupH1Qy7lTbo3bKK7k+0yU3N3tUKb1e6/uwCnX6dZyeAxfFF3N9
GBX1TTRm1H+v+qG+j+qYxhLePjNXUVvUG4fLtVGKEyn3qOvSGk690/W/1QaW
/OzIPYqtdrLnrGCrj5eL+1pjup429NXl5qhdRfEQ1SF916of6kvqf6tvW/Lz
rfdop3pf851TpwBgD7k9Tqz30PWeVN9OsfqSd9mMdVpWIQcex8tzqejZUH7p
Gheon6D/rX5Bblygnx19dknUfr8Xa01C7ndyvuN+yIGX/X6VU3PgkjuXSkVt
n9pktYWKlaid0/9WDCU3R3r0XvVWrqc139Sa79HPpcaYM86NfjW53O1V1B+8
+orq96i/eMUscjlWlZExi9rPOeJ7PPW+5OYGqahuK+aj63ocZ+garb2Bo66v
lrU/ak//zFq7k5vDYP0c5/7hbt6e6Kl6/TwGzM31U6nZuzW3j8Wo0hNr1s9a
hf1uXscr5MCltA/TWqL6Brn9CluLxkKjc1OR8/cu1pxMjWettVTW+4MzH/rp
eS3p27cU3efemPIu9b4UdQoA9qIxaS7m3ltm5TusQg48zp3jgpo9MiOk1oD3
7GNzfT+p+uX1Ia31TqvmUvFZ5MDLfr/KyTlwuWt8N3ofiMj9fh9ZeRvN7U61
t3qHWnkw5gWNcVrMovYzjvgOT74vpXNua4v6V6P3gUjte9UbY7LO/9Pns2Lk
1v5bakdn1iO8jjvzzlZ/wFKyNmxE6clpee05fZ3X8So5cNFzfUccUmOGyD7l
HfGu0XX6rjGdeOd3aYx9zftWns4ai89Y+3Iq3evoPLjXH621S70v+Z6pUwCw
H8WPcussWorebTPHbFYhBx7rjnHByHMdL9FrwC9eTEMxm2svIv0tL4bDPjZr
Iwde9vtVTs+BS3RuSmvHR+8RfcfcZrHWUaqovuj5uNaKKc9jjZM532os3Y8T
YhaWHXPgO92X6Dy4Yjsle71HsvYejxjrWDlt/T3NGyqJd+k5WKEu4XXcMQ+n
Zd/vO+IYLaVnrOatrR/d1mGeV8qBi96ruX0Fa4r2nrhjvKR4V8nZj7mi8c/o
dR5y15hO9H3n9nfMFfa6iKf3c8QZIXeM03ap9x7qFADsq+QM0pqid9rsMzqt
Qg78nucnd+ZjSVH8ruf8lFZ3rAF/1Ls+YeT5v2hDDrzs96u8Qg5cFOOIiMvq
+tTGjvyu7pzbLKk2t6aoXo3+TlB2fmtpUW5P77ZZ538/2zUHvtN9UcwrYqyh
dnVGTigV/9b3HvG7S89x9MqM/jOgdUYR7U/rPquqO6uUnhy4l19T2zn7PmOM
V8uBXzRm6smJKdYyIvaovkdLe3fNZ5sxdrlz/t5Fn6v1/mk9yOx6dyrdFz13
JWeXPhc953f3K3ep98+oUwBwBo3devJ1aqdXWa9qFXLg91Ef5P9v795jtWvz
urDfNrVSRrGAyshBRwUGRFsYRVBmZBCQ43AYYAA76ACKgFoUFaxYi6dU/APS
6tjaEaKcRimEwWpVtJVGYztpsRFoWpsarQm2CU1Te0psmrzd33fvled+71nX
tU7XOtxrf37JJzDv8zx7r3vd63h9r8Oce3W3bvge7/ilrKdl37n8jrntvnvl
hUwjAx/38/c8prfOwCPnfj7vnHfP5Dx7jBWINeb7vZX36jn7JduhPXhfecef
+16e7zz3w737Sd665wz83r6Xuf2D0k9yj7EeUWrvajnP4Nx5lVqs0QhL5Ric
M9dD3sHS72bufb20lsAetaQNpPSemPN77++W7TzXDLyTZ5BubrzaHDd5hsjf
yXVnj1w525n3u9qzTK6HOa+TR+3Zb3eLd7rIs9mUMTF7vuc+R3lHSB5e6sOR
4zXvEGkX2XoO7Xs57zvOKYBzyX0o76NZS6TWRp17VO5DuWcdrT0z76F9Wred
595U+l2xZVvdVp95SHL/HBO1try0eXTHzp7PMH3z2LQcA34t59TYzCfbYEzP
/cj1r+/cO+r8hXm36dveVtfx0s+PveZqXfsz1+R6kvM5bSG1a0DePfOus+dx
s0Xf5k4+55QsLO+cxn8fR86pMW0WeRbIsZ9z4Cjjvm/luC9ds9b++a37jt7L
95LtzDldy81yfejWvtvz2Olr71pj7e1uzM7Yynd41OcMnqeuDSHPM33Xnzxf
5M9y/rR4z8k5U7u2bmnJ80npGdX5/bw89wy8JOfB0doab+X9duu2vyFbvtN1
8j3Vnu3Svpx+AUfaT89Vvqsjr6FzxPPeOQXwPFy/mxmDxVRd+++R8ostxoD3
7YdkXKXcJ88w+f2eYeD8tsrgp9iqb/O1vLeV5qDJ+14yoa37pDPfnn1duO/v
petPtvd2XNtiDPittPvlutfX3pVt6cbB7L1vYIy8+8lyYdgZMvDf8vA5OIbf
Xeh/ueU2/DsP1/78zmzL3vsDlnJOAQD36OsKYwe+9vs+cbNt6J5hft9fevPu
+wOguyZd2/L61L1bZjv23hcAfe1dW1+fut+b59a99wcA63iXDBwAAAAAAACA
k5CBAwAAAAAAAHAWMnAAAAAAAAAAzkIGDgAAAAAAAMBZyMABAAAAAAAAOAsZ
OAAAAAAAAABnIQMHAAAAAAAA4Cxk4AAAAAAAAACchQwcAAAAAAAAgLOQgQMA
AAAAAABwFjJwAAAAAAAAAM5CBg4AAAAAAADAWcjAAQAAAAAAADgLGTgAAAAA
AAAAZ3GKDPx7Px4AAAAAAAAAZOAAAAAAAAAAnIYMHAAAAAAAAICzkIEDAAAA
AAAAcBYycAAAAAAAAADOQgYOAAAAAAAAwFnIwAEAAAAAAAA4Cxk4AAAAAAAA
AGchAwcAAAAAAADgLGTgAAAAAAAAAJyFDBwAAAAAAACAs5CBAwAAAAAAAHAW
MnAAAAAAAAAAzkIGDgAAAAAAAMBZyMABAAAAAAAAOAsZOAAAAAAAAABnIQMH
AAAAAAAA4Cxk4AAAAAAAAACchQwcAAAAAAAAgLOQgQMAAAAAAABwFjJwAAAA
AAAAAM5CBg4AAAAAAADAWcjAAQAAAAAAADgLGTgAAAAAAAAAZyEDBwAAAAAA
AOAsZOAAAAAAAAAAnIUMHAAAAAAAAICzkIEDAAAAAAAAcBYycAAAAAAAAADO
4gwZ+G/+no8HAAAAAAAAgJfe9aMycAAAAAAAAADOQQYOAAAAAAAAwFnIwAEA
AAAAAAA4Cxk4AAAAAAAAAGchAwcAAAAAAADgLGTgAAAAAAAAAJyFDBwAAAAA
AACAs5CBAwAAAAAAAHAWMnAAAAAAAAAAzkIGDgAAAAAAAMBZyMABAAAAAAAA
OAsZOAAAAAAAAABnIQMHAAAAAAAA4Cxk4AAAAAAAAACcxTky8I8DAAAAAAAA
ABk4AAAAAAAAAKchAwcAAAAAAADgLGTgAAAAAAAAAJyFDBwAAAAAAACAs5CB
AwAAAAAAAHAWMnAAAAAAAAAAzkIGDgAAAAAAAMBZyMABAAAAAAAAOAsZOAAA
AAAAAABnIQMHAAAAAAAA4Cxk4AAAAAAAAACchQwcAAAAAAAAgLOQgQMAAAAA
AABwFjJwAAAAAAAAAM7i3jPwv/nfvuulr/zujwMAAAAAAAAAGTgAABzA7/i+
T3npT/yNr3npG3/w83bflpJsW7bxq9/5ht23ZS/f/Fe+7OV90Pn6H/jM3bfp
m/7SW176Y3/tK3c/Nr7/v3n7S//9//Kj7+Ev/NfftvpxnWPyf/9//teXbivf
197fD23kXLs+9/Y+5jvZjmzP3tvBC7ke5DvJfXXPbfgzf/sPvPTuf/zD73FN
/Fv/ww+89G3/2detvg0//N+98z2uiX/vn/zI7t8P59Wde3tvB+8pz0N5Xtx7
G3Jdur0m/vhP/hcvfde7v2X1Z+r8/tv6f/+/f36IZ3nYW9cW4XzgjGTg/XK+
5z5Yqn/4Uz++yfeTa0+pxjxXLv33AAC0lefM7/i7f/jlNvA8U9bqf/5n//jl
v5d29C3fR9OG+af+8294uZ3qn/xv/6C4ff/3P/8/Xm5PT8a5d7vaFvIZb98R
8l1uvQ3/yU/8+ZfbDEuV4yq5S77Dtbcnx2XaLsdUjpW1jpMcg32/b+9jhnZu
j/mf+r/+6aa/P1n3D/3YO14+3nPtK1WuEfk7OSafSx+M3DPyfdzW3/mHf3n1
350222Qnueb1bUN3rHT9cba4l6Y/UK09qav021nrHlJq03oux+S9ue1ft5aW
/ULSty3nXu61fcdarpM573IdyLm3Z5+UPeRZra+2+N3pY5Nn+NJ7Rr6vrj/O
Fv3J8jvyTjOmcrysdZ3OsXpb2U97Hys8T33vlak8a679u7tn2tr7ZCp/nr93
lH6ne+7Hro/A2p5Dm8oeZOD9+tpQbmuLdwcZOADAOeTdMe06cyvvdvn3a74X
JcfIc3DfeNoxldznzM+YfW2JW2Xgac8c6jPRV/ku0763RttztmlMzrP2PjMG
/PySs9zWFhl4zpvkmaVsdUzlvE0/pr334ZpK97Y1M/B8N8lv5lyDcq9aoz03
21TrN1bbntbXaGPA78vYfHBptXhGy3NoX5Y4VDlXc1weeb6jVmptsWv+3txr
5hxLucfl+X+Nbco9dM6x0nquDGPAOZK8u5Te69bMwNM/es5zSirXlq37fh9p
P/a9i6xRW/QffY5k4P3GPDNs0VdMBg4AcN/Srr0k++6r/LzW85GnbahVG2zG
451tvvRSG97abQGtjp+0b7bMfObm311lf7balrRx3Jas5zySl/Qda2tn4DnG
a+O9p1aur2fsl5H21FKt1Y6X72ZuX63ryjjNVts0N//uKv+21X2zbwx4/vcZ
j78zyPe+VS1pB8x2pt9Ji8pz4lnHhedz1fpNrfE7p8zJU6tkSS372i7JjFrn
4MaAcyR97y5drZGB57rU4hqRyvPKUfoybbkfW93/hkoGvg4Z+HtK29CYyv14
7bY9GTgAwP1qmSvfVn5uq3aq5LhL8szS9h3l/bjF91jaP2tm4HnXaNVe0VWL
7Lk07rqrzJuXbGlozugW7yPm+z23HGuleRrXzMBb91vqKsdqMoG992srOf9q
5/ga7Xi1zH1OJfNpkcX1jbvuKvfD7Iu0n9Zy8lb7q29bZD3HNbYNskXNve/m
HJkzF02tzvSceG3o/tH69y3tf3NbuU+1mLuktsZoNxd7Nxdz6e/l/tLiGDEG
nCMZuua3zm5z/LfoN3h7braeq+Ho+7H1PbBUMvB1yMDf05R+HWu/v8rAAQDu
U9psWr9v3lZ+/tK2odZ5wnUlo7r3cT5pN6hlPGtm4GvlcEvfYUrrRpXGBZTe
r3L8Lu1TbL7f8xrqA7JWBr7WeXdda805u7WhdSRbt+OlDaN1f61UPseSa1Ep
6yllSfkcpfvK0ntKaQy4rOe4tppfNTWnHTD9LZesB1Gr/Nwz9VnL+TtULX/f
Gn0lU7lmLJ07qNQvKNt7e72tfY5cn5fuJ2PAOYoc60PX05bZbd7LWs5pdF0t
rhP3sh9jjefPvpKBr0MG/p7nUN8xXbpepJ1nze9HBg4AcH+S+44Z/51nybzn
5B0tz2adjNVNbjj2Z8xtu6+Nb+4qz8HZlrTRZtvy2fJ/s82Zy3Ko0mf6XudF
H8q/U2tl4LW53brvJcdO+uBfHzv5noaOm3znc98FSmPAh8ZSZlx4Xy3J440B
P68x7fprZOBD510qx3+2LX83+WZ37uVakP+WPxvTTrb3+JmlSn1hrqtlO96Y
63GuQ/kerq+J6ec15l6V+9zcbevLeoaus8kV+66lS9uY+vpwyHqObav5VVNT
7/25Fo95Fs2xnM9x+0yS83Fo7fCc12e4b4/Nmlr+zqFrW76XPH9dfyfde8ZQ
frSkn23p+SzbO+fzLMnZ+saK6hfEXsb0s2yV3Y5tj8h5l2vC9Xt+nvFyTR+6
prWaq+HI+zHyzLZVycDXIQN/pVKfvZz7pffYNfu8yMABAO5PbU7UVNqV0i4/
5mclIxx6/5zbdj80d2LeiYfaiPIsPPR+3XLt562MyVtSa2TgydVqleNrqF/B
0Hq5+bM57X+l3Guo/Trb27c/l+Q9fefZUPsqxzd2XFvrDLxvrtTbSrvUmLkt
0lY2NEb6ntvg8/nG5Pyt2vGyn2p5Te5BQ+0yY9bLnXM9L2U9Y3Ln0rPC3LYa
8/3ep9L8qjmucx1paWrWPJRf5/jKM97QM8nQNbHFvDB7G7rmd9Xq95X6Fl5/
L0M/o9bWncqxOWfb+q5teQYcuhaV7sNL5vfpe9e5x/cS7t/YuddaZbdD7RE5
v1s8O+XPz7wfo/Ru3q3r0JLr0zpk4K9UemZJn5ZSf7Q1+2fIwAEA7stQjpK8
eur84Pn7Q2M9prZrDs29OTaj79Tes++tDX7K+uhrZOC17HrK78s+r/VzmDM2
sK+/w9gcu3SMzBk/YL7fc0pOMnZd09YZeO33jslY+wxdS5aMPd5Lcqqx31Gr
tpJa1tM3r+7cnzUnh0tbZV+NuSfn2tdXc8dtm+/3PpWuEVOfw1obyhlyDZ56
/649K+bc3Pu7mKt0HeirFr9vaK3tKe8EQ3PdTz0OS/Orjr0f9LXL5+fN6SPR
dwyfob8F9yfn7Ng10lpkt0NzvU19Nhi6H2x1v9p6P3ZKz45b5//MJwN/ofT+
kffd/Hmtz8dabS0ycACA+1IbM7NkjOpQ7jB1jERt7PacNvOh7buHts18hqlz
krbOwGttDHP6haf/RKltc857TF97ytjvttQ/pG+93CF97eiynvuWY3/KmoUt
M/DaeZdjfsk8j0Nzht/bHMBD44quq0UGXlp/ITV3LZDaZ5i6VnvfPSPbO/bf
940BnjP20hjw+1SbX3Xv7672TDcn/+6UsoQcr9kfe38nU41ZV+i6WvzO2jVs
zjobtc8wdb6e0jE99lmv1Ed3Tj+0vmN46jUeWhg7T0SqRXZbe5+du07Z0M88
437slMbC30P7Bo9k4C+UnsO6tpRSX7bUWvdQGTgAwP2ojcsYMwfgkKH5Z8f+
/FLfz1Sy8TXWF19j7d6Wsk/Gjm28rtYZeGkblswZXpubYEpunOOrr8a2ayaP
X7oNpeNM1nPfpuSqXbW8ptT6LrWYk7DWZteyjW5ttfaFvmqRgdf6ECzpP1C6
1k4dI9jXLprve+y/71vTcs6Yx75jWNvs8ZXG2kzpR7GGoX5BS9eELF0T721M
3dj10q9r6e+svWssmTO8tg7PlDGeyeD7auz1unSfmdrubgw4RzHUF/K2WjwX
1vo/z+1rlHOnNmfE2uuC77EfO6W+mHvP18J4MvDh4/k6Ky7NQdmNFW9NBg4A
cD9q84u3ykrzPleq/P4xP6P2Djn2Z5TUsqQjjnfM+3wyrinjT9f4XqPW5rz0
Hbv0veRzj20PTJv30u+1r9126vwI5vs9j7yTzul7kmqVgadvRqvxbyW1zKLV
71hb9lNfm0k+V6lNdGkGXhsDviTridr1dsp1vS//mvK5W6wR0dfPSdZzH0pj
cZYe30vV+u206BdU65s3ZxzzXkrnby0nWvo7a/OuL33OLt2Pp4zxLL0LjV0H
qjSOfGqfHmPAOYJS//XaNWJpdlu7vi6Zky5qbQhrnl977MdOqQ94au3cn3Zk
4I9K/dRu+9/W+sWt8ZwmAwcAuB+lNsOW43lq77Vj20xr66EubT+rtc0dra90
co4xa4r1zVXbVcsMvPR7WvS3bdHeXHoXmvL+39dWMWXMpPl+zyFtWaV5BW+/
29IYu1YZeM7hUrW8ZtWuI2OzgT2VxgMk7yjd+5Zm4LV+ZUvHoUYp75kyFnXJ
urdR6tc25brady7Jeu5D6Tq45/wQtTkw899bXa9KffOWZjRbKbW35p5Vu3Yt
/W7W6hcUtb5BY69JpX4BY7ehNGfQlOuqMeAcQW2dsFpes/T6X8q4UkufDUr9
oVNr9Ufeaz8O7c/0I9/7GGM8Gfij0rPX7TNEzrvSGJE1+mnKwAEA7kfpObHl
3I61tsmx4zT65l5NzZl/9Vat/WzpGPNWso1jx55mX2WflKpVBl7rY95qPtvS
Zx7brtgiq+nLyqZk4MaA37cc57X1BK8rGXf6PJSuV60y8No87C3nrqj9nqOv
gVvqJ9Cdu2tl4KV2mlb9ykqfa2zOV1pXZEq7a2kbxrbXyHru2xHnV621I7a8
35b61bV4Fl1bbV6M3DdqfavW+m7GrktTU3vHGDv+v3TPnrIdfTX2flKan16/
ILZW6nPevdeVaml2W7v+LM2CSn1UUmv1X9prP3ZK/fvvbe2O504GXp+XrO8e
WWszbD3+QAYOAHAfahlm64yulGWOzYRKz7Mt+jOX5jBMtZg/s4XavGld5dn+
+l2gVK0y8DXbKzqlDG7sfOilNoCtMnBjwO9f7Ti/rrQrdRnk2hl4bTx6yxxm
i3N8DTm/+9pLct3ozr21MvBSv7IW64x3n61UY67tpfv+lhm4+X7vV+25cc/7
Wm2uoJbXqtr8NEebN+hWqX9O95y7VgZeWw+p1fj80vV8aT/bKdvQV2Ov+31z
Nec6efR+FZxLbZ6I7lgs1ZoZeIu+naW+W2tkwnvux05pHqRWfdTZhgy8vpZB
X3vOFvMsjPldMnAAgOOozTvWevxzaU7dsZlQrX1zabtrbRx4izEqLQxl4Nm/
t+MyS9UqAy+9X7ccD1X7bsa8G5TaVLaaC72vzfko/SoYZygDT+Z5e06tnYGX
2vJarEFwben5t5fS/eb6er5GBl7Lx1quQbF0LfO+ylwHY3//kvk1jAG/b6Vr
Qsv1c+ZYc66ga7XxhEfOFkr3seuMeK0MvHQ9Tsbb6vMtzdlLc71M2Ya+GnNN
Ls0Vf/Q+FZxLzpO+Z4tunoju75VqzbnQl76L167bU5597mE/dkprMrmu3BcZ
eHkcTe2dt/Se3PpZVQYOAHB/slZWnrXSBpb3r9bz3JbmMBrbBlZrmxu7NnRJ
re2s5bzCS5Qyj+zXUqZaqlZZTIt1aYfU2i3GjBssHTdTvte+96gx7Zp968/J
eu5P7dqTY72vD87aGXgnmWOu27kG5jrWMmeNWt+jo1wbb5Wu57fn7BoZeG09
3ZZjZEvH19j76dLPXTouxmTgxoDft9LcKmusszhFaW6M1v2CYsvxhC2U5sXI
f7s+Z9fKwEtzY7Scb6rWjjzmHaF03xg7Tn3J/BqlMeB7Hzc8L6Xnitt3zFIt
zW5rc9ws7V9Uuz60fv7Yez9G7d15Sh9w9vfcM/C+tpTSOXWttpZXy34gMnAA
AK7VxsaNbTOsPQMvfTeuzSvcap7Gpfoy8PRdr+UqpWqVk5X6NbSeR7/U3jxm
DbfSsTd2TEGpHWHMMSfrOYe+XCDfba1dfasMfG21a+MR5/PPfaLvupRryO21
fI0MvLZ2Q8vPWcohU2P62PRdm8bObRF9c4CM+YzGgN+/0nzareeXnKo01njK
cb30d7U+z9fe3ttnwTUy8Nrc+S37bNV+z5i5d5b2lyy9owzNqWUMOEeQd6K+
6ltLoFQt7gGl98qxaxqU1J6ZWp5rR9mPpevRUe9RlD33DLw0R0uq9h7aou1x
DBk4AADXau1qU/LS0rjj2/nFWm3b3uOarl1n4NmuMeP0S9Wi3bG2hnrrnHfJ
PJppX+xrUxnbb6L0bjLUZiLrOY/ra0TOwzHnz1ky8NL4vSO2o+XcKs392NeO
sEYGXuoz0HpM39J1M/valKbMDzg3Q+/7d7Ke+zJ1ftW0Ueb8u9X6XliaK2eN
sdmla0dq7+/nVml8c9/z7RoZeG1+49btu6Uac00vPdOO7S85N0M3Bpy9ZVxw
37Pe7TwRnVK1yG5rYzfnrtGWc7uUrbd8LzvSfiytn1y7H3bzAV5rPScg0z3n
DDznZuk9dMyzXandMNVqPgQZOAAA12rPoFOe72pr0+Z3TH2PLb2vdnWkuX7z
+dI2MOWZvVQtMvBau2brTKM07mxsDtd3/I1t9yjN+Ts0P4Ax4OeR8yWZx5T1
CM+QgZfGs6TGzMGwtdI+L/WzWiMDL+VwrftT1dpMxlx/S3nNmH9bmq90qN1W
1nP/avOrXo/HSbt5+lmU8vKucr7k/GzRzrfFmtOd0nmeOtI8s7V5MfrGT62R
gdfWh2i9r0rfy9i5APreB8b+2zlzYxgDzhGUnoVK74qlapHd5rpUyqtLWXJN
zrHSvSHV8r3sSPuxNHb2uv937ue5PidLLO3zbr/nGTZ/94jzP53dc87Aa88k
Y97JS31BUq3mLJSBAwDQqeUoU8addWp5emlt3j5pG6y1zx4x45mqVC0y8KXj
EKeojQsYM1d9aQ68ofenUvvkUJ5lDDj3noGXjv2x587WSv2jco0vnXdrZOBb
rHsbtXUzx7Tp5rrZ1+Y5Ji8sXY9r44VkPedQml+1e5ZLe10tb6hVjr0l7X2l
8znHect9kGO5VtlHe39P3XZOHbO/RgZeGoe+5GdOPQbG3ndL9+2hZ9pSbjd0
3e/rY6lfEFsqvR/VxliWqtV6GLV3vlzTxl5jc17W1vPJdaHVe9nR9mOprSTX
/jz/ZR/XxgCUKv8m2+d9djvPOQMv3dNzHI45Bmt9alq1y8jAAQCIoRxlTi6Q
tv/aGJw869bW/su7X2lsb1d5Zz3D+12pWmTgtXbN1muo1/rxjhkTUHoHynFU
+vf5/kvtobV1oMMYcO49A6+tnZhzqfU5vkTO7777zNAaGa0z8Fo2tsb5X6qx
7aelY7S2rbn29V1Lh/oFGQN+DqV7cXLvvnGwcyrPX3OuL7Xf33I+19o6MKmj
9OsojQOsXd/WyMC3vBeWftfYfhClPh65V5SOyfz3vpwtv7PWJ7f0XKrNm63k
+WjKPBGdUrXKwPMsVcuuUznXa/eJjFmuZby1978z7MdS7pf2jznZd99nc63a
xnPNwGt9ffN8M/bnlOYSTLXozy0DBwAghnKUuXNqDeXgXeXvpO0qWXv+75j3
vrPk31GqFhl4rZ9+689Ra5cd27Zd6veQY+L2HSPHVykfG5oX0xhw4p4z8Fq/
+dTR+nOU2kprfaGidQZea69pcc29VaqxbUO1NTJzfb9tXy7ln0N9DYwBP49S
rtq6MtZvam5d65fX8lirrcmTWuNcb7WNQ+Me18jAS+3PW2bgU7a/dF9In53b
61z+d2m85fWcw336nqFbr5kBJXPmieiUqlUG3m3fUA6eyjvc9Xv+2LaBVvn3
EfdjrktbVJ795q7RznjPNQOvPdNNmW+n9syW/ptLvx8ZOAAApXUIuxpqHxqS
nCbvvLXfMaXOOL9XqVq00bZoaxyr1i479v2g1k6RynE01H4y1Ke/9DtkPc/P
vWbgOYZLGUB3DhzpGllaa3ZMu0brDLzWjrFGLlbq0zVlHY/aHBup5DtDc1sP
9YkwBvw8amvRtK4c31PWVamdf0vWN7hVe/ZJ7Z2Bl+bFSA21G6+Rgdcy5daf
vdY3c2zmlb9X6y+bfZvPVJvjKtfM2n2y1M+s9TpCUFI6V8ZcK0vVMgOPnEN5
fqida1Mrn6/lmtZH3I+1NejWqNbfO6/0XDPw0nk/9T16aE7KpfddGTgAwPOW
NqTa82bLHCXvskNtkrVKO1TeYVu+Ex9FqZ5jBt4dl2PGCPTVmPZ4WQ+de83A
h8Z5Hqk/R2kcc/7bmLzj3jPw0rVsaK6KscfqmBraV8aAn8uUPoc5DtM2nvti
zo1In5X0f6z1R7uuHONjn81yrNW2r0VbYmmu7OvaOwMvjZ0ck1NsmYFPvU6N
URs3NmXcZ2nNhzE1ZoypMeDsqfSskmN3zDoUpVorC821PT97yRzeOb9a9zE5
6n6s9QW6rTyf5e/nd+a5LJ8p/zf/uzaH9G21mFOafs8xA889uOX5UTsn5qzL
eE0GDgDwfOW9rzZWKO1KU+Ywqsl7cdrslo5NSlvcGZ8zS9WijbbUzpo2itaf
ozaP1dTvLW2TY9vfu0obwVDbiayHa/eYgdfyg9TSdoKWcr6Vrvtjr29bZuBr
XAdaZeBRW7ekVENzzUffGhSynvs0Zn7VPN+lH82Yeczz88a0sQ+Nqb1W+3lD
84CPMeZZc88MvDQvRrZ7zGdfIwMvPW8dOQPvjs+p40/zWYd+jzHg7Cnv6KXj
euz7VKnWysCTh03JY/sq1/+W1+Yj78cxc8jnvjomt87nHNP/oGXbDq/0HDPw
zGdVqjnrGNSeX3PsLnk2lIEDADxPQ/l3qsXaUfk9aVtvOT9aKtt+psyyVC3a
AUr50RoZX+v3g7zrJL8ZGueTP89xNubdyBhwrt1bBj6Uf0/JobbQl62mpuSr
W2bga7RjtMzAI+2XQ/Oed8fCmLZOWc+5DM2vmvxvTht4nrmG7sVD8+13hnL6
Jf14xvYT2SsDr82LMXZt9TUy8NbXqZqWGXjkXWPMmMrkQ2OP0b65VvQLYiul
LHnK+mSlap2Bp71gap/loUq7Qc7Vpc+zR96PQ3n1nJ+f57mh9h3vvOt4bhl4
6d0hteS5oXb8LmmblIEDADw/Y/LvFmsyph1ryrjv/N08Mw+t9dx6O4+gVM89
A7+W8QVpD0if43ym/N9uTrixbSQtxoDnnS+fJTlD2trz/+tTf7/uKQMfyr/T
njYnP1hL6XqQc3DKmhYy8H75rtNGnOynu3emXTdtRFOOgxbz/XZzaF/P0zlm
jlHaq2WBOUaWfC/JrofWYB57Px7qxzElo+jUsuHb2iMDz74pfe6x2ezQ55y7
bfecgV/v3zybdfMDZ9tzn8j/nnJtL/XRmNIvKP0Z8jvzXXXrDIzt48DzVjq/
kzNPyYRL1SoDz7bUxoHeVq4x3bPK2PaB/L2596wj78c8A5cquWLeeZd8L0Nj
zM80juAo7j4D/4l3vfQV3/WrRnvnf/WtxePr2x/OvSk/a+zP/Z8ergdzf+63
/PBXF39u/mztfw8AwLa+4Qc/9+Xnx1r9+E/+3Zd+6/e+fvHv+an/s55j/9N/
9o9efkb+o3/1K3p/xjf90Fte+v6/9/bBMeR/53/8j3ffr0uVask7RKeYgT98
P60/x9HfD/req8a+T+W7KO3LVI7THIs5bvf+nIyX72yr82OJH/r7w/n3N//l
t+6+nZ3f/hc/uXgP+JM/8nsn/axiBj7z2r/1daq0H/K59v6eftf3f0b/GPAR
x1KudfkOaplo8r4W9zHG+853//GXj63bZ70chzkvl/78nL+1yn12zM+pnYfX
58iYczLPnO/+R++ZxdTGre9xXJau41OvBd9eycDnbtuW16na/Szf5dbfy62+
saNj7jd5d8p7S95vSpX9/Lf+wQ+8fO3d+3NyPDn+S/NETH3GK1XOv6XbmWM9
7QW1yrNBzodcw/vaFXIO5Fo21C6RP5967zr6fsz2Zf/l+nq7nS3uTbVn8G6f
7n2sn81zy8BL522O5yXtiKX3kq5K7YZDZOAAAM/HmFy6Rf6ddvGh+b3+yk/8
udG/J39vKP+59xy8VC3eg0sZX76j1p+j1ja+9/tBjqO+/hRDeVyO5zHzDneV
97Yc33sfU4xzDxl42strdbT8u7Zf51yrt8zAp+bzY5Tuu7nf7v09lcaAD/27
XOOmVK6hRztGn4u0heeYb5m5DY01H/tzauN9rittrfm7+RzX8oxUW382/QFK
tXUGnnbbvsr1e+p3s0YGXrrOPrcMPNep28pz3dB3lO+3ln33fe9j+4vwfJTe
N5IlT/1ZpVqaged9akx/+inXtf/gb39Tte1gag5+D/vxVq4hc/O9Pn3Xsuvy
TNbWc8rAa8dWiza52nPdXv2fZeAAAPchz6pDuXSL/Dtqz63JAua+3+X9uNYv
dI3sYiulWjMDT7X+HLV22b3fD/oym6G23bTFDp03pcr51GLMHes6cgae63Hf
2MbrOmL+XboOZJ/Ouce0zsDTr6VUa+RipQx8775bc8eA1+4ptcqx+q3/6dft
fnyyXO0cyjE15d5Xe2ZcUl1ftFLlmXKr/VUbkzfnmiMDX0/f8Zg+H7V/k/ea
2vtJrfa+D3AcpfMiee6cn1eqpdltre9SzoO5z1F59qj11R86D+9tP26h1od7
Tn8Ayp5TBl7rm93N/bBErZ/tmD5pfWTgAADnN5Qdp9Lm0yL/HupzvLR/cz5L
qe55Xq9Stchjau8prT9HrV22Zd/2qeZkPTkfhuZNGKojzHVM3VEz8GQmQ/MP
HDH/rvUbmXsNaJ2BZxtLtUYGXtofe2cffcf+0BjwqeO/byvX4T3vBbRTWxtk
Sp/E3Gvn9qsoVZ57up9fqi3bLEufL32c5vy8NTLw0rzGazxb1+YR2HOO8Dlj
wPNnc/tKdjU22+O8Sv0o8t/m9gsp1ZLstjSnVldLc9XaXHJj52O4h/24ldq9
wjtqW88lA881YOk9b2nNmUNFBg4AcG55Fx2qlu3wtfE8122SS9Qy3XsdC16q
FnlMbbxN689Re9fec2zPnPl+S+Mc0o6S86rLcbr+yqV+JvrZH9sRM/ChsTDd
9h0t/45SLrZkfYB7z8BL1eqeOPcYu60xWU/pOpfrae6/+Ttpw66t8Zn5glv0
uWNftWeLOdnA0Jo3Y+p2DGLtXM9xusV+KvXdTI40d66YNTLwLe+FW85PNMWc
MeClPD/7LXPx51qb612eFc/4/sJyOT5K8+gveSYp1ZLstjYGPPf8Fvf2Wn/3
2vl4T/txK7nHlCr3oL2370yeSwZeOz+3qpznU78fGTgAwDmNmUM31fL9rTY3
5tw5cPvU2uHvdSx4qdbOwFvP1V3rc7HXvOBzx4D3jXPIfyv9u7z/9PWLnjov
LNs6WgaeuaKH+tfn3X/v+WL7lM7/pe2irTPwKNUa67OWas/20zlZT2kMeKl/
Q77zUr846+Dev1yrSjV3XGv6lg3Nf1GqXCduc+3ac+kW441rY4SXtJmeNQPP
vtrreO5r357bLyj3vNI9ujQ3lzzq+Sr1jcjcDEt+bqmWPHuUxoDnmG7ZL7PU
h652Tt7TftxSbe32vbftTJ5LBl6bA2jLmrq2kgwcAOB8kreNeT7N+ISWv7fW
L7T1WNjaGJI951Gcq1QtMvBan/3W40hr81vutW9bjgEf2l+lc0Dec1xHysBz
TR6q5ENH7FNRWw81n2vJunCl9ru0a5b+zdC5WtrW1mOza+NQW9+Dx5ozBrzU
L2hoLufSv9t7rQHWOY7GHhdDci/NzxjqD5Q/zzlbGtOdsbWl2mIf1dbYXmut
zNq/q/VF2vL5rbRf9rwu9N1n5owBHzNfc6m/mLHgz0/pGpXjKNfBJdeJUuW5
t/Rvav0rc1yXamnOfKvWzyf75Z7349ZqbUL32GZyVM8hA6+902xdQ205t2Tg
AADnkmfT0jxgXeV9cI12ltoY4Na/r9aueY9rjZaqRQae/bHV91Ia87dXu2bL
MeBj2ndK//Ze5yd4Do6SgY9ZZzmZ0FHnkG4xj3HLGlrnsJart9wvtTaTvnbc
LcwZA17qFzSmnbd0bGgzum+1ttCW64zmOMm5kuOok/825lmv9Fw6Zx7NOY5W
tfO11gerdZ5TWutjr/Vp+94p0r9izhjwMf2oSv92aps+96/Wp3uPqo1trr1P
tl7TvjaHd1+/+nvaj1urzQt4pKz+3j2HDPxI73pj+ptdk4EDAJxHcr3SHGVd
pU1nrTVka+vcte5nvPV6rmtb87PU2hFaj08u5Up7tWv2HZNDbYyluVPHfhel
98Mjjt1l/wx87LoVS9bT3sKR2kVSQ9ec0j5vnY3VxjLtsZ77nDHgkb4Bc/dV
Ke85Uhsx09Wew46S5ZXO862272hVyztq+Vbr9t1SLVnfYom+Z9eh5+PSWgBj
91Xfs8eec8Gzj3vKbmvzva3Rp6/UV6bvOnFP+/FIx5gMvJ3nkIHX2hmv+ym2
VJsPaMp5JgMHADiHI6wh29dGnlqrTadUR8+KpnyWVnl+6Z2l9b4q/Z7W4wPG
KM3TOpQ7ldo1x+ZVpTkKpq5bxTb2zMDTL2Jo7dtkh/fQr+feMvDS+NDs7y32
S37PHmP654wBj775ZabkVX1t2a3H3LOtWga+V5Z5q9Qvr/X6PCVHq9o7QK2/
ZMt7UO242WPdmL5ntjzLDl2fS+Pmx/Z3LM2tUZrXn3O6p+y2Nt/bGn36SnN4
57n5nvfj1mpzoR91bql7dPYMvNQ+klpzrENtjE3u1WN/jgwcAOD+5Zm0tLZp
V2lrXnscainLWStLKtVR2l5bfJZW7Y6l/gktx0LV2k/3WPd2btaztF2zNJZq
qzZ3ptkrA8/xVMpnukr/oXtZ2+HeMvBaW07LvmKl42uP9RH6sp6xcwkuHcfd
1wZrTfD7VmsPPEJfxNratVutu3y0Grq2lfoxtsxzasfNHn0F54wBj771S6a0
x5fmCNlrjQz2cU/ZbW3NnjX62Jey275nh3vaj1ur9bXde9vO5OwZeG3OsjX7
atfmqEmNfZ6TgQMA3Lcx+feYtelaKK0F3XpcXZTmq04d6b1zrFK1eqdI9ttX
Lcfo19Zo33rO37nz/db21djfXRrjdI/H5XOwRwY+Jv9ee96O1u4tA6/lYy3b
cqbM5bm2vmNuTN+c0jVtyn7qaztb49nguUt2l3Mx+zvnQCSXy72+9Xiv0jjW
1ufQXKWMMcfdVmuTHK2G7iml/pItx3jV7hVbrxkzdwx49L3zTNlPpfb0I5w7
bOeestvaNX+N/pqlPjl959k97cec+/nzvG929+nu+az1+Z9rWamdaI++mGd2
5gw89+bScbTFvFa1d+axc0rJwAEA7teY/HvLsadbrgdey1v3GHO8VKlavQvX
1nBrlU9vkbOPNXcMeOnfThnbU/o+t+qLwjRbZ+Bj8u/8+b2tH59rVdeW11pp
nY+cl6V/M+Z8Xzufrs35u3XOsSTraZHVLO1bxDilvoip1m10td81pf9O/m62
LVo+K26R5w5Z65rYtzbB9ecrGdq/W6zdUBrbuXUek8/Tdw8YOx973318yrFV
Wq/HnEHPS77vta4TpcpxX/o3tfv6luuB1+YWSx+ve96PtTaMlvOzRS2322Od
sjM7cwZe6//Sdz62Vvv9qTHPnDJwAID7NJR/58+2nk+vtk5Y622pjSPZao7L
lkrVKiep9QNvtf5iKdfberzjkjHg0WLO3iPsB8bZMgMfk38nt7E+3yuV2iCX
nlOleT1bffelcaip1v3Chsyd7zdK7T5T7uule/bex9bZ1OaqbTk/ea5Rpb4p
Y/q9lfLzVvOl5PwqPfOcIWOsXVuW/NzaHEst2nhrz6Jbz5XT16Y+tl9Q9OXn
Y8ejhTmDWFup5h5jtTmJW/fzPVJ223o/1q6zrcfUlvofpu6xveTIzpyB195d
t1jDpPZMN/aaIAMHALg/eQ4szQ+WSvvjHs9ipTENqSntQmOUxvdsOcdlS6Vq
OVawtI5Ti7E3te9+63fsJWPAoy8TnTpnb1/pb39MW2bgQ3M16ifRb60MvNae
2+K6VWozytqMW+6/JWPAwzjw+1Ebp9dynG1tTM6YLKSUgbfaxtLxNqU/3JGt
lYFHaYx5i/GJteNmyzVzcu3re4+aMo9U331pyrW99Nzcql8qlGpJP4ta36eW
2W2tX/0Wmdva+7GW57Vqwyld59b4vjhvBl5r45k6T94StbmHxrzTyMABAO5P
bV6uvFNtvfbytdLcstmuVmvb1tp4t5zjsqVStczA02ZQqqV5T+m9ZErO0kLf
+8nUNu9STjn2c+Tv9ZWxPce0VQZeyyxS8u+ytTLwKN2zlmZxtbkut+4XtGQM
eJTGLE25pvWdZ3usk3F2tTUbUy3WbK21q6fGPIPW8o2lz4q18UJn6Yu2ZgZe
m2dpyftF7bjZul9QXxY/9Zq/dM4g64GztlIteR+p9eVsNedb7gF7rj28935s
Nbd07T57lnvhkZw1A6/NJbDlcVRrx0oNXX9k4AAA96XWNpXau+2k9pzcoo1r
aAz8Pa4FHlt8n7W5S9P2N7dNoTaWcuvxLH1Zz9T3s9JcsmPb5Ut5kbE9x7RF
Bp5jopZL5dpoPEbZmhl4be7ouWON8l2WxoCvtc58Se6JtzW1b1JpXc4p19a+
7zDjTfc+ts6oNOdLd/wtnSun1nY/dqxwbVzR0rnKS9eLHPdnGAMea2bgtXl6
l2QztTxmy35BpSx+6jaUzrOx/77Un9f8xLRSqiXZba1/X94xW1xja339t1h7
eIv9WMvTUkvf//NuXutHcJZ74ZGcMQOvtR2lth53U2sDHGpnlIEDANyPPGfW
cpTWa3HNMbRez9L1KGttu2lPv9ccqVSt+zTU2iDnHD/JhUvvI1uPAe9rl5nT
HlNq3xk7fq7UT3nP+Rko2yIDz3t5qc6Uy6xlzQy8ds/KdzNnTGrtPrVlX5hS
1jNnG/rGy0/Z/33bYe6DddQyitSSOa1rc1lPnYeo1E8kP2fuePVan5Yz9UNb
MwOP2pyjc/qapn24dJ1tOUf/GC3GgJd+Tmrs/bz0PH6P6zlxTKVaOi9VbW3g
PK8teffr67fXVa4h6aPzHPbjks+af1ea4yi1tC2GfmfMwGtzL+7Rj7X2jJeq
PYPKwAEA7ketTepI4whrbaSptHtP3da0KZXWAO9q6tiJZBu1ajV3+xilap2B
Z7+3ei/Od1J7f996nrWl8/12lo557Hs/22PuPsZZOwOv5VFLsp611Mbf7DWf
/5oZeNTuWbmuTOmjUGuf2bpfUCnrmbMNfbn+2M9jbozt1Z4XUzlOpx4HQ22P
U68PtfNu6nj1fJb04yvVknNvaB2LPb7ftTPwWt+g/Pcpz9u5x9XGkW057jnH
VIsx4FFqDx/bR6DvnWbreUI4t1ItfZarzeORSpvE1HfoXJ+H7jF7zd+91n4c
GguejHFqDj50vb3n8QJHd8YMvNb2tnTOnjlq89QMXSNk4AAA92HofXOrGrOt
ebeqjXtM5R1s7Lphaeurvc+l5syN9hwz8BgaI5b3naHMJ2Oda99J2vG2HNva
95mWtHn35eljf16O7dtaMu6Oda2dgQ9lUVvUlOvIc8zAa3OXp3KtG7pf5XpX
23epLdfqaDXfb6eUuY05tkrjHfcYz/VcDM3Jk8q9aky7XdrUh57p5vTDHDrv
cvyOeU7MZ6j9nNSSdWqfYwYetXmDUulzMNRPIT9jaB2QLfdb33pNc8eh5/jt
+2xjfl7p/LRGLy2VqsWzXG3ts1Sem9LPaUxfptxj+t6drit/vtccCWvux9ra
Il2N6bOWfTP0naSO1u/2TM6WgQ+1k+01h1ntXas25kAGDgBwH46Qo6TGbm+e
i2vjjbtKG2fe2ZIN5Pkxkq/mvTKfeeidODV3DPxzzcCjNldvV/k7+S667yXy
PQ19J2n32Hre71ZjwDulufiG+jyX2oyt73hca2bgR+m7JAMfVlrD4Lpy7bu+
V3X3q2zHUN64dbbRar7fTi3vqd1/cx/t+3fpa7XHsfSc5NgcOi5TeYbKuZ3r
xPWxnfvZULbcHQNzs4m0x4/dvtxH52zf0ueo55qBD80blMrzXrLw6++l+26G
/m2LtemnKOXOS57PSpnTUHt4ac6CLd87OL9StXqWG5qfLZVzLs9IuSbcXiPy
34f6V6Vyndnz3FhzP+YaOOY+lutl337MvSDv62Pu9Wu1KfDobBl4ju9S5b1s
r/089ExW6m8sAwcAOL5S2/MeNWW7M8artFZ0q1rS9vqcM/AcU2PaLqZWjtOt
3wNajwHv9k9pnHspWy/N67r1WpdMs2YGPmZMxhYlAx9nqF1lbs2Zp2SJ1mPA
O6XcJt9P3304fUBKOZh+QdtY65juaskzWKe2/uvSavEM9Vwz8Mhz8Jj+rFMr
16etM62++/HSceilfm6l+eJzbS49c5gviNZK1epZbsy8b0trj37VW+/HsTn4
kpJ/r+9sGXjt3r/n8TTULlpqd5GBAwAc39Dc1VvW1G3PuIu13o+TKyzJOZ9z
Bh5r5OBb5xqlcUot1pnN3KmlSubT9cVPG0gpozvies+80poZ+BrZwZySgY/X
OjPMNXbrtRf7xm606ItTWks3lWM9GVPuAck0892U+hGt8b1RNrR2ydzKs12r
cby18UZzq9Xz03POwKN1Dr5HplUaA95iO2prGOc9Jc+juS7m75XmUcp1da95
ZTmvUrV8lsvzTal/3NLKc8sR5kbYYj/m/F+rb7r8extnysBrc2PV5hvfytA1
p6/tRQYOAHB8a7QNzq25nyFtP63GsqetqMX73HPPwCPvMEPrNY79TvK+tPW5
0Tf2eukY8Gtj1mmrVYssnnWtmYEfpWTg06TtpMWYnGTCW7cTrTHf77Wx82uX
amjudNY7LobWqx9b3TqvrbexVVY/dp3zsZ57Bh7p69Ai58r5nzmitt5ffWPA
W427bjEW1rwYrKFUazzLpd9wq7nf8owxZg3sM+7H3FtbtZckU9e3ZjtnysBr
a+ZtPbdVn6F1dPreD2XgAADHd4YMPPIelnaoue92ebfOu2Grd2IZ+Cv3xZw1
59Nene90yzUdO6X5flu3zc/NweXf92GtDHzo+rJlycDnSf+gOW262d49+gRF
X9bTej2GuTl4y3HDzJN2ujn3+lTu9znn1mxT754T52ThuWa3fEbsyMBfSLvz
nLw319FcT/fItNYcA97JdW1OH5PSnOnQQqnWepbL+Z1r8NwsPOdDrv9Hy223
3o/5/PnZc/djrkWuK9s7Uwaee/31uvPXjnJ+lrYv+saB5z5d+vtj3k2W/nsA
AIYlS6k9522p1We6nkO6NMdixvKkD3PazdaYTzrv6rXPumVb3VHeM/L7Mo9t
9nvte0k7eNpg9+yj3zcGfK0xhvldY9vks3/2yr+YLmPSxr4/TzF0fdnSlOtI
coHSz9lrTsrSNm01njC/K2MgS9lPrg25ZuaetscYx04p61ljfMKULOxoY7p4
vO7lHp57eelen/b3PKPl2N/6npb2xKHty3GV7ct5t+YYnJxXWzwXt9qmLX5/
7gV5Lsr+Lz0b5fqQPCvjQ/fYR52+fm5rrL2d69uUOa+yf/Ze55hz2/NZLsd2
rhE510rz6nT3mJw3uccc9Rlhr/2Y/ZH9kv1Te97KPswzaN7fj5JPPkdnysAB
AADYX2kM+Jr93tOukPacvnaItHlmbrC9+wUAz9ea8/2WJN/Kta8vB0u7d9pu
j7CeJ/D8JIfrqzWz51zvSmt/57k1mbwxmgDnIgMHAACgpdJ8VFtvwxrzEwDM
0Td34dZjgrINxiEBR9A3j9bWz23ZBuO9Ac5NBg4AAAAAAADAWZwhA//y7/xY
AAAAAAAAAHjpB3/0O2TgAAAAAAAAAJyCDBwAAAAAAACAs5CBAwAAAAAAAHAW
MnAAAAAAAAAAzkIGDgAAAAAAAMBZ3GEG/gYZOAAAAAAAAAB9bjLwTz9wBv7L
HvxKGTgAAAAAAAAAJZUMPOOuP3znDPzVD35BTwb+62XgAAAAAAAAANy6ycA/
rScD/4U7ZeDvX8vA/8N3/ql3ysABAAAAAAAAuNaTgf/ay+O620fKwD/0KgN/
/YNPlYEDAAAAAAAAcKsnA3/DVQb+YTcZ+M9+yqjXysDf6yYD/4CrDPyjHvyK
B5/w4FNk4AAAAAAAAADc6jLw7/vr3/03M776KQP/lU/jrj/sKYN+9U0G/l4b
ZODv95SBf8iDX/Lglz54XZeBv+MvvP17ZeAAAAAAAAAAXOvJwD/habz1bQb+
/htm4O9zlYF/8FUG/jEPfvWDX/dn/+Lbv0cGDgAAAAAAAMC1LgP/j374u//G
5XL55KsMPHOPf+jTOOwPKGTg/+IKGfh7X2XgP+8pA/9FDz7iwUc/+PgHb/yr
/+W7fizbDQAAAAAAAAC3fuTH/vpPZnz10zjrj3kad/1LnjLoD3jKpLfKwH/W
g/d98HMffNBTBv7aB//ag1/14BP/2rvf9ff33mcAAAAAAAAAHNNTBv7GBx/3
lDV/xFP2/MFP47Hf72l8dl8G/i80zMD/5acM/F95ysA/8MFrHnz4g19+eVyr
/PW/7fd81e/8tm//E+/442//Q+9429e+9Y9+2Vd96bd86Ve85Vu/+G1f8O99
0W9889u/4F//3D/z5t/wOe/4vC9503d87hd/9p978Oc/5y2f9Z0PvutNX/SZ
3/0KX/iZ3wMAAAAAAADAAdzmuQ+S9SbzTfabDPjzv/Rz/mwy4S/8ss//08mI
kxUnM/5NX/PWP/ZH/t0/+O8nS/6GP/z133S5XN7w4GOfsubXPmXgH/SURb/v
Uzb93itl4Flb/Gc8ZeA/8ykD/zkPfv7lcU3yzMue+dlfd3kcq/5JDz79wec9
eMuDL3vwlQ+++sHvePC7HvzeB7/vwe9/8Ace/FsP/uCDf/vBN1/5QwAAAAAA
AAAcwjdfSbabjDdZbzLfZL/JgJMFf/2Df+PB1zz4zZfHzPiLL48Z8mdcHudB
/zWXx7XAf9mDD3vwCy+PGXSy6GTSycCTUSerTma9NAP/aZcXc6lfZ+AZa555
17MGeeZhz1j0X3x5HJvezYeevP5THnzWgzc/+JIHv/HBV1wec/Df9vR5k4X/
7qd98A0PvvFpn/ybV34/AAAAAAAAAIdwneUm2/3GJ8l8f8/lMQP+ustjJpxs
OPl3suJkxl/w4LMffOqDX3t5nAf9oy8v1gLP+OtXX15k4BmfvVYGfj0fejLw
zLue+dczD3vGor/m8jgfevL55PQZC/7GB5/24E1PnyWf6a0Pvvzpc+bzfu2D
3355zMOzH37nk+yXrwcAAAAAAADgkJLpdvlust5kvsl+kwEnC/4tl8dsOOO/
u/w72XEy5E+6PI4Bz1rb1/OgZ/x1xmG/3+VxXHay6WTg3TzoLTLwvjXBM9/6
9Zrg3XzoyeU/8vJiLPgnXB7Hr+czJMv//MvjvOi/4elzvu3yOC48efhXPfit
T/sivgYAAAAAAACAQ+vy3WS9yXyT/SYDftvlMRNONpyM+M2XF/l3MuTXXx4z
5W4MeNbezjzoH3h55VrgycD71gJvmYFfrwl+PR/67Vjwj3na5mx7Mvxff3mc
F/1znj7fF10es/585rc+ff6Mf/9NT7JPvhwAAAAAAACAQ3rb5UW+m6w3mW+y
32TAyYKTfWfs9+deHrPiLv/OutqZAz2ZcrLl2zHgmQc9WXS3FnhfBv7TLm0y
8J9+ec/50JO/d2PBP+TyuC74ay+vzMEzHvyNl8f1wT/t6fMl489a55//9Lm/
8PKYi7/lyRdf+RIAAAAAAAAADuE6y+3y3WS9yXyT/SYDThac8dHJhj/98pgV
v/HymB0n/37d5XEO9I+4vFgHPJlzsufMg54supsHfWgt8KEM/NLz9/vWBL8e
C55t6NYF7+ZEz7Z2OfjHXh7XB3/D0+dKtp81zpOHf8aDz3z67J/95E1P+wMA
AAAAAACA43rTk+S8n/UkGXCy4GTCn3x5zIiTFSczTnacDLnLv7s50JM1Zwx4
5iHPmtwZA541um/HgE9dC7yrobHg3Xzor7q8WBf851xezImebUwOnvHgH3V5
XB/8dU+f5+Mvj9l+PuMnPn3eT7o85uL5/J9y5VMBAAAAAAAAOKTrbDdZ7697
8sbLYxacTDjZcDLizB/+Ky6P2XEy5GTJyZRfc3mRfydzzjzk73NpOwb80vNv
ugy8Nhb8fS+vzMEzHjzzon/Y5cWY8H/18pjp57N97NPnzOf91U9+zdM+uPV6
AAAAAAAAAA6hL9NN1tvlvsmAM995MuFkw8mIk30nM/7IBx9+ecySu/Hfr768
mAM92XMy6L51wJdk4Jeef1daF/y9L/05+AdeHtcHf83lMb/vsvBf+vTZfvnT
5/zop88cr3vaBwAAAAAAAADcj2S9Xe6bDDhZcDLhZMPJiJMVJzPuxn5nTPX1
+O8u/76eA71vDPicedC7GjMW/GdcXuTgP+vyyhw864P//Kft7rLwX3R5kYcn
23/t02f9yKfP3fkoAAAAAAAAAO7Cddab7DcZ8GufdLl3suLXXF5k38mSkyl3
8593+ferLi/mQG85Bryr2ljw6xw829CNB8/c7Fkf/P0uL7LwjF3PuPAPvjzm
4b/g8iITj1/89LlLPhQAAAAAAACAQ6hlu8l+uxz4NZfH+c6TDycr7rLvjP3u
5j5PtlzLv6OUf7fKwEs5eDce/FWXF2PCr7Pwn/v0WV799Lk+8OkzftDT5732
IQAAAAAAAADchdu8t8uBkwknG05G3OXe3bzn12O/M9Y6WfN1/n09B3qrMeBd
Dc2JfpuDZ7te9bSd11n4+z59lve/vMjE4+c9+QAAAAAAAAAA7lqX/3Z5cLLh
ZMRd7n097juZcjf2u1v/e2z+3TIDL+XgP/1pe97r8sosvBsX3uXhXSbe5eJd
Ng4AAAAAAADA/ety4C4X7nLiLjfucuQu+45/6fKe85+vkX93NZSDd1l4l4Pf
ZuHXefj1GPFr71PxswEAAAAAAAA4hFq2e5sD/8zLi/HeXe7dl313Y7+3yL8v
hZ97uz5435jw6znSbzPxeO8brwIAAAAAAADgLt3mv9fZ8HVm3M15Xsu+S/l3
qwz8Uvn5tzn4dRZ+m4df5+K32TgAAAAAAAAA59Hlwrd58XXufZ19b5l/d1X6
PaUs/DYP7zLxa7efFwAAAAAAAID7dpsL3+bGt7nyUPa9Rv7dVe13XmfhfXl4
KRcHAAAAAAAA4JxKufF1tjyUQ29RQ9twm4fXMnEAAAAAAAAAzu02Px6TOe9R
Y7arlosDAAAAAAAAcG5Tc+W98u/rmrPNAAAAAAAAAHDtiLX3PgEAAAAAAADg
Ptxz7b3vAAAAAAAAANiPUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWU
UkoppZRSSimllFJKKaWUUkoppZRSSimllFLqgPX/A2ZHzl8=
     "], {{0, 217.74545454545455`}, {433.09090909090907`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{330, 330}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{433.09090909090907`, 217.74545454545455`},
   PlotRange->{{0, 433.09090909090907`}, {0, 217.74545454545455`}}]], "Input",
  ExpressionUUID->"1a5da4f5-66f2-4c28-b307-d7589e41295f"],
 "\n",
 StyleBox["Table 1: Distribution of sentiment labels and agreement levels in \
Financial Phrase-bank",
  FontSize->14]
}], "Text",
 CellChangeTimes->{{3.873274682485222*^9, 3.8732748159213977`*^9}, {
   3.8732749543871*^9, 3.873274984646332*^9}, {3.873275113866273*^9, 
   3.873275127908936*^9}, {3.8732755202271357`*^9, 3.8732755490597715`*^9}, {
   3.8732788290207567`*^9, 3.873278883158487*^9}, {3.8732790268263783`*^9, 
   3.8732790277712555`*^9}, {3.883032553159997*^9, 3.8830326063565917`*^9}, 
   3.8830329197490387`*^9, 3.8830334740086327`*^9, {3.8830356029288034`*^9, 
   3.8830356058397965`*^9}},ExpressionUUID->"8d2df918-c15f-45eb-8fc5-\
f79e2e23f2e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["FiQA - Financial Opinion Mining and Question Answering", "Subsection",
 CellChangeTimes->{{3.8830329792952075`*^9, 
  3.883032984520254*^9}},ExpressionUUID->"6f2a1c45-9589-4981-b0ba-\
ce5076e31aea"],

Cell["\<\
On top, 997 selected sentences from the \[OpenCurlyDoubleQuote]FiQA - \
Financial Opinion Mining and Question Answering\[CloseCurlyDoubleQuote] \
challenge [6] have been used for training purposes.\
\>", "Text",
 CellChangeTimes->{{3.883033008787466*^9, 3.8830330119144917`*^9}, {
   3.8830330636011086`*^9, 3.883033133271*^9}, 3.883033225308355*^9, {
   3.8830334872036095`*^9, 3.8830335179847355`*^9}, {3.8830356139575033`*^9, 
   3.8830356334036617`*^9}},ExpressionUUID->"f1435e26-abed-47de-bb8f-\
5346980d0b30"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Validation Measurements", "Section",
 CellChangeTimes->{{3.873279406680524*^9, 3.8732794170162325`*^9}, {
  3.8732794972376986`*^9, 
  3.873279499245903*^9}},ExpressionUUID->"43e5c50b-a420-4b8e-b0c6-\
c81f4057d10d"],

Cell[TextData[{
 "On the repository webpage [10] in section \[OpenCurlyDoubleQuote]Train a \
classifier model with the subword embeddings\[CloseCurlyDoubleQuote], we can \
find information about Validation Measurements for different net models.\nThe \
following results are based on calculations with  \[OpenCurlyDoubleQuote]BERT \
Trained on BookCorpus and Wikipedia Data\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]GloVe 300 - Dimensional Word Vectors Trained on \
Wikipedia and Gigaword 5 Data\[CloseCurlyDoubleQuote], and finally \
\[OpenCurlyDoubleQuote]RoBERTa Trained on BookCorpus, English Wikipedia, \
CC-News, OpenWebText and Stories Datasets\[CloseCurlyDoubleQuote]. As input \
the FinancialPhrase-bank was used.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qu0LXddH/BdkYcIyLuggC9QWx+IRaW2LqxVK33YFmpbK2LBIqW1VKCF
iKCEQAKE8AgSEANCQFiCEiSSaNISHgvQ3Ca53JCE3jQmJqRJkwXJgtBYHut2
/845Ezabfc6e/+zZ85/925/fWh9d3Ny75z//mTl7zv87//9865P+82N/+Wsm
k8kz7zL9P4994rP/3jOe8cRfe9w9p//jZ5/2zKc+5WlP/nePedp/efJTnvyM
Rz3pDtM/fMgdJ5M73nky+dqJUkoppZRSSimllFJKKaWUUkoppZRSSimllFJK
KaWUUkoppVTn+msAAAAAAACwBTJW7T4FAAAAAACATTT2qt0/AAAAAAAAkM0Y
atV9+BoAAAAAAADYApuYDa6a+d0BAAAAAAAAttQqmeFQVZIDLtvfrwUAAAAA
AIAtUJIT1s4F22SBbXO/OwIAAAAAAMAWaZsXts0H11ElWeCi7O9Oc+68j7sA
AAAAAADABtsvB5vPy8J8VrgoGxwqFzwoD1yUBc5mgIuyvq87wF0BAAAAAABg
wx2Uh83nh8vywYOywb6qzdzARVngfP4X+/71M+625+4AAAAAAACQXJONNVnZ
bG64KB8cMhdsmwfOZ4FN+5t9avb1HlPfsOeeC9wLAAAAAAAAkpjPwpqcLDKz
2axwNiOczQZn5w3OZoN954IleeDsvMBmHuDdJ1/O/2K/773nvjPut8D9AQAA
AAAAYAMtyr5Ck43dZ7KblzWZ4WxGOJ8NHjRnsK9ccNn7A+fzwNuzwD/9wJVv
fv+ff/IYAAAAAAAA0M75f3btLTPZ4PycwdlccL91RPvIBNvkgTvzAs953xVv
qd1nAAAAAAAAsEn2MsGYOxjzBmNNzrsuyQVXnSt40JqhB+WB0cZ7/+F7L3pO
0/bjfutjAAAAAAAAwD5Of9fRnVztv33k6osnu2uLNmuK7pcL9rWG6H5zBJvs
cT4PvMde26KN93vLOz70q00m+G9POAQAAAAAAADs45Vvu3wnVzv3Q1d+eDKZ
/PXJ7nsH77UgF7zT3ty9vuYKLlsz9M6Tr54fGHlgvDfxgWf8/gefLhMEAAAA
AACA5ZpM8E8+cMVHJ5PJN83lgveYfOX7BdvMFVw1E5xdM/Sue3lg5JP3bvLA
qQef/pbz/qtMEAAAAAAAAJZrMsFz3n/0zyaTyUPmcsF77mVyTS5458nyuYKr
ZILNmqGzcwSbPPB+TR449a2//btnHycTBAAAAAAAgOWaTPDs8z/x55PJ5Nvn
csF772Vyd5985RqiB80VLMkCF60bOj9HMHLJ++6150GRB0497LTTz3qOTBAA
AAAAAACWazLB977v8gsmk8l3Tn3bXi74wL25efNriK46V3C/THDRewRn5wh+
49Q3Tz106m+e+roznycTBAAAAAAAgOWaTPCP//tlhyaTyXdPfcfeXLwH7c3N
u89eNne3yeL3CvadCd5lbzuzcwQfsNeeyCu/a+p7X/Gadz5fJggAAAAAAADL
NZngWed9/MLJZPLwmIO3Nxdvfq5g817BRZlgyfqhB2WC8+uG3mtujuDD9nLL
R7zsVW8/QSYIAAAAAAAAy81lgn8r5uBNdtcQjbmC8+8VbLt+aEkmOP8uwfl1
Q+8/+fJ7BKNd3zf1yJe+4q0vajLBX5zuBwAAAAAAALDYK/YywT8698jFk8nk
h6e+f7I7V/Dbpx482V23M9bvjHU8m/VD+84Em3VD5zPB++xlkg/ea0+06xFT
jzrplDNOkgkCAAAAAADAck0m+O4//djhyWTyI5PduYLfM9ldpzPW62zWD41M
MNbzjHU9l71TsG0mOP8uwTvvZYJ3m3z5XYKx/Yfsted79tr3Iyee/KaXyAQB
AAAAAABgublM8Eenfmiyuz7n7PqhzTsF7zHZ/52Cq2aCd9rLBJt3Cd5z8uV3
CX7LXntiXdMfjHa+8CVvOFkmCAAAAAAAAMs1meCZf3L4Y5PJ5NFTj5rsrh/6
N6a+bbL7Lr/5dwquKxO8y0wmeK+9TPCb9rLJ75p6+GR3fdNHn/Di018mEwQA
AAAAAIDlmkzwXedcfGQymfz41N+e+oHJV75TMDLB+xyQCd6hx0zw6/cywcgg
7z+XCX7/Xmb5Y8ef+PqXywQBAAAAAABgublM8Cem/s7ky+8UfOhk911+D5jL
BL9uzZngPfYywcgiH7SXTUZG+Yi9zPLHn/+i336FTBAAAAAAAACWuz0TPPui
SyaTyU9Odt8p+Mi9TPBhe5ngA6fuu5cJ3m0mE7zjwJngD+xlln9fJggAAAAA
AADtzGWCP7WXCf7g1PfuZYLfPJMJ3rNCJvjgvUzwuye78xcjE/yJ33zh614p
EwQAAAAAAIDl5jLBfzD16Kkfmvq+qe84IBO88xozwW+YywQfOpMJ/t3IBH/j
hNe+SiYIAAAAAAAAyy3JBL9z6lvmMsG7D5QJ3mcuE4y1TB+5lwn+5Fdkgi84
BAAAAAAAAOxjLhP86b1M8IenHj6CTPABk933Gc5mgj8qEwQAAAAAAID2mkzw
D9974ccnk8ljpn5sQSb4jVP3q5gJPkwmCAAAAAAAAN1saCb4U897wWmnygQB
AAAAAABguX0ywUfJBAEAAAAAACAHmSAAAAAAAADkJhMEAAAAAACA3GSCAAAA
AAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBuGTLBJ0z3AwAAAAAAAFhMJggAAAAA
AAC5yQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAA
AAAAAABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALnJBAEAAAAAACA3
mSAAAAAAAADkJhMEAAAAAACA3GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAA
AEBuMkEAAAAAAADITSYIAAAAAAAAuckEAQAAAAAAIDeZIAAAAAAAAOSWIRP8
hel+AAAAAAAAAIu9XCYIAAAAAAAAqckEAQAAAAAAIDeZIAAAAAAAAOQmEwQA
AAAAAIDcZIIAAAAAAACQm0wQAAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhN
JggAAAAAAAC5pcgEjz8EAAAAAAAA7OPlvycTBAAAAAAAgMxkggAAAAAAAJCb
TBAAAAAAAABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALnJBAEAAAAA
ACA3mSAAAAAAAADkJhMEAAAAAACA3DJkgo+f7gcAAAAAAACwmEwQAAAAAAAA
cpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAgN5kgAAAA
AAAA5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAAAAAAAABykwkCAAAAAABAbjJB
AAAAAAAAyE0mCAAAAAAAALnJBAEAAAAAACA3mSAAAAAAAADkJhMEAAAAAACA
3GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBuGTLBn5/uBwAAAAAAALDY
KTJBAAAAAAAASE0mCAAAAAAAALmlyASffwgAAAAAAADYh0wQAAAAAAAAcpMJ
AgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAgN5kgAAAAAAAA
5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAAAAAAAABykwkCAAAAAABAbjJBAAAA
AAAAyE0mCAAAAAAAALnJBAEAAAAAACA3mSAAAAAAAADkJhMEAAAAAACA3GSC
AAAAAAAAkFuGTPDfTPcDAAAAAAAAWEwmCAAAAAAAALnJBAEAAAAAACA3mSAA
AAAAAADkJhMEAAAAAACA3GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBu
MkEAAAAAAADITSYIAAAAAAAAuaXIBH/zEAAAAAAAALCPU94qEwQAAAAAAIDM
ZIIAAAAAAACQm0wQAAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAA
AAC5yQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAAgNwyZII/N90PAAAAAAAA
YLGXyQQBAAAAAAAgNZkgAAAAAAAA5CYTBAAAts0fnH9dkdrtBYDsTvjdTxzb
pLr0qs9U7zO2z9DXydXXf27nXG8cuvzm2++Poy3PfPUl1fsEKCMTBAAAtk1p
1W4vAGQnE4TlxnidfP4LX9rJCt9w1tXHfumki6r30aZ52iuOHHvtmVdVbwfb
QyYIAABsm9Kq3V4AyG6MWcdBJROkhrFfJzd/9vM72WDtftoETzjhwp35lpGp
fuDim6q3h+0hEwQAALZNadVuLwBkN/asY75kgtSwKddJrDkaba3dX2N1ytuv
2MlPm5IJMiSZIAAAsG1Kq3Z7ASC7Tck6mpIJUsOmXScvfsvR6n02Jse99tKd
nx3zJRNkSDJBAABg25RW7fYCQHablnXIBKlh066TWBczcrDa/VZbvGfx7I/e
sG8/yQQZkkwQAADYNqVVu70AkN2mZR0yQWrYtOsk6sab/+rY015xpHrf1XLG
Odcc+9xtXzywj2SCDEkmCAAAbJvSqt1eAMhu07IOmSA1bNp10tQV195ave9q
HKt4r2KbkgkyJJkgAACwbUqrdnsBILtNyzpkgtSwadfJbG3buwVjfmTbkgky
JJkgAACwbUqrdnsBILtNyzpkgtSwadfJbB26/Obq/TckmSBjJRMEAAC2TWnV
bi8AZFeadcjk2EZDXCfPfPUlO9uZd/ZHbyjKuRbVca+9tHofDkUmyFjJBAEA
gG1TWrXbCwDZyQRhuTFcJ7EG6M2f/XxRO5o679CN1ftwKDJBxkomCAAAbJvS
qt1eAMhuDFkHjN1YrpOnnnz42NXXf66oLVHX3XRb9T4cikyQsUqRCf7GIQAA
gNZKq3Z7ASC7E97YIesYQbthSGO6To477dJjn//Cl4raE3+/dh8OpSgTvOim
6u1le8gEAQCAbVNatdsLANmNKeuAsRrbdXL2R24oak/UU196uHo/DkEmyFjJ
BAEAgG1TWrXbuy5PeMGFO2NL4Q/Ov27HG866+vY/i+e/a7dxkWhX08a3n3ft
7W1vjLX9m9pugCGMLesYm1868aKdPnrtmVftfGfE/4//PVS+UnP7s/crzffn
Gedcc/ufPe/1l1U/PkP15diukxefcbSoPVHrPF7PPPWSnT465W1XfNV91vz9
1tNefmStfTP2TLDph9m+mv09IPpy6DYxDJkgAACwbUqrdnv7ElnTeRfcuPMu
l7Z182c/vzNOceo7r6z2XHeMVUQbrrj21uJjFxVjMs0+xLiidgOMz9iyjj5F
frVfPjErsqH5fxvfvX/0weuPfe62L+7bF/FdHf9+v+/p2tsvFVlEbLPkfXXR
vo8c+dTOPqzzfqV2X47tOoljVVpxX9PX9iNfjLmKXe+1mj6K49I1A4uMd9E5
cNBxnq841w86n/p4XizOqTgv4zppu+Zr3ItG/0b2u87ziGFlyAT/9XQ/AAAA
2iqt2u1dxZNOvOjY6WddXZQDHlSHLr/52H96+ZFB2h1jEDE21mfFGEh87r9/
6WHtBhiRF3TIOmq3ua2284Xm9+nZp11aNNcovivef9FNo9t+G7/wggt38oqj
K2Q7sxX3K9H+bMdyjNdJab3sbVesvM03n3NN7/daUZHNRR+XtCXui9ddcW10
7au4d+yyxut8RcYZ/R7X6rrPKdZLJggAAGyb0qrd3i7i9/X4/b/tc8ClFfMN
15VPnXTG0bWM88xW9EusP6bdAOMwxqyjL11ypMiQSuYZHdQvtbe/TOmcqpLq
+1mm2n05tuukSx5WmrnN739Jttq1Io+N57zW1Qel1SUTjN8F4p6x72sr+r+P
XJd6ZIIAAMC2Ka3a7S31jFMvKVpvq2tFPhXrP/XZ9sgah6wYh9zmdgOMxdiy
jj6V5kiRMXQdx1+UHdTe/n7i2aLY5hAVayZkOJZju05K2xMV96ldthX9sa5n
3RZVHLc2c03HmAlGnrnua+vDRz5lzuCGkgkCAADbprRqt7dEZHTretZ+v+or
n4pnsmvUqu3f1HYDjMnYso4+leZIXcfyIy9ZNLep9vYXibn1Q9+vxPM7m34s
x3adlK5JGfvVJUeK+9saFcd72Tk9tkww2jvEs4FRh6+4pfU1z3jIBAEAgG1T
WrXb29bQc9VmK9bmWuVZ4ci3albXfG1T2w0wNmPLOvpUkiOt8r0S83bGuP15
7/7g9Z23sWrFPq6SYdTuyzFdJ3HfV7pmepf2PO/1lw06P7C0zWPKBGPu7RBr
q85W5I9ywc0iEwQAALZNadVubxvxvpDaFblgl7bHWErNsZ6mSt+NsqntBhij
MWUdfWs7Rh/5yirfK/t9H9Te/qzINmrXKudO7b4c03XSZZ2E0meZInccOuNa
VAed22PKBIdai3e+Yr5g7Z+ztCcTBAAAtk1p1W7vMrWfn56tyCZL2x9ZYtc6
eu2tO+MfjdLn1WerNNPc1HYDjFFp1hHrTs7+HB1K6Xu9whCZRvTHfvP1a2+/
Ee+RG8v9Sqx52eU8rd2XY8gEYy5azGMsrTj28W9LtvXmc64p3s466qB7rbFk
grXXruj7HeOsj0wQAADYNqVVu70HiTGj6266baXf4WfHVVf9rKh4R1Db9sfY
UEk147EHrVEUfRJ/p8u7VJ592qWp2w0wVqVZR63qsmbzEDnSQe/Kq739EN9x
q77jLDKlPu9XxprvHtSXtTLByHPj/i7a1jXXbbu27Ow50+WZqcjv4jqNvmrE
sY4/69r+uFfer51jyAS7/vyMazLme0b2Gp8R8yGjn+K8Ke2nOFalmS91yAQB
AIBtU1q123uQLus2Nb+3x+//MY4x/5lNNhVz2bp+dtt3C5Y8/91l7K60f9rO
udvUdgOMlUzw4JrNwxaN1Uf/jXX7IebldanIYqLPI5Oa/8y414i5SV3XS+wy
b612Xw4xn3YduWfsZ+nzS6XrzMZ966L72nlxzLu803K/z47nveIcnRd937Yi
m1v0GY1lfdclb1+2tkesQ1Kavcf9a+3vEpaTCQIAANumtGq3dz/xLG+XinGQ
g+arzYqxtpIxjabajpm2XXsqxqe69lPp+laLxh2ztBtgrGSCiyvG+hdlRPEz
P3K2yFqWfdfU3n5kC10q8oW29ytxT9RlTlnpGqK1+3JTrpP5imepSq+bkqw3
+rbtudIoff5qWe69yrmySpZWen3FdRL/ps1nR+5ecj8a53DpcWB4MkEAAGDb
lFbt9u6ny/vsusxZi2eTS3PBts/etx3viWe/u/ZTtGPRc/jNc/oxDnf6WVcX
jfVsarsBxmpTso4hM8HDV9yy9LPju2LZmt21t99lTYMu/RzzuEr3tXSuYO2+
3JTrZLa6rGUQWVRJX3dZQz2yq5IqvYceKhMs/X2g9L6x9D0FcW/adV8YhkwQ
AADYNqVVu72L7JcXHVRdntFudHnGv82z923HS7qsOTUr1keK8bgYY4y5BKvO
qdvUdgOM1aZkHUNlgvFv+ppvU3P78Rml9yuxnkHX7cV3bun2SuYK1j6Wm3Kd
NBVZV9v15A/a58iZ4ryIZ6Lmn1NbZf30kqyr9NofIhOM+8KS6tpXJWuTrPI8
HMOQCQIAANumtGq3d5HIikqqzfPpy5Q+hxxjNss+s+SdhfF5XeY5rsOmthtg
rDYl6xgqE+zze6Pm9iPLKak+8oTSdxdGhtg2t6p9LDflOonqcq20Fc/GRV/E
/fAqz0vF/fG69meITLDk/dZRqzynVvJ7gGfYxk0mCAAAbJvSqt3eRUrHpGI9
rVW3GZ9R+uz9svWJuqx/Gu9BOe+CG5eur7VOm9pugLHalKxjiEywJKMa+/bj
PW8ltUpm0Yi8qHTN85gHNfa+3JTrJOby9XEch1Cyru0YM8GS+9E4Lqv0Vbxj
vG2tsjYJ6ycTBAAAtk1p1W7vvNLxoFXWVJpX+uz9svGTyMhWrRjjiO0M+V69
TW03wFhtQtYRNUQmGN8xffZtre1HLlRSfa45WDp/qu36obWP5Zivkw8f+VTr
bHUMoi9LMusxZoIl21j1XCy5nvs+7+mXTBAAANg2pVW7vfNK1w2N53r72nbM
FSypZeN76xjbGiJr29R2A4zVmLOO2RoiE+zze7vm9kvXDY2/39c+x9y8krmC
0Udj7ssxXifRF/HcWRy3mJtZ+2fIMnEPG8cj8rdYu6G0xpYJlt6Tx+8Pq15T
bcs7BcdNJggAAGyb0qrd3nmlc9T6WDd0Vun6ocs+r8u7eUoqsrZV3zeTqd0A
Y1SadcT8nvg3Q+vynVr6fVH7+6qv7b/7g9cXbbfv9Sbje7Sk2uRatY/lGDLB
uA8c+zrokV817xuM3LJLBjhfY8sES9byjOpjDmfbfWrzTnHqyZAJ/qvpfgAA
ALRVWrXbO+/wFbe0bnuMgfS9/etuuq2o/37l5UcO/LzTzryq8Ih0r6uu/9zO
emJPeenhlfthU9sNMEbHF2YdkffUbnNbpTlSlu3HWpJtK3Kmvve7NJN8+qmX
jLYvu14nt972xZ1rZd5Vhe95XFTRv7WvrUbca8Z9WWRrpfepbeud51+3tusu
2l26z6X3oXHMF50LJW4tmHvb5nqijpNlggAAwJYprdrtnVcy1rGOMdMLLr+5
qP/iuf++P3PVirHHGH9ZlldmbTfA2MgEdyvG3LNsP9YPbFvRxr73uzQziXNw
rH25ruskPi+yrpKsZ7biGNfKfl71zit3cuc+5gC2qbFlgtGeMVeb64k6ZIIA
AMC2Ka3a7Z1XsnbnOsZM3/uRG4r6r82YwJNOvKiXZ9a7VDzn/vgXXNipLza1
3QBjIxPcrXVkY7W2X5LVrON4lmaCkTGNtS/XfZ3E/UzJvM7Zijzxua+/bJBr
KbZz7gU3ds4wV6mxZYKl9+ND14lnHB3knKCcTBAAANg2pVW7vbMiAyqpLmMM
y8QaliUVY3JtPjfGo0rWRe2zYu5lm/mMmdoNMCYywfXtV63t1z6epedUm/uV
2sdy3ddJ6XqrTcXzavG+unVdQ3GvFfe0NWtsmWDt/lhWbe//GZ5MEAAA2Dal
Vbu980rmCcbaln1vfx3P3c+KMZeSfeyr4pnzVdbk3NR2A4yBTHB9+1Vr+7X3
WybYrQ2rzD8rvedru8/rWh+0ZL6hTLCsZILjJRMEAAC2TWnVbu+8kjGGWNey
7+2Xvr+ky/tEnvLSwztjUkOvDRV9u8p6nJvaboDaZIK7FfPOs2y/5H2CY1g7
tM08t9rHcojrJO4nSo7dbMWzUX2uIxqf1efzVnH8IkuL7LJ07qFMsKxOP+vq
3s9/+iETBAAAtk1p1W7vvBjfaVsxjtL39kszwaefeknnbcW4VIzpDbk2Z6yN
umofbWq7AWqRCe7WOtb8rrX9WKugba3j3XulmWCbZ5hqH8uhrpN4xqnr3Lzo
o8jbVt3XWANh1fmBkW3GeqiR98Y+zW9jkzPBsb9PsLS/GI5MEAAA2DalVbu9
8z585FNF7V80BrKKkjG+PrcfnxPPdce4ybrWkIqKz+6zvza13QBDkgnuVqZM
8NwLbmy93XU8w1SambRZh7v2sRzyOjnxjKNF25qtuFdddV9L7zejYp2GOO8i
A2yzfsImZ4Klz+jF8YzzZyjWtR8vmSAAALBtSqt2e+eVjnH1uYZTKBnjWMcY
X+PZp126Mzcuxoz6Xquz7z7L0G6AdZIJ7lamTLA0s4jvxz73u2Rdhag2c9tq
H8uhr5OSXHe+VnmfXJwLpfW2864tXke95Dm7sWWCcS9ZUn1fX2wumSAAALBt
Sqt2e+fFmEdJrTImMy+e+S2pIcdsY6wj3l0S4zurzseLPtZugOHIBHcrUyZY
unZnn+8fi2yo5D10bd+/XPtYDn2dRD9ed9NtRdtsKp576rpWROnzb13PnZLc
eGyZYOm5EGtW9H0+splkggAAwLYprdrtnVe6llPbca42Sp/5r5lRxXsM4xnq
LmNZ8Vy8dgMMRya4W5kywZi7XlJ93q9ERlRSbfOe2seyxnVSehxnK96r3GWb
JXnuKv28yZlgzGstqXivYt/nI5tJJggAAGyb0qrd3kVK55P18ex9PCteut1V
1imKOYkx9tVlLah5pc+bx7qe29ZugJpkgruVKRMMpc+39LW+YeSLJRXn39j7
suZ1EnlS1ypdryLmFpZUvDuw636V3NeWPuc2xLlScp53zWcb3g+YR4pM8HmH
AAAAWiut2u1dpHRsJsY8Hn/8hStt853vK5sjGGMhbT43xrde9Y4rdz7/gstu
Pnb0mlu/6rNOf8/VK7U99r1kbObw0VvSthtgjIqzjr/4TPU2t1Xyc3xnLk+i
7b/t3LL1zuO7dNX7lfjuLalY47LtNmsfy1rXSfRP1zVE4x70KS853HpbpfMS
f+WUI5326UkvKptnF/d767rudjLBDvsQ/66knv2aSzufA3GPGRX7FedV9Mdp
77pqN0/v+TxnvU5+i0wQAADYLqVVu72LPP1VlxTvR4zLdd1ejM+UrOMU9eaz
rznw80qezY4xwlX7LMYv2tbOGpyJ2g0wdjLB3SrNHca+/ciCSivmyHfdXuRD
pfcrJdurfSxrXierrCEa70xuu5143qqkumZScZ9aUqXHs+T+retxKj0fdtbn
7XhdLavZrDCOYd/nPv2RCQIAANumtGq3dz+L5qUtq3iet3Q78UxxPENfUsvm
JcZ/Kx2zW/U55D7G8Ta13QBjJxNc38/x2ttv5heVVJd2RG5Rsq9Rpeso1O7L
2tfJKmuIxvuw22wj1gItqYOeQdtPzBEsXQ9/jJlg6TkZ1eV3gXjmrKRWyfVZ
P5kgAACwbUorxgCG1ub39dK1sZqK8ZwYC2nTV/Gcb2keGNVmfCaeGS+paEfM
j+xyzEvH0A7K8Ta13QBjVvrzLsbBa3w/z2qbRdTOkWpvv3TeV1OxLmLb+5XI
kUoznqjSPKl2X9bOBFdZQzT6rk3+WjofsXRt0jinSt83GVV6PEvuF+N5s67r
epau7R/3pSXz+Lpcv6usUcr6ZcgE/+V0PwAAANrahIoxnGX78fPHX9hprmBU
jJ/EWqKRVc1/7hNfdNFOJtn1sz950207bVvW/l/vsAZVjCc9/42fKDre8fdL
cs3YRsZ2A4zZ8wuzjjFU25+7pTlS331be/uhZM7UbMX3YLTpWa+59Ks+s7lf
6frZ0S9t7lfG1Jel10mb+8lSXe6Dmjrzg9cv/fwnFr7nLyre69zmWMZ51CUP
jIq5ciX9dH7hu/7i/jnO519+yeGdPohjHedQtPdNZ1+z73bi73d5fi/at6zP
XvmOK4vXx4hjsY6fIfRHJggAAGybTai2Yzj/8ZQjncYB5ivGIbpmgLPVzIlr
eyxKx0uaiv45+W1X7DuWEf0S4ypdnwPP2m6AsZIJ7lbWTDByiy7z+OareWfZ
qhU5R2Rbm9aXY8gEw5kd1xCNfl+U787rck8a97L7HdO4vypd52G+Lj56S1Ef
xfqZfdWyLPVNhe9GbCrO58g6f+c9V++cW00WGfeqXa6ztseXumSCAADAttmE
KhnDObnwvSvrrGhLybHo+mzzfMXYUfTZqp8V45VtnjPf1HYDjJVMcLeyZoJj
O8bx/M0m9uVYMsG45/hkxzVE47mnZZ8fa1l0rSY3jkyuj3uspmJ/S/oozrG+
Kp5FW7a9rvMf+6zo83X9/KA/MkEAAGDbbEKVjuH0+Sxy1+o69nXiGUdrN/32
Ksk0N7XdAGM0pryobckEy5W++2wdtUpuUbsvx5IJhlXWED1oLcwQ89X6mFfa
Z8UcuJL+ibmJfVWb4xjz8/rKP7tUZJKeT9sMMkEAAGDbbEKVjuHE7+Dx/o5a
1eb9MAfpuuZRn9Vl7G5T2w0wNjLB3cqeCYaa9yul74QbW1+OKRMMq6whGmsu
HPTZQ91jlbwvr3S92ZLz5aBq+7OmVi4Y7Vt2PBkPmSAAALBtNqG6juHE+EnJ
2MaqFdt65Tuu7OW4xLtMatUq43ab2m6AMZEJ7tY2ZIIh1lUcOruI7+tN78ux
ZYKrrCEa2fCyz193fhxrlJbMXS09pn3lmiVzFIfOBeOaiDmRQ/zcoB8yQQAA
YNtsQq0yhvP0V10yyDtFYk2n0uell4mxriHHMWJbXd8plKHdAGMhE9ytbckE
Q8wrivfqrrviOzPOrwx9ObZMMKyyhuiytc8jc1zHORIZW7PtkvaXvlMw2t/X
Gqixnmrb7UYu2DWrLak4v0raxTjIBAEAgG2zCbXqGE6MQXRdz2lZxdhajHOt
awwgxghjba91V4wx9flc86a2G2AMZIK7tU2ZYCPmaq1jjYP4zLgX6vN+pXZf
jjETDF3vOSMvW/YOuvjv5190U6fP369PIjPrelxLn4fra97efJvbXlvreGYt
PjM+2/sDN5NMEAAA2DabUH2N4cQ4WMwni89btWJs7b0fuWGw94XE2MeHj3yq
93HCWIfqxDOOajfAiMgEd2sbM8EQ2ULcr1x89JYuh+KrKp7RWcf9Su2+HGsm
uMoaonFv2WYbsVb9Ku/nizU09ruPija0rbjHK+2fWMNjlXvxuKfskgmGuA6i
zX1kg9GOdV1bDEcmCAAAbJsYoxm7dawLGXPL4pnekjGJGN+JcZKaWVSMM8U4
UGRiXdZEjWfQ49/Gvg85v25T2w1QQ/ycq/3dWyreFdZm3+Lvtf3Mvta4HNP2
S0XeEG0uuV+JrCiyilgPcp1zl2r3Zel1MuQ645FZdb2WSo5Zc2/VJuNq7mOX
ze2LzK5tW+O+rGsfxf102+fGYv9ifmTsb1/ndFwfcZ2UrGca7YisPs4l8wJz
kAkCAABsrxivCjG+0YwdNX825t/7Y9xpvu2z41/Nfxvbc8yb2m4AqCkynfh+
bDK5TblfYb2a+6rfec/Vt99PRe4WfxY5X+32HSTaGG1t2h37MOR9YGyj2V7k
jovuST2TlpNMEAAAAAAAAHKTCQIAAAAAAEBuMkEAAAAAAADITSYIAAAAAAAA
uckEAQAAAAAAILcMmeDPTvcDAAAAAAAAWOylMkEAAAAAAABITSYIAAAAAAAA
uckEAQAAAAAAIDeZIAAAAAAAAOQmEwQAAAAAAIDcZIIAAAAAAACQm0wQAAAA
AAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAgN5kg
AAAAAAAA5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAAAAAAAAByy5AJ/ovpfgAA
AAAAAACLyQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAAgNxSZILPPQQAAAAA
AADsQyYIAAAAAAAAuckEAQAAAAAAIDeZIAAAAAAAAOQmEwQAAAAAAIDcZIIA
AAAAAACQm0wQAAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5
yQQBAAAAAAAgtwyZ4OOm+wEAAAAAAAAs9hKZIAAAAAAAAKQmEwQAAAAAAIDc
ZIIAAAAAAACQm0wQAAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAA
AAC5yQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAA
AAAAAABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALnJBAEAAAAAACA3
mSAAAAAAAADkliETfOx0PwAAAAAAAIDFZIIAAAAAAACQm0wQAAAAAAAAcpMJ
AgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAgN5kgAAAAAAAA
5CYTBAAAAAAAgNxkggAAAAAAAJBbikzw1w8BAAAAAAAA+3jJGTJBAAAAAAAA
yEwmCAAAAAAAALnJBAEAAAAAACA3mSAAAAAAAADkJhMEAAAAAACA3GSCAAAA
AAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBuMkEAAAAAAADILUMm+M+n+wEAAAAA
AAAs9mKZIAAAAAAAAKQmEwQAAAAAAIDcZIIAAAAAAACQm0wQAAAAAAAAcpMJ
AgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAgN5kgAAAAAAAA
5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAAAAAAAABykwkCAAAAAABAbjJBAAAA
AAAAyE0mCAAAAAAAALnJBAEAAAAAACA3mSAAAAAAAADkJhMEAAAAAACA3GSC
AAAAAAAAkFuGTPCfTfcDAAAAAAAAWEwmCAAAAAAAALnJBAEAAAAAACA3mSAA
AAAAAADkJhMEAAAAAACA3GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBu
MkEAAAAAAADITSYIAAAAAAAAuaXIBJ9zCAAAAAAAANiHTBAAAAAAAABykwkC
AAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALnJBAEAAAAAACA3mSAAAAAAAADk
JhMEAAAAAACA3GSCAAAAAAAAkJtMEAAAAAAAAHLLkAn+0+l+AAAAAAAAAIud
JBMEAAAAAACA1GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBuMkEAAAAA
AADITSYIAAAAAAAAuckEAQAAAAAAIDeZIAAAAAAAAOQmEwQAAAAAAIDcZIIA
AAAAAACQm0wQAAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5
yQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAAgNxkggAAAAAAAJBbhkzwZ6b7
AQAAAAAAACwmEwQAAAAAAIDcZIIAAAAAAACQm0wQAAAAAAAAckuRCf7aIQAA
AAAAAGAfJ71ZJggAAAAAAACZyQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAA
gNxkggAAAAAAAJCbTBAAAAAAAABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAA
AAAAALnJBAEAAAAAACA3mSAAAAAAAADkJhMEAAAAAACA3GSCAAAAAAAAkJtM
EAAAAAAAAHKTCQIAAAAAAEBuGTLBfzLdDwAAAAAAAGCxE2WCAAAAAAAAkJpM
EAAAAAAAAHKTCQIAAAAAAEBuMkEAAAAAAADITSYIAAAAAAAAuckEAQAAAAAA
IDeZIAAAAAAAAOQmEwQAAAAAAIDcZIIAAAAAAACQW4pM8LgLAAAAAAAAgH3I
BAEAAAAAACA3mSAAAAAAAADkJhMEAAAAAACA3GSCAAAAAAAAkJtMEAAAAAAA
AHKTCQIAAAAAAEBuMkEAAAAAAADITSYIAAAAAAAAuckEAQAAAAAAILcMmeA/
nu4HAAAAAAAAsJhMEAAAAAAAAHKTCQIAAAAAAEBuMkEAAAAAAADITSYIAAAA
AAAAuckEAQAAAAAAIDeZIAAAAAAAAOQmEwQAAAAAAIDcZIIAAAAAAACQm0wQ
AAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAg
N5kgAAAAAAAA5CYTBAAAAAAAgNxSZILPvgAAAAAAAADYx4lvkgkCAAAAAABA
ZjJBAAAAAAAAyE0mCAAAAAAAALllyAT/0XQ/AAAAAAAAgMVeJBMEAAAAAACA
1GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAAAEBuMkEAAAAAAADITSYIAAAA
AAAAuckEAQAAAAAAIDeZIAAAAAAAAOQmEwQAAAAAAIDcZIIAAAAAAACQm0wQ
AAAAAAAAcpMJAgAAAAAAQG4yQQAAAAAAAMhNJggAAAAAAAC5yQQBAAAAAAAg
N5kgAAAAAAAA5CYTBAAAAAAAgNxkggAAAAAAAJBbhkzwH073AwAAAAAAAFhM
JggAAAAAAAC5yQQBAAAAAAAgN5kgAAAAAAAA5CYTBAAAAAAAgNxkggAAAAAA
AJCbTBAAAAAAAABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALmlyASf
dQEAAAAAAACwD5kgAAAAAAAA5CYTBAAAAAAAgNxkggAAAAAAAJCbTBAAAAAA
AABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALnJBAEAAAAAACA3mSAA
AAAAAADkliETfMx0PwAAAAAAAIDFXigTBAAAAAAAgNRkggAAAAAAAJCbTBAA
AAAAAABykwkCAAAAAABAbjJBAAAAAAAAyE0mCAAAAAAAALnJBAEAAAAAACA3
mSAAAAAAAADkJhMEAAAAAACA3GSCAAAAAAAAkJtMEAAAAAAAAHKTCQIAAAAA
AEBuMkEAAAAAAADITSYIAAAAAAAAuckEAQAAAAAAIDeZIAAAAAAAAOQmEwQA
AAAAAIDcZIIAAAAAAACQm0wQAAAAAAAAcsuQCf70dD8AAAAAAACAxWSCAAAA
AAAAkJtMEAAAAAAAAHLbhkzwjWdfe+xjV35mcGd+6IZjbz3vuh3PfcP/PPbk
k48MckxjuzX2t6vom7b7VutYNscxPOt1l+9Yx7GrfSxW8R9e+fHqP88AgHZ+
8aSPHTvp9/7X7feNl//lZ481dcOn/2rnzz7y8U/v3Psc/+Yrqrd3SHFPE/sd
+x/9cOV1n7u9b279v1/c+bNDn7hl5770V3/rsqptfdxvXrhzfGbv/5v6f1/4
0lf8XvK69/zlsZ874eLq/bvpMl870eb5ij+r2ab4HfrV77r69uvxmhtvW3iO
//FH/8/OcXGOA6UO+rn+6c98/vbv/fh5GH+vdnuH0Pzsff/hT31Vn8x+3zX3
GPF9F/cktdsd93Cz44bRzvljee6hm46d8o6/2DnutdsbfuY5/2NnXPT3z//f
G3cvt6nXTrR79vyevbeIavp8bOdKI67POM8XXZ/N7yrNWPa6xq/ZfNuQCcY1
PJaKn4nNz5T4ub+OYzr7/bEJFX3Rdt/GdCyj4v4ifgbHPvTxvbzJ5XsGAMYv
vq9jbL204h42ft8f6hm3ocV+xf7Njh21rfjdO8ZxhhwviDGvrvfFcfyHHJeJ
/hm6om9cO+XnVIw9zleNTDB+T45xz+i7LhVjeyW/YwLbqet3afxsiucQsj0X
HWNacT+zyvd2ZBNDZz/R7jiOXb4zor2RDa1rfPYgcV/Q9V4ucrbo5xrtDpt6
7cS9QZd7/aj4d3FvUqvP4/eMuCebzy/bVFzT0e9jyzapSyZYr+JnYXz39H1M
ZYJ1Kn6HjvunVZ6N2uSSCQLAeMV4SYwf9FGRb9T6fbhvcd8W+9NXrbtv4jh2
yaUWVfwuUrJeRxcx3lWj+swEt+XamZ0PO1tDZ4Lx+3HXLHC+Yvxu0+ZqAusX
3/19jS39f/bu/fe6L6EL+9/Vq9pW/UFpUmyCNkUbL00tVoRCA1iGm1ADtIqT
SlJBCNIISdFYhURMsKXhNs4wDJexjJSLCIHW0SotaW2bb7/v5+vxOfN5Pmdd
9l5r385rJa/M5Xmec/bZe+29117vtdbO5xz1ut4q97mMdR9Zcv2dnQ3mOKYP
7rXxLL1lVv/so+0e1ZZL1rPlGJiznjvZR6PaFlvWlcg+GlXPU65wzWIMmeD+
JRn/yHGjMsF9y5r7w5mLTBAAjim5z+i5WqPbr3tIX9Wo/oH7kmxlxr7J9s6Y
c5f29az1vpLH7FFGZYLPcu5k/alHZatMcGQf6cuSLHbvfQwcQ/otRt/7c13f
ey3xpdIfN3M+f67rM9oY2d8ztjvzBmeugZp2xYy2Z8YuzV5T9IznTrKvWf3I
ydFnZ2tpR8+oL9nvV5vnTD+Z4DFK7mWjroMywWOUtH16j92Zi0wQAI4n7ctR
40pflnzu7Hlms7z23rSRJW37kbnP7O1Nf8OMtlzGNe9RRmSCz3LuZDtKv3OL
TDBrWS1dy6u1zO7nBY4vfeCz8q9cR4/0vrQWWUtwi5Lr+8j8Ift51v05JWO7
ZqyxuEXbc1bb4oznTu75j9ZAGFWSrc1aj3OL+iIXfG4yweOUUc+GMsHjlN4x
qWcuMkEAOJZkUrPf5TY6+9rC7GfsW0kf2Ih+gq22N8dydL/GqDU3e8vaTPBZ
zp1aHpgyOxNMn92Sd+MsKamP1suC57TF2INcT88yX3DrvrVR97y8z22Lkrpy
prFdt5I6OLptccZzJ/f6jAXaoiR3HD3m6Mxtf85DJnisMuJ8lAkeq6TN0vr7
zlxkggBwHFk/qOX5PX8nz525j2esaJ6h89+zVk3aXS3jsPMZZ5l/0/qMnXlz
meOWzOR+DG32Tdp2reOO0x+xZnuzHn3r9mYsWrYt25jjmDqQ/57f3PqeoGQz
IzOTGesdtZQ1meCznDsteWDKzEww+6z12TV1M9uSuQS3czL/mf+d/781Vxz5
rkngHFrHHuSanHt/ruXJJ27X9VwvW6/rue8dvY+9tS2U35uxFLe2xS2zyX/e
rr3589Z7ffbvmvUte9YjT99qjln+za1dlHvGrV3UUh9GzaPKvmrd5szdzHre
2c7U2/u23B5ti7OeO61j0m7bnX7pW/1e0rYYOeao91kldfw+T81+z/NDayaa
ZxrjpZ7TJTLBL/5I0dlypJy3//aXfrT6ux75xM+dLBP87p9v/m1nO5a38p9/
y882/b4zlzeZ4MI6CwCMk3ZkLbNKv8ObdXoqn/V7PvSxprWl0v7c+3fXfNW3
1/uS8nydvq+Wtng+7+//er2v4MPf84uLtvf3ffXHm+aq5fjkONU+L+PGW/oH
3qx/P2B/Z/v3Km9yH+fOQ3k2aV137Tu//1embUfLfI9sZ/pHWz4vf6/ld+Xc
3XqfA/up9ZHlut7SL5Xr+nf/QH1N7Dd97Cv69Gb6Ex/+ZHX7U3If/QNf94mm
z8x+ae2rezNWasF2Z1ta2kS3e0bL/k8fVu2en3bhmmOZfdOSmabtlXZT7fPS
lmvJu0a1Lc547rS091NPsj0t39XatngzH2Tl/k6drJWeZ5V8Xkvbv7WdxbX8
qW+TCR6xrLmWyASPV3Jfa/l9Zy4yQQA4hlo/e9olLf0O91re3XLkfvY8N9f6
ZN6s9dnY/3WTPo7as3b6S3r3d/wPHy/P7cv2pm+v93PT9q6VJZ/7UnKnRyVZ
6t514jXPcO4ko+55D9OsTLDlnMxzbe85mf7SWh9vzp2j9tcDY9XygX+xRmTH
Z+b+VsunRuQDM7SMe1l6T0rboWWs1JLPb1mfYck9Omr9jH/1B39t8f6ujQ16
8w7AxjkE99KWm922OOO509K2SD3p3e6WcXVr8+P829r5s+RZJZ+bzLlUUpeW
nDucm0zwmCXXkqXHVCZ4zPIf/5mfrv6+MxeZIADsr/Ys/GZdns5nyZta30Dr
GKg9pD+nVJY8Y9/v89pak73jb9NuLJU3711ZkdvVxmqPmCuY3/yoJO/cu068
dhyvfO7k9y15lpqVCZbqx21/L+2faplje9T+emCsUpb05t09C6/r6f8oZTJr
84EZamOC3qyV2dBvVZLfXMtOeu95LfO+3rzTrWHNhEdyr3tUcpyX7JfUrVpZ
k9vV7qNr5wqe8dzJuKdS+RfvW1zw2Wlb1PLGtK9n1MGUNc8qUTsv12w75yQT
fLf0ZFS5lr0mn5HvXfMOjaX3ht5M8LY2+F56nvV6j2WuaUu3K8cw1+TI57SM
dyqVlr6VEfuzZT7+fcm6AyO+d037CwAYo9Zvsnb+V20e1RHnCtbytbXP2FGa
E5fSOy+uNp53bU7TMhZ57T4pzXM8Yh5z5XMn/V9Ln2VmZYK1vqkl8ybu1fq+
l65fB5xH7bq+9rpbyx+Odq+rXXdH3YfSN1QbK9Uzprxl7veI/qhS22tJvlYb
j5Y5hLOP6dKM96znTm1d1Z7+/tfU3g25dB2MtNNKOemIZ5XUhVoWu7Y+ci4y
wfHXiJdyzWhZ9/plWTo+tzcTPNP8rr2PZa7BtXWcHpWt5mK3rAd1X5a+bwUA
OJ5Sv8mo98SVvuOIcwVrbeO1Y+Jvajlea6ZUew/fqPcU1d5Zsna8cCmDOuLz
x1XPnTwbLHkWvZUZmWCtjo96Pqn1DVonC65ti2tu6TuO1MeezKFURt3nbmqZ
Uut6nLXPWTPv66Xau/9a3iV8k3ZaKX9JG2lEW642F3Fp7njGcyfHr7TPR61R
UesTXlIfa88Qo9rNtZx67XgszkUm+G4ZnSNFrtO9cwYzDmDJd8kE35YZxzJq
43y33p57MkEAeE61fpNR2Vfte0b1zYxQyx5GrmFZmyvYOuZ5y/lkpb6TNf2D
6ecqlaOtL3HFcycZ9Ih3SszIBGvj7EfV8dpzUU//LnAuuQZucZ2pXdeP0t9W
W5dw1H3uXmlsUGt/Zy1/GT0Xs9QG65kDVqsXI/sGS/t5yZz4s547tXZ45iZu
sd29dbKWZY7M62tjA2atDcExyQTfLbNym96sJteEJd8jE3xbZmZwtXEcr5Ut
rq8yQQB4TqU2YObLjPyu0tjeIz1PltYmGr2GQ21MeGv+WGpj5vNH5mmlNafW
jAMv9SctXVdppiudO73rmqQObH0+13Lvtetj3dTWDT7StQoYq3QdHD0vu3QN
HbE+5OxtnDVPvfZem5Y2WGme+4y1uGrvFm7NTmvzsUZud6muL5lvd9Zzp9YX
Oir3rs3N7F1no7TdS99lWVJa13d0m5djkwm+W2bmSL3vcVhyn5AJvi0zj2WO
Tanf57WyRf4mEwSA55OcqFRGj6MujTc/UuZTyrzWro35mlI/SmsmWOr/WvI+
m5L0tzwq2Y6ln1vKYkfOzRzhKudOfkfqdM/zSY5/+j9Lz48zcrNSP/GaevdS
Lac/Sl89MFbt3B99XSuNc8g1bcQakWuV9seM9lDU5m3Vso7afLVZ1/BSnte6
r7bMYP/i9/1ycT/1jCU787lTal/lN408D0tt9d4+1tI6561r7PYotcFGP2dw
bDLBd8vMHKn3XXRLxkjKBN+W2Wt19u7rLa6vMkEAeD5bjY29qb2L7gjrh5bG
8Y7uG7j/zuybaH1/4L1brpM242vj1NPvM3J7a2uJLf3cUtY4OmNb6yrnTs8z
QOr//XHYOhMs1Y+l7894pDQe3nMQXFPtOju6D6w2J3nvd3TV1guctX21TK/2
vbU2ysi11O+V1rduHbuTbc+99bV70Oj7au3+39OvfOZzp1RfRo43ilLm29Pv
W1s3dMZ7j/OZt2eVM+UBjCcTfLfMzJFq97SXZUlfhUzwbZmdCZaeZ18ro59x
XyMTBIDnU2ojjX4Ojto44tHZ1RKlcdNHm6tW2s9pqye/yVjh0VlraSz8kvWm
bkrzM4/27HGVc6f1GSDH5mU92joTHDmnYc2+njH+HtjflvOFbkrzhvaek1x7
/9mSMUwtamss1vrrav1/s95NXNvu3u+9teWyhkLGfY3e37X1uI861+5m1LlT
WqMiZdS65LVt7uljLbXdzNljtitkgr/z/d9R0psjfeP752TtM5f6rsp62vcl
+dGS7+jNBL/4/XvTrN872pGOZfylzox36THt8Y0LMsG9jysAsE5pffpZ9/pS
m/OHfvof7b5PSmvxfN1/+3O7b98RlNYwSXa09HNLOUz60vb+3feucu7UngF+
4zf/3zf9hr3bk+ed0b+/1j/9+R/+5JDvqc0/eLQ/gHMr3f/zZzO+84cK7wL+
uV/5P3fdH7/3qz/+pt8v17xc05Oz5Lp/G7/z+7/uE1O+94src87+5Lf87OJ9
OrtvrVSO1oda6mfO+K6ezzrzuVOrb2l7jNjeP1yZd9vTbiq1w//c9/zi7nWL
a/sameA7ZWaOVLrWvSxLr7cywW2OZfRkvClbtAVlggDwXD7rSz9avNfP6vcu
tYOSP+y9X15be/NW0j+29/YdwW8Uxjmnn2LJZ5b6SpK/7f2b713p3Ck9A6S9
X6rzW2eCW2V1f64yZ2BU/yBwLKX7/4xrWpTmP2ecTO43e++Xra0d/1G6N+XP
Zm57aWzT0caTlMY29Y7vOvO5k3ZOqeR7tqjXPf3QpWOX9vTedYtrkwmuO397
5DpWur6+LHlWXPI9MsH5x/Km9/2Qs9stIRMEgOdSG686q9+71t++Z+6WuWiP
Su+Y6auqjadeOj756wrv4VmaM85ypXPntWeAjDFN/lb7t1tngrXn4vSRjeg/
L61hm6K/Da6ndP9PmdVHVLr3Pev1ptZ/V5ufWMpLZq9HUXoXbeZZ7r1vb2pj
bHr6la9w7pTaFvmzEWtV1PrcW7e3NC7tCGMruT6Z4Ltl1nWuZ05ZxkIs7UeR
Cc4/ltGb8ab8lR/8ten7SCYIAM+lNl61JRNYIms+lcqebczSth1hXdO9pR2b
9SselbRxl2Yyf6XwjsJHY+vTR5N6nPwpcozi9r/z72b0p17p3Ll/BkgW2PMZ
W2eCUXv/0dLxsTe1dzy4DsA11ca7zGqbZM5bqTzjvORaPlP796VcbnY/Vmnb
Z62huURp7Etvv/IVzp1a22JtvamN6eppW5Ty3C3mk4BM8N0yI0eqPW++LGuy
I5ng2zIzE6yNZXmtbNEOlAkCwHOpPf/Oen9bbY7V7PUalu6Tlqwh+yzP/ckV
Mrct7et7aavn9x3t3Xitam3qNetild5Fc//ckX6qrONUyiZflvQPZnz+qKzu
SudOnk1yXJdkp3tkgjn+pbXZUpa+VzD1o/bZs/JeYF+1/pBZ786rrVt4tPUm
Z6v1gbbMtSvdm2bncqWy9/shb0pjsFJ6+5WvcO60zN2ovcfykfz+kW2LUr7Y
cn7cP6uk/ffas0r+3PsSeEQm+G4Z2X+R61HvO+fWzBEMmeDbMqsvKveC0pil
R2WLfiOZIAA8l73e61d7F9usLKFFqc1Y6ltIrtK7NnzGBJ9l/H/aoqXMLiVt
3DXrNpbeUZjvz3NO7z5+tN/X9k85dz6wRyZY2/+3Y9D7PJe/X6qDKUdbwxYY
p/RuspSZ313KC7ZYM+pIauN9Wvohc59/VGbOo6rdo/de1zFtqVo7KtvY2698
lXOnNpcv39X7bsHkiLWssXf9gVKmW2p75Zkjx7+WT96XnC95xtmz3nI8MsF3
S55Ncn9aI9eXPG/3nKO3svTdHTe9mWD2z21dni0tyceOkAnmvtoznvlWtlqf
RiYIAM+l1D6aPZa59Hy8Z/9Xqa322jNxy7N+raQNftS5R8nOcjxqzybpQ1qz
RmdprHfeC5RnpFpe01vWZFbOnQ/slQnWjsGtZG20Wr1M3avl3Sn5OyPeVQgc
U6mfPWNeZn536f13z9TvUstkWt/rXLo/zMzlamtopuxxH8l9Lv3VtXZU2npL
5n5c6dyprR+e0tK2SL91SzslbcbePu5S2+u1vuysnbD2WSW/+UzzgphLJnis
sva9CdGbCe5Vlozr3TMTzPW3pS/lUVk6P72XTBAAnkup7Tf7fRR7vutl6Xbd
r0e4ZE2PWukdezxLfmfan61z8tLGXbpW403v+xJGlYy9W9I/59yp74ct5iy2
PuOlz/D2nslk+7e1fVvHa8oD4fpK97zZucaea10eRcv6iq1rQdZynbVtlqXf
mzJrHc2XMtYsGU7uk619kUvXrrjaudNyHG+/Ld+xtG2xJA+MUjvwZf/x6GeV
lrVJuT6Z4HHKqHlkMsG3Jc+NL9dU7jWiZCzGVue0TBAAnktpbO2eucae/V+l
fpNbGzT/uWTth5aS9tXW2UPGruV4LxlDnDo0Ytxwbd2pmWVJn4xz5wN7Z4KR
/q6lYy9bSvq/5IFwfaXr2ex+mT3HmRxBrrHZx6XSMwe/Nl9v1v2ppW04KxPM
vTB1Zcm7itL+W7OW/RXPneTPo9enuC9p7y99R1TpGN/a5Pns2jm1tKStedb3
ojOGTHD/smQt4xKZ4LFK7j9bjSEKmSAAPJfSM+XsPqij9n+VStpl6bealQfe
ytZzkpb0H+U5JH1qo7az9O6flm25jclbujZS/m3Pb3Hu1Ldly3cbZl20Neuy
vFbyrLPlsxiwrz2vraXvzhiUvffNbBl7USs9mVXu56X7QdoKo9tZmZfXUmbd
V5a2TXPvXJvvXPXcyX5JW2ZkNjjindal7cmapqnbs/v3l85x5BpkgvuW9BWM
vpfIBI9V1ozTWUImCADPZc81CI+Ua9zkGbpUkju0ZFe39SbSx5X9uGTc9pZr
8ywpo9+9XZp397KkLyT7p/Qul/TNZYx3Tx9Zz7v4nDv1bdkyE7zJ89OIXLB1
fTrgOkpzavbMNWavvbi32jsEU7Ie48h9mjJ6vfbWsU2zMsEludWo+/TVz53M
vRuRC47a36WS+tXS/519k32Xv5s2df57T1s85VnWNeZdMsH9Sp5zsm21d5r2
kgkep4zuZ2khEwSA5yLX+ExpY5ZK6Z0cGXOefq1SOzVt9/RBtfYrbNEerP3m
UknfQX7z2nHC+fct5bZGSu/Y/uRErf0crfvcuVPfli0zwRy30WtkJU/eeowm
sJ8912Xe831se2rpg8r9e8mcvoztqJURa5+3/o5bmZEJtrajXiupX2lbZdzb
0u+/6rmTdwSObltkm9a270ulNOc2zx851qUsIfUzbfvWdTf2GP/F/mSCxyi5
vr58h+hSMsH9S/o69nr2lAkCwHORa3ympflY7xqa6btpWScr7cI1fTQtau/c
aSnZzjXvXPv8D3+y+h3pE8zfW/o7s89bnnVa1xNz7tS3ZYt+ovT5Ll0vtrXk
WKdfcMv9Cmxvz+t6qb/qqplgS/9TMoylcyFyL6/dH/LnazO6rEvQMz99RibY
um5prSRfWzLO62rnTk8mtrRk25asSZDngiWld43Y/N38m5aS+jfzGHM8MsFj
lYxjXHtvkQnuW2asB9tDJggAz6X0vDt77coj5Ro3vX0qa8dytYxh71nPcomX
7b+Mh769m693naS0ZZf0JdX2w8h3lrSs7dXSR+PcqW/L7EywJVe/ldTlW72+
19OPayw8XNvVco0ja+17WjtevqWdlfvD0jFHmZ/Ru171jD6/7Kf7sqYtlzZX
73i0K507ude3lkdti5593rt/escvpn6umZfYcq6mbT3zGHM8MsHjlVzv1txf
ZIL7lJFzPdeQCQLAczHX6TP1zpkbseZUre9h9lzB/IbMgXrUvk4Wlz9vfU/O
kvwufVmP3mMyYgz/vcwbqK0j2jJX0LlT35aZGVrLs91t/mrpPM1xTv1rrd9y
Qbiu0r3hbLnGkbW8PzAlf2/td+Ua3/Je4dwveuZRleZQ1TLCWfMER7blevuW
r3LutI41ynfW+nDz56390D37KPNme8qIdehasnVzBZ+LTPCYJeMRlp6LMsHt
SvZ11nHec17gSzJBAHguco3P1JMJjswGam3w2XMFW+UZo+V5IfVqTY6Z9nGO
RfogZvQxtMwHrfWhOHfq2zIjP0v/bsZT1krWP+utg6kXLZ8tF4RrKl3PZs+D
KWU1yVv23jejlN7LPOs6mzZF67yt/L3cw9MGeDk26DaGJH9e+rxa5rl3H2Dr
va5n3dYrnDstfcZL1nbL32/JYlvbjj3zBEc+P9R+g7mCz0Um+G7J9ea1ecM1
LeNWesrSNbd7M8Hsn9yrt7Zk7aAjZIK5fxx57IRMEACeS6nt90y5xk3rc3ba
7lt+b9r2e9eVm/SJtYyjTiaz97aW1Po2av0ozp36tszIzlrW9Mq4y9nfMWL+
CnAse15bj3Rdn6W1T27GvePl2pqzSsYy1dp0e2eCNy3vimvNec5+7rTUj7X5
Wstcu2Tmtc9pfVZpfT92q4yzKs2BzZ+N/D6O7QqZ4O94/3eU/M3OHCmZSu0z
W3zRP1/DJ8/bvWtT30qu3b3f25sJZjtH/N4t9B7LW747Oq9NLvg5719L994f
r+nNBLNP995mAGC5Utvvb3/801O/+5O/9BsPvzvbtcf++NzG5+yv/Pa/N/y7
axnVH/0zP717fbnXkgt+2bf87O7b+cgXVeaEZh5g6d87d+r7If26I7/rD33D
T1afjb/1+355yHd9c6XvLn1tv/tLP7p7PQbGybV7r2trLdfYe9+s8dkf+lhz
X+OoPtXX9PZ39Za0i/I9tbbkke4dLfM2W9qfZz93av2+2U8jtvWbKnNI08ap
9Ren/rSUtGNG7+ta2/9MGQHryATfLTPuX7ketIzfGHE+ygTflkfHMscj/Ru5
J+RZcEnJWO9kvnvvk5dkggDwXEo51Oxn+NLai7MzlUfSb9XSjpvx3bWMasaz
/Rrpk6g9O2Qs3N7bWVJbS6zUL+Pc+cCWmWDteW70b69939HOSWCd0jl/hlzj
iDKWo/YO31uZmQfepC+vdR3RnnI/HuWPFtYnn9WGXKNlTcjaZ5z53PnKyhzB
JfNtSmr9+y1jm2ol2eKM7PnzP/zJ4veOyk45Ppngu+VoY1oy1qHnO2SCb0vL
scw1Ns+CS+dyjn5O3rqOyQQB4Nz2fIYv5Rq3sdZ72Kv9Uxv3e8R2V6nf61bS
H7j3dj5S6wdL38ejf+vc+cBWmWDOj9qaVaPXYsl3lsaAmisI13LUXOOI9/8W
6S9syd9y/d5yXYG0XUatB5b7wMu2QmmMV28f7RY+p7ImZEptruCZz51SXThq
26J2vGbu89J3n3n8An1kgu+W2eNalswX7Lm3ygTflp5jmTbA0rFGR2rfyQQB
4LmU2kez+y1Kbac9x03VnrNntvdL/RJHnXNXy9WyTtLe2/hI7b1xpWcd584H
tsoE80xbKnlOnvH7amuIHrl+A31K94TaetJrlcZ6zLq+zVRbI/FWcj/bq18x
27hm7a8cl6wv8fJzS/ero7blamtC1uaunfXcqc17m3XuZd24Uqm1LUq/OWVm
W7DU7suc4L3rMtuQCb5bZmeCLeM3Xpaeubsywbel91hm3MzS+YJHaRfIBAHg
uZTeIzJzfaPaGp1brB/1SO05e2b7t9RezTvk9q4vr6n1axx5HaFan2WpHjp3
PrBVJljL5ma9bzP7u/SMd8a+euB1tevMzO8ulaOtL1XTOpch7a2935Wc+Vi5
b9bGN91K2mL5+6V5XMnPHpWj9qHV1q+vrUFw1nOn1gc6q81fW/ugVk9qzyoz
24KlZ5Vk7HvXZbYhE9z2vLupjd94WXreqyATfFuWHMvaOtSlsucaWTcyQQB4
LrU857XxzyPU1pzccg2pl9LfUyoz+69K7fzZ46yXqmVUe70bskWt7Vt6HnDu
fGCrTLDUxzz73Cj9xtHvGQL2U5uP/Llf94kp35vPLZU9x0n1SM6Re35LyXz6
0WsyrpX7dvo4c3/P/esm9aKn77O0D1reFbfXsStlVLV5DGc9d/Ya3xVr3kud
41EqM/vqa2ts7F2X2cYlMsEv+khRd470XT9f/cy1vvmvlcdfvCxv1q5p/Ozu
TPCb/+703zvKVsdyyfqua79zlHx/T3mTCR7g2AIAy/zR/6qcL+TPZ3xvbRzV
H/r6n9xtn/yNHy6Pv/vcr/3EtO+urr10gDrzmtJ45U/+4m/svn2P1Nq+pba5
c+cD1Uxw0PeU+r9mP5OU+gzfrJN1gLoMrPc5X/Xx4vV1Vv9XPrdUvuwv/Ozu
+6bms7/8Y2/u9y3lh37qH733u7/ko7tv8yyldeBzD997+x7J/exRqd3rznru
lPLbN7ncxP1davO/mW9X+Le1fueZffXVTPAAdZn5ZILvli0ynd65aBnr0frZ
MsG3ZemxTNtm6fuKc6z27AOTCQLAc0m7pVRm9V2Uxrj1tF233raUme3fUvbQ
M85va6W2b61fY0+1tUNLx9q584GtMsFSX2Vy/Jm/8Wj7HJin9L7WWf19tX6Y
5C1775eSjJUqXaPvy5v1lg+wzbPU2gZHPpal+3nLve6M506p/Tq7v7O27aXc
vNZ+nZk9lzLBN3MrD1CXmU8m+G7ZIhP8uu8sr1PzWmkdzywTfFvWHMvkekvf
LZh70l5jpmSCAPB8Sv046Quf8Z2l8a17Z18ZU1wqaYvP+u5Se/XNuk0HqC+v
WduPtJfaWOfP//Ani//eubNdJlgqI7/nNWfvrwfalea6vXk/7oTvrK5feID9
8kjmxJeyoPuSHGPv7Z2tNG/t6Mey1h9c+/dnPHdK61zM7u+sPW+U+vFra1XM
aoPW9vnez3BsRyb4btkiE6w9u75WWj9bJvi2rD2W3/q9j98rXCuzn2sfkQkC
wPMprcmX9Z1mfGdpXO7sOT81tfWPZj5nl9Ywaml3pW2ePoa0JbMf07ZPf8fs
tmWpT6V1zdOMicv2R3LXbPPs/sPa80Et63HubJcJZr7po7L3WP6smbf1fgfm
KK0fPmstwdJ19MjjgVrzwPydM6x/Orv+tB7LjEe6teUyDij1I2OQZt/rSvWw
Zc2HM547pfbrrHbcTW0NwFImWJuPOnM+7lnHLzKWTPDdskUm2PrO3lvpWa9H
Jvi2jDiWreupvywZTz3rHSQlMkEAeD6leUczxjSn/7xU9n6/cpT6uGa2f0p5
Ty1fKbU7Z78TpbQ+Ru27S/0x+dyZ62eU9ndLluncOcbaobPrt7VD4XnUzvfR
96R8Xukeutd48ZrkFaX7962kP3KPvq29lMavtIwpK401mv1e6dLxbJn/dcZz
p9SGmT3nbc3aobFXu6i0z/Ye18l2ZILvltnPYUvWpEz/QOvnywTflhHHMu2k
M60hKhMEgOdTWucoZXRfzppxsVvJ2OBHZVZOVct7anPmSuOzZ2ZrtfWLMp5x
6b5OmTW3oLa/W+dllsoznDtbZYJr5y+sUTq3ZvfRAttKn1upjO4Dq91Hjtjn
1poHpk9r7zbdbf2B3D9zT4rc32fs18zvK5WWfVEaa9T6GUvU1shomf91xnOn
1Aad3bZY+16+tWtdLFHLYbNe3sx9xnHIBN8tszPB2jPza6X2HH5PJvi2jDqW
tXe/lsrWY8JkggDwnNaOa+5xtPehvab2/u4Z7xSsfWetH6g0Pjtl1nNK7Xtr
9af0XpKUWWOOa/u7dX89+7mzVSZYe5abOQ+l1Pc9e44isL3S/JvRfTRrc4Gt
JWdoyQNzbdx7XeW167H3Kt2jW8eP1Noms/oIa32Brd97tnOn1gadueZtaX2P
ljZdLROdsf7+1mPhOC6Z4Ltl1rN2svjS+MRS6bmGyQTflpHHsne/3krGX2Ss
zVb7SCYIAM+p1M4cmTWkTVvKUPJsvve+uG1naf3QGe/LKK0X1ZI71J7TZ2UX
pfU3U2pZZq3/a9Y8rNJ2pw3eOr762c+drTLB2hzJWe/Oqc37mPl+UWAfpawh
1+FR8+5r1/We8f1bKbVV7rd76zWvXlMaszR6DljaDKX5U633itpcuz3aRCm5
F7Z8ztnOnVrbedY5WJuX2dp+KuXzPWsGtirNU0oePGNfcUwywXfLjEwwzz9L
30vXe5+TCb4tI4/lmjVEZ1zHH5EJAsBzqvV7pz064ntq7xqZsc7NUrW246h9
ErX1N1vH+tbG7m+9lmVLJlZbhyiltS9q1Hb39AE9+7mzVSZYqycj+xrv1dbp
2XtdPGC8Wi4zaixAbZ790ebc1LY35Uh9RJkfUSoj+zNLcwRz7+qZM1nL50a2
P6PWJuqZr3rGc6eULc5qX9XWiG2tm6UMNmVkv3Ytx7Ru6HORCb5bMj7ztl71
EvdrXOf5ozQ+uaX0jpfszQRzHV7ze0dofQ7bO99ds4bojDnfr5EJAsDzKuVJ
I+Y71cb0zprns1Rt7PDIDKI0/q+nL6nWNzByrmDL+mGtfT+1dnq+Z9QaZNnu
Uj1M6e2HfeZzZ6tMMGrzU0Y/m9SuAVuO3QS2VVoDccQcs9p1Pf2Be++Dexn/
Uhu/k2viEeYH3qTdUNrmUffO3CtGfk8t70rdHDnfrlTXl2z/2c6d2pp8o9fZ
SG5aG+PU81mlks8alWnW2mBHGtfJfFfIBH/7+7+jpDdHOlLJNeYPvn99qP3G
ez+xcI3LPct3vP+s2fLbeo/lN3zXz3ftu5n7N9lwrq+jt+elb1iQCc7eJgBg
G7U+iL/8A7+66vM/UnmW7G23bqG2Vsdf/+FfX/0d31HJ8TJnrfWz/v2v/UTx
s1Iy1mztNv+uL/lodd8kJ8vfa/m8WvaSkj6eEdtda4/nz3s/95nPndL+bH1O
a/UfVebTpox6hsu5VBuf+xXf/vd22+/AXLUx3Wvv/6V33aXkerf3PrjJvbM2
BujT//Sfvblu7r2tvfs57Y81n59+uk83zDPr/cxa/rq2XXFTmwv/6X+eKfV8
5tnOnZb9nXbeiP3973z5x5rG043cHz3PEY/U2rlL2s6c21fLBA9dMm+395jK
BN+WGZlg7jVL536OuI7XyAQB4Hn9roaxwkvzpO+prJGzNu9JOynt2EeyftSS
z/2DlbG8KWv6Nmr9Jvnu3j622r5OWbo/Iv0ZtYwqpTcvaXkOWZNnpn7XtnvJ
/j77ubPWlplg1Pov86z1td/5c6u+I3Wg1men/wuur7aG49KcoDYWKN+7Zrtz
3yi1iXr7ulrWDF2brc1SG3OUa33aNUs+O/17e9WRlDV9lmm3tPSRLt3+s507
tbZW2odrx9SlntX2S9qSrePp7uthrZ85z0m9n3tT6yfOvjnSGAa2IRM8bsl1
Zsn5LhN8W2ZkgtGbu92XNf03M7ZNJggA11J790pKz7iz1j6Htc+Stf77Ne26
/N5aSdbU0/bO380Y71pZ0v+QPofSmPVbyff39oMlI61lX7f90bvdLflrSurT
ku2u9cMs3d9nP3fW2joTzO9tqSfJ6pc8D6f/uGUM5977HZivZW5yz3ytXJNa
xu2snYNc69fruTZnm2ttiuQNW79DqGf8Tu3+n/3VOxcu21DbL2uy3Za5mSm5
1/W2ifJba2s9pOTvPMu50zp/I3V9SYac/dFyPJduf0tfbup577a3PAPNaOtx
fDLBY5Y1Gb1M8G2ZlQlGy9jq10rPGkxLyAQBgNo8nJS0Zf74hz9Z/JxkJC05
TJ7x127zzEwwba+W35G+hLRLa/1K2S8tudqaeUjpU2gp6c9qGXOWvre/Xnnf
yq1kXy0dc98yLj4l+7rlmCYLbN3uJTnmFc6dtbbOBCPzAFtKrgvpz2rp683z
c8vxSxm1hhhwfC33kGQntXtp/rwlhxnRxzIyE2yZI7hH6fkNLflU2hW5X9T6
23L/rq3VePu8tWuptow1SklbrmV+fO6FyeFaxtXk/rn2/UVnO3dq74W839/Z
jy37J3WgtS967XqwLf35qZdpO9a2PfV8dm7MuckEj1dyfq+ZSyYTfFtmZoJr
1hCdOQZDJggA9LRTkm2lbRJpg+Y/86zZMhY2ZdTa6DMzwWhZS/BW0p+QNnX2
RfrSks/lv6dvpGX+3u0z1vYl9fTj5Xhnm9Mfkbly6Vu6HcuW/PJWRrxPqKfN
ftvX2c77fZ3f0bPdvfM8r3TurLVHJhit+XFK6kmO8f3+zjXhdl627vOUEe8Q
Bc4j1/XWa0T+Xu4/ubYkX7jdj1r//YixKTEyE2xtt2xdeu8vLWszpORYjWgP
jVpLtaeP7taWe61N1DLO6P5zRsyFP+O5U1vT/2W5tfdfa1v01JcR68C3rE16
K7f2c/ZxsvAl7dB8xhHfBc82ZILHKiOu2zLBt2VmJhhL1xCded2VCQIAkTbl
0vFLrWVUDhOzM8FI1tXTp7K0ZL/X5pG16slN1pYcg1HrKW75DDayHp7x3Flr
r0wwWueAjirpszvKfge20zMuaGnJfJtR15dRmWDL/Lq9ypL7S8v8vrUl/XVr
32n7Usv6jaNK2i8j3w15tnMntmw7p4xs0/XkgmvK6HrC+cgEj1Nyzx/xDC4T
fFtmZ4KxdA3RWe+0lwkCADczs40160u+ZotMMGY/a+ez186zeyljxVvWQlpT
lryjpKT1fYtry6yM50znzlp7ZoKRMf2z63eK9ULhuc3MNvK5I6/rozLBo64b
mrLk/pL7/dI+uJYyMyfZ4l6XbG10G/Rs585N5ljOHt+Vsna90NfMflbJ/Efz
A5EJ7l9yno+858gE35YtMsE1a4jO2D6ZIABwL898o/tP8nmjn9+3ygQjfUoZ
sz26bybj12fNQcq8wxn9MdkHM/ozbrKW0Yx1y/KZ6e9x7qy3dyYYyWB71ujq
KTlvRs3bBc4t/Tet7x1tLbmur31v20ujMsEj94euub/MmHeX4zgjT7s3816X
NSNnzoM/y7lzL+24lnfqLSlbtENTz0fnmjmGR2uHsg+Z4Pbl/v0ka94b+IhM
8G3ZIhOMpWuI5h4y+v4nEwQAXpN1kNZmM+lbn9F+jS0zwZu0w0asQ5X29+x+
gcgzfPoHRmRseSZJ/9HMvpj7/Zz2/qhsMBnmlv0ZRz931jpCJniT83zU2Pjs
862eB4FzyfV47Tib3BdmXWNGZYJH7h9ce3/JWI8Rvy/3nC3vz2m/ZP7mqHFe
6dObnWWe6dx5Tdroo9oW2fYcv63WIU8besQ668lGR6+Jy7k9QyaY5+bcJ2ZK
zn57J+lrcr3IXMAt5ubm2X727x2t9V7Qeyy3vK/nGr3kt2f9gJHbkd/c8/3Z
p3tfhwCAbaQfIu2u3nG+Gcc7+zky2dxe7br0paS93jOWOJla+mH2WHsn/RBp
Qy7pC8tvTPtviyzw0XanPvXO0UydTd3da2zzkc+dtUrPj3tlaum/y/nV2++Y
vrr8O1kgUJN7Uq7PaX/03JNyH519jan167V+/5H7B0ftw8y9y3W/Z+xO5l7l
3+w9hzz7YEmbKPlWxkdtmQWe5dwpSdsifbdL2hb5rdn2vd5JnHZ7b9v/9qwy
6l3hXMszZIIAAMBnSsaRMWu3MWy3fqP8Z/53cqNnfPd8nrnzu5MR3vZL+mvu
98nefUgv3R/HPPvf+tvSf3H7/9N3c7S1gtJHcdvPke29H2uZvpf8tqNtt3Nn
W8nd0w/2cn+nX+9+DK534wBLpZ8/1+1cv3NNSd7iun4+L+8Xab/dtyvSFjrq
vSJty1v9u2/LvWwX7TGmq+Ss507y1NfaFtn3922LI+Zprz2rZNtv250/O+I+
51hkggAAAAAAAHBtMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAAAAAAAK5NJggA
AAAAAADXdoVM8N/6Tz8CAAAAAAAAPPDVf1EmCAAAAAAAAFcmEwQAAAAAAIBr
kwkCAAAAAADAtckEAQAAAAAA4NpkggAAAAAAAHBtMkEAAAAAAAC4NpkgAAAA
AAAAXJtMEAAAAAAAAK5NJggAAAAAAADXJhMEAAAAAACAa5MJAgAAAAAAwLXJ
BAEAAAAAAODaZIIAAAAAAABwbTJBAAAAAAAAuDaZIAAAAAAAAFzbFTLBf/P9
3wEAAAAAAAC87qtkggAAAAAAAHBpMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAA
AAAAAK5NJggAAAAAAADXJhMEAAAAAACAa5MJAgAAAAAAwLXJBAEAAAAAAODa
ZIIAAAAAAABwbZfIBL/wIwAAAAAAAMADMkEAAAAAAAC4NpkgAAAAAAAAXJtM
EAAAAAAAAK5NJggAAAAAAADXJhMEAAAAAACAa7tCJvhvvP87AAAAAAAAgNfJ
BAEAAAAAAODaZIIAAAAAAABwbTJBAAAAAAAAuDaZIAAAAAAAAFybTBAAAAAA
AACuTSYIAAAAAAAA1yYTBAAAAAAAgGuTCQIAAAAAAMC1yQQBAAAAAADg2mSC
AAAAAAAAcG0yQQAAAAAAALg2mSAAAAAAAABcm0wQAAAAAAAArk0mCAAAAAAA
ANcmEwQAAAAAAIBrkwkCAAAAAADAtckEAQAAAAAA4NqukAn+tvd/BwAAAAAA
APC6r5QJAgAAAAAAwKXJBAEAAAAAAODaZIIAAAAAAABwbTJBAAAAAAAAuDaZ
IAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGu7RCb4BR8B
AAAAAAAAHvjKb5UJAgAAAAAAwJXJBAEAAAAAAODaZIIAAAAAAABwbTJBAAAA
AAAAuDaZIAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuT
CQIAAAAAAMC1XSET/K3v/w4AAAAAAADgdTJBAAAAAAAAuDaZIAAAAAAAAFyb
TBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuTCQIAAAAAAMC1yQQBAAAA
AADg2mSCAAAAAAAAcG0yQQAAAAAAALg2mSAAAAAAAABcm0wQAAAAAAAArk0m
CAAAAAAAANcmEwQAAAAAAIBrkwkCAAAAAADAtckEAQAAAAAA4NpkggAAAAAA
AHBtMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAAAAAAAK7tCpngb3n/dwAAAAAA
AACv+wqZIAAAAAAAAFyaTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuT
CQIAAAAAAMC1yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAAAAAAALg2mSAAAAAA
AABc2yUywT/xEQAAAAAAAOABmSAAAAAAAABcm0wQAAAAAAAArk0mCAAAAAAA
ANcmEwQAAAAAAIBrkwkCAAAAAADAtckEAQAAAAAA4NpkggAAAAAAAHBtMkEA
AAAAAAC4NpkgAAAAAAAAXNsVMsF//f3fAQAAAAAAALxOJggAAAAAAADXJhME
AAAAAACAa5MJAgAAAAAAwLXJBAEAAAAAAODaZIIAAAAAAABwbTJBAAAAAAAA
uDaZIAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuTCQIA
AAAAAMC1yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAAAAAAALg2mSAAAAAAAABc
m0wQAAAAAAAArk0mCAAAAAAAANcmEwQAAAAAAIBrkwkCAAAAAADAtckEAQAA
AAAA4NpkggAAAAAAAHBtMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAAAAAAAK5N
JggAAAAAAADXJhMEAAAAAACAa5MJAgAAAAAAwLXJBAEAAAAAAODaZIIAAAAA
AABwbVfIBP+1z/8xAAAAAAAA4IEPfcsnZYIAAAAAAABwYTJBAAAAAAAAuDaZ
IAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuTCQIAAAAA
AMC1yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAAAAAAALg2mSAAAAAAAABcm0wQ
AAAAAAAArk0mCAAAAAAAANcmEwQAAAAAAIBrkwkCAAAAAADAtckEAQAAAAAA
4NpkggAAAAAAAHBtMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAAAAAAAK5NJggA
AAAAAADXJhMEAAAAAACAa5MJAgAAAAAAwLXJBAEAAAAAAODaZIIAAAAAAABw
bTJBAAAAAAAAuDaZIAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAA
AAAAgGuTCQIAAAAAAMC1yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAAAAAAALg2
mSAAAAAAAABcm0wQAAAAAAAArk0mCAAAAAAAANcmEwQAAAAAAIBru0Im+K/+
8R8FAAAAAAAAHpAJAgAAAAAAwLXJBAEAAAAAAODaZIIAAAAAAABwbTJBAAAA
AAAAuDaZIAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuT
CQIAAAAAAMC1yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAAAAAAALg2mSAAAAAA
AABcm0wQAAAAAAAArk0mCAAAAAAAANcmEwQAAAAAAIBrkwkCAAAAAADAtckE
AQAAAAAA4NpkggAAAAAAAHBtMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAAAAAA
AK5NJggAAAAAAADXJhMEAAAAAACAa5MJAgAAAAAAwLXJBAEAAAAAAODaZIIA
AAAAAABwbTJBAAAAAAAAuDaZIAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA
1yYTBAAAAAAAgGuTCQIAAAAAAMC1yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAA
AAAAALg2mSAAAAAAAABcm0wQAAAAAAAArk0mCAAAAAAAANd2hUzwX/lPfgQA
AAAAAAB44Mv/ws/IBAEAAAAAAODCZIIAAAAAAABwbTJBAAAAAAAAuDaZIAAA
AAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTBAAAAAAAgGuTCQIAAAAAAMC1
yQQBAAAAAADg2mSCAAAAAAAAcG0yQQAAAAAAALg2mSAAAAAAAABcm0wQAAAA
AAAArk0mCAAAAAAAANcmEwQAAAAAAIBrkwkCAAAAAADAtckEAQAAAAAA4Npk
ggAAAAAAAHBtMkEAAAAAAAC4NpkgAAAAAAAAXJtMEAAAAAAAAK5NJggAAAAA
AADXJhMEAAAAAACAa5MJAgAAAAAAwLXJBAEAAAAAAODaZIIAAAAAAABwbTJB
AAAAAAAAuDaZIAAAAAAAAFybTBAAAAAAAACuTSYIAAAAAAAA1yYTXOc/+NM/
+d4f+3M/896X/IWffe9bv++XP8M3//e/9ObP4t/7Uz+x+7EGAAAAAADgOckE
2/y2L/yx977i2z713t/62D987xd/7TffW1p+/FP/5L3v/tu/+t43fPfPv/dZ
f/Kjmx3nr/3On3sns3wk+ebe9XK21zLcmuS/W29nsuTe7fwP/8ufWl0HjmCP
/Q0AzyTtjFv74Ec/+Y/ftFNv/tL3/8qb/z/t33/3K358922lLO2/HK+/+j/9
2mccx8jzS/4szx9HGqeYevWo/n3vj/6vb/7/b/qeX3zYtt1Txnxm+/Jc93J/
3573bufPls986sn+2wuckzbRu3JdzVyH/P7SvS777Sj7JffcHKds1w9+4tOv
3jPym456z7j1Pd/6xV7+htu9On2av/M/+zu7b++Z9/cZ6/dZ6wnHJBMsy/mT
69j//c/+v8U5YKnkvM15nPN55u/INaG15PfuXS9nyzW9t+yxX3Jv6i2PsrSe
OnCEkmO0dz0BgKvJs3ueET/9T/5Z1305/WO5N89us27hZV/fFtLnMPp3JJfK
s0Tvc0qOffoK9hh/lX6J7Itf/fT/1bXN+ftpF+/VJ5N6n/q/tD2dMaXJ4fbY
fvUE4HW3a01vmyj3gtwTrtjXnv7JtJOW9IHmGpx+s62vwblHZ2xI7/yNHPfc
M/YeB3M/B6V3v//0L/zG5u3zM+/vM9bvs9YTjk8m+K70leSZ7Td+8//pvkYs
LfmuXFNnHWeZ4GfKdbD3GppjtPX1s/c5OPfkEXXgCEUmCADjpA2T5/C149zS
HjrzPTrt/D3KyPZ1xjWPatclK9qibyb1L1n0iOer/Pat+pPS35vzZuRzYerC
FjmberJdPQHOJ1ng2mtN2lQz+/G2kmvvkmy0VHLf2OJeN+I4piQz2WMuWzKe
Efs9n7FFXTzj/j5z/T5rPeEcZIKfKWulbJkFvizJdDKWc/Rxlgm+K2MressX
/vm/u9n25f7YW0pj0GWCAPCc8sy6Zu3710raUWccH581QPYoo9rXyUtGl/Rp
5hlo1j5PLjO6/mWbZ8y9vJe2+Mj+o5dlZp+MevJ2m2fXE+BcMscnecTIknlH
R1onuseMNuJ9yf1oxnbnnjH6OKZkHNAWcwGy/ak3o0s+c0b7/Kz7+6z1+6z1
hHORCX5g1vVtacl1ceRxlgm+K/leb9ly3yxZN7Q0h10mCADPJ22DWblGPvds
83CSD+xR1rYh89w+uy2XnHd0v0zac7PewZCS57cZazjNyNReKxlnPrJPRj15
vcyqJ8C5JLfrXYuptaRNtMday2tkbMrMa++t5L40MjNNX97M7U6GNPNYzt7+
1HH7+7z1+6z1hPORCX7wjoU95wY+KiPzJ5ngu/Is29tHluvxVuuH9rZVc4xH
1YEjFJkgAKyTfGDm2NiUtFfONM40GcweZU37Om3PGWOEXyvJe0bt6yXv715S
RtfBrfLAW0leNeL5Qj0pl7Ndq4Cxco381D/4P6ZeZ9K/dJbxB8lLtiyjrsGz
c5L77T1jznMrqevPvL/PWr/PWk84p2fPBLP+yZFLnutGPCPKBF+X90b2lqzj
PHu7Mua+t9TW8pEJAsDzSPux9d6f/v3kIHn+zFi5tCnyv1vzxHzPWd5ZPzsj
fVTWtK/zb1tK+iJzLLLWRNpROZb5z/zv/P+tYyBHrIPUuh5H+juybWmTp/8m
25x/m21IvWztv80z04j60fNsmP6fHJtsa7b7du7c9nfP2MNk1Wu3XT2pl1H1
BDiXnjETuR7n2pK1xpe0ic7Qx94zFiP3jJf3uvz7/O9cl3vGsq8dA5M1vVtz
kmxbtjvrQ9y2u/eeMbp925PzpL5me2/36UidzG9qvU/X5g1cdX+ftX6ftZ5w
XlfIBP/lP/bDi3zT9/xC87m9Z/muH/jVxb/xpjcTXPt9Z/FHvrH/nX1/66P/
2/Tt6h2fnPvF7/jijwyrA0cof+ov/b3d6wcAnNX/2DAf7ju+/x+891lf9neK
n5O20k//wj+tflb66vf+zTVpK+1Vlravv+S/+Z+bP7/WFsyft+ZGn/dNP714
P//WL/jRpj6U1Kvf9zUfr37eh77tU+/9w4Z8LfV5Tf34A3/6E037Jm3q1v2T
86e1H3nN9qsn29UT4Hxarmnpd6u1iXIt+pGfqWeL+Tt7/+bSb2jJG3rudfnM
lrZiytL+tNwzPvXL9Wwp99zce2uf94V//pNN94xR7dvW/Z66+ns+9LHqvkh/
dsv2L+1XO+v+Pmv9Pms94dyeNRNsfW46Ssn2rjnOMsHHetfozPU519aZ29Q7
hj39fiPrwBGKexIALFNr5+bZsOX5/V760Wslmcrev70kz/6PStqD+fNZWjKN
19T6Y7Ld6Wfp+cyWfpl879L9XKsrGbf89d/1v3R9ZnKqlvU91tTB2r7OM0By
pyWf/c1/7ZeqfTz581p/tHqyfz0BzqXWJsq1pvf6mGt6raztw5ulNmYs96Le
a+9N+nBa5iYtuQbX9nm2O3+np68uf3er9m2tPy7b3zvOJplQ7f6f+/iStsVZ
9/dZ6/dZ6wnn9oyZYPpARq/Lm+esnLs3oz8/150156dM8LEl7wxZ2h/QIn1G
M7ZHJggAz6H03Jc2am8eeFPrH2gZo7Sn0hohR9z29FmUSo7l0qwx/RW155Ul
/Zl5XqmVNf2kGX9dKkvXV6nt6zyLLd3XN+mTqWVsS8aXqyfb1RPgfEoZQa5v
vXngTe3au2bMxCz5raWyJG94KWMzamPce9tcuWfU7kVp4y3d5tpYkrVtxPRt
1fb70nrYsr97981Z9/dZ6/dZ6wnn92yZYM6DlnmztfMw53jaALW5uulzSV7T
Mue6VtY8u8gEH1uSwc1cC6I3o0wfRcvYnN5M8Lam9l6M3wWAfrXx8GvHNdWe
4498/y6tHZa8c+/te6nWdls6zvmm1ubM9/d+Zp5XSmXtc0b6qUrPckvn2tXW
DRk136MlY6s9X6on+9UT4Fxqa0KvvffX5jwdba5g7X4xKhNoGQPT016sjUlb
2z9XW8t6zT2j5X60NOe5qWVhyYJ6Pu+s+/us9fus9YTze7ZMsPXdCI9Kyxrj
j2Q8wpq5WmvuQzLBsta1oe+PRe1dHEv1rhvaerx6697a8TMAwPZK77kZMWY9
z/GlZ9Yjzre7KY3RW/ucPVramaXsaMT4tNq7Ynrbu7Vx5en/GbH+fnLtUunt
4629X3z0u8Rrfcg9fVbqyXb1BDif0hzBtGVGXGtK18cjzRWszc9On9jI7yut
zZCS8SYtn1Nrd45a87DWFlj6LtraGJhRa5DV1sxsXSPkrPv7rPX7rPWEa3im
TLD0DpFaSZ7SO2bzkYwVWrq26NK5gjLBstr1/LUyY23LJXMWW7M7mSAAXFtt
PPyo8eq1dtOoNvNI6eMotb9njfVaqpZnjOobqK191lNnavViVNu5dix7M7xa
Rjd67mu2v/Q+mp55d+rJdvUEOJdam2jUnKHa+gxH6WMfeR1vUcuWWvPS2v5d
Oxf+Xmnu2pIxNrX7/cjMuNbf3ToO5qz7+6z1+6z1hGt4lkywNje5VJKRjRg/
dK82Z/dRWTo/TSZY1vJOi5dlxvqhveuGpk7PqAMpMkEAOJfS2M+Rz5O15+Aj
Pk+W+gZ72lNbqeUma99td1Mbp91zLGtjj0fmrqV5Gb1jwUvPiEvWxWxRW7tG
PTlePQHOpfRe0VFzBG9K15ql88tGK/UHzWoH1dabb5lvVps/NXIcWun+tGQf
1fp9R+fFI9bxOOv+Pmv9Pms94RqeJROsjXV4VHrn+/aovT/0UVky3lMmWFda
a+u1MuM9FL3rhva0L2WCAHBdtTkxo9u0pXFMR+xrL7W7j/j8W5q7lrHEI+tN
qfSsUVIa4zy6TpQytfR1tH5O8qdSGTWP5KXaePbWPjf1ZJt6ApxP6VqzdP2t
R0rjM44y7mjL/XFT64dtGbdSyltH79vaGP3eHLmUS89oe5YyqtZ73ln391nr
91nrCdfwLJlg6bq25bn3Um0MxmtlSWZ3lkwwY7j3Wm9qSUY7ct78knVDe8b+
ygQB4LpqY0xH39dra88cbf3QUpv7iPMaS1nG6D6Z0jy51ueCHO+0NR/1yWyZ
Sae0fk5tbbnR64bejBoTrp5sU0+Ac9lqLfXW79t7/dDaulij98dNbY55rW2a
TCj3jEfzmkZnPbU+wZ62bW2s3oz2RfoHc9+LtDOyf6N1LsNZ9/dZ6/dZ6wnX
8QyZ4JL3COYauMV7RWrvWH+tLBnzeaRMMPs1WVrGtWa7StuW45A/z7Vq1jP5
Te1a/FoZuZ5Q77qhvWuAyQQB4LpKYz7Tdhy9Dn6t3TRrftVSpXZQnof33r6X
klOWysjjWTqOqVe9n5e2ftqRqQP599n3o/tDR82Pq72Pb1a2XXs+bW2Hqyfb
1BPgXEp9K0vfx1NTmqe09/qhW69NeJN7aKn0vD8297PbPSPZVO4Zo/usanP4
e+pNqX1xxPU0zry/z1y/z15POLdnyARL83AflVnjCF5TGt+ZdkWuvWlD5Fqx
NBc7QiaY63A+uzd3uy/JCPMZs57Pl9SVUWMpcr3vKb1j2mWCAHBdpTUxZq19
UWpbpE219z65V+qr22IcYK9aVjWqf6O2TsUR51BGqc3eM24u7d3bWOnbWMX7
+XCjs/T77x1xfNWTbeoJcC6l95TNek/sHt/ZKveC0r1uVv9abR7Vlv2uLUaO
Iyn18x71nnnW/X3m+q2esKerZ4J5jiv1AbxWtn4+uK0zkGtW2hG3+bsj5+3u
mQlmXEnve/Jat3P0tb02vuS1MmL90Nr4ktdKb/2QCQLAdZXGXM16piw9yx/l
/TlRamcdaTvv1dYhG7V+fS1TWvIe8y2U1rE84vshXxr1PkH15Nr1BFim1P80
a85ead72s85Lrr1vbe81VV8qjdPv7ScujdWbvQbaWYzc33sYUb/VE/Z09Uxw
ybqhI98RdxR7ZILJrHpzqCVlZJsuGfKjtbMflRHzuWvr/rwsS8aZyQQB4Jpq
c3hm9dePXGNpptIz+1Fzgey7Us47as5BaV5DSs+7q7dSy8GOtm7ta0rjwlPU
E/UEWCbXxVKZ1d9XGztxxOvkbKV3Oacc6d3TtXH6ve/Se3Rvzv+/9289gtH7
ew8j6rd6wp6ungmWxi+/VpIHzVojZk9bZ4LJk3qztTXlR37mHw/rdyq9j+dR
WduW6V03tGfd9SV1IEUmCADnsNd7NPb63l6l9wqV5lAmU0ieeFuP6Cb/X9pJ
s58Zan0Na/s1a/2XR81L0+5/VNKHcoZnudJzUu/cVfXkuvUE6Fdbz2/WO4T3
+t4jK83VPtp1uDZWp6fPrzQmxTvixu/vvayt3+oJe7t6Jliah/taOeozzVpb
ZoKlfpeZJcd6xH2j1pZ7raxZk6t33dCl78SWCQLANdXm641cj/7eXvMTe5Xm
OL3so0vel7/f+u6B/N3s/xlzInPcSnPA8mdL27757NpvPOKaRZnbVSpnGFde
W2uqdw0U9eSa9QRYJuOnS2XWfL1cL0vliuuRldTudUd673StHd3bT1waS9Pa
35p768t3HufedfvfR7z37rW/9zCifqsn7O3qmWDp+ei1ctU1RLbKBGvjVGeX
jNMY0e9VGu/xWlkzhqN33dClbSeZIABcU2k81sy1ZzL+tVRmvcewV6ldlywv
vyPPAL3tv/uS3CTHYfSY99r6FXlnUu98zPSH1sZNHrE/prb+S47BrPx7pNq+
X9IGV0+uV0+AZWr9KzPnppX6H2e9x/CoavePo4wbq9WXHNPeXKV0H0pb8dG/
y/idbE/pfZj3Je3W9MGeaV3aGft7DyPqt3rC3q6cCdbGLr9WrpqDbJEJ1taP
2qokn1vbzlsy13Hp9bV33dCMR5ldB1LSN5bzYWtHWj8CAM6gtP5Onhdnfndp
DcQjzMUpvVcoz8hpv7Y+U7eU7I+R/VzZ/pZ1T9KvUJurmDZW/l5tzGS+7yjv
gozM+agdo/ymMzzH1eavpP6oJ+oJsFypn33pNbZV6Ro04h09Z1Fbc/oI64Zm
G1vum0vadKW1q1+bL5pxKrX39tZKxgYdebzLzP191vqtnrC3K2eCtfN06Xl7
RrMzwVxTtnx/YK2sXYdgSZ5cGsfxSO+6oRnXurSO9maCe5UzrBsOAEdSeqbM
/X/md5fm1h2h/6s0Zq13PZGesqRd+Ehr3pO2eOpCvjvPQck+bu9DTB9CyzzI
o+Q8aYtnDHTr88UZ+pBa1uFcs2aNenKNegKsUxon1fu+1l6lPpcjzqueIfeG
2jV5ZBupR/qakrW0rguxdL2L0ue/HOOf/926Xn2t5HOOtEbtVvv7rPVbPWFv
V84Ee+d6zW4f7Gl2Jrgmb0rbKOM6X84Xy/FbM2577TWud/7eknH4veuGZkzH
FnVgzyITBIA+pRxgz0zwCP1ftfeKzSwZozZqvGH6IGa35dL23SPnyZyOyO/r
bfsn181zxN71rEXt+OVcWltf1JPXy5nqCbBO6RqY9tJe3z27PXYUafuUSvKU
LeZi3L9frWW8zMuyJp8qtY1vc9WzD0r59Zqyxzode+7vs9bvZ6wnHMuVM8He
d9vNXltpTzMzwdr7YR+V9BO15D8ZD7Hk/S5r2xpL+pB61w/tzR3XrHUjEwSA
ayq1k2b3QR29/6v27D67jJ4rmbbg6DZd+m6Wrk0/wtIxgJnrdpb1j1qeS0ce
A/XkbTlTPQHW27NdsmceeQQtY97XzIfv0dvXdiv5d2vfu1aaR3Z7V97s9mn6
W7dcB2/P/X3W+v2M9YRjuXIm2JulH6HfYpaZmeCSNUN7x2nmGlVaF+tRWdPe
yLNjb+lZA6F33dC181hlggBwTaVMcO166jVHzwR7xyqnb+K2fsXLHCH/X/4s
beWe9Xtm9H+NWEMoc6e26psrWbKG65nmfLWMM5x1rqgn56knwBhHzQSvvC5Z
5H5TK2ljbZU/LOmnHLWmaamkv6t1Tbvc91KnYsm9fMt5YHvu77PW71K5aj3h
WK6cCfbm6SPWN+rNeZaW3rbMrEyw9I6WR2Xpmp65tvbmWmvnCvbmkD3tvN75
lVkrZ03dlAkCwDXt+U6/I2eCaQO2ljw39IxTztqJeVZvefbOs/qatR7uZRtz
TEe+CzGft1f7a8kYvFvJMcuzyJ51rCaZVK3k/B29Fqd68racoZ4A45TaROnf
mfndpT7IK2eCucbW7jfpm9tqznZP+++1OrL23bOlUptrlnttvv+1dkF+V7Kp
vFOotWzxHt299/dZ63epXLGecDxXzgR7M5ARfSbPlgn25q5r10vI/OnesmZc
a8tz/MvyR77xp4Yfk5S18+llggBwTTLB17W0G5PprXkOTvusZY37tW3g9EfM
bsulXX9bq2graTevLdn/a98jPkPLc0T6mEbuc/XkcTlqPQHG2rNNVFqr7KqZ
YEtekj9v7ScbIW2ztSUZz5J5bMlolpRkYz331vzGljkM2fez1+bcc3+ftX4/
Yz3heGSCb4t5gh+U1nZSxkD0jj0d0Q7oGeuwZF/dy/iK3t/YMp+vd6zriLXn
ZYIAcE0ywdfV1mTIfhvR7shzfcsapUvfxbZkjFp+29I1hLZcbzF57KiSZ4Q9
69uSYzZyXLZ60laOVE+A8WSC22nJS1K2Ho+xZD2zR6X3fWtL+oTXrN3Y0j86
oq/7qPv7rPX7GesJx3PlTHCP9wk+UybY8m6M+zLq+tKbRebvrlmPp3cuZEtb
r3fd0MwbX7vfZIIAcE0ywdelvfUo6xg9Pyvtl9q7VJaM8Wp9l0jeYZK2+aN2
VH5r2pMtcxpTtsp7kvXkN6bf5bX2ev7/9IG0bnfa7Xv3JbVmcyPHw6sn56sn
wBy/+Gu/+fDclwmO05qXrH0HztJty/dmLNZr6zlmrkL+vPWekfZsa59ib5/w
iP2T+1+tzFy3dc/9fdb6/Yz1hOORCb4tI+ZiPVMm2PuuvZH9Li3XsvuydFx2
LBnzUpsP2ZvPjbguywQB4JpkgnVpm6VNl1wh7cgZ781Ie7NWet4r2DKmN88v
ve8qTI7T0i+z5Tyw1u2u5a4peUbZK+9pzeZGzlVTT85XT4B5Su2SjAeY+d3P
8j7B1rEvs9ugo35L6xrwLTlVT5/wqHkTuZdlzE+prJljduT9fdb6rZ5wBFfO
BFufyW5lxD36mTLB0virl2V0+6elz+W+rHnuznWz5bmy9ft61w0d1Z/Wmwnm
Hpx/szXjUgCgT+n5Tia4rdoaoq3jfFvWlFgz1yn9LOljqJXkqHvv05fb3dKm
3WNeQuuYxZHnpHpyvnoCzLVnu+QZ2kSt64WdIQ+8yT2jZc5DS17S2iecOWgj
+75q79DOuhl77+cZ+3u0req3esIRXDkT7F3bckTdf6ZMsGf9ztHtgdp17GXJ
/WbN9/W+wzAZ4qPP6l03dNTY295MsHcsMQCwj9I9Xia4rdq4tZZ1SVrWyR91
XGvrqoxYR2W05FstfUkj1yipbU/ruwZGZlDqybnqCbCN0jgGmeA6e4x9OUrd
SWnJZ5J3tZQZeVdt+492vxuxv0fasn6rJxzBlTPBJWs+rq37z5IJ9s51G/1O
4dbr59L99VLWm+otjzK1nmOx9l2IS7+3tP0AwLGU+r1n90GV1v95xnfVJ4eo
5TS1tl2tTyLHdNSah/mcWhtxzRr8s2Qf1tae2qL+5Zmotg7TrYx8f6B6cq56
AmynNIZBJrhM67yulDOvPZh7XW29h5bf11JmZF3pwyuV0e2Qo+zvtfaq3+oJ
e7tyJvj7vubjTefYfVk7J+tZMsHejGzGeyYyr7O1jFi7tGet1JTX1g/tzVJH
rncvEwSAa9qz/6vU3z7ynWlnUmtzlcYgtqxZP3r8bm2+2RHngEVtTubs8eU5
Di3vxEkZPT5SPTlPPQG2ddRMcPa7DGdJH2drX9gVsoTammQt94za2LBZ98va
uLS166cddX+vsWf9Vk/Y25UzwehZ3zJlbeb/LJngh77tU13bO+MdE61jclNG
rAvb+37KPKe/HJvbu27oyPG2MkEAuKZS/1faSzO/u5RLXKFvaImsD7m0jVUb
uztrTlNtztkR54BFbXz5jHGJkf3RMj4xz6J5bhr9/erJOeoJsL1Sv036/md+
dylbOOM4qdxrWsfiX+k6WltbMe+pKv372nihme+yLfX7za7/e+3vpfau3+oJ
e7t6JtiTG6XM7jd5JNeXnrJ3Jlgbb/myzMiXejOutd+3JO99mYX2bHPuTaPW
+1myv2SCAHAOpQyq9I7jtdJOKZUr9Q/1qL3TvLRfauPHZrXPamtZzOyXWKP2
DDUjl24d45e2/IxxkerJOeoJsI9v/mu/9PBczziNmd9dmpNwtutMrpstcyzy
d446HmSpWn9nbS5JLeuZ2T4ujRMcsX7aEff3Ekeo3+oJe7t6Jtg7tysl2c/W
x+FsmWDv2qEzxsf2/KZR17TejPl+X2aN6p55q6PHkckEAeCaaus3jBxjdK+2
Tv+sPOToau360jN+aR7WzHw3SnOpjvrOtdqYvZbnmh61eXK3kmePnB+zfrd6
cux6Auynli/MWoewNmZi9BrSM5Vy1fuS+83odaqPoNZ3V7vX1foNZ7aPa33g
e+/bGfu711Hqt3rC3q6eCfZmVyl7jG88WybYO2duxviGnvf7jVqHuXftz/u5
fr3HeHQmJxMEgGuqtXdnZRN5Vt3je49uTSZYWj9p9ruISjnTUd8VF6Vx1qPe
HZX2fPZ/S0kfT/q3Zv5m9eSY9QTYX228UtpMM7631hY7yzip0vyh+5L+uD3m
U2yldM+o3esyvn+POhhnzXrW7O8eR6rf6gl7u3omGLX3r78ss8dWvuZsmWD0
lBnrP7eu+7xkfz2SsV+976i8tf3yntbWMmOutkwQAK4p+UNLW2S00lip2etz
HVmtXV86Hnu+i6g0bnrEu7lnKe2zEc91Ob9a1wpJHjdrXq56cux6AhxHqc9m
xhpWUVuzYdb8xFFyr2vts0rf0uyxL3sr9Z/V2ri1uQR7zf86ctt8zf5uccT6
rZ6wt2fIBFvXeLkvs9oJj5wxE+zJWkfP9e6dpzhyPZiebC8lfQO964bOmKsq
EwSA6yq1y2atV1V6j+GR5wvNVht7Wxr3u+e7iGrPI0ft/6u1cdd8dp45Wtcm
SVa21W9WT45VT4BjKY3jmHWtPut4ich1u7Qu9H2ZPe7kKNbcM2pzRmeuI1tq
g6Y9s/d+nbG/a45av9UT9vYMmWDW/+0tuWdvOY7njJlg6zX1tj9H7q/aGKyX
ZeQ8xd7vzjN775qjM9bakgkCwHWVxizNeldWqW0xe/3CXpm7lbZNzH73TW08
YukZo7QOxux+ihFZT9qw2cdpe6e/IXVk9ljL0npTa9beSB5Y+uxbSVs/76/a
sj6rJ8epJ8DxlNbkm/Xe09Kazsko994nj/TkJXu9EzH34/t7Rtq8M9Yiu1dq
49b6N2vrd8x8X1Vpbczstyvu77PW77PXE87vGTLB6M1DUrZ8r8AZM8He+XIj
5z2X2luvlZF9P+lT6l0/tGed01nj6mWCAHBdpRxqRn93rT20V7/RTTLJtH1e
28bZ4/VLfQ+1NQpLucXsZ/T095RK6d+W2uazt7tUD5f2wya3bckDczxnZ8zq
yXHrCXBMpevUrDZAqc9nZt/+Gq15SX7bHu9DLL3Hd/ZcptIaAS3fXVq/Y+b9
rtTvVxszdOb9fcb6fdZ6wnU8SyaYsZtLyuy1V25K6wy8Vo6QCfbmmKPGY/W+
029GP1jre2mXlFlrWcgEAeC68ixbKhnzO/L70k7Y8vt61cauzWrn1LLSWnu4
1F6b3R9TWgu21p4u9SNlf8x6x17tfQJLnj9a+5Dyd/aq5+rJ/vUEOK7amnyj
x3LU1iY7Yt9Krrct78rNdX2PsS9RW3dh1j241pZr6Y+t3e9mrbNdyqZr/dtn
3t9nrN9nrSdcx7NkgtGz1uV9mbXeUiTf6p3zlnKETHDJfLkR19rSOhBrfk+P
Wr/bmjJrzVqZIABcV9plpee7jOUa+X2l91AcYR2+Wr/GrOfd2jjE2tpLpb6B
lJkZVGmMdm0di9r4xlnjr2vr8/ce59Y8MP1Me743Tz3Zt54Ax1eaTz16HcTS
vMSZ4x2Wyva0rPuV6/2eY7xq1+5Za1LU2nJpY679jNHt8libTZ95f5+xfp+1
nnAdV8gE/6XP+6EmX/Bf/0z1mvCo/I0f+fX3fvsX/Vjzd9X8lj/xI+/92f/u
57vWlLwvH/vU/971ffn7Pb+19XNrz6MvS665+e1L99vn/dnymPTXyu//L35i
2HG7V5rjvbT0HtdZdSAl+3rWtgAA46UN96hkDNqo70lbrtQOyrP73vvi6/9y
uV8j2cWM7631Qfzer/7x4r+vrcPxLd/796ds92d/6KOrvrfWRh9Z/3r2d+9z
QMtYzXznmueZEdSTfesJcHzf8Tcfz2ke3QYojSWZdV1bozZu6raPRvaBLvGH
v/H/Z+/efq/79rug/0kqHsAb9UK9oV6oN3IjRi3agodYk+7NQTzEYkJNCsbS
XZLWREgkAgk1EQxIWzYbpK1taQvtFtsiAvWwPQAhisZs897NyvPt9/mucZhz
zMMY6/VJXtnZv+d51pprrrHmHHO8xxzzp6rbeMT71voCLWNltb5yzktnfq9/
/Wv/99L7e8b2PWs7YR2/9Xt/5mUywdhyT96j8jvN+MKe/Z1jTq6V9uZJd8kE
t+Ss+Q62XEfnWq03Qz2y/9VynumtXN8ftb0yQQBYW61fNmrcO/PaSlXLvc7w
TV/8kWpfZ/R2Zv+WqqVfWtvuzK87Yn/94S//UvF9a22nNqaR+yTy2c5s773j
GrUcObX1Oubs9q2dHNdOgDnU8o1v/9LPDnmfvE6p7jauUtve1M/8wt+8RV4S
OUaXavScjlpfLuep1n5A7Zw5sm3k3Flax611rtDM+3vG9j1rO2ENr5YJZm7j
1nvzHpVrrIyFtI4j5DeXrCf31PWutfms7pIJxpZ8M3Mdeq73ci235Xs7cs5n
rY/ZW2kbR56XejPBtPGce66U3+vVx0gAmEmpXzZirlRtTP9O8+Fr9wZlTGBU
vpPXKa2pmEp/tuW1sl2lGn29XhuPac1MavPlci00apuzv2trfOYekdbXy3Vd
7TptZHsZQTs5v50AcynlG6PueSodY466r2qrlvHQ7LM75SU5l5Uq58KR71fr
O/aco2pjhnvXUXurliu1jl/PvL9nbN+zthPW8GqZYGxZf7L028zYR46b7+XY
VrtW21p3ygRr54xnlWN1cqfS8TjHo971SR91xphUbeynp0Ze/+5tA3cpc1QA
oE9tvD19ryNf/05r8P227/tqta8xap3TWn+1Z1ywZY5zxg9GbHf64bU54a1t
pmW+3Kjtru3v5Nat8w9bcqNct9xtrpp2cm47Aebz3X/kLxePAfnzI19/1L2I
o9TGhDI3ZtTxd5TamtWp9PdGvFdpvdnH/untC5wxf6fWH+jJ8Wbe3zO271nb
CWt4xUwwamse3b161xQ+MhPsff2PKtdrb/PUnBv25G25vjvjun1rHvpRHd1f
lAkCwPpq9/GlWu9Xe6+2tuLe5yKnf/7RPLuH3ryxJetJ7V2Tp/Qcx1TGIHq3
vbbdyWf25q/JeWr9w957HGrPaUi2tne7W9bv78m+W64L7zauq52c306A+aQf
UJvPsDXfqM072nuPYNYaK/WJevsuLfNIjnyWzR4t/ay9WU9LX2DLfeU5l9XW
IdiTTbc8Y6m3rcy4v2du37O2E+b3qplgjMxzzqwtax8fnQlmfuXeZySOqhxH
zzqWtcyhaakcm49ei0gmCACvoTZOlX5H7xjYGblJbdxuy7V8yz1J2R9brrPT
H6+teZTa0p9p2e70ebc+6zx92Ja8tPc7rT2nJJVrhi3fZfZ3y7Phe9dYql3D
pA999vr5rfeuaSfntRNgTrWsYMsxMn+/dgzb2yeqjd/09i1qx/KMM971WTEt
443py2051+U8UFtPMZU+6tZzRsvYc7ZhS9uutcMtrzvj/p65fc/aTpjfK2eC
MVsumLxuy3no6EwwRq7Juqe2XvNuNWJ92DOOvzJBAHgdLf2T3EdTm2eWcYGW
ddxHrIF+RCYYLWMPqeyz1nnPyUhbnnW95xl0tTWVHpU+XmvGm+87/auWbd/a
P62tpfZ2u1ufW5L93TL/sHeNz5Z55VdUT1vXTo5vJ8DcWuYJ5FhWm4+RP2/p
U/Su6/WRkZngXc91PZ+htlbFo9Lvaj1n5JxY63umtqz38FbLM6dTybVazv85
R9fu5Uvtmfsy0/5eoX3P2k6Y26tngtF6PXJl5dpm6zpPcUYmGFdnrFdkSK3n
ylKdcV+jTBAAXkfLGjSp/J30/XJt+XZua/o3LffApdLHGHEteVQmmG1r/SyP
z5O8NPvg7T7JWEb2VUtOkso1e+/aHu/1PFc71wvZ7uQi7+cq57NkTLR127O/
9nynLWMQqbS/7O/kWu/bYP5/Pn/rNm9Zy6rlHrgrqretayfHthNgbpkD0NIn
SuV48v78/zjOtFTOKyP6RCMzwbue63rHe1rWhH7U45zxrC/Xs87ZnrHYh5a1
Gx+V/nD2zUfnu5Z8+1F7z3Wz7O9V2ves7YR5yQR/WX4De55fd1TlWJDf+N4+
xVmZYOT403oMG1Xp3121NnTL2jelynH8jO2UCQLAa8k19Z4+Skul/7w393o4
KhOMbOOZYwYj8sDozTPvtO094xF7K+28dwwp4y53rd62rp201ZZ2AqzhjD5R
+jGtaz/XjMoERz3v5ojaMt7TOpdkVI0cZ0y/44xnLo0cH737/l6tfc/aTpiT
TPCTXEu1rr1ydOX3n+PHqDGWMzPBSD/orOvS5I9XPwt1z2fd8pzio9vAXUom
CAD7HDkGlv7qyPX3jswEo/X5f3trVFbykGuUnrnaeyr3QYxaPyivc8ZYUtrN
ljW97rxWzJa2rp2Ua2s7AdZxZJ8o41Ktayi2GJUJ5nxy19o63tO6JvyeSh/3
iPun0m9uWT9zax0xPnrn/b1i+561nTAfmeDn8tvLdcnRc4g+qse6wKPX8j07
E3w4+p7BXI/e4VkQuR9+a43sN45qA3cpmSAA7JdrvtHzTXN/4Ojx9aMzwYdk
QUf08/Oamet11DM50t886vokr3vUM7nzvR213cl4t+avZ99X11N72rp28nnt
aSfAWtInGr1G2BF9olGZ4Nn3efXUnvGenOuOGmvMM/JG3e/5kdZndfdW2uFR
46N33d+rtu9Z2wlzkQk+l99f5loefc9ujn8ZmzgyG7oqE4wca/L5Rva7cl13
p3meGfvZcg2bDPisbZQJAsDrGrUexpG511mZYKQfOXLNwvSzzpjn9bg+GTUu
k+8zr3fk2Fdk34wc18j+3ju/+c59471tXTv55RrRToD1pA8zan7QUX2iUZng
nee/7B3vedzPMaoyPvftX/rZ09ph7ovLePDeyrk+7fDouS933N8rt+9Z2wnz
kAm2ybhBfjsjcq38DnOtk3kWZ/0Wcw2XPkWL9I2O3I+573xLzpp9n+/gTlng
Wznet+7jhzPXbu5pA3dhbWsAGCvX8+kT9K5H81jX/shMIP3jUr/giOeAPcY3
tvRNsw+zL6/om+YaIn32rc9IfPSrj854nu3vLVlVxm6T447KeGrt7Uqj2rp2
cu7vEpjLY/5Eb58ox6b8uyPvtamN37SOldx5HGjUeM+e+zke54wzs8D3cs7f
0hfNOfqIdeZm2t+v0L5nbSfcn0xwm+T0+U3lGql0DMjYSXzXH/yFb1yXHLEe
9ayyPyLXqdlHOS+83XfZt/nvWZ/Gfc0AAGMly0pf69n1dK470w+763ys0XKP
Uvr3z+Z5pa/66NvfaZ8k98lcw4/60w+ZR50/z+c7O98ptb9cI73d5oyzZrzo
/TWBayjtRDsBjlTrE2UeSY5FjjP3lr5c+q61c0a+5yPmmu2VMdK0w4/GmtMv
f5yj79IPnX1/z2q2dsI9yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYm
EwQAAAAAAIC1yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAA
AIC1yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQB
AAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABg
bTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbTJBAAAA
AAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbStkgr/mW/80AAAA
AAAA8IRMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbTJBAAAAAAAAWJtM
EAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAA
ANYmEwQAAAAAAIC1yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQA
AAAAAIC1yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1
yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAA
AABgbTJBAAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbTJB
AAAAAAAAWJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbTJBAAAAAAAA
WJtMEAAAAAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbTJBAAAAAAAAWJtMEAAA
AAAAANYmEwQAAAAAAIC1yQQBAAAAAABgbStkgr/6W78MAAAAAAAAPPFbvven
ZYIAAAAAAACwMJkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAA
AACwNpkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkg
AAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkgAAAAAAAA
rE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkgAAAAAAAArG2JTPBb
vgwAAAAAAAA88Vu+JBMEAAAAAACAlckEAQAAAAAAYG0yQQAAAAAAAFibTBAA
AAAAAADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADW
JhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAA
AACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckE
AQAAAAAAYG0yQQAAAAAAAFjbCpngP/AtfwoAAAAAAAB4QiYIAAAAAAAAa5MJ
AgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAA
wNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAA
AAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALA2
mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAA
AACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYI
AAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAA
a5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAA
AAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpk
ggAAAAAAALC2FTLBv/9f/mEAAAAAAADgid/8pZ+SCQIAAAAAAMDCZIIAAAAA
AACwNpkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkg
AAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkgAAAAAAAA
rE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkgAAAAAAAArE0mCAAA
AAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwNpkgAAAAAAAArE0mCAAAAAAAAGuT
CQIAAAAAAMDaZIIAAAAAAACwNpkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAA
AMDaZIIAAAAAAACwNpkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIA
AAAAAACwNpkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACw
NpkgAAAAAAAArE0mCAAAAAAAAGuTCQIAAAAAAMDaZIIAAAAAAACwthUywb/v
X/ohAAAAAAAA4Inf/D0yQQAAAAAAAFiZTBAAAAAAAADWJhMEAAAAAACAtckE
AQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckEAQAAAAAA
YG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAA
AAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFib
TBAAAAAAAADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAA
AADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhME
AAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACA
tckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckEAQAA
AAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAta2QCf69v+EHAQAA
AAAAgCe++D1/XiYIAAAAAAAAC5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAA
AACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYI
AAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAA
a5MJAgAAAAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAA
AAAAwNpkggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpk
ggAAAAAAALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAAAAAA
ALA2mSAAAAAAAACsTSYIAAAAAAAAa5MJAgAAAAAAwNpkggAAAAAAALC2V8gE
v+27f/rrX/ovfvFQ3/H7vvr13/CdP/GZf+4/+G8v/45ndvR396/8rj//4fd2
1Xf3b/8nP3t4Wx3p1/17P3qb7/Lq3+HV38Ue/8QX/+zlv3UArpFz5H/4B/7S
03Pqq/Vl07f5aH/Eo1/xj/+bX7l8O5/5p/+tP/eNbXzWp/zi7/0Lt97+0uf6
6PPkc2on62/3P/Kvf7l4LZF2/WrHKmC8HCPT/3l/jMlx83GMvHob7yT768e+
+n/8Cv/RH/75y7crfYaPvsd4jAHe8VyX7X52rst+vWv7m3V/19y5fc/YTrif
V8gEf+Arv/T1O9TX/sbf+cYx5Pv/6P/wjeuWf/A3/vDl3//d3eW7+6mf/xtf
//1/4n/8xvnsyM+b9jFT9YzD3OW7POp3OHPpMwC8llxH/uBP/K/N54mcO9MP
yjXo1dt+hPTvsj/+5t/+f5v3yVd+5n/7Rj/oDv35jFmkX/OLv/S3m7c/f/cP
/vBfm+I7zT5+9tnSp9NO1tzujB9mfCvXYa31d/6f/+8b257x++SIV7dd4P4e
x8gcP1oqfaKcP3vmR6/qo+Nzxn2u2JaMaeR7zPfTWulD5Fx35fki81nSx/5r
X/u/urY7GdyV2z3r/u5xp/Y9azvh3mSC19Z/9SP/8xTX4le543eXvmKOxUfM
c5EJXlMjfoczl0wQ4DXkvN1zLflR5fp4lftxko1+9a/8rV37I/3C9HGumP+c
83dPDviskqHc+TtNv/tZnZEJztpOZt3urF+R77x1fP5ZJQNNpmgsDPhIssC9
59D8+1e9ls79SB/V2ZlJvseeuSMfVc43GRM681yXTDn9r73bnfPlmee5Wff3
rO171nbCHGSC96ijMqbZ3fm7e1xnjvy8MsFra8/vcOZ61esYgFeRc9ve68n3
lfvSrv5cW+WaOGMRIyvzpI9eT+Lt9zl6+1N3WA/pvfRRSnVkJjhrO5l1uyM5
Zs/9jK3bfufMGzhXjpGjxybSJ7rDugFnyXzqZ/M2zspMjvgec/45ek3yI87R
2e7cH29/r9W+Z2wnzEUmeJ+66/HwSjN8dxljGzXfQiZ4fW39Hc5cMkGAdaWP
svdeoWeVecKzPZM282171jnqrfR3jpyHm1xmdGbytrIO1F3GNbMfa9/VUZng
rO1k1u2O0v2gI8o4GJDz2957nJ5V7hmcrU+0Ra1feUZmknPdiHUSnlWymCPO
dWkfR/XJU0fN15t1f8/avmdtJ8xHJnivylyEs+YYz2CW7y7H6xH9P5ngPWrL
73DmkgkCrCljX6PvD3xfGVu7S4ZUkzGNI/O0R6U/d8Q+Sd9k73qKLXXVs1Le
a3nm5RGZ4KztZNbtjjyb64y6472wwHmO7hMlN7lLtnGElnlmR/chzjrXje7f
5n71I+fsPGr0/p91f8/avmdtJ8xJJni/yvHW84rn++5GnMNkgvep3t/hzCUT
BFhT65ozecZg/m7WRI/MH02fpDV/yr+9+rPWZB2gnjGNfP70XR77JPlUz5zd
3PM0cvt78sBsZ7b/se2P77RnjvfVc4jTx2yp0ZngrO1k1u2OZ8/s+ajyGbPt
aZ9vj1U9n/2Lv/cvXNq2gWu0zj141idqPc4kd7z6sx4hY10t41VHZg2957qM
0b091+V77TnXjerf5v6Bnu1Of+99Py7b0vpM8LTBEfnarPt71vY9azthXitk
gr/qm/9k0WxZRCq/4W/6wp+pfrbVzfbd/f4//ld2fd4f+7m5MsHf/v1/cdnv
MtXzO5y5vvk7f/zy3zoAY6VPUqtcC5bOAf/wv/anvv4dv++rTfNVv/MP/KXL
P3PJzzWMSeRzfvF7f6b4Or/mW3/o69//R/9y0/m1p59U8o99259uygPzGf+N
//iniq/1T/22/6bp/rvUr/t3f+SS7yp9r9b8M31n7WTe7U4ba6mMM/763/Fj
xdfKn7fk3mlbV7Vt4Bpf+oFfbDrO/Kbv+smnr5HjY457LceZveNCd5PP3nqP
ZcZ9jtqOlvGyZCq1Pmk+z+/+Qz/f1NfY27/Ne7WuV5tzec7T+TfPXi/nrz/W
MOcv39cr7u9Z2/fM7YR5ffH3yATvWkeeS2cx43dX6kfWyATvV62/w5lLJgiw
luRCpco1ebK+1tdLNli7Vs5rJru6+rN/JOMQtfrPf+ivfuNztr5msrXatfuo
fdKS4fV8n482UhubyZjDFd9Xz7OeRmaCs7aTWbc7atc+eY98vtbXa80085u6
om0D52uZe9BznMmxtGWsfZW5B/m8PeNUR41jpp9Tqxzbe85LOde1ZEH5e1u3
u2WOXm+/PDIPpnY/WG0e0Ir7e9b2PWs7YW4ywfvWncdWzjLjd7dnnoVM8H7V
+jucuWSCAGupXW9vvfarncvvOC++5R67PXOSa7lJ8ok921/Ld1Nb79fKeGVt
39TuOxyt5V6OtzUqE5y1ncy63a1te2sf9cjXBuZSm1fTO8b+UBvDX2HuQfKE
3mebHZGZZL5HbTv29EFr/eatr92SR+c+u63no/QBSusEZJ+V7iVbbX/P2r5n
bSfMTyb4eWUtgFxf7tW6hm+p9o4jzK73u0u/K2MJW+XclO9u7zN0t85r6c0E
c1wf0Va36rkncvXf4Yht7XnOTyrn7hHvu8ocRgDq15Xp72x97Vwv1voqdzun
1DKmvZlS+nylTGbPdXbLmMze9Rtr91SdOaaZsZnWNUNHfX+zt5NZtztq99ns
HROsXXvk/c9q28A1an2iveNttbzxbn2iHslKe8/JqSMyk8xtKVXGxfZkGslM
SmOA2Q8999q3to8Ra1ln20t9xS3n0ln396zte9Z2wvxkgp/XqGd/RH63uVbb
mjG9el5/5XeXcYmWNSE+qq3H095McKb5rX6HdfnMPWV9YQDeK11Xjjif1e5L
utO8+Fqmln7BiDU5ams3HnUPQs9aZ6V9VJs/dca6JdmO3rlRqRGZ4KztZNbt
fmx76TiStrD3WJXxxNL+yfu/8nU2vILSGMSIPlHtOHynPlHPZ9o6DpY6Yoyi
dI9TjuUj1prMGhql6r3nPuffWo0a88q4YGn/9OZJM+7vWdv3zO2E+ckEj/u9
vZXfec+zMd7WK6/te4fvrjZH5qPa+vwVmeCnesXfoUwQgD1q8+FHXV/Xsqq7
rH1fO69uzerey/hCqbbcj5TXLM1lGvmsv9ozY47ok72X5909q1JmOSITnLWd
zLrdkbVGztj22nXcnufAA/dWm8M0qk9UO86c+Wy0vbLu8t51lkaPUZRyjNSI
+VEPpXy39xlBZ6/DUOqb97zXrPt71vY9azthDTLBz+uo695cT5XmWzyrkcfc
2dzlu2t53uvbyhjOlveRCX6qV/wdygQB2KM073XkPe+1cbZR4/l71foe3/SF
PzPsvUr3uGU+Uu/r1TKTkc/5q81RPno9odKz3/Idlr7HEZngrO1k1u2OWg49
aq56bWzzqPsQgOuVxnBG9olq9wruWbP9LFkjq3UsKv2/0pyl0WMUtTWyR97b
VHrOXc6DPa9VG3MafU9WrS/XOl9v1v09a/uetZ2wBpng53XkXNiW552/r8yb
vbqdXOUu311t7ZmPasv61zLBT/WKv0OZIABb1e4rG53rlO7rOmJu7xalucAj
xxqilseOfL0j5vGW1lEYeU/ie6Xnm+T7S7s+OhOctZ3Mut1RGnMcuaZnrsdK
tfdZYsB9lY6RZ+ZWo4/HI2XuSM86iulnZgyqNG41et+W3mvL+aekds9Wz34t
1VH3Y5Uyttb5ejPu71nb98zthDXIBD+vo9fH6X1Wxl3GVa5wp++u9tzX97Vl
bq5M8FO94u9QJgjAVrX7YUavkVeaX5Mx/S1zo0bK+5fGA0dnpLV51T2vVXvW
2hHP+0gfJP3Q7Jd8lsh/S7vK/OqjvqfSuMTjfY/MBGdtJ7Nu90PpO83nGrnt
pXmd+tKwpqzXWarRYw21Ptgd1w9NX6LU13hfmR/0GOM6MxMs3Uc1+r1q4zGt
Y3y11zlqrKu0jm1rf2nG/T1r+565nbAGmeB5v7uH3ueZnjGvKMfLHBdyvZf9
lePA28wkx8f8t8i88IwDnfFM9jt9d73rh7pP8L7fZdzxdzhDJphjRbYzx4rH
MeHZWEv+++PvZA5Y/p3nFgMcozTXduR9Nw+1+2/OeAZdi3zu9JfSz00fNuek
7I/RGWlt//e8Vp5h/Ky2rNN4V6X1I9/ev3X0fYKztpOZt/vM41Xp/ulXXo8H
VlZ7xt/oeUu1uTx3XD+0lmO+rRyz3x6Xz8wE325v+g0Zl3uc69JfGvketXWt
W9dVPHNt77dKzxXvPVfPtL9nbd8rtBPmJhP8vI4ew6jdH/2+Rs+VfEg/KMfg
3vul3lbm9uY1jsoH7/Td1ebHvq2t99TLBM/5LuMuv8O37poJpi+SvuDe5zE/
Kr+P7P+j+jgAr6i09uNRcz7PnEt8d6V+Tu+8otJrrfKc8dwz8Wz8NO3q7bXF
GZngjO1k5u2u9XlHzSGrrcu1yu8J+JVKazwdtR52aSznjmt/tWQmOb5/tFbA
FZngGWrrWre+Tmn+eeapHPkZSnW3+dmj9vdHZmjf2glXkwl+XkdnET3ZUmr0
9WGOjTn29NxHXauM8Wcu1uhs8E7fXc99ZVvncMsEz/ku4+rf4UfulglmXlbv
/bE9lWOQsRiAMUr3whz1zKzSOeLIZ9DdUWmOXe/zQEpZ6x3XH+uV64VnGXb6
Bu8/40qZ4Mh2MvN2ZwyuVKPuRag9Q3z0PQ/APZSOWaPXVn4ozTk+enx/i1Jm
knPx+3un3lo1EyytZ97Try3tn6P7x6W6yxoeo/f3R2Zo39oJV5MJnt/+e7dn
5Jo4R47vp5INjry2utN3VxqfeV9bzxMywXO+yy3bc8aY050ywYzVlMaXR1bG
BVcY4wS4SuZwlOqK51Gkrn6m4Flq9yL1ZLLprz+rO44pblGal5U29f7vr5IJ
jmwns2937ZiVuZgjtj1rg5bqyGdlAtconUdTH51nRqhdy+9ZB/EIzzKTHDdr
27piJpg+a+m+iZ7zUmns8Oh+y5nPGr7L/v7IDO1bO+FqMsHP6+gsorS200c1
Ys5oruV633dPjTqG3OW7yzM5emrrvdYywU+14u+w5i6ZYLZj5H3ELZVxTmuJ
AmxT66cc1V+o3YPzKmvPlPo4OZ/2jAOWnvExU/71TOn+sGefb5VMcGQ7WWG7
S2v7pfY+E7F2L+Kr3csMr6J0Hk2l73LE+9bWKrzb2M377c0xuXWe7oqZYO3+
iZ4+bSlvOXr/lN77TusRjNzfH5mhfWsnXE0m+HkdmUXU+icf1d55TOnznHW/
z9vKcWTvWqJ3+O4yfyX3P7bWnrEJmeCx3+WVv8MWd8gEM35ydh74qKzx8ir3
lACMVDt/XPGM+tRR4253UstFMx+55/XynO5n1TPnLuMe6Sfm9XJfXtbqzv+P
o54DXpP3fTYGUZobtEImOLqdrLDdteNHrr+29gtLbe1Rr3B8gleUdatKddR8
pdo91TkfX71v3kp/INf9OY739hNXywRrc+t6nwdZmn9+dN5Sqq3POLr7/v7I
DO1bO+FqMsHP68gsorRe8rPa02eprel0dGX+5Z5xh6u/u+QjpbXoP6o915cy
wU+10u+w1dWZYMZdauMnR9eotaIAXkntGblHvW/OG6Va/ZmxpfzuUb39h9K8
6dr+zDhoy/OvM0aSv5e/f2Y+WOoLlvp9s2eCR7STVba7dq9g+uy99yHmuFR7
XfcIwrquXNe8VHdbHzr7Yeu+WCkTTF+oNie6d4yvtH+O7reUKnNtVtzfH5mh
fWsnXE0m+HkdlUWUnjn8rDI+v/X9Mj/4qvt93tae+Q1XfHe57sx5qvb8iY9q
73yW3kww/d3HnO8zbRk/etXfYY+rM8GjnzfaUndeOwvgrkp9lqPPYaW1KO42
/jVK+kK1zCG1pS9T6gt+9HqP54VvXRNk9LPAnyndt1GbDzRrJnhkO1lluzN3
vzYfLW279b1y70FtfZe83h0zWGCM0vX+0c/lvXItwDOtkAlm/n/LuS7z7npf
u9RvyT0HR32mlvWwVtzfo53VvrUTriYT/LxGX5fluqo363nU1vUKMz7Qe3/b
kbV1nnjvd5fPnH29Ren5ri21957I2NpOzq4ta5C94u+w15WZYHK4PXMIsr7A
iN9R6m7rqgDcXeka+8pn1M8yLtQquVbreW7rmEZpf75fH2LLehbPKufxo3KS
9DGeZZYt60POlgme0U5W2u6WXDCVuZd539w/8GirmQObHDD/vWWsUR4I6yud
M46eJ1Uab1hpPZyZM8GcQ1rHhbZ+ltr9BUet6d9yf/9R733l/h7trPatnXA1
meDnlXlFW+6dynVUrkcir5HjSM9z6N5X/u3WjGnLPW5v3zf/Pp8j11jJKVqv
s0q15f7v3u/uqkrfcsQxUyb4qVb4Hfa6MhPsPWZkv2Qfl+7py/exZZ3Wu/QF
AWZReh7FlZngrONfj75v7r/L/utdV3vPM9ZK9/sl/3j8vcy3G70eSN47ff/R
+7PUv215v7tmgle2k9W2uzUX3FPyQHgNpXPOkffe1N77jnNYjvicd7mWz/jj
2zGh3jlUGf/cOg5UG9c5ag50y5jbUVnPlft71vb9iu2Ee5EJ3re23idVexb8
s8oxu5bbZR5vjvNbxiC2ZCszfHcj51XLBO9XZ67ndFUmmN9lz5pjvRl47+c6
+loNYDWlsfSjx6CuzCOPsvWe95y/9mZqpXqce7esg95TI/s+pec6tWZLd80E
r2wnK253+qNpL3vm8n1U6ePm+vXIZ4gB93FlLld675WeYzpDJrh1bG3Emurp
r5XqiLbQuu7TUVnPlft71vb9iu2Ee5EJ3rP2HGe2rCHU+35b53L2rsF45+8u
15db10R9RiZ4rzq7P3tVJpjxndZKn23L99/Ttj3TGKDPlffqrTgnvvfZfLm2
TuYwYn5zqXL+bVnvZ0RtWd/jvdKzzXO90rq/7poJXtlOVt7uRzY44j7Y5Oey
QHgtd80Ej1639C77+C6Z4Jbxytw/P+qcUXv/Ef2st7LtLXVU1nP1/p61fb9a
O+FeZIL3q6y1t/WaK88V6a1cK215rxy7e/PH3nsF7/zdHXH/mEzwPrXnd7jV
VZlgvs/k23m90v0eqa3Pj8ncr546c78DzO7KZ/qtlgmmf7ul8h3kXFpaU7sm
/7ZUmcNTykkynzjbkLW73/Zh8pny39Lnb+27JzfaMx6Q9392P1o+Q65ZWl/r
jpngle1k5e1Ou0nuPeo5mbn2TL54dQ4LnKd0/Dj6nFF63o5M8FxbzxnpK43I
Q2rZS9rDqDwsfarWeTRHZT1X7+9Z2/ertRPuRSZ4r9q7hnLvM8F65uh+JOML
vdWzJvLdv7uMdYzMBmWC96ir1jK/8nmC72U93MezGR/PZEz/YetYUF6vp64a
KwOYkUxwnN7z1UeVezPTR+5979oaQs/u72pZ//+t9Dda1mfcc51QWt+0d37R
HTPBK9vJitudtp9xsd57GFvr8RzsO96PAIx1ZZ+odL6SCZ6n1p9qqcwR33OP
VssajSP6MDmv9dyjd0TWc4f9PWv7fqV2wv3IBO9RjzVZ9nyXuWbvXWNlxDG3
NBfqo8rfb33tGb671GMO6t59KRO8tkb8Dve4UyY4Wu+8dH0QgHYywXG2Ppf7
o+qZBxdbxlS2zmPKebnluXJb+relOYNZj2Dk88WvamNXtpPVtjvt5ags8H3l
fUY9Bx64J5ng8e6eCW65d+FZbV1XLVrWaUwWtnW+Smtf7m0dMc5yl/09a/t+
lXbC/cgEr6/MtRxxT0xvnjDqeaW9802Tu4x4fsgda+/5QSZ4XY36HZ75G75D
f7tHT+mDALSTCY6Tc3GuuzNHKGMc7yUjy5+3Vs/YRu+Yyt7vNv3xWt+zd93/
jDs8uwcx1wB5xmDvdt4xE7yynay03ckoW+a0pk2lHWQNi/eZXrY7nyt9+ZbX
kgvC2mSCx7t7JphzRbYx57qsu/7+XJc5LZlT1XpPRT7TlvlXLfeApTI227Om
euRzbHmG3xHjLHfZ37O271dpJ9yPTPCaejyTYeTvrOf6LZVj9aj37l2ztHW9
mTt+d7Xas+6kTPDcOuJ3uMeKmWDGXDJe1NsPuct3AjADmeD5cv2eeb0t1/Ct
30FPJrjlfrtnn6O2jmjPvYLJZZ7V1vvK7pgJXtlOVtnuln5v7/MAW7dbLgjr
ujKvkgne61xW03Ouy3jrln5XzxhP+lC1cdr8eamvVVvH7cpxljP296ztWzvh
CjLBcyrP48i4eOZPbJkf26LnWey5Dhr53r3r0OQ80PK6d/juttTW81dvJph5
Ivk3Z9tyP90dvsszfod7rJAJZt5Sxm7S/2h5VtGz0gcBaJd86Kpzxatmgg/J
FVrmvWQOUstrtdSe5/t+pNaPb11bpNSPSd946/bNnAke0U5W2O6Wa8e0u639
wfTza9fGuR6+4/UAsM+V/ZLSe6evdvW+OeNz3nGMoqblnJFqHcd8r2VtyLeV
fl728eO+/vxv/n8tS8vfq61Df4dxlqP396ztWzvhbDLBcyrXHLlOPvK77HmW
YM8z/Vr0Pius9f17v7vWffzRWjmR69McSx/H097nM76tLeev3kyw9X7LO3iV
3+Ees2WC6ctlm9PWR9/jqg8C0O7KsZlXzwQj/eDa2Eb6lLVzW+vzBI8YI6k9
Z6T2DJNs+7NnwuW/78kwV8gER7aT2bc78yZr88byve69PyDbXeufjr4mBq5X
Wj/rykxwpvPVns959RjFVi3PXNs6Jyvns9513Xor5+l8hlpfcusz6Wba37O2
b+2Es8kEP6/cR/RRXpT1brJGZu+zOd9Wft9HHNN6M7meNYBa9dwT1NofOioT
7JHX3LL+8pbzl0zwU834OxzR1nrq7P525orn2JHxkz33ALbU3cbDAO6s1H/Y
c39Wi1JWcPR730kpE3tU+i+l10jfpFZHjY/k/F6qzJvb2gazPsOebVslExzV
Tmbf7sy9LFWuu0aNReV1atdx1hCFtVx5zpAJzpsJRs51tXGOrfOykvccNU8+
96A+xk8yb/tZpQ959T4+a3/P2r61E84kE/y8WnKlZBOldZpKleup3ueC1rSu
NdTzGXv1ZDSta6nfIROMrfM1es9fMsFPNePvcK87ZoI5tmSM5+gM8H3JBAHa
XTn+deWzDO8m2Vepco1dyzpqddT3WZsvXOrTZt3II9vASpngqHYy83afndHV
rpPdKwhruWsmuNKxZtVMMGprW++dm1WbF9Nb6Z+9va++9GzqOz7T8uj9PWv7
1k44g0zw8+rJlTJWvqVyXKs9E7RH7/P8anN9t+jJs1qfZ3iXTDBy/OzN7HrP
XzLBTzXj73CvO2WC2ZaeZ5SOLpkgQLu7ZoK5nr1635ytNkeuds9crY583lzp
u3w2lpm85dla+6Pu91otExzRTmbd7qvyuTznulTuFYR1ZL2hZ9X6fNytSsfI
2bOyt+6QmVz1PaaydtWe1885Z++zVzJn+6Nx3VLWc9c+09H7u9dd2rd2wtFk
gp9Xb660Nb/P9fOoDKs3EzwiS+o9VrW85p0ywei9HzPVs06rTPBTzfg73OsO
mWAy7KPXMG8pmSBAu9Iz6Y+e61mqs6/h76C2Bmct06vdl39k36+Um3w0PpD5
cqX5Q6O2dcVMcG87mXW7a33do+bq1e6DTYZw9b4Fxijdu946N32r0hrLK82T
uktmcpTauWrUOSPjuL1jL1knqzT/Jn3v2b6bs/Z3q7u1b+2Eo8gEP68t+cCe
9X5HXPtkDcSeuvo+wYx3HLFfz8h2Mn+1p3qeCSIT/FQz/g73ujoTTOZde1bM
lsq8r9J8zY9KJgjQrnRdlzrqfWvj7Ef0N++u9HyOVO3cXbtH/8i+X6kfle16
//d7+y1X1F0zw73tZNbtLvUH0wd9u67VaKX7YJOHX71vgTFq8+WPWps5r1uq
nrnid3e3zGS02vOdR9/TnraT/CbnyOzbt5IFJU+OnINrr1VaQ+uu81/O3t81
d23fr95OGE8m+HltySJy/dLzPL23leuflt9sSW1MZsRnrOn5/B+NK1z13fUq
zTv7qDI/o/W1ZYKfasbf4V5XZoLph9We79JaafO5ZyXXY2/Xzu0pmSBAu9rc
sKOOqaV1Z1Kvuh5f6V6/WkZVm3t25PmxlNd8dL+pTPC6djLrdpfuRT16zK90
LdJzvQbcW23uwlF9k9qaUivNk7prZjJSaWzk6DVo98j57FnddV3yu+3vV2jf
s7YTxpIJfl5bc6Vcoz97nkatcozbOy+yp46Yo1Rb6+httV7n3jETzPGxp3rW
p5AJfqpZf4d7XJkJlvoEtXrMSaq1x56SCQK0q81NP6q/UDtvXXlOvVLpXr/a
Wq61tdCPzFlL7y0TvFc7mXW7r3zWVql9t65hA8yhNB5wVDZXuz/x6vnHI71C
ZlL6jEevQbtHad2nO8/Vu9P+foX2PWs7YSyZ4Oe1J1eqrd1UqtxXs+e77Mnk
Rs/DrN3r/b5a12e5YyaYNSZ7q3V9Cpngp5r1d7jHVZlg7/NIU8kQs7094709
JRME6FO6tjuqf1S6r6x1TYgV1fpzpX9bOycfudZ5aR2hj7I1meB17WTW7b7y
WVu19nrUeoLA+UrzD45aw7P0vNVklFfvk5FeITOZ8Rxdukc2bfDOc/XutL9X
b98ztxPGkgl+XnvHTXqf/fm29mQ8PWsmjp572psptF7z3TETLPX1npVM8HV+
h3tclQn27qstYza98wZkggB9Svd7HzXfpdRvOfvZHyXph+XcnvNsy33te+25
j6q25tmRfd1SX+2j+XyrZYIztZNZt7t0787R8/Jq7fXtevfA3ErrFB81pl9a
+/vOa01ucUVmkpwi57es25Vz3dFrsZY+410z3tJzjnrb4Cvv79UzwZHthLnJ
BD+vvdfauZ4ozYEsVa6jtmbyveP6I+8HLs0r/qhar1XvmAn2flZrh77W73CP
KzLB2nMP3tfWOdy9zzyVCQL0KfVPjri+y3myNL5/1Dz8VjlHPstJj84rS/2P
lueWlfZr7s08artL/dCP3neFTHDWdjLrdpeeF3T0dtfWETnyvYFzlca8j1qb
uXRsvHItoiOclZmkb/vsvY7OLmZc37s0P7Cl/2h//7LVM8G97YR1yAQ/rxG5
0p5r5ByHt7xn7/1rW9/nvdqY0Pvqycjulgnms/as0ZrqWTtLJvipZv0dnrm9
I/ojPeus7llHoDd7NFcboM/Z6+KlD1Kqq59FUZqvf+RzSWrPdmzJPUrX6ket
ybol4806pum7Hq3U9853Wfq3tXHYWdvJrNtdattHjzeW1jr2PEFYS62PMnr+
ae1a9+h7rM52ZiZYqqPWfE6fqJTxblmX/HFPfxwx1lFbl6ll7HCl/T1D+561
nbAOmeDnNSpXKq1XUKstv8Petfly3T/iGNObRbY+S/DK7+6Z0nyzZ5X7N1tf
Xyb4qWb9He5xRSZYGh95X3v6YllzoqfcJwjQJ9eQpUxn9HhU7ht/VkdmEiO2
L/Xrf8ePHfK+tXN5y/zbWt/6iG2vjWde2ecs9SH3jhPN2k5m3e7Sujajrk2f
KV1nvfLzT2FVpfkko8eNauft1Z5XelZmUtuvGWM44vPVMuWWz5jzYfbTR33z
I56fW9pX6Ze3zO2eeX/P2L5nbSesY4VM8O/5F//roj/ylb9ePL68r9/+fX+x
+pot/tFv+/LXv/Z/9t1T9qhcl/zqb/nB7vf8yk9/ret9fvTn/vddn/Gf/K1/
tusewVTGpFpf/6rv7iPf/Dt/vPuzpn7nf/bfNb9Hvo+eyjYd9XlHe6Xf4Vb5
zD2Vfbr3Pf/Yj/xPze/3J3/8f9n8Ppmn31O/9tu/cnmbBZhN6Zi+5xj+kdJz
rLMdV++L2rOuMxf6iPfNfi5VS98tfZdS5Zw6ertL5+ms2XTld1nqQ+69lpm1
ncy63bkuKtW//5/+3CHbfcVvCrhW6Z6n0X2i0jhc7o++el+MVhq3GjFG8fAb
v+sni8fu7Pez206qZUzz+/7L53OvM840cnszZlUa82rtl8+8v2ds37O2E9bx
hd/zkzLBdzUyV/rCl/rujXlbOTac8X7f8wO/sOmz/UP/6g8Xx4M+qvz9nve4
Syb4u//Qf9+1HY9Khphr0Nb3kQl+qpl/h1tdkQn2tLn0H7a8R34DvXm6TBCg
X+1898/8O39uyPvU8ohR77NH+qmlc0/+bPS8n3zuUmX+betrlc7Pvf3Lmtp5
euu1wihHZoKztpNZtzv9u1IdNXZem5s20zUV0Ca/61KN6qvUjo1n5xlnOCsz
yXmstKZkavS4Qa1PlD/LObj2OrU++cjtrs23aW3rM+/vGdv3rO2EdcgEP6/R
uVLPfThvK8e+3t9kjuFb7mXrPa7luFR6Rvyz6u0PXfHd5ZyU/mPmyOT9a+fE
UvXOP5MJfqqZf4dbXZEJ9n4v/+x3/GjX6+eY1Hv/ckomCNCv1g8cNS++NCfs
TvPha+f+0fcG1c53PeftWp9g5D0Otbwk64Jc+T0emQnO3E5m3e7Mey/V6GuA
2njj1jlvwP2V7okZdR4t3T/dOyd+FmdmJrV7yEbf81l7v9Z+R20OTM96YiW1
dbF67+2bdX/P2r5nbSesQSb4eR1xHbJ17cIt4yq9a/Q9KtdntfH+jDXlnrkt
ueOW/lDvd3e36s1AezPBO1Tr3PFX+x1ucUUmWFqr4KPKXIDWeedb88DU1eOP
ALOq5QSZ87Tn9bO2X6nuNB++tgZS+rOj5qDU1pTofa/Mia7NS8vc4r3bXbuP
4g4Z79GZ4KztZNbtrs1TT7sftd3pi9aur85cEwQ4V21sbG+fpbZuwqjx/Ls5
MzPJGGWteuctP9OyvlTPfPH0oZ5VxqZGrPlQO8f19vtn3t8ztu9Z2wlrkAl+
XkesP1nrK5Sq97kKufapzb8sVcb803dK/+Vxv1xyn4wxbckCU/l3W8b4Z84E
t8yzkAl+qtl/h1tckQluWVc17bTWL8nrbrmX+FH6JADb1O6JyXj71uvrHJtL
r713PnzGGNL3fGbLNXFtnfucq/auSdRy/t5yz1btdfNd7lkzomXdjzucj4/O
BGduJzNud65Va9udPx+xVljt+iNjbWc+Oxw4V21ecPo0W/ON/LvaPch7ji/p
q5X6RFeuq3N2ZlKbZ5x9vXd/1Pq4qd7nrdXm0e29N6s2v3vr8+Fm3d+ztu9Z
2wnzkwl+Xkc9k25rvpXr/d4xkORvW/O7I2rr/KtZM8Gtz3mRCX6qFX6Hva7I
BDPesnV/ZM54rkfyGo81d/Pfep8z+lGdkcECrKp2T09ygt5cMMf42n1re8/d
tXxqy+vXnvOTynlr65hgy/32GTvZmm/UxmXS59xyv2D2S+37PGLcY4szMsFZ
28ms290yTy+vu3W7Mw5fWs/vUavewwN80nJvcu+xJn+/dg7de3ypjQ1d+azf
szOTlvHN9CG3njNqmUxqyxhfy5oPW9pJznG1ca09z56edX/P2r5nbSfMTyb4
eR2VReR3vnXtwi25fW++cFTtWY9l1kxwa54hE/xUq/wOj/zNjuqPtIyZnF3W
cQLYrmXNiJ4sqZYxppI77L3f5ohMMFrX1c+5pzXbyDhIS78t+3nPvXy5Tm95
tnX6BC1ztlufA7AnxxztjExw5nYy63a3Xhtku3vuR0je2LJmjmfnwOuozVnN
sax1DCd/r3YOzTFob59IJvgrtT7zJM+naz3XJftqHQvZum5CS/6VbWjNZbId
Lee4veNps+7vWdv3rO2EuckEz/1N1J77UKotx8SrM7W911pXb/+W2nOOkAl+
qpV+h62uygRb5pifXaOfXQ3walrXy871Yq5D347rZxwr/z/jAS3zaEasTxhH
ZYItzxR7VD5v+jZ5r7fznx/7JHlaT39txDP/WtZXelTmL+Xvf7TtyY5a1/W+
w5qhD2dlgrO2k5m3u+e50/m7eb/HGhVvXyufJZ+r9fkZ+Xt3ybyB47U8Iy2V
c+RjLZy3md7j+NhyDs3fGbGup0zwV+o5Z7w9172ft5L/n3uueuZF773ns/S8
uEeln5d+Wvrvb8/Pj/WY0ldv7cNtWa9+pf09Y/uetZ0wN5ng53V0Tr4158rv
uneuUf5+6/yO0TXi+DJbJri3XyYT/FQr/Q5bXZUJxhnHiYxTtlbuiTjy+wd4
BTlHH105Xo96ps1RmWBk/H/E2tY9lfHDUd9lTy64t64cZ/zIWZngzO3EdrfX
yGMWMI8z1tHa88zm92SCn8s4TEtuMrJyH9ze7W55fvOoGnkP/Kz7e9b2PWs7
YV4ywc/r6Cxiz9qFW9fTy/yB1nmTI2rUs8BmygRHXBfLBD/Vir/DmiszwThy
DdHHXK+eNr5nrTUAftmRuWAyqq3PEvnIkZlg5Nx/xthGxgRH3B/43tG54NZn
Ex7tzExw5nYy83aftY598kd5ILyuI3PBnENH3mMvE/zYWee6nvVkW7Q8x3lv
HXHf16z7e9b2PWs7YU4ywc/rjPV0t65dmOPk1nlHmeORORdHVq6zRo7jz5AJ
tj6/pYVM8FOt+jssuToT7F3DqaXSn8m6Bo/3qD3j/W3pqwCMkWPv6Cwpx/fR
60senQlGznWtz1/bUpmDl+elHPVdJoM9Ymwm86RG5rsjnZ0JztxOZt3uOPq+
5lwHH7XWBzCP9CVGj7mnjzV6/EImWHbkOkdH9Yly/jziXo2056PHz2bc37O2
75nbCXORCX5eZ/1GtuZdGQfY877J7LKG38ixoYzhHLHf7poJ5vg8Mgt8kAl+
qtV/hx+5OhN8yD2ve+uxzvn7Z7Wkf9Na6bMYuwEYI8ffUfM+8jqtz7jvcUYm
+JA8c+T6PBnPSPZ61nkrc6lHjWnmHq073zt1RSY4ezuZdbtznTr6eiivZ+0J
4K30YUbdn5w+0RHnUJlgXc51I9efTr8q+/XI582OnruTsd0j+uSr7O9Z2/fM
7YR5yAQ/r7OyiD1rF464pzrvn8+657or/ahsy1HXh1dmgrmOzr55yLkq58Aj
z1cywU/1Kr/Dt+6SCUaua/L6vXMHsi8zD7vU3+iZ83SX9SMAVpE1/7b2N9Lv
O3Js/cxM8CH3su8Z38g2n5kFvpU+TPphW+YSZxwmYw13zgIfrswEZ28ns253
1uPYO4f16OMVML+M72zNBnP+Gb1ewlsywb7vcc9YWs51Z2dT6X+lH7ZlflfO
jRlzOXJditX296zte+Z2wv29QiZIXY4zGSPKcTnHmxwD365LlLGGRzaWY0qu
L92/A+tLtpffe9aKeBwD3tbb44JxF4B55PieeReZ357j+Pv5Mbn2fBzfk8XN
kB3t3R/pCz/6wR/lKI/5Yskq7rZPsi3Jbh7n5bf5asYE8t/yXaevf+R8vtXN
2k5m3e5I//JZP/RRuW7Nn+XzZaxS+wZ6PObLJx98fw59ex5NHpBzqDH2e8r3
mLGL0rku/d382eP+hqu/y5yvct56nOc+mh/3GI894z6F1ff3rGZuJ9yXTBAA
AAAAAADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADW
JhMEAAAAAACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAA
AACAtckEAQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckE
AQAAAAAAYG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckEAQAAAAAA
YG0yQQAAAAAAAFibTBAAAAAAAADWJhMEAAAAAACAtckEAQAAAAAAYG0yQQAA
AAAAAFibTBAAAAAAAADWtkIm+Hf/C38CAAAAAAAAeOIL3y0TBAAAAAAAgJXJ
BAEAAAAAAGBtMkEAAAAAAABYm0wQAAAAAAAA1iYTBAAAAAAAgLXJBAEAAAAA
AGBtMkEAAAAAAABYm0wQAAAAAAAA1iYTBAAAAAAAgLXJBAEAAAAAAGBtMkEA
AAAAAABYm0wQAAAAAAAA1iYTBAAAAAAAgLXJBAEAAAAAAGBtMkEAAAAAAABY
m0wQAAAAAAAA1iYTBAAAAAAAgLXJBAEAAAAAAGBtMkEAAAAAAABYm0wQAAAA
AAAA1iYTBAAAAAAAgLXJBAEAAAAAAGBtMkEAAAAAAABYm0wQAAAAAAAA1iYT
BAAAAAAAgLXJBAEAAAAAAGBtMkEAAAAAAABYm0wQAAAAAAAA1iYTBAAAAAAA
gLXJBAEAAAAAAGBtMkEAAAAAAABYm0wQAAAAAAAA1iYTBAAAAAAAgLXJBAEA
AAAAAGBtMkEAAAAAAABYm0wQAAAAAAAA1iYTBAAAAAAAgLXJBAEAAAAAAGBt
MkEAAAAAAABY2wqZ4N/1z/9xAAAAAAAA4Ilv/+6fkAkCAAAAAADAwmSCAAAA
AAAAsDaZIAAAAAAAAKxNJggAAAAAAABrkwkCAAAAAADA2mSCAAAAAAAAsDaZ
IAAAAAAAAKxNJggAAAAAAABrkwkCAAAAAADA2mSCAAAAAAAAsDaZIAAAAAAA
AKxNJggAAAAAAABrkwkCAAAAAADA2mSCAAAAAAAAsDaZIAAAAAAAAKxNJggA
AAAAAABrkwkCAAAAAADA2mSCAAAAAAAAsDaZIAAAAAAAAKxNJggAAAAAAABr
kwkCAAAAAADA2mSCAAAAAAAAsDaZIAAAAAAAAKxNJggAAAAAAABrkwkCAAAA
AADA2mSCAAAAAAAAsDaZIAAAAAAAAKxNJggAAAAAAABrkwkCAAAAAADA2mSC
AAAAAAAAsDaZIAAAAAAAAKxNJggAAAAAAABrkwkCAAAAAADA2mSCAAAAAAAA
sDaZIAAAAAAAAKxNJggAAAAAAABrkwkCAAAA8P+3dyfPdlVVAIeXlNIGpJEk
0iVAgERMCIIJKE2ItIJIF8UGEERBUbFEGgVpBAY6EQeWMlUnThw40CqLmc3Q
iYyc6P+gf4B7ufeue97h3vdewkvy7vVbVd8weefc6a/WOgAALDZNEAAAAAAA
ABbbIjTBXQ//EQAAAAAAAJjh2Z9pggAAAAAAALDINEEAAAAAAABYbJogAAAA
AAAALDZNEAAAAAAAABabJggAAAAAAACLTRMEAAAAAACAxaYJAgAAAAAAwGLT
BAEAAAAAAGCxaYIAAAAAAACw2DRBAAAAAAAAWGxz2gRvevHVn/9UEwQAAAAA
AICVzWiCe9dZE9ymCQIAAAAAAMChWedNcFNxriYIAAAAAAAAh643wd/+/m9/
j4hbi+unNMEPHoUmePqoCV5aXFFcowkCAAAAAADA6o2a4C2tCe4pdo2a4AeO
YBM8ZdQELxw0wY8XN7702i/e0AQBAAAAAABgZSs0wYuLLaMmuOEIN8FzWhP8
UPGR1gQ/8fLrb/5EEwQAAAAAAICVjZrgzVG/1/fRYmdx0TJN8Nij0AQvL64u
9muCAAAAAAAAsDqjJnhTa4JXFh9uTfC8QRN8/xFqgie3JrixOLs4v9he7C6u
Kvb9+I1fv9mb4D3P/xkAAAAAAACY4Ue/fPt/Xe13b739j4i4MeptzitaE9zW
muDm4ozWBE8aNMH3HoYmeGJrgqcVZ46a4GXF3uL6X/3mT3/oTRAAAAAAAABY
2Vt/+ed/ImJ/1Nuc+d2+vNWZNzvPjXrDc9gEjz9MTfC4QRM8tTXBs4qtxSVR
75nmXdNrNUEAAAAAAAA4OG/99V//zv27qLc580bnjuKCqN/zyyZ4+jJN8Jg1
aILva00wdxA3tCaY90rzbmnuKuYd09xdzB3Gj0Xtl7cVdxf3Fw8VXy2eKL5d
PF18r3iheLF4uXileLV5HQAAAAAAAObQa1F71w+j9q+Xojax7xfPFN8pvlk8
XjxSfKG4r7gjJt8S3FPsirqXlzc783Zn7uvlLc9TYm2b4HtiaRPM//OE9jey
P+ZuYvbI3FXMncXcXbw8arfMfnlzcWdxoL3LwzHpgk8WT0Vtg8+13+D59nv8
IGon7F4CAAAAAACAdezFkRdi0gFzT+7Z4rtRd+d6D/xy8UDx2eKuqPt2uXeX
+3f9W4IXFVui7ullE8y9vbzpmbc917oJDu+HDptg7iZujLqrmH0yO2X2yiuj
fvew7wrmO3ym+GLULviV4mvFN6K2wWyhT7XfIRvhM+136Z4DAAAAAACAdezZ
kaeb7F/ZwnoL/HrxWNT9wOyB9xf3xGRH8Lpib9S7ocNvCW6OesMzm2De9Mxm
lzc+c69vLZrg+JuC2Rv7NwVzN7F/UzD7ZHbKS2OyK5jPfGNxe9QumPuCn496
RzTfM9vg4+3dn2i/w7eaJ9tvAwAAAAAAAPMiG1fvXdm+ckcuW1juy+U9zdwN
/FLUXbrcD+w98JZiX0x2BHfG0ruh428JHokmmH8jm+CpUXtkdsncFczvG25v
z5jPenXUG6LZND9ZfLq4t71f3hJ9oL3zI+39H22/RXps4HEAAAAAAABYx4Zt
q/euR5tsYXlL88GoLTB3A3OX7u6Y9MAbot7hzO8IXhZ1R3BbcV5M7obmvl42
ulnfElyrJpidMXvj+H7ocFdwW3vGfNa8Idq7YO4L3tre666obfBAe+fPRW2E
+Rs8MPBg8xAAAAAAAACsY71rDVtXtq9sYHlHM5tYfmvvvqgt8M6oO3W5W7cv
Jj0w73HmdwQvjrojmHt5uSN4RtQ2l00wW920JjjufMvNrCY4635o3xXcFJPv
CuYN0XEXvDZq38z3yjaY90Q/FXV3MN879yLvbfK3OAAAAAAAAABzKFtX717Z
wLKF5c5cdsDcn7utuLnYH3W3Lu+FDntg3gzN+5zjHcFTYvV3Q1dqgn2Wux86
a1cwnym/cZhdMNtldsFdUe+I7mnvk21wX3vHm9r73trePd0+cAcAAAAAAADM
kWHryj3A7F/ZwvI+aLaxvK2Ze3TZAnM38KqoO3a7Y9IDL4zaA8ffEcx9vdzb
G+8IHuy3BIez3P3Q8a5g74IbY2kXzH3B7e358z16G8x3yz54TXFde+d9Tf4G
+wEAAAAAAGCO3dDsi9rCsonl7lx2wLyxuTdqC8zdwJ1Rd+2m9cC815l3O/t3
BNdyRzBi+fuh4+8K9huiece0d8G8I7q1PXc+/46obfCy9m5XtPfcE5NO2F0N
AAAAAAAAc663r+x/2cOyjWUjy1aWzWzYAnPXLnfuxj1wfDN0NTuCh9oEx7uC
w+8K9i6Yz9K7YL8jenZ77nz+C2OyN5jvdmnURrizvXO3u/0OAAAAAAAAMK92
N72B5ff2sotlH8tWls0sW+C2qC1tS9Sdu2xswx6Y9zo3xNKboSvtCL7bJjjs
gsMbouN9wdPbc26KpW1wa0z6YL5fNsKL2/tuH9kBAAAAAAAAc2jcvS6JyS5g
ylZ2QdR2lg0tW+BZxeaou3e5g5fNbdwD847nanYED6YJxpR/O+2G6LQumM93
Wkx2BnsbzHfJPnhue78t7V3T+VNcAAAAAAAAAHNkWvPa2mQby0aWrSw7YHaz
vheYTS137nL3Lntg3uic1QPXakewz7T/45hYuQtuaM/Z22DfG8x32djea3N7
x2ErnOUcAAAAAAAAWMeWa11nNb2NbYqlHTD37HoLzL6WO3jD7wfO6oHTmuCh
znI3RKd1wXEb7HuD+Q69D/ZG2J05xUYAAAAAAACYQ9PaV+9/wwaY7ax3wNy3
6y0wdwN7Dzw23tkD13JHsM+sXcFZXfC4mHTB3gb7TdGTY7I/2Dvh2GkAAAAA
AACwIMYtrHey3gBT7tmNW2DfDcwGd7h7YJ/VdsFhGxzvDZ7Q3uOkgQ0x2SUE
AAAAAACARdbbWG9lvQH2DjhsgbN2Aw9XD+wz7f8ef19wVhs8Lib7g+NOOM2J
AAAAAAAAMOeW62HDbjbsgMO9wCPdA/ss1wVntcHeB4eNcNwKx44HAAAAAACA
OTarg4172XIdcKUWeLiaYKzw96a1wXEfnNYKAQAAAAAA4P/BrG427mvHxNHr
gX2W+7vDNjitD662FwIAAAAAAMAiWambrbYDHu4WOJyVnmNaHzyYVggAAAAA
AACLalo/W21/Oxqz2mc72GYIAAAAAAAAi+TddrX1Mu/2PQAAAAAAAICl1vMc
7d8GAAAAAAAA5tEiztH+TQEAAAAAAOBIMMYYY4wxxhhjjDHGGGOMMcYYY4wx
xhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY4wxxph3zH8Bom7Zmg==
     "], {{0, 285.8181818181818}, {392.07272727272726`, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{330, 330}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{392.07272727272726`, 285.8181818181818},
   PlotRange->{{0, 392.07272727272726`}, {0, 285.8181818181818}}]], "Input",
  ExpressionUUID->"a2da7713-592d-48f6-92c4-8cd769b609d3"],
 "\n\nIt becomes clear, that the given BERT net model does not deliver the \
best results regarding Loss and ErrorRate. Nevertheless, BERT is more or less \
the current standard transformer, which can be observed in the Python [7] [8] \
and Matlab community [9].\n\nThe best results are provided by RoBERTa \
regarding Loss and Error Rate. Therefore, I decided to train both BERT \
versions simultaneously.\n"
}], "Text",
 CellChangeTimes->{{3.8732791208387403`*^9, 3.873279133977274*^9}, {
   3.87327942612693*^9, 3.873279681116268*^9}, {3.8732797251204596`*^9, 
   3.873279860245796*^9}, {3.873280444069371*^9, 3.8732804988327084`*^9}, 
   3.8732805438039837`*^9, {3.873280585912516*^9, 3.8732808907058525`*^9}, {
   3.8732819983719893`*^9, 3.8732820069672613`*^9}, {3.873282042138768*^9, 
   3.8732820466082497`*^9}, 3.8830335540769496`*^9, {3.883033584751417*^9, 
   3.8830335869835553`*^9}, {3.883033662033045*^9, 3.883033716524453*^9}, {
   3.883034290851895*^9, 3.8830343100831127`*^9}, {3.883035651402664*^9, 
   3.883035670149105*^9}},ExpressionUUID->"bc2ac7b4-a27c-4f5b-9159-\
1044406941d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Section",
 CellChangeTimes->{{3.883033732747575*^9, 
  3.8830337344806957`*^9}},ExpressionUUID->"f42ee9ad-615a-4633-88a5-\
dd99eefcb801"],

Cell["\<\
The training process itself is not part of this notebook. Nevertheless, some \
general remarks:\
\>", "Text",
 CellChangeTimes->{{3.8830337414972324`*^9, 
  3.8830338054585996`*^9}},ExpressionUUID->"9ed88a0f-a4ae-4102-88d0-\
8d4c97c90237"],

Cell["\<\
The Wolfram resource \[OpenCurlyDoubleQuote]BERT Trained on BookCorpus and \
Wikipedia Data\[CloseCurlyDoubleQuote] [10] is used to create FinBERT. \
\>", "Item",
 CellChangeTimes->{{3.883034646401496*^9, 3.8830347229167814`*^9}, {
  3.883035741299198*^9, 
  3.8830357425143023`*^9}},ExpressionUUID->"ffe69cbe-73f1-4dc8-8537-\
4a61a8fbe773"],

Cell["\<\
To become FinRoBERTa, the Wolfram resource \[OpenCurlyDoubleQuote]RoBERTa \
Trained on BookCorpus, English Wikipedia, CC-News, OpenWebText and Stories \
Datasets\[CloseCurlyDoubleQuote][11] is used.\
\>", "Item",
 CellChangeTimes->{{3.883034646401496*^9, 3.8830347716100225`*^9}, {
  3.883034859534184*^9, 
  3.8830348750191307`*^9}},ExpressionUUID->"de6e6cf0-d5d6-4a7c-a284-\
4321b309d75b"],

Cell["\<\
A balanced training set has been used. Which means that there are the same \
number of positive, neutral, and negative sentiments applied.\
\>", "Item",
 CellChangeTimes->{{3.8830338426124907`*^9, 3.883033947347*^9}, {
  3.883034014184345*^9, 
  3.883034021616534*^9}},ExpressionUUID->"aaa81c63-88b6-4305-818f-\
e0b02612865d"],

Cell["\<\
The training has been completed with sentences with and without sentence \
punctuation.\
\>", "Item",
 CellChangeTimes->{{3.8830338426124907`*^9, 3.883033947347*^9}, {
   3.883034014184345*^9, 3.883034126712676*^9}, 
   3.883034219524664*^9},ExpressionUUID->"7f7371ca-747c-42ff-9609-\
14e64567e5bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load FinBERT and FinRoBERTa", "Section",
 CellChangeTimes->{{3.8806094380184326`*^9, 3.8806094444675627`*^9}, 
   3.88302592693672*^9, {3.883026348673152*^9, 
   3.883026368871349*^9}},ExpressionUUID->"117b1508-688e-4062-a944-\
9a487ca908cb"],

Cell[CellGroupData[{

Cell["Download  FinBERT and FinRoBERTa from the web", "Subsection",
 CellChangeTimes->{{3.883027005561734*^9, 3.8830270450682173`*^9}, {
  3.883048049547578*^9, 3.8830480500327263`*^9}, {3.883050271601668*^9, 
  3.8830502737682033`*^9}},ExpressionUUID->"eec7b8c4-653d-4179-8818-\
495e1e411340"],

Cell[TextData[StyleBox[ButtonBox["Download FinBERT",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://1drv.ms/u/s!Aty-DGt3XGT0hY8-DB2e1R5A6xzJVQ?e=Uz48p1"], None},
 ButtonNote->"https://1drv.ms/u/s!Aty-DGt3XGT0hY8-DB2e1R5A6xzJVQ?e=Uz48p1"],
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.8830512074105043`*^9, 
  3.8830512520509267`*^9}},ExpressionUUID->"ecec216c-831a-4aa0-a29d-\
a7c79b135e3b"],

Cell[TextData[StyleBox[ButtonBox["Download FinRoBERTa",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://1drv.ms/u/s!Aty-DGt3XGT0hY8_sXcFuRKgse7QZQ?e=nLstq5"], None},
 ButtonNote->"https://1drv.ms/u/s!Aty-DGt3XGT0hY8_sXcFuRKgse7QZQ?e=nLstq5"],
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Text",
 CellChangeTimes->{{3.883051300398003*^9, 3.883051313162881*^9}, {
  3.8830513688155885`*^9, 
  3.883051368816537*^9}},ExpressionUUID->"0751c07a-407c-453d-9f47-\
2f7adf4e5708"],

Cell["Store the files in the same folder as this notebook.", "Text",
 CellChangeTimes->{{3.8830514316008034`*^9, 3.883051451836903*^9}, {
   3.8830515323372765`*^9, 3.88305154510614*^9}, 
   3.883051603903076*^9},ExpressionUUID->"110accda-a906-46ee-8435-\
3b6fde285bd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import local copies of FinBERT and FinRoBERTa", "Subsection",
 CellChangeTimes->{{3.883026962525611*^9, 
  3.883026990533229*^9}},ExpressionUUID->"dda815d4-e168-420f-9d5c-\
4026798fc0e9"],

Cell["\<\
Let\[CloseCurlyQuote]s assume that this notebook, as well as FinBERT and \
FinRoBERTa are stored in the same directory.\
\>", "Text",
 CellChangeTimes->{{3.8830357856595273`*^9, 3.8830358451812506`*^9}, 
   3.883037875176501*^9},ExpressionUUID->"7bb6493a-10ee-4980-bb68-\
95eda794c7fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8830265355855103`*^9, 3.88302653558751*^9}, 
   3.8830265966982145`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"0f045cb9-ecb2-41b4-a623-e2a359cfd4c0"],

Cell[BoxData["\<\"e:\\\\Users\\\\juerg\\\\Documents\\\\Mathematica\\\\NLP\"\>\
"], "Output",
 CellChangeTimes->{3.8830265511379757`*^9, 3.8830266000185137`*^9, 
  3.88303696779239*^9, 3.8830394066121855`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2902503c-af37-4663-b935-856b44243859"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finbert", "=", 
  RowBox[{"Import", "[", "\"\<FinBERT.WLNET\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8806094499746428`*^9, 3.8806094854744573`*^9}, 
   3.881469389879385*^9, 3.883018159956936*^9, 3.8830265473897343`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"109a9d8d-06e8-4f7d-890d-4da4c497bb80"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "part1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 1}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>|>, 
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{30522, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 30522, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 512, "$Length" -> 
                    NeuralNetworks`LengthVar[1466040848]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 512]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 512, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 512]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "part2" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 2}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Min[2, #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848]}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 2]]|>|>, 
                    "embeddingsegments" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{2, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 2, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`IndexIntegerT[1, 2]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[#3 + (# + #2)& ], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "normalize" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.1, "Method" -> "Dropout", 
                    "OutputPorts" -> NeuralNetworks`ValidatedParameter[{
                    "Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "part2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingsegments", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingsegments", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "normalize", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "normalize", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"]}|>, 
                    "encoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "3" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "4" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "5" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "6" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "7" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "8" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "9" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "10" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "11" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "12" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"key" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 768}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "query" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "elem" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "value" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{64}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {64}, 
                    "$OutputSize" -> 64, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "attention" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|"Query" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", 
                    "Output"]}|>, "Mask" -> None, "ScoreRescaling" -> None, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[1466040848]}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "MultiHead" -> False, "Dropout" -> 
                    0.|>, "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 
                    NeuralNetworks`LengthVar[1466040848]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "key", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "value", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Key"] -> NeuralNetworks`NetPath[
                    "Nodes", "key", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "query", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "elem", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "query", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Query"] -> NeuralNetworks`NetPath[
                    "Nodes", "elem", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "attention", "Inputs", 
                    "Value"] -> NeuralNetworks`NetPath[
                    "Nodes", "value", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "attention", "Outputs", 
                    "Output"]}|>, "13" -> <|"Type" -> "Catenate", 
                    "Arrays" -> <||>, "Parameters" -> <|"Level" -> 2|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "4" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "5" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "6" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "7" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "8" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "9" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "10" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "11" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT], "12" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "14" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "4"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "5"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "6"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "7"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "8"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "9"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "10"] -> 
                    NeuralNetworks`NetPath["Nodes", "10", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "11"] -> 
                    NeuralNetworks`NetPath["Nodes", "11", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "12"] -> 
                    NeuralNetworks`NetPath["Nodes", "12", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "13", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "14", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    0.5 (# (1 + Erf[0.7071067811865475 #]))& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "encoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "encoder", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "LongShortTermMemory", 
                    "Arrays" -> <|
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 768}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 4}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{4}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 768}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 4}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{4}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 768}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 4}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{4}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 768}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 4}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|
                    "OutputSize" -> 4, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    768, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1466040848], 
                    "$CellStateConnectedQ" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 4}, 
                    NeuralNetworks`RealT]|>, 
                    "States" -> <|
                    "State" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "CellState" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "SequenceLast", "Arrays" -> <||>, 
                    "Parameters" -> <||>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 4, "$InputDimensions" -> {4}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
                    "InteriorStates" -> <|{2, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "2", "States", "State"], {
                    2, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "States", "CellState"]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1466040848], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]], "Type" -> 
                    "Function", "Function" -> Composition[
                    NetEncoder[
                    "Function", <|"Function" -> Function[$CellContext`batch$, 
                    
                    With[{$CellContext`tokens$ = 
                    Function[{$CellContext`func, $CellContext`inputs}, 
                    
                    Module[{$CellContext`subref, $CellContext`n, \
$CellContext`offset = 
                    0, $CellContext`outputs}, $CellContext`outputs = \
$CellContext`func[
                    Flatten[$CellContext`inputs, 1]]; 
                    Table[$CellContext`n = Length[$CellContext`subref]; 
                    AddTo[$CellContext`offset, $CellContext`n]; 
                    Part[$CellContext`outputs, 
                    
                    Span[$CellContext`offset - $CellContext`n + 
                    1, $CellContext`offset]], {$CellContext`subref, \
$CellContext`inputs}]]][
                    Function[$CellContext`stringBatch$, 
                    Composition[
                    Module[{$CellContext`voc$ = <|
                    "[PAD]" -> 1, "[unused0]" -> 2, "[unused1]" -> 3, 
                    "[unused2]" -> 4, "[unused3]" -> 5, "[unused4]" -> 6, 
                    "[unused5]" -> 7, "[unused6]" -> 8, "[unused7]" -> 9, 
                    "[unused8]" -> 10, "[unused9]" -> 11, "[unused10]" -> 12, 
                    "[unused11]" -> 13, "[unused12]" -> 14, "[unused13]" -> 
                    15, "[unused14]" -> 16, "[unused15]" -> 17, "[unused16]" -> 
                    18, "[unused17]" -> 19, "[unused18]" -> 20, "[unused19]" -> 
                    21, "[unused20]" -> 22, "[unused21]" -> 23, "[unused22]" -> 
                    24, "[unused23]" -> 25, "[unused24]" -> 26, "[unused25]" -> 
                    27, "[unused26]" -> 28, "[unused27]" -> 29, "[unused28]" -> 
                    30, "[unused29]" -> 31, "[unused30]" -> 32, "[unused31]" -> 
                    33, "[unused32]" -> 34, "[unused33]" -> 35, "[unused34]" -> 
                    36, "[unused35]" -> 37, "[unused36]" -> 38, "[unused37]" -> 
                    39, "[unused38]" -> 40, "[unused39]" -> 41, "[unused40]" -> 
                    42, "[unused41]" -> 43, "[unused42]" -> 44, "[unused43]" -> 
                    45, "[unused44]" -> 46, "[unused45]" -> 47, "[unused46]" -> 
                    48, "[unused47]" -> 49, "[unused48]" -> 50, "[unused49]" -> 
                    51, "[unused50]" -> 52, "[unused51]" -> 53, "[unused52]" -> 
                    54, "[unused53]" -> 55, "[unused54]" -> 56, "[unused55]" -> 
                    57, "[unused56]" -> 58, "[unused57]" -> 59, "[unused58]" -> 
                    60, "[unused59]" -> 61, "[unused60]" -> 62, "[unused61]" -> 
                    63, "[unused62]" -> 64, "[unused63]" -> 65, "[unused64]" -> 
                    66, "[unused65]" -> 67, "[unused66]" -> 68, "[unused67]" -> 
                    69, "[unused68]" -> 70, "[unused69]" -> 71, "[unused70]" -> 
                    72, "[unused71]" -> 73, "[unused72]" -> 74, "[unused73]" -> 
                    75, "[unused74]" -> 76, "[unused75]" -> 77, "[unused76]" -> 
                    78, "[unused77]" -> 79, "[unused78]" -> 80, "[unused79]" -> 
                    81, "[unused80]" -> 82, "[unused81]" -> 83, "[unused82]" -> 
                    84, "[unused83]" -> 85, "[unused84]" -> 86, "[unused85]" -> 
                    87, "[unused86]" -> 88, "[unused87]" -> 89, "[unused88]" -> 
                    90, "[unused89]" -> 91, "[unused90]" -> 92, "[unused91]" -> 
                    93, "[unused92]" -> 94, "[unused93]" -> 95, "[unused94]" -> 
                    96, "[unused95]" -> 97, "[unused96]" -> 98, "[unused97]" -> 
                    99, "[unused98]" -> 100, "[UNK]" -> 101, "[CLS]" -> 102, 
                    "[SEP]" -> 103, "[MASK]" -> 104, "[unused99]" -> 105, 
                    "[unused100]" -> 106, "[unused101]" -> 107, "[unused102]" -> 
                    108, "[unused103]" -> 109, "[unused104]" -> 110, 
                    "[unused105]" -> 111, "[unused106]" -> 112, "[unused107]" -> 
                    113, "[unused108]" -> 114, "[unused109]" -> 115, 
                    "[unused110]" -> 116, "[unused111]" -> 117, "[unused112]" -> 
                    118, "[unused113]" -> 119, "[unused114]" -> 120, 
                    "[unused115]" -> 121, "[unused116]" -> 122, "[unused117]" -> 
                    123, "[unused118]" -> 124, "[unused119]" -> 125, 
                    "[unused120]" -> 126, "[unused121]" -> 127, "[unused122]" -> 
                    128, "[unused123]" -> 129, "[unused124]" -> 130, 
                    "[unused125]" -> 131, "[unused126]" -> 132, "[unused127]" -> 
                    133, "[unused128]" -> 134, "[unused129]" -> 135, 
                    "[unused130]" -> 136, "[unused131]" -> 137, "[unused132]" -> 
                    138, "[unused133]" -> 139, "[unused134]" -> 140, 
                    "[unused135]" -> 141, "[unused136]" -> 142, "[unused137]" -> 
                    143, "[unused138]" -> 144, "[unused139]" -> 145, 
                    "[unused140]" -> 146, "[unused141]" -> 147, "[unused142]" -> 
                    148, "[unused143]" -> 149, "[unused144]" -> 150, 
                    "[unused145]" -> 151, "[unused146]" -> 152, "[unused147]" -> 
                    153, "[unused148]" -> 154, "[unused149]" -> 155, 
                    "[unused150]" -> 156, "[unused151]" -> 157, "[unused152]" -> 
                    158, "[unused153]" -> 159, "[unused154]" -> 160, 
                    "[unused155]" -> 161, "[unused156]" -> 162, "[unused157]" -> 
                    163, "[unused158]" -> 164, "[unused159]" -> 165, 
                    "[unused160]" -> 166, "[unused161]" -> 167, "[unused162]" -> 
                    168, "[unused163]" -> 169, "[unused164]" -> 170, 
                    "[unused165]" -> 171, "[unused166]" -> 172, "[unused167]" -> 
                    173, "[unused168]" -> 174, "[unused169]" -> 175, 
                    "[unused170]" -> 176, "[unused171]" -> 177, "[unused172]" -> 
                    178, "[unused173]" -> 179, "[unused174]" -> 180, 
                    "[unused175]" -> 181, "[unused176]" -> 182, "[unused177]" -> 
                    183, "[unused178]" -> 184, "[unused179]" -> 185, 
                    "[unused180]" -> 186, "[unused181]" -> 187, "[unused182]" -> 
                    188, "[unused183]" -> 189, "[unused184]" -> 190, 
                    "[unused185]" -> 191, "[unused186]" -> 192, "[unused187]" -> 
                    193, "[unused188]" -> 194, "[unused189]" -> 195, 
                    "[unused190]" -> 196, "[unused191]" -> 197, "[unused192]" -> 
                    198, "[unused193]" -> 199, "[unused194]" -> 200, 
                    "[unused195]" -> 201, "[unused196]" -> 202, "[unused197]" -> 
                    203, "[unused198]" -> 204, "[unused199]" -> 205, 
                    "[unused200]" -> 206, "[unused201]" -> 207, "[unused202]" -> 
                    208, "[unused203]" -> 209, "[unused204]" -> 210, 
                    "[unused205]" -> 211, "[unused206]" -> 212, "[unused207]" -> 
                    213, "[unused208]" -> 214, "[unused209]" -> 215, 
                    "[unused210]" -> 216, "[unused211]" -> 217, "[unused212]" -> 
                    218, "[unused213]" -> 219, "[unused214]" -> 220, 
                    "[unused215]" -> 221, "[unused216]" -> 222, "[unused217]" -> 
                    223, "[unused218]" -> 224, "[unused219]" -> 225, 
                    "[unused220]" -> 226, "[unused221]" -> 227, "[unused222]" -> 
                    228, "[unused223]" -> 229, "[unused224]" -> 230, 
                    "[unused225]" -> 231, "[unused226]" -> 232, "[unused227]" -> 
                    233, "[unused228]" -> 234, "[unused229]" -> 235, 
                    "[unused230]" -> 236, "[unused231]" -> 237, "[unused232]" -> 
                    238, "[unused233]" -> 239, "[unused234]" -> 240, 
                    "[unused235]" -> 241, "[unused236]" -> 242, "[unused237]" -> 
                    243, "[unused238]" -> 244, "[unused239]" -> 245, 
                    "[unused240]" -> 246, "[unused241]" -> 247, "[unused242]" -> 
                    248, "[unused243]" -> 249, "[unused244]" -> 250, 
                    "[unused245]" -> 251, "[unused246]" -> 252, "[unused247]" -> 
                    253, "[unused248]" -> 254, "[unused249]" -> 255, 
                    "[unused250]" -> 256, "[unused251]" -> 257, "[unused252]" -> 
                    258, "[unused253]" -> 259, "[unused254]" -> 260, 
                    "[unused255]" -> 261, "[unused256]" -> 262, "[unused257]" -> 
                    263, "[unused258]" -> 264, "[unused259]" -> 265, 
                    "[unused260]" -> 266, "[unused261]" -> 267, "[unused262]" -> 
                    268, "[unused263]" -> 269, "[unused264]" -> 270, 
                    "[unused265]" -> 271, "[unused266]" -> 272, "[unused267]" -> 
                    273, "[unused268]" -> 274, "[unused269]" -> 275, 
                    "[unused270]" -> 276, "[unused271]" -> 277, "[unused272]" -> 
                    278, "[unused273]" -> 279, "[unused274]" -> 280, 
                    "[unused275]" -> 281, "[unused276]" -> 282, "[unused277]" -> 
                    283, "[unused278]" -> 284, "[unused279]" -> 285, 
                    "[unused280]" -> 286, "[unused281]" -> 287, "[unused282]" -> 
                    288, "[unused283]" -> 289, "[unused284]" -> 290, 
                    "[unused285]" -> 291, "[unused286]" -> 292, "[unused287]" -> 
                    293, "[unused288]" -> 294, "[unused289]" -> 295, 
                    "[unused290]" -> 296, "[unused291]" -> 297, "[unused292]" -> 
                    298, "[unused293]" -> 299, "[unused294]" -> 300, 
                    "[unused295]" -> 301, "[unused296]" -> 302, "[unused297]" -> 
                    303, "[unused298]" -> 304, "[unused299]" -> 305, 
                    "[unused300]" -> 306, "[unused301]" -> 307, "[unused302]" -> 
                    308, "[unused303]" -> 309, "[unused304]" -> 310, 
                    "[unused305]" -> 311, "[unused306]" -> 312, "[unused307]" -> 
                    313, "[unused308]" -> 314, "[unused309]" -> 315, 
                    "[unused310]" -> 316, "[unused311]" -> 317, "[unused312]" -> 
                    318, "[unused313]" -> 319, "[unused314]" -> 320, 
                    "[unused315]" -> 321, "[unused316]" -> 322, "[unused317]" -> 
                    323, "[unused318]" -> 324, "[unused319]" -> 325, 
                    "[unused320]" -> 326, "[unused321]" -> 327, "[unused322]" -> 
                    328, "[unused323]" -> 329, "[unused324]" -> 330, 
                    "[unused325]" -> 331, "[unused326]" -> 332, "[unused327]" -> 
                    333, "[unused328]" -> 334, "[unused329]" -> 335, 
                    "[unused330]" -> 336, "[unused331]" -> 337, "[unused332]" -> 
                    338, "[unused333]" -> 339, "[unused334]" -> 340, 
                    "[unused335]" -> 341, "[unused336]" -> 342, "[unused337]" -> 
                    343, "[unused338]" -> 344, "[unused339]" -> 345, 
                    "[unused340]" -> 346, "[unused341]" -> 347, "[unused342]" -> 
                    348, "[unused343]" -> 349, "[unused344]" -> 350, 
                    "[unused345]" -> 351, "[unused346]" -> 352, "[unused347]" -> 
                    353, "[unused348]" -> 354, "[unused349]" -> 355, 
                    "[unused350]" -> 356, "[unused351]" -> 357, "[unused352]" -> 
                    358, "[unused353]" -> 359, "[unused354]" -> 360, 
                    "[unused355]" -> 361, "[unused356]" -> 362, "[unused357]" -> 
                    363, "[unused358]" -> 364, "[unused359]" -> 365, 
                    "[unused360]" -> 366, "[unused361]" -> 367, "[unused362]" -> 
                    368, "[unused363]" -> 369, "[unused364]" -> 370, 
                    "[unused365]" -> 371, "[unused366]" -> 372, "[unused367]" -> 
                    373, "[unused368]" -> 374, "[unused369]" -> 375, 
                    "[unused370]" -> 376, "[unused371]" -> 377, "[unused372]" -> 
                    378, "[unused373]" -> 379, "[unused374]" -> 380, 
                    "[unused375]" -> 381, "[unused376]" -> 382, "[unused377]" -> 
                    383, "[unused378]" -> 384, "[unused379]" -> 385, 
                    "[unused380]" -> 386, "[unused381]" -> 387, "[unused382]" -> 
                    388, "[unused383]" -> 389, "[unused384]" -> 390, 
                    "[unused385]" -> 391, "[unused386]" -> 392, "[unused387]" -> 
                    393, "[unused388]" -> 394, "[unused389]" -> 395, 
                    "[unused390]" -> 396, "[unused391]" -> 397, "[unused392]" -> 
                    398, "[unused393]" -> 399, "[unused394]" -> 400, 
                    "[unused395]" -> 401, "[unused396]" -> 402, "[unused397]" -> 
                    403, "[unused398]" -> 404, "[unused399]" -> 405, 
                    "[unused400]" -> 406, "[unused401]" -> 407, "[unused402]" -> 
                    408, "[unused403]" -> 409, "[unused404]" -> 410, 
                    "[unused405]" -> 411, "[unused406]" -> 412, "[unused407]" -> 
                    413, "[unused408]" -> 414, "[unused409]" -> 415, 
                    "[unused410]" -> 416, "[unused411]" -> 417, "[unused412]" -> 
                    418, "[unused413]" -> 419, "[unused414]" -> 420, 
                    "[unused415]" -> 421, "[unused416]" -> 422, "[unused417]" -> 
                    423, "[unused418]" -> 424, "[unused419]" -> 425, 
                    "[unused420]" -> 426, "[unused421]" -> 427, "[unused422]" -> 
                    428, "[unused423]" -> 429, "[unused424]" -> 430, 
                    "[unused425]" -> 431, "[unused426]" -> 432, "[unused427]" -> 
                    433, "[unused428]" -> 434, "[unused429]" -> 435, 
                    "[unused430]" -> 436, "[unused431]" -> 437, "[unused432]" -> 
                    438, "[unused433]" -> 439, "[unused434]" -> 440, 
                    "[unused435]" -> 441, "[unused436]" -> 442, "[unused437]" -> 
                    443, "[unused438]" -> 444, "[unused439]" -> 445, 
                    "[unused440]" -> 446, "[unused441]" -> 447, "[unused442]" -> 
                    448, "[unused443]" -> 449, "[unused444]" -> 450, 
                    "[unused445]" -> 451, "[unused446]" -> 452, "[unused447]" -> 
                    453, "[unused448]" -> 454, "[unused449]" -> 455, 
                    "[unused450]" -> 456, "[unused451]" -> 457, "[unused452]" -> 
                    458, "[unused453]" -> 459, "[unused454]" -> 460, 
                    "[unused455]" -> 461, "[unused456]" -> 462, "[unused457]" -> 
                    463, "[unused458]" -> 464, "[unused459]" -> 465, 
                    "[unused460]" -> 466, "[unused461]" -> 467, "[unused462]" -> 
                    468, "[unused463]" -> 469, "[unused464]" -> 470, 
                    "[unused465]" -> 471, "[unused466]" -> 472, "[unused467]" -> 
                    473, "[unused468]" -> 474, "[unused469]" -> 475, 
                    "[unused470]" -> 476, "[unused471]" -> 477, "[unused472]" -> 
                    478, "[unused473]" -> 479, "[unused474]" -> 480, 
                    "[unused475]" -> 481, "[unused476]" -> 482, "[unused477]" -> 
                    483, "[unused478]" -> 484, "[unused479]" -> 485, 
                    "[unused480]" -> 486, "[unused481]" -> 487, "[unused482]" -> 
                    488, "[unused483]" -> 489, "[unused484]" -> 490, 
                    "[unused485]" -> 491, "[unused486]" -> 492, "[unused487]" -> 
                    493, "[unused488]" -> 494, "[unused489]" -> 495, 
                    "[unused490]" -> 496, "[unused491]" -> 497, "[unused492]" -> 
                    498, "[unused493]" -> 499, "[unused494]" -> 500, 
                    "[unused495]" -> 501, "[unused496]" -> 502, "[unused497]" -> 
                    503, "[unused498]" -> 504, "[unused499]" -> 505, 
                    "[unused500]" -> 506, "[unused501]" -> 507, "[unused502]" -> 
                    508, "[unused503]" -> 509, "[unused504]" -> 510, 
                    "[unused505]" -> 511, "[unused506]" -> 512, "[unused507]" -> 
                    513, "[unused508]" -> 514, "[unused509]" -> 515, 
                    "[unused510]" -> 516, "[unused511]" -> 517, "[unused512]" -> 
                    518, "[unused513]" -> 519, "[unused514]" -> 520, 
                    "[unused515]" -> 521, "[unused516]" -> 522, "[unused517]" -> 
                    523, "[unused518]" -> 524, "[unused519]" -> 525, 
                    "[unused520]" -> 526, "[unused521]" -> 527, "[unused522]" -> 
                    528, "[unused523]" -> 529, "[unused524]" -> 530, 
                    "[unused525]" -> 531, "[unused526]" -> 532, "[unused527]" -> 
                    533, "[unused528]" -> 534, "[unused529]" -> 535, 
                    "[unused530]" -> 536, "[unused531]" -> 537, "[unused532]" -> 
                    538, "[unused533]" -> 539, "[unused534]" -> 540, 
                    "[unused535]" -> 541, "[unused536]" -> 542, "[unused537]" -> 
                    543, "[unused538]" -> 544, "[unused539]" -> 545, 
                    "[unused540]" -> 546, "[unused541]" -> 547, "[unused542]" -> 
                    548, "[unused543]" -> 549, "[unused544]" -> 550, 
                    "[unused545]" -> 551, "[unused546]" -> 552, "[unused547]" -> 
                    553, "[unused548]" -> 554, "[unused549]" -> 555, 
                    "[unused550]" -> 556, "[unused551]" -> 557, "[unused552]" -> 
                    558, "[unused553]" -> 559, "[unused554]" -> 560, 
                    "[unused555]" -> 561, "[unused556]" -> 562, "[unused557]" -> 
                    563, "[unused558]" -> 564, "[unused559]" -> 565, 
                    "[unused560]" -> 566, "[unused561]" -> 567, "[unused562]" -> 
                    568, "[unused563]" -> 569, "[unused564]" -> 570, 
                    "[unused565]" -> 571, "[unused566]" -> 572, "[unused567]" -> 
                    573, "[unused568]" -> 574, "[unused569]" -> 575, 
                    "[unused570]" -> 576, "[unused571]" -> 577, "[unused572]" -> 
                    578, "[unused573]" -> 579, "[unused574]" -> 580, 
                    "[unused575]" -> 581, "[unused576]" -> 582, "[unused577]" -> 
                    583, "[unused578]" -> 584, "[unused579]" -> 585, 
                    "[unused580]" -> 586, "[unused581]" -> 587, "[unused582]" -> 
                    588, "[unused583]" -> 589, "[unused584]" -> 590, 
                    "[unused585]" -> 591, "[unused586]" -> 592, "[unused587]" -> 
                    593, "[unused588]" -> 594, "[unused589]" -> 595, 
                    "[unused590]" -> 596, "[unused591]" -> 597, "[unused592]" -> 
                    598, "[unused593]" -> 599, "[unused594]" -> 600, 
                    "[unused595]" -> 601, "[unused596]" -> 602, "[unused597]" -> 
                    603, "[unused598]" -> 604, "[unused599]" -> 605, 
                    "[unused600]" -> 606, "[unused601]" -> 607, "[unused602]" -> 
                    608, "[unused603]" -> 609, "[unused604]" -> 610, 
                    "[unused605]" -> 611, "[unused606]" -> 612, "[unused607]" -> 
                    613, "[unused608]" -> 614, "[unused609]" -> 615, 
                    "[unused610]" -> 616, "[unused611]" -> 617, "[unused612]" -> 
                    618, "[unused613]" -> 619, "[unused614]" -> 620, 
                    "[unused615]" -> 621, "[unused616]" -> 622, "[unused617]" -> 
                    623, "[unused618]" -> 624, "[unused619]" -> 625, 
                    "[unused620]" -> 626, "[unused621]" -> 627, "[unused622]" -> 
                    628, "[unused623]" -> 629, "[unused624]" -> 630, 
                    "[unused625]" -> 631, "[unused626]" -> 632, "[unused627]" -> 
                    633, "[unused628]" -> 634, "[unused629]" -> 635, 
                    "[unused630]" -> 636, "[unused631]" -> 637, "[unused632]" -> 
                    638, "[unused633]" -> 639, "[unused634]" -> 640, 
                    "[unused635]" -> 641, "[unused636]" -> 642, "[unused637]" -> 
                    643, "[unused638]" -> 644, "[unused639]" -> 645, 
                    "[unused640]" -> 646, "[unused641]" -> 647, "[unused642]" -> 
                    648, "[unused643]" -> 649, "[unused644]" -> 650, 
                    "[unused645]" -> 651, "[unused646]" -> 652, "[unused647]" -> 
                    653, "[unused648]" -> 654, "[unused649]" -> 655, 
                    "[unused650]" -> 656, "[unused651]" -> 657, "[unused652]" -> 
                    658, "[unused653]" -> 659, "[unused654]" -> 660, 
                    "[unused655]" -> 661, "[unused656]" -> 662, "[unused657]" -> 
                    663, "[unused658]" -> 664, "[unused659]" -> 665, 
                    "[unused660]" -> 666, "[unused661]" -> 667, "[unused662]" -> 
                    668, "[unused663]" -> 669, "[unused664]" -> 670, 
                    "[unused665]" -> 671, "[unused666]" -> 672, "[unused667]" -> 
                    673, "[unused668]" -> 674, "[unused669]" -> 675, 
                    "[unused670]" -> 676, "[unused671]" -> 677, "[unused672]" -> 
                    678, "[unused673]" -> 679, "[unused674]" -> 680, 
                    "[unused675]" -> 681, "[unused676]" -> 682, "[unused677]" -> 
                    683, "[unused678]" -> 684, "[unused679]" -> 685, 
                    "[unused680]" -> 686, "[unused681]" -> 687, "[unused682]" -> 
                    688, "[unused683]" -> 689, "[unused684]" -> 690, 
                    "[unused685]" -> 691, "[unused686]" -> 692, "[unused687]" -> 
                    693, "[unused688]" -> 694, "[unused689]" -> 695, 
                    "[unused690]" -> 696, "[unused691]" -> 697, "[unused692]" -> 
                    698, "[unused693]" -> 699, "[unused694]" -> 700, 
                    "[unused695]" -> 701, "[unused696]" -> 702, "[unused697]" -> 
                    703, "[unused698]" -> 704, "[unused699]" -> 705, 
                    "[unused700]" -> 706, "[unused701]" -> 707, "[unused702]" -> 
                    708, "[unused703]" -> 709, "[unused704]" -> 710, 
                    "[unused705]" -> 711, "[unused706]" -> 712, "[unused707]" -> 
                    713, "[unused708]" -> 714, "[unused709]" -> 715, 
                    "[unused710]" -> 716, "[unused711]" -> 717, "[unused712]" -> 
                    718, "[unused713]" -> 719, "[unused714]" -> 720, 
                    "[unused715]" -> 721, "[unused716]" -> 722, "[unused717]" -> 
                    723, "[unused718]" -> 724, "[unused719]" -> 725, 
                    "[unused720]" -> 726, "[unused721]" -> 727, "[unused722]" -> 
                    728, "[unused723]" -> 729, "[unused724]" -> 730, 
                    "[unused725]" -> 731, "[unused726]" -> 732, "[unused727]" -> 
                    733, "[unused728]" -> 734, "[unused729]" -> 735, 
                    "[unused730]" -> 736, "[unused731]" -> 737, "[unused732]" -> 
                    738, "[unused733]" -> 739, "[unused734]" -> 740, 
                    "[unused735]" -> 741, "[unused736]" -> 742, "[unused737]" -> 
                    743, "[unused738]" -> 744, "[unused739]" -> 745, 
                    "[unused740]" -> 746, "[unused741]" -> 747, "[unused742]" -> 
                    748, "[unused743]" -> 749, "[unused744]" -> 750, 
                    "[unused745]" -> 751, "[unused746]" -> 752, "[unused747]" -> 
                    753, "[unused748]" -> 754, "[unused749]" -> 755, 
                    "[unused750]" -> 756, "[unused751]" -> 757, "[unused752]" -> 
                    758, "[unused753]" -> 759, "[unused754]" -> 760, 
                    "[unused755]" -> 761, "[unused756]" -> 762, "[unused757]" -> 
                    763, "[unused758]" -> 764, "[unused759]" -> 765, 
                    "[unused760]" -> 766, "[unused761]" -> 767, "[unused762]" -> 
                    768, "[unused763]" -> 769, "[unused764]" -> 770, 
                    "[unused765]" -> 771, "[unused766]" -> 772, "[unused767]" -> 
                    773, "[unused768]" -> 774, "[unused769]" -> 775, 
                    "[unused770]" -> 776, "[unused771]" -> 777, "[unused772]" -> 
                    778, "[unused773]" -> 779, "[unused774]" -> 780, 
                    "[unused775]" -> 781, "[unused776]" -> 782, "[unused777]" -> 
                    783, "[unused778]" -> 784, "[unused779]" -> 785, 
                    "[unused780]" -> 786, "[unused781]" -> 787, "[unused782]" -> 
                    788, "[unused783]" -> 789, "[unused784]" -> 790, 
                    "[unused785]" -> 791, "[unused786]" -> 792, "[unused787]" -> 
                    793, "[unused788]" -> 794, "[unused789]" -> 795, 
                    "[unused790]" -> 796, "[unused791]" -> 797, "[unused792]" -> 
                    798, "[unused793]" -> 799, "[unused794]" -> 800, 
                    "[unused795]" -> 801, "[unused796]" -> 802, "[unused797]" -> 
                    803, "[unused798]" -> 804, "[unused799]" -> 805, 
                    "[unused800]" -> 806, "[unused801]" -> 807, "[unused802]" -> 
                    808, "[unused803]" -> 809, "[unused804]" -> 810, 
                    "[unused805]" -> 811, "[unused806]" -> 812, "[unused807]" -> 
                    813, "[unused808]" -> 814, "[unused809]" -> 815, 
                    "[unused810]" -> 816, "[unused811]" -> 817, "[unused812]" -> 
                    818, "[unused813]" -> 819, "[unused814]" -> 820, 
                    "[unused815]" -> 821, "[unused816]" -> 822, "[unused817]" -> 
                    823, "[unused818]" -> 824, "[unused819]" -> 825, 
                    "[unused820]" -> 826, "[unused821]" -> 827, "[unused822]" -> 
                    828, "[unused823]" -> 829, "[unused824]" -> 830, 
                    "[unused825]" -> 831, "[unused826]" -> 832, "[unused827]" -> 
                    833, "[unused828]" -> 834, "[unused829]" -> 835, 
                    "[unused830]" -> 836, "[unused831]" -> 837, "[unused832]" -> 
                    838, "[unused833]" -> 839, "[unused834]" -> 840, 
                    "[unused835]" -> 841, "[unused836]" -> 842, "[unused837]" -> 
                    843, "[unused838]" -> 844, "[unused839]" -> 845, 
                    "[unused840]" -> 846, "[unused841]" -> 847, "[unused842]" -> 
                    848, "[unused843]" -> 849, "[unused844]" -> 850, 
                    "[unused845]" -> 851, "[unused846]" -> 852, "[unused847]" -> 
                    853, "[unused848]" -> 854, "[unused849]" -> 855, 
                    "[unused850]" -> 856, "[unused851]" -> 857, "[unused852]" -> 
                    858, "[unused853]" -> 859, "[unused854]" -> 860, 
                    "[unused855]" -> 861, "[unused856]" -> 862, "[unused857]" -> 
                    863, "[unused858]" -> 864, "[unused859]" -> 865, 
                    "[unused860]" -> 866, "[unused861]" -> 867, "[unused862]" -> 
                    868, "[unused863]" -> 869, "[unused864]" -> 870, 
                    "[unused865]" -> 871, "[unused866]" -> 872, "[unused867]" -> 
                    873, "[unused868]" -> 874, "[unused869]" -> 875, 
                    "[unused870]" -> 876, "[unused871]" -> 877, "[unused872]" -> 
                    878, "[unused873]" -> 879, "[unused874]" -> 880, 
                    "[unused875]" -> 881, "[unused876]" -> 882, "[unused877]" -> 
                    883, "[unused878]" -> 884, "[unused879]" -> 885, 
                    "[unused880]" -> 886, "[unused881]" -> 887, "[unused882]" -> 
                    888, "[unused883]" -> 889, "[unused884]" -> 890, 
                    "[unused885]" -> 891, "[unused886]" -> 892, "[unused887]" -> 
                    893, "[unused888]" -> 894, "[unused889]" -> 895, 
                    "[unused890]" -> 896, "[unused891]" -> 897, "[unused892]" -> 
                    898, "[unused893]" -> 899, "[unused894]" -> 900, 
                    "[unused895]" -> 901, "[unused896]" -> 902, "[unused897]" -> 
                    903, "[unused898]" -> 904, "[unused899]" -> 905, 
                    "[unused900]" -> 906, "[unused901]" -> 907, "[unused902]" -> 
                    908, "[unused903]" -> 909, "[unused904]" -> 910, 
                    "[unused905]" -> 911, "[unused906]" -> 912, "[unused907]" -> 
                    913, "[unused908]" -> 914, "[unused909]" -> 915, 
                    "[unused910]" -> 916, "[unused911]" -> 917, "[unused912]" -> 
                    918, "[unused913]" -> 919, "[unused914]" -> 920, 
                    "[unused915]" -> 921, "[unused916]" -> 922, "[unused917]" -> 
                    923, "[unused918]" -> 924, "[unused919]" -> 925, 
                    "[unused920]" -> 926, "[unused921]" -> 927, "[unused922]" -> 
                    928, "[unused923]" -> 929, "[unused924]" -> 930, 
                    "[unused925]" -> 931, "[unused926]" -> 932, "[unused927]" -> 
                    933, "[unused928]" -> 934, "[unused929]" -> 935, 
                    "[unused930]" -> 936, "[unused931]" -> 937, "[unused932]" -> 
                    938, "[unused933]" -> 939, "[unused934]" -> 940, 
                    "[unused935]" -> 941, "[unused936]" -> 942, "[unused937]" -> 
                    943, "[unused938]" -> 944, "[unused939]" -> 945, 
                    "[unused940]" -> 946, "[unused941]" -> 947, "[unused942]" -> 
                    948, "[unused943]" -> 949, "[unused944]" -> 950, 
                    "[unused945]" -> 951, "[unused946]" -> 952, "[unused947]" -> 
                    953, "[unused948]" -> 954, "[unused949]" -> 955, 
                    "[unused950]" -> 956, "[unused951]" -> 957, "[unused952]" -> 
                    958, "[unused953]" -> 959, "[unused954]" -> 960, 
                    "[unused955]" -> 961, "[unused956]" -> 962, "[unused957]" -> 
                    963, "[unused958]" -> 964, "[unused959]" -> 965, 
                    "[unused960]" -> 966, "[unused961]" -> 967, "[unused962]" -> 
                    968, "[unused963]" -> 969, "[unused964]" -> 970, 
                    "[unused965]" -> 971, "[unused966]" -> 972, "[unused967]" -> 
                    973, "[unused968]" -> 974, "[unused969]" -> 975, 
                    "[unused970]" -> 976, "[unused971]" -> 977, "[unused972]" -> 
                    978, "[unused973]" -> 979, "[unused974]" -> 980, 
                    "[unused975]" -> 981, "[unused976]" -> 982, "[unused977]" -> 
                    983, "[unused978]" -> 984, "[unused979]" -> 985, 
                    "[unused980]" -> 986, "[unused981]" -> 987, "[unused982]" -> 
                    988, "[unused983]" -> 989, "[unused984]" -> 990, 
                    "[unused985]" -> 991, "[unused986]" -> 992, "[unused987]" -> 
                    993, "[unused988]" -> 994, "[unused989]" -> 995, 
                    "[unused990]" -> 996, "[unused991]" -> 997, "[unused992]" -> 
                    998, "[unused993]" -> 999, "!" -> 1000, "\"" -> 1001, "#" -> 
                    1002, "$" -> 1003, "%" -> 1004, "&" -> 1005, "'" -> 1006, 
                    "(" -> 1007, ")" -> 1008, "*" -> 1009, "+" -> 1010, "," -> 
                    1011, "-" -> 1012, "." -> 1013, "/" -> 1014, "0" -> 1015, 
                    "1" -> 1016, "2" -> 1017, "3" -> 1018, "4" -> 1019, "5" -> 
                    1020, "6" -> 1021, "7" -> 1022, "8" -> 1023, "9" -> 1024, 
                    ":" -> 1025, ";" -> 1026, "<" -> 1027, "=" -> 1028, ">" -> 
                    1029, "?" -> 1030, "@" -> 1031, "[" -> 1032, "\\" -> 1033,
                     "]" -> 1034, "^" -> 1035, "_" -> 1036, "`" -> 1037, "a" -> 
                    1038, "b" -> 1039, "c" -> 1040, "d" -> 1041, "e" -> 1042, 
                    "f" -> 1043, "g" -> 1044, "h" -> 1045, "i" -> 1046, "j" -> 
                    1047, "k" -> 1048, "l" -> 1049, "m" -> 1050, "n" -> 1051, 
                    "o" -> 1052, "p" -> 1053, "q" -> 1054, "r" -> 1055, "s" -> 
                    1056, "t" -> 1057, "u" -> 1058, "v" -> 1059, "w" -> 1060, 
                    "x" -> 1061, "y" -> 1062, "z" -> 1063, "{" -> 1064, "|" -> 
                    1065, "}" -> 1066, "~" -> 1067, "\[DownExclamation]" -> 
                    1068, "\[Cent]" -> 1069, "\[Sterling]" -> 1070, 
                    "\[Currency]" -> 1071, "\[Yen]" -> 1072, "\.a6" -> 1073, 
                    "\[Section]" -> 1074, "\[DoubleDot]" -> 1075, 
                    "\[Copyright]" -> 1076, "\.aa" -> 1077, 
                    "\[LeftGuillemet]" -> 1078, "\[Not]" -> 1079, 
                    "\[RegisteredTrademark]" -> 1080, "\[Degree]" -> 1081, 
                    "\[PlusMinus]" -> 1082, "\.b2" -> 1083, "\.b3" -> 1084, 
                    "\.b4" -> 1085, "\[Micro]" -> 1086, "\[Paragraph]" -> 
                    1087, "\[CenterDot]" -> 1088, "\.b9" -> 1089, "\.ba" -> 
                    1090, "\[RightGuillemet]" -> 1091, "\.bc" -> 1092, "\.bd" -> 
                    1093, "\.be" -> 1094, "\[DownQuestion]" -> 1095, 
                    "\[Times]" -> 1096, "\[SZ]" -> 1097, "\[AE]" -> 1098, 
                    "\[Eth]" -> 1099, "\[Divide]" -> 1100, "\[OSlash]" -> 
                    1101, "\[Thorn]" -> 1102, "\:0111" -> 1103, "\:0127" -> 
                    1104, "\[DotlessI]" -> 1105, "\[LSlash]" -> 1106, 
                    "\:014b" -> 1107, "\[OE]" -> 1108, "\[Florin]" -> 1109, 
                    "\:0250" -> 1110, "\:0251" -> 1111, "\:0252" -> 1112, 
                    "\:0254" -> 1113, "\:0255" -> 1114, "\:0259" -> 1115, 
                    "\:025b" -> 1116, "\:0261" -> 1117, "\:0263" -> 1118, 
                    "\:0268" -> 1119, "\:026a" -> 1120, "\:026b" -> 1121, 
                    "\:026c" -> 1122, "\:026f" -> 1123, "\:0272" -> 1124, 
                    "\:0274" -> 1125, "\:0279" -> 1126, "\:027e" -> 1127, 
                    "\:0280" -> 1128, "\:0281" -> 1129, "\:0282" -> 1130, 
                    "\:0283" -> 1131, "\:0289" -> 1132, "\:028a" -> 1133, 
                    "\:028b" -> 1134, "\:028c" -> 1135, "\:028e" -> 1136, 
                    "\:0290" -> 1137, "\:0291" -> 1138, "\:0292" -> 1139, 
                    "\:0294" -> 1140, "\:02b0" -> 1141, "\:02b2" -> 1142, 
                    "\:02b3" -> 1143, "\:02b7" -> 1144, "\:02b8" -> 1145, 
                    "\:02bb" -> 1146, "\:02bc" -> 1147, "\:02be" -> 1148, 
                    "\:02bf" -> 1149, "\:02c8" -> 1150, "\:02d0" -> 1151, 
                    "\:02e1" -> 1152, "\:02e2" -> 1153, "\:02e3" -> 1154, 
                    "\:02e4" -> 1155, "\[Alpha]" -> 1156, "\[Beta]" -> 1157, 
                    "\[Gamma]" -> 1158, "\[Delta]" -> 1159, "\[CurlyEpsilon]" -> 
                    1160, "\[Zeta]" -> 1161, "\[Eta]" -> 1162, "\[Theta]" -> 
                    1163, "\[Iota]" -> 1164, "\[Kappa]" -> 1165, "\[Lambda]" -> 
                    1166, "\[Mu]" -> 1167, "\[Nu]" -> 1168, "\[Xi]" -> 1169, 
                    "\[Omicron]" -> 1170, "\[Pi]" -> 1171, "\[Rho]" -> 1172, 
                    "\[FinalSigma]" -> 1173, "\[Sigma]" -> 1174, "\[Tau]" -> 
                    1175, "\[Upsilon]" -> 1176, "\[CurlyPhi]" -> 1177, 
                    "\[Chi]" -> 1178, "\[Psi]" -> 1179, "\[Omega]" -> 1180, 
                    "\:0430" -> 1181, "\:0431" -> 1182, "\:0432" -> 1183, 
                    "\:0433" -> 1184, "\:0434" -> 1185, "\:0435" -> 1186, 
                    "\:0436" -> 1187, "\:0437" -> 1188, "\:0438" -> 1189, 
                    "\:043a" -> 1190, "\:043b" -> 1191, "\:043c" -> 1192, 
                    "\:043d" -> 1193, "\:043e" -> 1194, "\:043f" -> 1195, 
                    "\:0440" -> 1196, "\:0441" -> 1197, "\:0442" -> 1198, 
                    "\:0443" -> 1199, "\:0444" -> 1200, "\:0445" -> 1201, 
                    "\:0446" -> 1202, "\:0447" -> 1203, "\:0448" -> 1204, 
                    "\:0449" -> 1205, "\:044a" -> 1206, "\:044b" -> 1207, 
                    "\:044c" -> 1208, "\:044d" -> 1209, "\:044e" -> 1210, 
                    "\:044f" -> 1211, "\:0452" -> 1212, "\:0454" -> 1213, 
                    "\:0456" -> 1214, "\:0458" -> 1215, "\:0459" -> 1216, 
                    "\:045a" -> 1217, "\:045b" -> 1218, "\:04cf" -> 1219, 
                    "\:0561" -> 1220, "\:0562" -> 1221, "\:0563" -> 1222, 
                    "\:0564" -> 1223, "\:0565" -> 1224, "\:0569" -> 1225, 
                    "\:056b" -> 1226, "\:056c" -> 1227, "\:056f" -> 1228, 
                    "\:0570" -> 1229, "\:0574" -> 1230, "\:0575" -> 1231, 
                    "\:0576" -> 1232, "\:0578" -> 1233, "\:057a" -> 1234, 
                    "\:057d" -> 1235, "\:057e" -> 1236, "\:057f" -> 1237, 
                    "\:0580" -> 1238, "\:0582" -> 1239, "\:0584" -> 1240, 
                    "\:05be" -> 1241, "\:05d0" -> 1242, "\:05d1" -> 1243, 
                    "\:05d2" -> 1244, "\:05d3" -> 1245, "\:05d4" -> 1246, 
                    "\:05d5" -> 1247, "\:05d6" -> 1248, "\:05d7" -> 1249, 
                    "\:05d8" -> 1250, "\:05d9" -> 1251, "\:05da" -> 1252, 
                    "\:05db" -> 1253, "\:05dc" -> 1254, "\:05dd" -> 1255, 
                    "\:05de" -> 1256, "\:05df" -> 1257, "\:05e0" -> 1258, 
                    "\:05e1" -> 1259, "\:05e2" -> 1260, "\:05e3" -> 1261, 
                    "\:05e4" -> 1262, "\:05e5" -> 1263, "\:05e6" -> 1264, 
                    "\:05e7" -> 1265, "\:05e8" -> 1266, "\:05e9" -> 1267, 
                    "\:05ea" -> 1268, "\:060c" -> 1269, "\:0621" -> 1270, 
                    "\:0627" -> 1271, "\:0628" -> 1272, "\:0629" -> 1273, 
                    "\:062a" -> 1274, "\:062b" -> 1275, "\:062c" -> 1276, 
                    "\:062d" -> 1277, "\:062e" -> 1278, "\:062f" -> 1279, 
                    "\:0630" -> 1280, "\:0631" -> 1281, "\:0632" -> 1282, 
                    "\:0633" -> 1283, "\:0634" -> 1284, "\:0635" -> 1285, 
                    "\:0636" -> 1286, "\:0637" -> 1287, "\:0638" -> 1288, 
                    "\:0639" -> 1289, "\:063a" -> 1290, "\:0640" -> 1291, 
                    "\:0641" -> 1292, "\:0642" -> 1293, "\:0643" -> 1294, 
                    "\:0644" -> 1295, "\:0645" -> 1296, "\:0646" -> 1297, 
                    "\:0647" -> 1298, "\:0648" -> 1299, "\:0649" -> 1300, 
                    "\:064a" -> 1301, "\:0679" -> 1302, "\:067e" -> 1303, 
                    "\:0686" -> 1304, "\:06a9" -> 1305, "\:06af" -> 1306, 
                    "\:06ba" -> 1307, "\:06be" -> 1308, "\:06c1" -> 1309, 
                    "\:06cc" -> 1310, "\:06d2" -> 1311, "\:0905" -> 1312, 
                    "\:0906" -> 1313, "\:0909" -> 1314, "\:090f" -> 1315, 
                    "\:0915" -> 1316, "\:0916" -> 1317, "\:0917" -> 1318, 
                    "\:091a" -> 1319, "\:091c" -> 1320, "\:091f" -> 1321, 
                    "\:0921" -> 1322, "\:0923" -> 1323, "\:0924" -> 1324, 
                    "\:0925" -> 1325, "\:0926" -> 1326, "\:0927" -> 1327, 
                    "\:0928" -> 1328, "\:092a" -> 1329, "\:092c" -> 1330, 
                    "\:092d" -> 1331, "\:092e" -> 1332, "\:092f" -> 1333, 
                    "\:0930" -> 1334, "\:0932" -> 1335, "\:0935" -> 1336, 
                    "\:0936" -> 1337, "\:0937" -> 1338, "\:0938" -> 1339, 
                    "\:0939" -> 1340, "\:093e" -> 1341, "\:093f" -> 1342, 
                    "\:0940" -> 1343, "\:094b" -> 1344, "\:0964" -> 1345, 
                    "\:0965" -> 1346, "\:0982" -> 1347, "\:0985" -> 1348, 
                    "\:0986" -> 1349, "\:0987" -> 1350, "\:0989" -> 1351, 
                    "\:098f" -> 1352, "\:0993" -> 1353, "\:0995" -> 1354, 
                    "\:0996" -> 1355, "\:0997" -> 1356, "\:099a" -> 1357, 
                    "\:099b" -> 1358, "\:099c" -> 1359, "\:099f" -> 1360, 
                    "\:09a1" -> 1361, "\:09a3" -> 1362, "\:09a4" -> 1363, 
                    "\:09a5" -> 1364, "\:09a6" -> 1365, "\:09a7" -> 1366, 
                    "\:09a8" -> 1367, "\:09aa" -> 1368, "\:09ac" -> 1369, 
                    "\:09ad" -> 1370, "\:09ae" -> 1371, "\:09af" -> 1372, 
                    "\:09b0" -> 1373, "\:09b2" -> 1374, "\:09b6" -> 1375, 
                    "\:09b7" -> 1376, "\:09b8" -> 1377, "\:09b9" -> 1378, 
                    "\:09be" -> 1379, "\:09bf" -> 1380, "\:09c0" -> 1381, 
                    "\:09c7" -> 1382, "\:0b95" -> 1383, "\:0b9a" -> 1384, 
                    "\:0b9f" -> 1385, "\:0ba4" -> 1386, "\:0ba8" -> 1387, 
                    "\:0ba9" -> 1388, "\:0baa" -> 1389, "\:0bae" -> 1390, 
                    "\:0baf" -> 1391, "\:0bb0" -> 1392, "\:0bb2" -> 1393, 
                    "\:0bb3" -> 1394, "\:0bb5" -> 1395, "\:0bbe" -> 1396, 
                    "\:0bbf" -> 1397, "\:0bc1" -> 1398, "\:0bc7" -> 1399, 
                    "\:0bc8" -> 1400, "\:0ca8" -> 1401, "\:0cb0" -> 1402, 
                    "\:0cbe" -> 1403, "\:0d9a" -> 1404, "\:0dba" -> 1405, 
                    "\:0dbb" -> 1406, "\:0dbd" -> 1407, "\:0dc0" -> 1408, 
                    "\:0dcf" -> 1409, "\:0e01" -> 1410, "\:0e07" -> 1411, 
                    "\:0e15" -> 1412, "\:0e17" -> 1413, "\:0e19" -> 1414, 
                    "\:0e1e" -> 1415, "\:0e21" -> 1416, "\:0e22" -> 1417, 
                    "\:0e23" -> 1418, "\:0e25" -> 1419, "\:0e27" -> 1420, 
                    "\:0e2a" -> 1421, "\:0e2d" -> 1422, "\:0e32" -> 1423, 
                    "\:0e40" -> 1424, "\:0f0b" -> 1425, "\:0f0d" -> 1426, 
                    "\:0f42" -> 1427, "\:0f44" -> 1428, "\:0f51" -> 1429, 
                    "\:0f53" -> 1430, "\:0f54" -> 1431, "\:0f56" -> 1432, 
                    "\:0f58" -> 1433, "\:0f60" -> 1434, "\:0f62" -> 1435, 
                    "\:0f63" -> 1436, "\:0f66" -> 1437, "\:1019" -> 1438, 
                    "\:10d0" -> 1439, "\:10d1" -> 1440, "\:10d2" -> 1441, 
                    "\:10d3" -> 1442, "\:10d4" -> 1443, "\:10d5" -> 1444, 
                    "\:10d7" -> 1445, "\:10d8" -> 1446, "\:10d9" -> 1447, 
                    "\:10da" -> 1448, "\:10db" -> 1449, "\:10dc" -> 1450, 
                    "\:10dd" -> 1451, "\:10e0" -> 1452, "\:10e1" -> 1453, 
                    "\:10e2" -> 1454, "\:10e3" -> 1455, "\:1100" -> 1456, 
                    "\:1102" -> 1457, "\:1103" -> 1458, "\:1105" -> 1459, 
                    "\:1106" -> 1460, "\:1107" -> 1461, "\:1109" -> 1462, 
                    "\:110a" -> 1463, "\:110b" -> 1464, "\:110c" -> 1465, 
                    "\:110e" -> 1466, "\:110f" -> 1467, "\:1110" -> 1468, 
                    "\:1111" -> 1469, "\:1112" -> 1470, "\:1161" -> 1471, 
                    "\:1162" -> 1472, "\:1165" -> 1473, "\:1166" -> 1474, 
                    "\:1167" -> 1475, "\:1169" -> 1476, "\:116a" -> 1477, 
                    "\:116d" -> 1478, "\:116e" -> 1479, "\:116f" -> 1480, 
                    "\:1172" -> 1481, "\:1173" -> 1482, "\:1174" -> 1483, 
                    "\:1175" -> 1484, "\:11a8" -> 1485, "\:11ab" -> 1486, 
                    "\:11af" -> 1487, "\:11b7" -> 1488, "\:11b8" -> 1489, 
                    "\:11bc" -> 1490, "\:1d2c" -> 1491, "\:1d2e" -> 1492, 
                    "\:1d30" -> 1493, "\:1d35" -> 1494, "\:1d3a" -> 1495, 
                    "\:1d40" -> 1496, "\:1d43" -> 1497, "\:1d47" -> 1498, 
                    "\:1d48" -> 1499, "\:1d49" -> 1500, "\:1d4d" -> 1501, 
                    "\:1d4f" -> 1502, "\:1d50" -> 1503, "\:1d52" -> 1504, 
                    "\:1d56" -> 1505, "\:1d57" -> 1506, "\:1d58" -> 1507, 
                    "\:1d62" -> 1508, "\:1d63" -> 1509, "\:1d64" -> 1510, 
                    "\:1d65" -> 1511, "\:1d9c" -> 1512, "\:1da0" -> 1513, 
                    "\[Hyphen]" -> 1514, "\:2011" -> 1515, "\:2012" -> 1516, 
                    "\[Dash]" -> 1517, "\[LongDash]" -> 1518, "\:2015" -> 
                    1519, "\:2016" -> 1520, "\[OpenCurlyQuote]" -> 1521, 
                    "\[CloseCurlyQuote]" -> 1522, "\:201a" -> 1523, 
                    "\[OpenCurlyDoubleQuote]" -> 1524, 
                    "\[CloseCurlyDoubleQuote]" -> 1525, "\:201e" -> 1526, 
                    "\[Dagger]" -> 1527, "\[DoubleDagger]" -> 1528, 
                    "\[Bullet]" -> 1529, "\[Ellipsis]" -> 1530, "\:2030" -> 
                    1531, "\[Prime]" -> 1532, "\[DoublePrime]" -> 1533, 
                    "\:203a" -> 1534, "\:203f" -> 1535, "\:2044" -> 1536, 
                    "\:2070" -> 1537, "\:2071" -> 1538, "\:2074" -> 1539, 
                    "\:2075" -> 1540, "\:2076" -> 1541, "\:2077" -> 1542, 
                    "\:2078" -> 1543, "\:2079" -> 1544, "\:207a" -> 1545, 
                    "\:207b" -> 1546, "\:207f" -> 1547, "\:2080" -> 1548, 
                    "\:2081" -> 1549, "\:2082" -> 1550, "\:2083" -> 1551, 
                    "\:2084" -> 1552, "\:2085" -> 1553, "\:2086" -> 1554, 
                    "\:2087" -> 1555, "\:2088" -> 1556, "\:2089" -> 1557, 
                    "\:208a" -> 1558, "\:208d" -> 1559, "\:208e" -> 1560, 
                    "\:2090" -> 1561, "\:2091" -> 1562, "\:2092" -> 1563, 
                    "\:2093" -> 1564, "\:2095" -> 1565, "\:2096" -> 1566, 
                    "\:2097" -> 1567, "\:2098" -> 1568, "\:2099" -> 1569, 
                    "\:209a" -> 1570, "\:209b" -> 1571, "\:209c" -> 1572, 
                    "\:20a4" -> 1573, "\:20a9" -> 1574, "\[Euro]" -> 1575, 
                    "\:20b1" -> 1576, "\[Rupee]" -> 1577, "\[ScriptL]" -> 
                    1578, "\:2116" -> 1579, "\:211d" -> 1580, "\[Trademark]" -> 
                    1581, "\:2153" -> 1582, "\:2154" -> 1583, "\[LeftArrow]" -> 
                    1584, "\[UpArrow]" -> 1585, "\[RightArrow]" -> 1586, 
                    "\[DownArrow]" -> 1587, "\[LeftRightArrow]" -> 1588, 
                    "\[RightTeeArrow]" -> 1589, "\[RightArrowLeftArrow]" -> 
                    1590, "\[Equilibrium]" -> 1591, "\[DoubleRightArrow]" -> 
                    1592, "\[PartialD]" -> 1593, "\[EmptySet]" -> 1594, 
                    "\[Laplacian]" -> 1595, "\[Del]" -> 1596, "\[Element]" -> 
                    1597, "\[Minus]" -> 1598, "\:2217" -> 1599, 
                    "\[SmallCircle]" -> 1600, "\[Sqrt]" -> 1601, 
                    "\[Infinity]" -> 1602, "\[And]" -> 1603, "\[Or]" -> 1604, 
                    "\:2229" -> 1605, "\:222a" -> 1606, "\[TildeTilde]" -> 
                    1607, "\[Congruent]" -> 1608, "\[LessEqual]" -> 1609, 
                    "\[GreaterEqual]" -> 1610, "\[Subset]" -> 1611, 
                    "\[SubsetEqual]" -> 1612, "\[CirclePlus]" -> 1613, 
                    "\[CircleTimes]" -> 1614, "\:22c5" -> 1615, 
                    "\[HorizontalLine]" -> 1616, "\[VerticalLine]" -> 1617, 
                    "\[FilledSquare]" -> 1618, "\[FilledVerySmallSquare]" -> 
                    1619, "\[FilledCircle]" -> 1620, "\[FivePointedStar]" -> 
                    1621, "\:2606" -> 1622, "\[Sun]" -> 1623, "\[SpadeSuit]" -> 
                    1624, "\[ClubSuit]" -> 1625, "\:2665" -> 1626, "\:2666" -> 
                    1627, "\[Flat]" -> 1628, "\[Sharp]" -> 1629, "\:27e8" -> 
                    1630, "\:27e9" -> 1631, "\:2c7c" -> 1632, "\:2ea9" -> 
                    1633, "\:2ebc" -> 1634, "\:2f65" -> 1635, "\:3001" -> 
                    1636, "\:3002" -> 1637, "\:3008" -> 1638, "\:3009" -> 
                    1639, "\:300a" -> 1640, "\:300b" -> 1641, "\:300c" -> 
                    1642, "\:300d" -> 1643, "\:300e" -> 1644, "\:300f" -> 
                    1645, "\:301c" -> 1646, "\:3042" -> 1647, "\:3044" -> 
                    1648, "\:3046" -> 1649, "\:3048" -> 1650, "\:304a" -> 
                    1651, "\:304b" -> 1652, "\:304d" -> 1653, "\:304f" -> 
                    1654, "\:3051" -> 1655, "\:3053" -> 1656, "\:3055" -> 
                    1657, "\:3057" -> 1658, "\:3059" -> 1659, "\:305b" -> 
                    1660, "\:305d" -> 1661, "\:305f" -> 1662, "\:3061" -> 
                    1663, "\:3063" -> 1664, "\:3064" -> 1665, "\:3066" -> 
                    1666, "\:3068" -> 1667, "\:306a" -> 1668, "\:306b" -> 
                    1669, "\:306c" -> 1670, "\:306d" -> 1671, "\:306e" -> 
                    1672, "\:306f" -> 1673, "\:3072" -> 1674, "\:3075" -> 
                    1675, "\:3078" -> 1676, "\:307b" -> 1677, "\:307e" -> 
                    1678, "\:307f" -> 1679, "\:3080" -> 1680, "\:3081" -> 
                    1681, "\:3082" -> 1682, "\:3084" -> 1683, "\:3086" -> 
                    1684, "\:3088" -> 1685, "\:3089" -> 1686, "\:308a" -> 
                    1687, "\:308b" -> 1688, "\:308c" -> 1689, "\:308d" -> 
                    1690, "\:3092" -> 1691, "\:3093" -> 1692, "\:30a1" -> 
                    1693, "\:30a2" -> 1694, "\:30a3" -> 1695, "\:30a4" -> 
                    1696, "\:30a6" -> 1697, "\:30a7" -> 1698, "\:30a8" -> 
                    1699, "\:30aa" -> 1700, "\:30ab" -> 1701, "\:30ad" -> 
                    1702, "\:30af" -> 1703, "\:30b1" -> 1704, "\:30b3" -> 
                    1705, "\:30b5" -> 1706, "\:30b7" -> 1707, "\:30b9" -> 
                    1708, "\:30bb" -> 1709, "\:30bf" -> 1710, "\:30c1" -> 
                    1711, "\:30c3" -> 1712, "\:30c4" -> 1713, "\:30c6" -> 
                    1714, "\:30c8" -> 1715, "\:30ca" -> 1716, "\:30cb" -> 
                    1717, "\:30ce" -> 1718, "\:30cf" -> 1719, "\:30d2" -> 
                    1720, "\:30d5" -> 1721, "\:30d8" -> 1722, "\:30db" -> 
                    1723, "\:30de" -> 1724, "\:30df" -> 1725, "\:30e0" -> 
                    1726, "\:30e1" -> 1727, "\:30e2" -> 1728, "\:30e3" -> 
                    1729, "\:30e5" -> 1730, "\:30e7" -> 1731, "\:30e9" -> 
                    1732, "\:30ea" -> 1733, "\:30eb" -> 1734, "\:30ec" -> 
                    1735, "\:30ed" -> 1736, "\:30ef" -> 1737, "\:30f3" -> 
                    1738, "\:30fb" -> 1739, "\:30fc" -> 1740, "\:4e00" -> 
                    1741, "\:4e09" -> 1742, "\:4e0a" -> 1743, "\:4e0b" -> 
                    1744, "\:4e0d" -> 1745, "\:4e16" -> 1746, "\:4e2d" -> 
                    1747, "\:4e3b" -> 1748, "\:4e45" -> 1749, "\:4e4b" -> 
                    1750, "\:4e5f" -> 1751, "\:4e8b" -> 1752, "\:4e8c" -> 
                    1753, "\:4e94" -> 1754, "\:4e95" -> 1755, "\:4eac" -> 
                    1756, "\:4eba" -> 1757, "\:4ebb" -> 1758, "\:4ec1" -> 
                    1759, "\:4ecb" -> 1760, "\:4ee3" -> 1761, "\:4eee" -> 
                    1762, "\:4f0a" -> 1763, "\:4f1a" -> 1764, "\:4f50" -> 
                    1765, "\:4f8d" -> 1766, "\:4fdd" -> 1767, "\:4fe1" -> 
                    1768, "\:5065" -> 1769, "\:5143" -> 1770, "\:5149" -> 
                    1771, "\:516b" -> 1772, "\:516c" -> 1773, "\:5185" -> 
                    1774, "\:51fa" -> 1775, "\:5206" -> 1776, "\:524d" -> 
                    1777, "\:5289" -> 1778, "\:529b" -> 1779, "\:52a0" -> 
                    1780, "\:52dd" -> 1781, "\:5317" -> 1782, "\:533a" -> 
                    1783, "\:5341" -> 1784, "\:5343" -> 1785, "\:5357" -> 
                    1786, "\:535a" -> 1787, "\:539f" -> 1788, "\:53e3" -> 
                    1789, "\:53e4" -> 1790, "\:53f2" -> 1791, "\:53f8" -> 
                    1792, "\:5408" -> 1793, "\:5409" -> 1794, "\:540c" -> 
                    1795, "\:540d" -> 1796, "\:548c" -> 1797, "\:56d7" -> 
                    1798, "\:56db" -> 1799, "\:56fd" -> 1800, "\:570b" -> 
                    1801, "\:571f" -> 1802, "\:5730" -> 1803, "\:5742" -> 
                    1804, "\:57ce" -> 1805, "\:5802" -> 1806, "\:5834" -> 
                    1807, "\:58eb" -> 1808, "\:590f" -> 1809, "\:5916" -> 
                    1810, "\:5927" -> 1811, "\:5929" -> 1812, "\:592a" -> 
                    1813, "\:592b" -> 1814, "\:5948" -> 1815, "\:5973" -> 
                    1816, "\:5b50" -> 1817, "\:5b66" -> 1818, "\:5b80" -> 
                    1819, "\:5b87" -> 1820, "\:5b89" -> 1821, "\:5b97" -> 
                    1822, "\:5b9a" -> 1823, "\:5ba3" -> 1824, "\:5bae" -> 
                    1825, "\:5bb6" -> 1826, "\:5bbf" -> 1827, "\:5bfa" -> 
                    1828, "\:5c07" -> 1829, "\:5c0f" -> 1830, "\:5c1a" -> 
                    1831, "\:5c71" -> 1832, "\:5ca1" -> 1833, "\:5cf6" -> 
                    1834, "\:5d0e" -> 1835, "\:5ddd" -> 1836, "\:5dde" -> 
                    1837, "\:5dff" -> 1838, "\:5e1d" -> 1839, "\:5e73" -> 
                    1840, "\:5e74" -> 1841, "\:5e78" -> 1842, "\:5e7f" -> 
                    1843, "\:5f18" -> 1844, "\:5f35" -> 1845, "\:5f73" -> 
                    1846, "\:5f8c" -> 1847, "\:5fa1" -> 1848, "\:5fb7" -> 
                    1849, "\:5fc3" -> 1850, "\:5fc4" -> 1851, "\:5fd7" -> 
                    1852, "\:5fe0" -> 1853, "\:611b" -> 1854, "\:6210" -> 
                    1855, "\:6211" -> 1856, "\:6226" -> 1857, "\:6238" -> 
                    1858, "\:624b" -> 1859, "\:624c" -> 1860, "\:653f" -> 
                    1861, "\:6587" -> 1862, "\:65b0" -> 1863, "\:65b9" -> 
                    1864, "\:65e5" -> 1865, "\:660e" -> 1866, "\:661f" -> 
                    1867, "\:6625" -> 1868, "\:662d" -> 1869, "\:667a" -> 
                    1870, "\:66f2" -> 1871, "\:66f8" -> 1872, "\:6708" -> 
                    1873, "\:6709" -> 1874, "\:671d" -> 1875, "\:6728" -> 
                    1876, "\:672c" -> 1877, "\:674e" -> 1878, "\:6751" -> 
                    1879, "\:6771" -> 1880, "\:677e" -> 1881, "\:6797" -> 
                    1882, "\:68ee" -> 1883, "\:694a" -> 1884, "\:6a39" -> 
                    1885, "\:6a4b" -> 1886, "\:6b4c" -> 1887, "\:6b62" -> 
                    1888, "\:6b63" -> 1889, "\:6b66" -> 1890, "\:6bd4" -> 
                    1891, "\:6c0f" -> 1892, "\:6c11" -> 1893, "\:6c34" -> 
                    1894, "\:6c35" -> 1895, "\:6c37" -> 1896, "\:6c38" -> 
                    1897, "\:6c5f" -> 1898, "\:6ca2" -> 1899, "\:6cb3" -> 
                    1900, "\:6cbb" -> 1901, "\:6cd5" -> 1902, "\:6d77" -> 
                    1903, "\:6e05" -> 1904, "\:6f22" -> 1905, "\:702c" -> 
                    1906, "\:706b" -> 1907, "\:7248" -> 1908, "\:72ac" -> 
                    1909, "\:738b" -> 1910, "\:751f" -> 1911, "\:7530" -> 
                    1912, "\:7537" -> 1913, "\:7592" -> 1914, "\:767a" -> 
                    1915, "\:767d" -> 1916, "\:7684" -> 1917, "\:7687" -> 
                    1918, "\:76ee" -> 1919, "\:76f8" -> 1920, "\:7701" -> 
                    1921, "\:771f" -> 1922, "\:77f3" -> 1923, "\:793a" -> 
                    1924, "\:793e" -> 1925, "\:795e" -> 1926, "\:798f" -> 
                    1927, "\:79be" -> 1928, "\:79c0" -> 1929, "\:79cb" -> 
                    1930, "\:7a7a" -> 1931, "\:7acb" -> 1932, "\:7ae0" -> 
                    1933, "\:7af9" -> 1934, "\:7cf9" -> 1935, "\:7f8e" -> 
                    1936, "\:7fa9" -> 1937, "\:8033" -> 1938, "\:826f" -> 
                    1939, "\:8279" -> 1940, "\:82b1" -> 1941, "\:82f1" -> 
                    1942, "\:83ef" -> 1943, "\:8449" -> 1944, "\:85e4" -> 
                    1945, "\:884c" -> 1946, "\:8857" -> 1947, "\:897f" -> 
                    1948, "\:898b" -> 1949, "\:8a01" -> 1950, "\:8a9e" -> 
                    1951, "\:8c37" -> 1952, "\:8c9d" -> 1953, "\:8cb4" -> 
                    1954, "\:8eca" -> 1955, "\:8ecd" -> 1956, "\:8fb6" -> 
                    1957, "\:9053" -> 1958, "\:90ce" -> 1959, "\:90e1" -> 
                    1960, "\:90e8" -> 1961, "\:90fd" -> 1962, "\:91cc" -> 
                    1963, "\:91ce" -> 1964, "\:91d1" -> 1965, "\:9234" -> 
                    1966, "\:9547" -> 1967, "\:9577" -> 1968, "\:9580" -> 
                    1969, "\:9593" -> 1970, "\:961d" -> 1971, "\:963f" -> 
                    1972, "\:9673" -> 1973, "\:967d" -> 1974, "\:96c4" -> 
                    1975, "\:9752" -> 1976, "\:9762" -> 1977, "\:98a8" -> 
                    1978, "\:98df" -> 1979, "\:9999" -> 1980, "\:99ac" -> 
                    1981, "\:9ad8" -> 1982, "\:9f8d" -> 1983, "\:9fb8" -> 
                    1984, "\[FiLigature]" -> 1985, "\[FlLigature]" -> 1986, 
                    "\:ff01" -> 1987, "\:ff08" -> 1988, "\:ff09" -> 1989, 
                    "\:ff0c" -> 1990, "\:ff0d" -> 1991, "\:ff0e" -> 1992, 
                    "\:ff0f" -> 1993, "\:ff1a" -> 1994, "\:ff1f" -> 1995, 
                    "\:ff5e" -> 1996, "the" -> 1997, "of" -> 1998, "and" -> 
                    1999, "in" -> 2000, "to" -> 2001, "was" -> 2002, "he" -> 
                    2003, "is" -> 2004, "as" -> 2005, "for" -> 2006, "on" -> 
                    2007, "with" -> 2008, "that" -> 2009, "it" -> 2010, "his" -> 
                    2011, "by" -> 2012, "at" -> 2013, "from" -> 2014, "her" -> 
                    2015, "##s" -> 2016, "she" -> 2017, "you" -> 2018, "had" -> 
                    2019, "an" -> 2020, "were" -> 2021, "but" -> 2022, "be" -> 
                    2023, "this" -> 2024, "are" -> 2025, "not" -> 2026, "my" -> 
                    2027, "they" -> 2028, "one" -> 2029, "which" -> 2030, 
                    "or" -> 2031, "have" -> 2032, "him" -> 2033, "me" -> 2034,
                     "first" -> 2035, "all" -> 2036, "also" -> 2037, "their" -> 
                    2038, "has" -> 2039, "up" -> 2040, "who" -> 2041, "out" -> 
                    2042, "been" -> 2043, "when" -> 2044, "after" -> 2045, 
                    "there" -> 2046, "into" -> 2047, "new" -> 2048, "two" -> 
                    2049, "its" -> 2050, "##a" -> 2051, "time" -> 2052, 
                    "would" -> 2053, "no" -> 2054, "what" -> 2055, "about" -> 
                    2056, "said" -> 2057, "we" -> 2058, "over" -> 2059, 
                    "then" -> 2060, "other" -> 2061, "so" -> 2062, "more" -> 
                    2063, "##e" -> 2064, "can" -> 2065, "if" -> 2066, "like" -> 
                    2067, "back" -> 2068, "them" -> 2069, "only" -> 2070, 
                    "some" -> 2071, "could" -> 2072, "##i" -> 2073, "where" -> 
                    2074, "just" -> 2075, "##ing" -> 2076, "during" -> 2077, 
                    "before" -> 2078, "##n" -> 2079, "do" -> 2080, "##o" -> 
                    2081, "made" -> 2082, "school" -> 2083, "through" -> 2084,
                     "than" -> 2085, "now" -> 2086, "years" -> 2087, "most" -> 
                    2088, "world" -> 2089, "may" -> 2090, "between" -> 2091, 
                    "down" -> 2092, "well" -> 2093, "three" -> 2094, "##d" -> 
                    2095, "year" -> 2096, "while" -> 2097, "will" -> 2098, 
                    "##ed" -> 2099, "##r" -> 2100, "##y" -> 2101, "later" -> 
                    2102, "##t" -> 2103, "city" -> 2104, "under" -> 2105, 
                    "around" -> 2106, "did" -> 2107, "such" -> 2108, "being" -> 
                    2109, "used" -> 2110, "state" -> 2111, "people" -> 2112, 
                    "part" -> 2113, "know" -> 2114, "against" -> 2115, "your" -> 
                    2116, "many" -> 2117, "second" -> 2118, "university" -> 
                    2119, "both" -> 2120, "national" -> 2121, "##er" -> 2122, 
                    "these" -> 2123, "don" -> 2124, "known" -> 2125, "off" -> 
                    2126, "way" -> 2127, "until" -> 2128, "re" -> 2129, "how" -> 
                    2130, "even" -> 2131, "get" -> 2132, "head" -> 2133, 
                    "..." -> 2134, "didn" -> 2135, "##ly" -> 2136, "team" -> 
                    2137, "american" -> 2138, "because" -> 2139, "de" -> 2140,
                     "##l" -> 2141, "born" -> 2142, "united" -> 2143, "film" -> 
                    2144, "since" -> 2145, "still" -> 2146, "long" -> 2147, 
                    "work" -> 2148, "south" -> 2149, "us" -> 2150, "became" -> 
                    2151, "any" -> 2152, "high" -> 2153, "again" -> 2154, 
                    "day" -> 2155, "family" -> 2156, "see" -> 2157, "right" -> 
                    2158, "man" -> 2159, "eyes" -> 2160, "house" -> 2161, 
                    "season" -> 2162, "war" -> 2163, "states" -> 2164, 
                    "including" -> 2165, "took" -> 2166, "life" -> 2167, 
                    "north" -> 2168, "same" -> 2169, "each" -> 2170, "called" -> 
                    2171, "name" -> 2172, "much" -> 2173, "place" -> 2174, 
                    "however" -> 2175, "go" -> 2176, "four" -> 2177, "group" -> 
                    2178, "another" -> 2179, "found" -> 2180, "won" -> 2181, 
                    "area" -> 2182, "here" -> 2183, "going" -> 2184, "10" -> 
                    2185, "away" -> 2186, "series" -> 2187, "left" -> 2188, 
                    "home" -> 2189, "music" -> 2190, "best" -> 2191, "make" -> 
                    2192, "hand" -> 2193, "number" -> 2194, "company" -> 2195,
                     "several" -> 2196, "never" -> 2197, "last" -> 2198, 
                    "john" -> 2199, "000" -> 2200, "very" -> 2201, "album" -> 
                    2202, "take" -> 2203, "end" -> 2204, "good" -> 2205, 
                    "too" -> 2206, "following" -> 2207, "released" -> 2208, 
                    "game" -> 2209, "played" -> 2210, "little" -> 2211, 
                    "began" -> 2212, "district" -> 2213, "##m" -> 2214, "old" -> 
                    2215, "want" -> 2216, "those" -> 2217, "side" -> 2218, 
                    "held" -> 2219, "own" -> 2220, "early" -> 2221, "county" -> 
                    2222, "ll" -> 2223, "league" -> 2224, "use" -> 2225, 
                    "west" -> 2226, "##u" -> 2227, "face" -> 2228, "think" -> 
                    2229, "##es" -> 2230, "2010" -> 2231, "government" -> 
                    2232, "##h" -> 2233, "march" -> 2234, "came" -> 2235, 
                    "small" -> 2236, "general" -> 2237, "town" -> 2238, 
                    "june" -> 2239, "##on" -> 2240, "line" -> 2241, "based" -> 
                    2242, "something" -> 2243, "##k" -> 2244, "september" -> 
                    2245, "thought" -> 2246, "looked" -> 2247, "along" -> 
                    2248, "international" -> 2249, "2011" -> 2250, "air" -> 
                    2251, "july" -> 2252, "club" -> 2253, "went" -> 2254, 
                    "january" -> 2255, "october" -> 2256, "our" -> 2257, 
                    "august" -> 2258, "april" -> 2259, "york" -> 2260, "12" -> 
                    2261, "few" -> 2262, "2012" -> 2263, "2008" -> 2264, 
                    "east" -> 2265, "show" -> 2266, "member" -> 2267, 
                    "college" -> 2268, "2009" -> 2269, "father" -> 2270, 
                    "public" -> 2271, "##us" -> 2272, "come" -> 2273, "men" -> 
                    2274, "five" -> 2275, "set" -> 2276, "station" -> 2277, 
                    "church" -> 2278, "##c" -> 2279, "next" -> 2280, "former" -> 
                    2281, "november" -> 2282, "room" -> 2283, "party" -> 2284,
                     "located" -> 2285, "december" -> 2286, "2013" -> 2287, 
                    "age" -> 2288, "got" -> 2289, "2007" -> 2290, "##g" -> 
                    2291, "system" -> 2292, "let" -> 2293, "love" -> 2294, 
                    "2006" -> 2295, "though" -> 2296, "every" -> 2297, "2014" -> 
                    2298, "look" -> 2299, "song" -> 2300, "water" -> 2301, 
                    "century" -> 2302, "without" -> 2303, "body" -> 2304, 
                    "black" -> 2305, "night" -> 2306, "within" -> 2307, 
                    "great" -> 2308, "women" -> 2309, "single" -> 2310, "ve" -> 
                    2311, "building" -> 2312, "large" -> 2313, "population" -> 
                    2314, "river" -> 2315, "named" -> 2316, "band" -> 2317, 
                    "white" -> 2318, "started" -> 2319, "##an" -> 2320, 
                    "once" -> 2321, "15" -> 2322, "20" -> 2323, "should" -> 
                    2324, "18" -> 2325, "2015" -> 2326, "service" -> 2327, 
                    "top" -> 2328, "built" -> 2329, "british" -> 2330, "open" -> 
                    2331, "death" -> 2332, "king" -> 2333, "moved" -> 2334, 
                    "local" -> 2335, "times" -> 2336, "children" -> 2337, 
                    "february" -> 2338, "book" -> 2339, "why" -> 2340, "11" -> 
                    2341, "door" -> 2342, "need" -> 2343, "president" -> 2344,
                     "order" -> 2345, "final" -> 2346, "road" -> 2347, "wasn" -> 
                    2348, "although" -> 2349, "due" -> 2350, "major" -> 2351, 
                    "died" -> 2352, "village" -> 2353, "third" -> 2354, 
                    "knew" -> 2355, "2016" -> 2356, "asked" -> 2357, "turned" -> 
                    2358, "st" -> 2359, "wanted" -> 2360, "say" -> 2361, 
                    "##p" -> 2362, "together" -> 2363, "received" -> 2364, 
                    "main" -> 2365, "son" -> 2366, "served" -> 2367, 
                    "different" -> 2368, "##en" -> 2369, "behind" -> 2370, 
                    "himself" -> 2371, "felt" -> 2372, "members" -> 2373, 
                    "power" -> 2374, "football" -> 2375, "law" -> 2376, 
                    "voice" -> 2377, "play" -> 2378, "##in" -> 2379, "near" -> 
                    2380, "park" -> 2381, "history" -> 2382, "30" -> 2383, 
                    "having" -> 2384, "2005" -> 2385, "16" -> 2386, "##man" -> 
                    2387, "saw" -> 2388, "mother" -> 2389, "##al" -> 2390, 
                    "army" -> 2391, "point" -> 2392, "front" -> 2393, "help" -> 
                    2394, "english" -> 2395, "street" -> 2396, "art" -> 2397, 
                    "late" -> 2398, "hands" -> 2399, "games" -> 2400, "award" -> 
                    2401, "##ia" -> 2402, "young" -> 2403, "14" -> 2404, 
                    "put" -> 2405, "published" -> 2406, "country" -> 2407, 
                    "division" -> 2408, "across" -> 2409, "told" -> 2410, 
                    "13" -> 2411, "often" -> 2412, "ever" -> 2413, "french" -> 
                    2414, "london" -> 2415, "center" -> 2416, "six" -> 2417, 
                    "red" -> 2418, "2017" -> 2419, "led" -> 2420, "days" -> 
                    2421, "include" -> 2422, "light" -> 2423, "25" -> 2424, 
                    "find" -> 2425, "tell" -> 2426, "among" -> 2427, 
                    "species" -> 2428, "really" -> 2429, "according" -> 2430, 
                    "central" -> 2431, "half" -> 2432, "2004" -> 2433, "form" -> 
                    2434, "original" -> 2435, "gave" -> 2436, "office" -> 
                    2437, "making" -> 2438, "enough" -> 2439, "lost" -> 2440, 
                    "full" -> 2441, "opened" -> 2442, "must" -> 2443, 
                    "included" -> 2444, "live" -> 2445, "given" -> 2446, 
                    "german" -> 2447, "player" -> 2448, "run" -> 2449, 
                    "business" -> 2450, "woman" -> 2451, "community" -> 2452, 
                    "cup" -> 2453, "might" -> 2454, "million" -> 2455, "land" -> 
                    2456, "2000" -> 2457, "court" -> 2458, "development" -> 
                    2459, "17" -> 2460, "short" -> 2461, "round" -> 2462, 
                    "ii" -> 2463, "km" -> 2464, "seen" -> 2465, "class" -> 
                    2466, "story" -> 2467, "always" -> 2468, "become" -> 2469,
                     "sure" -> 2470, "research" -> 2471, "almost" -> 2472, 
                    "director" -> 2473, "council" -> 2474, "la" -> 2475, 
                    "##2" -> 2476, "career" -> 2477, "things" -> 2478, 
                    "using" -> 2479, "island" -> 2480, "##z" -> 2481, 
                    "couldn" -> 2482, "car" -> 2483, "##is" -> 2484, "24" -> 
                    2485, "close" -> 2486, "force" -> 2487, "##1" -> 2488, 
                    "better" -> 2489, "free" -> 2490, "support" -> 2491, 
                    "control" -> 2492, "field" -> 2493, "students" -> 2494, 
                    "2003" -> 2495, "education" -> 2496, "married" -> 2497, 
                    "##b" -> 2498, "nothing" -> 2499, "worked" -> 2500, 
                    "others" -> 2501, "record" -> 2502, "big" -> 2503, 
                    "inside" -> 2504, "level" -> 2505, "anything" -> 2506, 
                    "continued" -> 2507, "give" -> 2508, "james" -> 2509, 
                    "##3" -> 2510, "military" -> 2511, "established" -> 2512, 
                    "non" -> 2513, "returned" -> 2514, "feel" -> 2515, "does" -> 
                    2516, "title" -> 2517, "written" -> 2518, "thing" -> 2519,
                     "feet" -> 2520, "william" -> 2521, "far" -> 2522, "co" -> 
                    2523, "association" -> 2524, "hard" -> 2525, "already" -> 
                    2526, "2002" -> 2527, "##ra" -> 2528, "championship" -> 
                    2529, "human" -> 2530, "western" -> 2531, "100" -> 2532, 
                    "##na" -> 2533, "department" -> 2534, "hall" -> 2535, 
                    "role" -> 2536, "various" -> 2537, "production" -> 2538, 
                    "21" -> 2539, "19" -> 2540, "heart" -> 2541, "2001" -> 
                    2542, "living" -> 2543, "fire" -> 2544, "version" -> 2545,
                     "##ers" -> 2546, "##f" -> 2547, "television" -> 2548, 
                    "royal" -> 2549, "##4" -> 2550, "produced" -> 2551, 
                    "working" -> 2552, "act" -> 2553, "case" -> 2554, 
                    "society" -> 2555, "region" -> 2556, "present" -> 2557, 
                    "radio" -> 2558, "period" -> 2559, "looking" -> 2560, 
                    "least" -> 2561, "total" -> 2562, "keep" -> 2563, 
                    "england" -> 2564, "wife" -> 2565, "program" -> 2566, 
                    "per" -> 2567, "brother" -> 2568, "mind" -> 2569, 
                    "special" -> 2570, "22" -> 2571, "##le" -> 2572, "am" -> 
                    2573, "works" -> 2574, "soon" -> 2575, "##6" -> 2576, 
                    "political" -> 2577, "george" -> 2578, "services" -> 2579,
                     "taken" -> 2580, "created" -> 2581, "##7" -> 2582, 
                    "further" -> 2583, "able" -> 2584, "reached" -> 2585, 
                    "david" -> 2586, "union" -> 2587, "joined" -> 2588, 
                    "upon" -> 2589, "done" -> 2590, "important" -> 2591, 
                    "social" -> 2592, "information" -> 2593, "either" -> 2594,
                     "##ic" -> 2595, "##x" -> 2596, "appeared" -> 2597, 
                    "position" -> 2598, "ground" -> 2599, "lead" -> 2600, 
                    "rock" -> 2601, "dark" -> 2602, "election" -> 2603, "23" -> 
                    2604, "board" -> 2605, "france" -> 2606, "hair" -> 2607, 
                    "course" -> 2608, "arms" -> 2609, "site" -> 2610, 
                    "police" -> 2611, "girl" -> 2612, "instead" -> 2613, 
                    "real" -> 2614, "sound" -> 2615, "##v" -> 2616, "words" -> 
                    2617, "moment" -> 2618, "##te" -> 2619, "someone" -> 2620,
                     "##8" -> 2621, "summer" -> 2622, "project" -> 2623, 
                    "announced" -> 2624, "san" -> 2625, "less" -> 2626, 
                    "wrote" -> 2627, "past" -> 2628, "followed" -> 2629, 
                    "##5" -> 2630, "blue" -> 2631, "founded" -> 2632, "al" -> 
                    2633, "finally" -> 2634, "india" -> 2635, "taking" -> 
                    2636, "records" -> 2637, "america" -> 2638, "##ne" -> 
                    2639, "1999" -> 2640, "design" -> 2641, "considered" -> 
                    2642, "northern" -> 2643, "god" -> 2644, "stop" -> 2645, 
                    "battle" -> 2646, "toward" -> 2647, "european" -> 2648, 
                    "outside" -> 2649, "described" -> 2650, "track" -> 2651, 
                    "today" -> 2652, "playing" -> 2653, "language" -> 2654, 
                    "28" -> 2655, "call" -> 2656, "26" -> 2657, "heard" -> 
                    2658, "professional" -> 2659, "low" -> 2660, "australia" -> 
                    2661, "miles" -> 2662, "california" -> 2663, "win" -> 
                    2664, "yet" -> 2665, "green" -> 2666, "##ie" -> 2667, 
                    "trying" -> 2668, "blood" -> 2669, "##ton" -> 2670, 
                    "southern" -> 2671, "science" -> 2672, "maybe" -> 2673, 
                    "everything" -> 2674, "match" -> 2675, "square" -> 2676, 
                    "27" -> 2677, "mouth" -> 2678, "video" -> 2679, "race" -> 
                    2680, "recorded" -> 2681, "leave" -> 2682, "above" -> 
                    2683, "##9" -> 2684, "daughter" -> 2685, "points" -> 2686,
                     "space" -> 2687, "1998" -> 2688, "museum" -> 2689, 
                    "change" -> 2690, "middle" -> 2691, "common" -> 2692, 
                    "##0" -> 2693, "move" -> 2694, "tv" -> 2695, "post" -> 
                    2696, "##ta" -> 2697, "lake" -> 2698, "seven" -> 2699, 
                    "tried" -> 2700, "elected" -> 2701, "closed" -> 2702, 
                    "ten" -> 2703, "paul" -> 2704, "minister" -> 2705, "##th" -> 
                    2706, "months" -> 2707, "start" -> 2708, "chief" -> 2709, 
                    "return" -> 2710, "canada" -> 2711, "person" -> 2712, 
                    "sea" -> 2713, "release" -> 2714, "similar" -> 2715, 
                    "modern" -> 2716, "brought" -> 2717, "rest" -> 2718, 
                    "hit" -> 2719, "formed" -> 2720, "mr" -> 2721, "##la" -> 
                    2722, "1997" -> 2723, "floor" -> 2724, "event" -> 2725, 
                    "doing" -> 2726, "thomas" -> 2727, "1996" -> 2728, 
                    "robert" -> 2729, "care" -> 2730, "killed" -> 2731, 
                    "training" -> 2732, "star" -> 2733, "week" -> 2734, 
                    "needed" -> 2735, "turn" -> 2736, "finished" -> 2737, 
                    "railway" -> 2738, "rather" -> 2739, "news" -> 2740, 
                    "health" -> 2741, "sent" -> 2742, "example" -> 2743, 
                    "ran" -> 2744, "term" -> 2745, "michael" -> 2746, 
                    "coming" -> 2747, "currently" -> 2748, "yes" -> 2749, 
                    "forces" -> 2750, "despite" -> 2751, "gold" -> 2752, 
                    "areas" -> 2753, "50" -> 2754, "stage" -> 2755, "fact" -> 
                    2756, "29" -> 2757, "dead" -> 2758, "says" -> 2759, 
                    "popular" -> 2760, "2018" -> 2761, "originally" -> 2762, 
                    "germany" -> 2763, "probably" -> 2764, "developed" -> 
                    2765, "result" -> 2766, "pulled" -> 2767, "friend" -> 
                    2768, "stood" -> 2769, "money" -> 2770, "running" -> 2771,
                     "mi" -> 2772, "signed" -> 2773, "word" -> 2774, "songs" -> 
                    2775, "child" -> 2776, "eventually" -> 2777, "met" -> 
                    2778, "tour" -> 2779, "average" -> 2780, "teams" -> 2781, 
                    "minutes" -> 2782, "festival" -> 2783, "current" -> 2784, 
                    "deep" -> 2785, "kind" -> 2786, "1995" -> 2787, "decided" -> 
                    2788, "usually" -> 2789, "eastern" -> 2790, "seemed" -> 
                    2791, "##ness" -> 2792, "episode" -> 2793, "bed" -> 2794, 
                    "added" -> 2795, "table" -> 2796, "indian" -> 2797, 
                    "private" -> 2798, "charles" -> 2799, "route" -> 2800, 
                    "available" -> 2801, "idea" -> 2802, "throughout" -> 2803,
                     "centre" -> 2804, "addition" -> 2805, "appointed" -> 
                    2806, "style" -> 2807, "1994" -> 2808, "books" -> 2809, 
                    "eight" -> 2810, "construction" -> 2811, "press" -> 2812, 
                    "mean" -> 2813, "wall" -> 2814, "friends" -> 2815, 
                    "remained" -> 2816, "schools" -> 2817, "study" -> 2818, 
                    "##ch" -> 2819, "##um" -> 2820, "institute" -> 2821, "oh" -> 
                    2822, "chinese" -> 2823, "sometimes" -> 2824, "events" -> 
                    2825, "possible" -> 2826, "1992" -> 2827, "australian" -> 
                    2828, "type" -> 2829, "brown" -> 2830, "forward" -> 2831, 
                    "talk" -> 2832, "process" -> 2833, "food" -> 2834, 
                    "debut" -> 2835, "seat" -> 2836, "performance" -> 2837, 
                    "committee" -> 2838, "features" -> 2839, "character" -> 
                    2840, "arts" -> 2841, "herself" -> 2842, "else" -> 2843, 
                    "lot" -> 2844, "strong" -> 2845, "russian" -> 2846, 
                    "range" -> 2847, "hours" -> 2848, "peter" -> 2849, "arm" -> 
                    2850, "##da" -> 2851, "morning" -> 2852, "dr" -> 2853, 
                    "sold" -> 2854, "##ry" -> 2855, "quickly" -> 2856, 
                    "directed" -> 2857, "1993" -> 2858, "guitar" -> 2859, 
                    "china" -> 2860, "##w" -> 2861, "31" -> 2862, "list" -> 
                    2863, "##ma" -> 2864, "performed" -> 2865, "media" -> 
                    2866, "uk" -> 2867, "players" -> 2868, "smile" -> 2869, 
                    "##rs" -> 2870, "myself" -> 2871, "40" -> 2872, "placed" -> 
                    2873, "coach" -> 2874, "province" -> 2875, "towards" -> 
                    2876, "wouldn" -> 2877, "leading" -> 2878, "whole" -> 
                    2879, "boy" -> 2880, "official" -> 2881, "designed" -> 
                    2882, "grand" -> 2883, "census" -> 2884, "##el" -> 2885, 
                    "europe" -> 2886, "attack" -> 2887, "japanese" -> 2888, 
                    "henry" -> 2889, "1991" -> 2890, "##re" -> 2891, "##os" -> 
                    2892, "cross" -> 2893, "getting" -> 2894, "alone" -> 2895,
                     "action" -> 2896, "lower" -> 2897, "network" -> 2898, 
                    "wide" -> 2899, "washington" -> 2900, "japan" -> 2901, 
                    "1990" -> 2902, "hospital" -> 2903, "believe" -> 2904, 
                    "changed" -> 2905, "sister" -> 2906, "##ar" -> 2907, 
                    "hold" -> 2908, "gone" -> 2909, "sir" -> 2910, "hadn" -> 
                    2911, "ship" -> 2912, "##ka" -> 2913, "studies" -> 2914, 
                    "academy" -> 2915, "shot" -> 2916, "rights" -> 2917, 
                    "below" -> 2918, "base" -> 2919, "bad" -> 2920, 
                    "involved" -> 2921, "kept" -> 2922, "largest" -> 2923, 
                    "##ist" -> 2924, "bank" -> 2925, "future" -> 2926, 
                    "especially" -> 2927, "beginning" -> 2928, "mark" -> 2929,
                     "movement" -> 2930, "section" -> 2931, "female" -> 2932, 
                    "magazine" -> 2933, "plan" -> 2934, "professor" -> 2935, 
                    "lord" -> 2936, "longer" -> 2937, "##ian" -> 2938, "sat" -> 
                    2939, "walked" -> 2940, "hill" -> 2941, "actually" -> 
                    2942, "civil" -> 2943, "energy" -> 2944, "model" -> 2945, 
                    "families" -> 2946, "size" -> 2947, "thus" -> 2948, 
                    "aircraft" -> 2949, "completed" -> 2950, "includes" -> 
                    2951, "data" -> 2952, "captain" -> 2953, "##or" -> 2954, 
                    "fight" -> 2955, "vocals" -> 2956, "featured" -> 2957, 
                    "richard" -> 2958, "bridge" -> 2959, "fourth" -> 2960, 
                    "1989" -> 2961, "officer" -> 2962, "stone" -> 2963, 
                    "hear" -> 2964, "##ism" -> 2965, "means" -> 2966, 
                    "medical" -> 2967, "groups" -> 2968, "management" -> 2969,
                     "self" -> 2970, "lips" -> 2971, "competition" -> 2972, 
                    "entire" -> 2973, "lived" -> 2974, "technology" -> 2975, 
                    "leaving" -> 2976, "federal" -> 2977, "tournament" -> 
                    2978, "bit" -> 2979, "passed" -> 2980, "hot" -> 2981, 
                    "independent" -> 2982, "awards" -> 2983, "kingdom" -> 
                    2984, "mary" -> 2985, "spent" -> 2986, "fine" -> 2987, 
                    "doesn" -> 2988, "reported" -> 2989, "##ling" -> 2990, 
                    "jack" -> 2991, "fall" -> 2992, "raised" -> 2993, 
                    "itself" -> 2994, "stay" -> 2995, "true" -> 2996, 
                    "studio" -> 2997, "1988" -> 2998, "sports" -> 2999, 
                    "replaced" -> 3000, "paris" -> 3001, "systems" -> 3002, 
                    "saint" -> 3003, "leader" -> 3004, "theatre" -> 3005, 
                    "whose" -> 3006, "market" -> 3007, "capital" -> 3008, 
                    "parents" -> 3009, "spanish" -> 3010, "canadian" -> 3011, 
                    "earth" -> 3012, "##ity" -> 3013, "cut" -> 3014, "degree" -> 
                    3015, "writing" -> 3016, "bay" -> 3017, "christian" -> 
                    3018, "awarded" -> 3019, "natural" -> 3020, "higher" -> 
                    3021, "bill" -> 3022, "##as" -> 3023, "coast" -> 3024, 
                    "provided" -> 3025, "previous" -> 3026, "senior" -> 3027, 
                    "ft" -> 3028, "valley" -> 3029, "organization" -> 3030, 
                    "stopped" -> 3031, "onto" -> 3032, "countries" -> 3033, 
                    "parts" -> 3034, "conference" -> 3035, "queen" -> 3036, 
                    "security" -> 3037, "interest" -> 3038, "saying" -> 3039, 
                    "allowed" -> 3040, "master" -> 3041, "earlier" -> 3042, 
                    "phone" -> 3043, "matter" -> 3044, "smith" -> 3045, 
                    "winning" -> 3046, "try" -> 3047, "happened" -> 3048, 
                    "moving" -> 3049, "campaign" -> 3050, "los" -> 3051, 
                    "##ley" -> 3052, "breath" -> 3053, "nearly" -> 3054, 
                    "mid" -> 3055, "1987" -> 3056, "certain" -> 3057, "girls" -> 
                    3058, "date" -> 3059, "italian" -> 3060, "african" -> 
                    3061, "standing" -> 3062, "fell" -> 3063, "artist" -> 
                    3064, "##ted" -> 3065, "shows" -> 3066, "deal" -> 3067, 
                    "mine" -> 3068, "industry" -> 3069, "1986" -> 3070, 
                    "##ng" -> 3071, "everyone" -> 3072, "republic" -> 3073, 
                    "provide" -> 3074, "collection" -> 3075, "library" -> 
                    3076, "student" -> 3077, "##ville" -> 3078, "primary" -> 
                    3079, "owned" -> 3080, "older" -> 3081, "via" -> 3082, 
                    "heavy" -> 3083, "1st" -> 3084, "makes" -> 3085, "##able" -> 
                    3086, "attention" -> 3087, "anyone" -> 3088, "africa" -> 
                    3089, "##ri" -> 3090, "stated" -> 3091, "length" -> 3092, 
                    "ended" -> 3093, "fingers" -> 3094, "command" -> 3095, 
                    "staff" -> 3096, "skin" -> 3097, "foreign" -> 3098, 
                    "opening" -> 3099, "governor" -> 3100, "okay" -> 3101, 
                    "medal" -> 3102, "kill" -> 3103, "sun" -> 3104, "cover" -> 
                    3105, "job" -> 3106, "1985" -> 3107, "introduced" -> 3108,
                     "chest" -> 3109, "hell" -> 3110, "feeling" -> 3111, 
                    "##ies" -> 3112, "success" -> 3113, "meet" -> 3114, 
                    "reason" -> 3115, "standard" -> 3116, "meeting" -> 3117, 
                    "novel" -> 3118, "1984" -> 3119, "trade" -> 3120, 
                    "source" -> 3121, "buildings" -> 3122, "##land" -> 3123, 
                    "rose" -> 3124, "guy" -> 3125, "goal" -> 3126, "##ur" -> 
                    3127, "chapter" -> 3128, "native" -> 3129, "husband" -> 
                    3130, "previously" -> 3131, "unit" -> 3132, "limited" -> 
                    3133, "entered" -> 3134, "weeks" -> 3135, "producer" -> 
                    3136, "operations" -> 3137, "mountain" -> 3138, "takes" -> 
                    3139, "covered" -> 3140, "forced" -> 3141, "related" -> 
                    3142, "roman" -> 3143, "complete" -> 3144, "successful" -> 
                    3145, "key" -> 3146, "texas" -> 3147, "cold" -> 3148, 
                    "##ya" -> 3149, "channel" -> 3150, "1980" -> 3151, 
                    "traditional" -> 3152, "films" -> 3153, "dance" -> 3154, 
                    "clear" -> 3155, "approximately" -> 3156, "500" -> 3157, 
                    "nine" -> 3158, "van" -> 3159, "prince" -> 3160, 
                    "question" -> 3161, "active" -> 3162, "tracks" -> 3163, 
                    "ireland" -> 3164, "regional" -> 3165, "silver" -> 3166, 
                    "author" -> 3167, "personal" -> 3168, "sense" -> 3169, 
                    "operation" -> 3170, "##ine" -> 3171, "economic" -> 3172, 
                    "1983" -> 3173, "holding" -> 3174, "twenty" -> 3175, 
                    "isbn" -> 3176, "additional" -> 3177, "speed" -> 3178, 
                    "hour" -> 3179, "edition" -> 3180, "regular" -> 3181, 
                    "historic" -> 3182, "places" -> 3183, "whom" -> 3184, 
                    "shook" -> 3185, "movie" -> 3186, "km\.b2" -> 3187, 
                    "secretary" -> 3188, "prior" -> 3189, "report" -> 3190, 
                    "chicago" -> 3191, "read" -> 3192, "foundation" -> 3193, 
                    "view" -> 3194, "engine" -> 3195, "scored" -> 3196, 
                    "1982" -> 3197, "units" -> 3198, "ask" -> 3199, "airport" -> 
                    3200, "property" -> 3201, "ready" -> 3202, "immediately" -> 
                    3203, "lady" -> 3204, "month" -> 3205, "listed" -> 3206, 
                    "contract" -> 3207, "##de" -> 3208, "manager" -> 3209, 
                    "themselves" -> 3210, "lines" -> 3211, "##ki" -> 3212, 
                    "navy" -> 3213, "writer" -> 3214, "meant" -> 3215, "##ts" -> 
                    3216, "runs" -> 3217, "##ro" -> 3218, "practice" -> 3219, 
                    "championships" -> 3220, "singer" -> 3221, "glass" -> 
                    3222, "commission" -> 3223, "required" -> 3224, "forest" -> 
                    3225, "starting" -> 3226, "culture" -> 3227, "generally" -> 
                    3228, "giving" -> 3229, "access" -> 3230, "attended" -> 
                    3231, "test" -> 3232, "couple" -> 3233, "stand" -> 3234, 
                    "catholic" -> 3235, "martin" -> 3236, "caught" -> 3237, 
                    "executive" -> 3238, "##less" -> 3239, "eye" -> 3240, 
                    "##ey" -> 3241, "thinking" -> 3242, "chair" -> 3243, 
                    "quite" -> 3244, "shoulder" -> 3245, "1979" -> 3246, 
                    "hope" -> 3247, "decision" -> 3248, "plays" -> 3249, 
                    "defeated" -> 3250, "municipality" -> 3251, "whether" -> 
                    3252, "structure" -> 3253, "offered" -> 3254, "slowly" -> 
                    3255, "pain" -> 3256, "ice" -> 3257, "direction" -> 3258, 
                    "##ion" -> 3259, "paper" -> 3260, "mission" -> 3261, 
                    "1981" -> 3262, "mostly" -> 3263, "200" -> 3264, "noted" -> 
                    3265, "individual" -> 3266, "managed" -> 3267, "nature" -> 
                    3268, "lives" -> 3269, "plant" -> 3270, "##ha" -> 3271, 
                    "helped" -> 3272, "except" -> 3273, "studied" -> 3274, 
                    "computer" -> 3275, "figure" -> 3276, "relationship" -> 
                    3277, "issue" -> 3278, "significant" -> 3279, "loss" -> 
                    3280, "die" -> 3281, "smiled" -> 3282, "gun" -> 3283, 
                    "ago" -> 3284, "highest" -> 3285, "1972" -> 3286, "##am" -> 
                    3287, "male" -> 3288, "bring" -> 3289, "goals" -> 3290, 
                    "mexico" -> 3291, "problem" -> 3292, "distance" -> 3293, 
                    "commercial" -> 3294, "completely" -> 3295, "location" -> 
                    3296, "annual" -> 3297, "famous" -> 3298, "drive" -> 3299,
                     "1976" -> 3300, "neck" -> 3301, "1978" -> 3302, 
                    "surface" -> 3303, "caused" -> 3304, "italy" -> 3305, 
                    "understand" -> 3306, "greek" -> 3307, "highway" -> 3308, 
                    "wrong" -> 3309, "hotel" -> 3310, "comes" -> 3311, 
                    "appearance" -> 3312, "joseph" -> 3313, "double" -> 3314, 
                    "issues" -> 3315, "musical" -> 3316, "companies" -> 3317, 
                    "castle" -> 3318, "income" -> 3319, "review" -> 3320, 
                    "assembly" -> 3321, "bass" -> 3322, "initially" -> 3323, 
                    "parliament" -> 3324, "artists" -> 3325, "experience" -> 
                    3326, "1974" -> 3327, "particular" -> 3328, "walk" -> 
                    3329, "foot" -> 3330, "engineering" -> 3331, "talking" -> 
                    3332, "window" -> 3333, "dropped" -> 3334, "##ter" -> 
                    3335, "miss" -> 3336, "baby" -> 3337, "boys" -> 3338, 
                    "break" -> 3339, "1975" -> 3340, "stars" -> 3341, "edge" -> 
                    3342, "remember" -> 3343, "policy" -> 3344, "carried" -> 
                    3345, "train" -> 3346, "stadium" -> 3347, "bar" -> 3348, 
                    "sex" -> 3349, "angeles" -> 3350, "evidence" -> 3351, 
                    "##ge" -> 3352, "becoming" -> 3353, "assistant" -> 3354, 
                    "soviet" -> 3355, "1977" -> 3356, "upper" -> 3357, "step" -> 
                    3358, "wing" -> 3359, "1970" -> 3360, "youth" -> 3361, 
                    "financial" -> 3362, "reach" -> 3363, "##ll" -> 3364, 
                    "actor" -> 3365, "numerous" -> 3366, "##se" -> 3367, 
                    "##st" -> 3368, "nodded" -> 3369, "arrived" -> 3370, 
                    "##ation" -> 3371, "minute" -> 3372, "##nt" -> 3373, 
                    "believed" -> 3374, "sorry" -> 3375, "complex" -> 3376, 
                    "beautiful" -> 3377, "victory" -> 3378, "associated" -> 
                    3379, "temple" -> 3380, "1968" -> 3381, "1973" -> 3382, 
                    "chance" -> 3383, "perhaps" -> 3384, "metal" -> 3385, 
                    "##son" -> 3386, "1945" -> 3387, "bishop" -> 3388, "##et" -> 
                    3389, "lee" -> 3390, "launched" -> 3391, "particularly" -> 
                    3392, "tree" -> 3393, "le" -> 3394, "retired" -> 3395, 
                    "subject" -> 3396, "prize" -> 3397, "contains" -> 3398, 
                    "yeah" -> 3399, "theory" -> 3400, "empire" -> 3401, 
                    "##ce" -> 3402, "suddenly" -> 3403, "waiting" -> 3404, 
                    "trust" -> 3405, "recording" -> 3406, "##to" -> 3407, 
                    "happy" -> 3408, "terms" -> 3409, "camp" -> 3410, 
                    "champion" -> 3411, "1971" -> 3412, "religious" -> 3413, 
                    "pass" -> 3414, "zealand" -> 3415, "names" -> 3416, "2nd" -> 
                    3417, "port" -> 3418, "ancient" -> 3419, "tom" -> 3420, 
                    "corner" -> 3421, "represented" -> 3422, "watch" -> 3423, 
                    "legal" -> 3424, "anti" -> 3425, "justice" -> 3426, 
                    "cause" -> 3427, "watched" -> 3428, "brothers" -> 3429, 
                    "45" -> 3430, "material" -> 3431, "changes" -> 3432, 
                    "simply" -> 3433, "response" -> 3434, "louis" -> 3435, 
                    "fast" -> 3436, "##ting" -> 3437, "answer" -> 3438, "60" -> 
                    3439, "historical" -> 3440, "1969" -> 3441, "stories" -> 
                    3442, "straight" -> 3443, "create" -> 3444, "feature" -> 
                    3445, "increased" -> 3446, "rate" -> 3447, 
                    "administration" -> 3448, "virginia" -> 3449, "el" -> 
                    3450, "activities" -> 3451, "cultural" -> 3452, "overall" -> 
                    3453, "winner" -> 3454, "programs" -> 3455, "basketball" -> 
                    3456, "legs" -> 3457, "guard" -> 3458, "beyond" -> 3459, 
                    "cast" -> 3460, "doctor" -> 3461, "mm" -> 3462, "flight" -> 
                    3463, "results" -> 3464, "remains" -> 3465, "cost" -> 
                    3466, "effect" -> 3467, "winter" -> 3468, "##ble" -> 3469,
                     "larger" -> 3470, "islands" -> 3471, "problems" -> 3472, 
                    "chairman" -> 3473, "grew" -> 3474, "commander" -> 3475, 
                    "isn" -> 3476, "1967" -> 3477, "pay" -> 3478, "failed" -> 
                    3479, "selected" -> 3480, "hurt" -> 3481, "fort" -> 3482, 
                    "box" -> 3483, "regiment" -> 3484, "majority" -> 3485, 
                    "journal" -> 3486, "35" -> 3487, "edward" -> 3488, 
                    "plans" -> 3489, "##ke" -> 3490, "##ni" -> 3491, "shown" -> 
                    3492, "pretty" -> 3493, "irish" -> 3494, "characters" -> 
                    3495, "directly" -> 3496, "scene" -> 3497, "likely" -> 
                    3498, "operated" -> 3499, "allow" -> 3500, "spring" -> 
                    3501, "##j" -> 3502, "junior" -> 3503, "matches" -> 3504, 
                    "looks" -> 3505, "mike" -> 3506, "houses" -> 3507, 
                    "fellow" -> 3508, "##tion" -> 3509, "beach" -> 3510, 
                    "marriage" -> 3511, "##ham" -> 3512, "##ive" -> 3513, 
                    "rules" -> 3514, "oil" -> 3515, "65" -> 3516, "florida" -> 
                    3517, "expected" -> 3518, "nearby" -> 3519, "congress" -> 
                    3520, "sam" -> 3521, "peace" -> 3522, "recent" -> 3523, 
                    "iii" -> 3524, "wait" -> 3525, "subsequently" -> 3526, 
                    "cell" -> 3527, "##do" -> 3528, "variety" -> 3529, 
                    "serving" -> 3530, "agreed" -> 3531, "please" -> 3532, 
                    "poor" -> 3533, "joe" -> 3534, "pacific" -> 3535, 
                    "attempt" -> 3536, "wood" -> 3537, "democratic" -> 3538, 
                    "piece" -> 3539, "prime" -> 3540, "##ca" -> 3541, "rural" -> 
                    3542, "mile" -> 3543, "touch" -> 3544, "appears" -> 3545, 
                    "township" -> 3546, "1964" -> 3547, "1966" -> 3548, 
                    "soldiers" -> 3549, "##men" -> 3550, "##ized" -> 3551, 
                    "1965" -> 3552, "pennsylvania" -> 3553, "closer" -> 3554, 
                    "fighting" -> 3555, "claimed" -> 3556, "score" -> 3557, 
                    "jones" -> 3558, "physical" -> 3559, "editor" -> 3560, 
                    "##ous" -> 3561, "filled" -> 3562, "genus" -> 3563, 
                    "specific" -> 3564, "sitting" -> 3565, "super" -> 3566, 
                    "mom" -> 3567, "##va" -> 3568, "therefore" -> 3569, 
                    "supported" -> 3570, "status" -> 3571, "fear" -> 3572, 
                    "cases" -> 3573, "store" -> 3574, "meaning" -> 3575, 
                    "wales" -> 3576, "minor" -> 3577, "spain" -> 3578, 
                    "tower" -> 3579, "focus" -> 3580, "vice" -> 3581, "frank" -> 
                    3582, "follow" -> 3583, "parish" -> 3584, "separate" -> 
                    3585, "golden" -> 3586, "horse" -> 3587, "fifth" -> 3588, 
                    "remaining" -> 3589, "branch" -> 3590, "32" -> 3591, 
                    "presented" -> 3592, "stared" -> 3593, "##id" -> 3594, 
                    "uses" -> 3595, "secret" -> 3596, "forms" -> 3597, "##co" -> 
                    3598, "baseball" -> 3599, "exactly" -> 3600, "##ck" -> 
                    3601, "choice" -> 3602, "note" -> 3603, "discovered" -> 
                    3604, "travel" -> 3605, "composed" -> 3606, "truth" -> 
                    3607, "russia" -> 3608, "ball" -> 3609, "color" -> 3610, 
                    "kiss" -> 3611, "dad" -> 3612, "wind" -> 3613, "continue" -> 
                    3614, "ring" -> 3615, "referred" -> 3616, "numbers" -> 
                    3617, "digital" -> 3618, "greater" -> 3619, "##ns" -> 
                    3620, "metres" -> 3621, "slightly" -> 3622, "direct" -> 
                    3623, "increase" -> 3624, "1960" -> 3625, "responsible" -> 
                    3626, "crew" -> 3627, "rule" -> 3628, "trees" -> 3629, 
                    "troops" -> 3630, "##no" -> 3631, "broke" -> 3632, "goes" -> 
                    3633, "individuals" -> 3634, "hundred" -> 3635, "weight" -> 
                    3636, "creek" -> 3637, "sleep" -> 3638, "memory" -> 3639, 
                    "defense" -> 3640, "provides" -> 3641, "ordered" -> 3642, 
                    "code" -> 3643, "value" -> 3644, "jewish" -> 3645, 
                    "windows" -> 3646, "1944" -> 3647, "safe" -> 3648, 
                    "judge" -> 3649, "whatever" -> 3650, "corps" -> 3651, 
                    "realized" -> 3652, "growing" -> 3653, "pre" -> 3654, 
                    "##ga" -> 3655, "cities" -> 3656, "alexander" -> 3657, 
                    "gaze" -> 3658, "lies" -> 3659, "spread" -> 3660, "scott" -> 
                    3661, "letter" -> 3662, "showed" -> 3663, "situation" -> 
                    3664, "mayor" -> 3665, "transport" -> 3666, "watching" -> 
                    3667, "workers" -> 3668, "extended" -> 3669, "##li" -> 
                    3670, "expression" -> 3671, "normal" -> 3672, "##ment" -> 
                    3673, "chart" -> 3674, "multiple" -> 3675, "border" -> 
                    3676, "##ba" -> 3677, "host" -> 3678, "##ner" -> 3679, 
                    "daily" -> 3680, "mrs" -> 3681, "walls" -> 3682, "piano" -> 
                    3683, "##ko" -> 3684, "heat" -> 3685, "cannot" -> 3686, 
                    "##ate" -> 3687, "earned" -> 3688, "products" -> 3689, 
                    "drama" -> 3690, "era" -> 3691, "authority" -> 3692, 
                    "seasons" -> 3693, "join" -> 3694, "grade" -> 3695, 
                    "##io" -> 3696, "sign" -> 3697, "difficult" -> 3698, 
                    "machine" -> 3699, "1963" -> 3700, "territory" -> 3701, 
                    "mainly" -> 3702, "##wood" -> 3703, "stations" -> 3704, 
                    "squadron" -> 3705, "1962" -> 3706, "stepped" -> 3707, 
                    "iron" -> 3708, "19th" -> 3709, "##led" -> 3710, "serve" -> 
                    3711, "appear" -> 3712, "sky" -> 3713, "speak" -> 3714, 
                    "broken" -> 3715, "charge" -> 3716, "knowledge" -> 3717, 
                    "kilometres" -> 3718, "removed" -> 3719, "ships" -> 3720, 
                    "article" -> 3721, "campus" -> 3722, "simple" -> 3723, 
                    "##ty" -> 3724, "pushed" -> 3725, "britain" -> 3726, 
                    "##ve" -> 3727, "leaves" -> 3728, "recently" -> 3729, 
                    "cd" -> 3730, "soft" -> 3731, "boston" -> 3732, "latter" -> 
                    3733, "easy" -> 3734, "acquired" -> 3735, "poland" -> 
                    3736, "##sa" -> 3737, "quality" -> 3738, "officers" -> 
                    3739, "presence" -> 3740, "planned" -> 3741, "nations" -> 
                    3742, "mass" -> 3743, "broadcast" -> 3744, "jean" -> 3745,
                     "share" -> 3746, "image" -> 3747, "influence" -> 3748, 
                    "wild" -> 3749, "offer" -> 3750, "emperor" -> 3751, 
                    "electric" -> 3752, "reading" -> 3753, "headed" -> 3754, 
                    "ability" -> 3755, "promoted" -> 3756, "yellow" -> 3757, 
                    "ministry" -> 3758, "1942" -> 3759, "throat" -> 3760, 
                    "smaller" -> 3761, "politician" -> 3762, "##by" -> 3763, 
                    "latin" -> 3764, "spoke" -> 3765, "cars" -> 3766, 
                    "williams" -> 3767, "males" -> 3768, "lack" -> 3769, 
                    "pop" -> 3770, "80" -> 3771, "##ier" -> 3772, "acting" -> 
                    3773, "seeing" -> 3774, "consists" -> 3775, "##ti" -> 
                    3776, "estate" -> 3777, "1961" -> 3778, "pressure" -> 
                    3779, "johnson" -> 3780, "newspaper" -> 3781, "jr" -> 
                    3782, "chris" -> 3783, "olympics" -> 3784, "online" -> 
                    3785, "conditions" -> 3786, "beat" -> 3787, "elements" -> 
                    3788, "walking" -> 3789, "vote" -> 3790, "##field" -> 
                    3791, "needs" -> 3792, "carolina" -> 3793, "text" -> 3794,
                     "featuring" -> 3795, "global" -> 3796, "block" -> 3797, 
                    "shirt" -> 3798, "levels" -> 3799, "francisco" -> 3800, 
                    "purpose" -> 3801, "females" -> 3802, "et" -> 3803, 
                    "dutch" -> 3804, "duke" -> 3805, "ahead" -> 3806, "gas" -> 
                    3807, "twice" -> 3808, "safety" -> 3809, "serious" -> 
                    3810, "turning" -> 3811, "highly" -> 3812, "lieutenant" -> 
                    3813, "firm" -> 3814, "maria" -> 3815, "amount" -> 3816, 
                    "mixed" -> 3817, "daniel" -> 3818, "proposed" -> 3819, 
                    "perfect" -> 3820, "agreement" -> 3821, "affairs" -> 3822,
                     "3rd" -> 3823, "seconds" -> 3824, "contemporary" -> 3825,
                     "paid" -> 3826, "1943" -> 3827, "prison" -> 3828, "save" -> 
                    3829, "kitchen" -> 3830, "label" -> 3831, 
                    "administrative" -> 3832, "intended" -> 3833, 
                    "constructed" -> 3834, "academic" -> 3835, "nice" -> 3836,
                     "teacher" -> 3837, "races" -> 3838, "1956" -> 3839, 
                    "formerly" -> 3840, "corporation" -> 3841, "ben" -> 3842, 
                    "nation" -> 3843, "issued" -> 3844, "shut" -> 3845, 
                    "1958" -> 3846, "drums" -> 3847, "housing" -> 3848, 
                    "victoria" -> 3849, "seems" -> 3850, "opera" -> 3851, 
                    "1959" -> 3852, "graduated" -> 3853, "function" -> 3854, 
                    "von" -> 3855, "mentioned" -> 3856, "picked" -> 3857, 
                    "build" -> 3858, "recognized" -> 3859, "shortly" -> 3860, 
                    "protection" -> 3861, "picture" -> 3862, "notable" -> 
                    3863, "exchange" -> 3864, "elections" -> 3865, "1980s" -> 
                    3866, "loved" -> 3867, "percent" -> 3868, "racing" -> 
                    3869, "fish" -> 3870, "elizabeth" -> 3871, "garden" -> 
                    3872, "volume" -> 3873, "hockey" -> 3874, "1941" -> 3875, 
                    "beside" -> 3876, "settled" -> 3877, "##ford" -> 3878, 
                    "1940" -> 3879, "competed" -> 3880, "replied" -> 3881, 
                    "drew" -> 3882, "1948" -> 3883, "actress" -> 3884, 
                    "marine" -> 3885, "scotland" -> 3886, "steel" -> 3887, 
                    "glanced" -> 3888, "farm" -> 3889, "steve" -> 3890, 
                    "1957" -> 3891, "risk" -> 3892, "tonight" -> 3893, 
                    "positive" -> 3894, "magic" -> 3895, "singles" -> 3896, 
                    "effects" -> 3897, "gray" -> 3898, "screen" -> 3899, 
                    "dog" -> 3900, "##ja" -> 3901, "residents" -> 3902, "bus" -> 
                    3903, "sides" -> 3904, "none" -> 3905, "secondary" -> 
                    3906, "literature" -> 3907, "polish" -> 3908, "destroyed" -> 
                    3909, "flying" -> 3910, "founder" -> 3911, "households" -> 
                    3912, "1939" -> 3913, "lay" -> 3914, "reserve" -> 3915, 
                    "usa" -> 3916, "gallery" -> 3917, "##ler" -> 3918, "1946" -> 
                    3919, "industrial" -> 3920, "younger" -> 3921, "approach" -> 
                    3922, "appearances" -> 3923, "urban" -> 3924, "ones" -> 
                    3925, "1950" -> 3926, "finish" -> 3927, "avenue" -> 3928, 
                    "powerful" -> 3929, "fully" -> 3930, "growth" -> 3931, 
                    "page" -> 3932, "honor" -> 3933, "jersey" -> 3934, 
                    "projects" -> 3935, "advanced" -> 3936, "revealed" -> 
                    3937, "basic" -> 3938, "90" -> 3939, "infantry" -> 3940, 
                    "pair" -> 3941, "equipment" -> 3942, "visit" -> 3943, 
                    "33" -> 3944, "evening" -> 3945, "search" -> 3946, 
                    "grant" -> 3947, "effort" -> 3948, "solo" -> 3949, 
                    "treatment" -> 3950, "buried" -> 3951, "republican" -> 
                    3952, "primarily" -> 3953, "bottom" -> 3954, "owner" -> 
                    3955, "1970s" -> 3956, "israel" -> 3957, "gives" -> 3958, 
                    "jim" -> 3959, "dream" -> 3960, "bob" -> 3961, "remain" -> 
                    3962, "spot" -> 3963, "70" -> 3964, "notes" -> 3965, 
                    "produce" -> 3966, "champions" -> 3967, "contact" -> 3968,
                     "ed" -> 3969, "soul" -> 3970, "accepted" -> 3971, "ways" -> 
                    3972, "del" -> 3973, "##ally" -> 3974, "losing" -> 3975, 
                    "split" -> 3976, "price" -> 3977, "capacity" -> 3978, 
                    "basis" -> 3979, "trial" -> 3980, "questions" -> 3981, 
                    "##ina" -> 3982, "1955" -> 3983, "20th" -> 3984, "guess" -> 
                    3985, "officially" -> 3986, "memorial" -> 3987, "naval" -> 
                    3988, "initial" -> 3989, "##ization" -> 3990, "whispered" -> 
                    3991, "median" -> 3992, "engineer" -> 3993, "##ful" -> 
                    3994, "sydney" -> 3995, "##go" -> 3996, "columbia" -> 
                    3997, "strength" -> 3998, "300" -> 3999, "1952" -> 4000, 
                    "tears" -> 4001, "senate" -> 4002, "00" -> 4003, "card" -> 
                    4004, "asian" -> 4005, "agent" -> 4006, "1947" -> 4007, 
                    "software" -> 4008, "44" -> 4009, "draw" -> 4010, "warm" -> 
                    4011, "supposed" -> 4012, "com" -> 4013, "pro" -> 4014, 
                    "##il" -> 4015, "transferred" -> 4016, "leaned" -> 4017, 
                    "##at" -> 4018, "candidate" -> 4019, "escape" -> 4020, 
                    "mountains" -> 4021, "asia" -> 4022, "potential" -> 4023, 
                    "activity" -> 4024, "entertainment" -> 4025, "seem" -> 
                    4026, "traffic" -> 4027, "jackson" -> 4028, "murder" -> 
                    4029, "36" -> 4030, "slow" -> 4031, "product" -> 4032, 
                    "orchestra" -> 4033, "haven" -> 4034, "agency" -> 4035, 
                    "bbc" -> 4036, "taught" -> 4037, "website" -> 4038, 
                    "comedy" -> 4039, "unable" -> 4040, "storm" -> 4041, 
                    "planning" -> 4042, "albums" -> 4043, "rugby" -> 4044, 
                    "environment" -> 4045, "scientific" -> 4046, "grabbed" -> 
                    4047, "protect" -> 4048, "##hi" -> 4049, "boat" -> 4050, 
                    "typically" -> 4051, "1954" -> 4052, "1953" -> 4053, 
                    "damage" -> 4054, "principal" -> 4055, "divided" -> 4056, 
                    "dedicated" -> 4057, "mount" -> 4058, "ohio" -> 4059, 
                    "##berg" -> 4060, "pick" -> 4061, "fought" -> 4062, 
                    "driver" -> 4063, "##der" -> 4064, "empty" -> 4065, 
                    "shoulders" -> 4066, "sort" -> 4067, "thank" -> 4068, 
                    "berlin" -> 4069, "prominent" -> 4070, "account" -> 4071, 
                    "freedom" -> 4072, "necessary" -> 4073, "efforts" -> 4074,
                     "alex" -> 4075, "headquarters" -> 4076, "follows" -> 
                    4077, "alongside" -> 4078, "des" -> 4079, "simon" -> 4080,
                     "andrew" -> 4081, "suggested" -> 4082, "operating" -> 
                    4083, "learning" -> 4084, "steps" -> 4085, "1949" -> 4086,
                     "sweet" -> 4087, "technical" -> 4088, "begin" -> 4089, 
                    "easily" -> 4090, "34" -> 4091, "teeth" -> 4092, 
                    "speaking" -> 4093, "settlement" -> 4094, "scale" -> 4095,
                     "##sh" -> 4096, "renamed" -> 4097, "ray" -> 4098, "max" -> 
                    4099, "enemy" -> 4100, "semi" -> 4101, "joint" -> 4102, 
                    "compared" -> 4103, "##rd" -> 4104, "scottish" -> 4105, 
                    "leadership" -> 4106, "analysis" -> 4107, "offers" -> 
                    4108, "georgia" -> 4109, "pieces" -> 4110, "captured" -> 
                    4111, "animal" -> 4112, "deputy" -> 4113, "guest" -> 4114,
                     "organized" -> 4115, "##lin" -> 4116, "tony" -> 4117, 
                    "combined" -> 4118, "method" -> 4119, "challenge" -> 4120,
                     "1960s" -> 4121, "huge" -> 4122, "wants" -> 4123, 
                    "battalion" -> 4124, "sons" -> 4125, "rise" -> 4126, 
                    "crime" -> 4127, "types" -> 4128, "facilities" -> 4129, 
                    "telling" -> 4130, "path" -> 4131, "1951" -> 4132, 
                    "platform" -> 4133, "sit" -> 4134, "1990s" -> 4135, 
                    "##lo" -> 4136, "tells" -> 4137, "assigned" -> 4138, 
                    "rich" -> 4139, "pull" -> 4140, "##ot" -> 4141, 
                    "commonly" -> 4142, "alive" -> 4143, "##za" -> 4144, 
                    "letters" -> 4145, "concept" -> 4146, "conducted" -> 4147,
                     "wearing" -> 4148, "happen" -> 4149, "bought" -> 4150, 
                    "becomes" -> 4151, "holy" -> 4152, "gets" -> 4153, 
                    "ocean" -> 4154, "defeat" -> 4155, "languages" -> 4156, 
                    "purchased" -> 4157, "coffee" -> 4158, "occurred" -> 4159,
                     "titled" -> 4160, "##q" -> 4161, "declared" -> 4162, 
                    "applied" -> 4163, "sciences" -> 4164, "concert" -> 4165, 
                    "sounds" -> 4166, "jazz" -> 4167, "brain" -> 4168, "##me" -> 
                    4169, "painting" -> 4170, "fleet" -> 4171, "tax" -> 4172, 
                    "nick" -> 4173, "##ius" -> 4174, "michigan" -> 4175, 
                    "count" -> 4176, "animals" -> 4177, "leaders" -> 4178, 
                    "episodes" -> 4179, "##line" -> 4180, "content" -> 4181, 
                    "##den" -> 4182, "birth" -> 4183, "##it" -> 4184, "clubs" -> 
                    4185, "64" -> 4186, "palace" -> 4187, "critical" -> 4188, 
                    "refused" -> 4189, "fair" -> 4190, "leg" -> 4191, 
                    "laughed" -> 4192, "returning" -> 4193, "surrounding" -> 
                    4194, "participated" -> 4195, "formation" -> 4196, 
                    "lifted" -> 4197, "pointed" -> 4198, "connected" -> 4199, 
                    "rome" -> 4200, "medicine" -> 4201, "laid" -> 4202, 
                    "taylor" -> 4203, "santa" -> 4204, "powers" -> 4205, 
                    "adam" -> 4206, "tall" -> 4207, "shared" -> 4208, 
                    "focused" -> 4209, "knowing" -> 4210, "yards" -> 4211, 
                    "entrance" -> 4212, "falls" -> 4213, "##wa" -> 4214, 
                    "calling" -> 4215, "##ad" -> 4216, "sources" -> 4217, 
                    "chosen" -> 4218, "beneath" -> 4219, "resources" -> 4220, 
                    "yard" -> 4221, "##ite" -> 4222, "nominated" -> 4223, 
                    "silence" -> 4224, "zone" -> 4225, "defined" -> 4226, 
                    "##que" -> 4227, "gained" -> 4228, "thirty" -> 4229, "38" -> 
                    4230, "bodies" -> 4231, "moon" -> 4232, "##ard" -> 4233, 
                    "adopted" -> 4234, "christmas" -> 4235, "widely" -> 4236, 
                    "register" -> 4237, "apart" -> 4238, "iran" -> 4239, 
                    "premier" -> 4240, "serves" -> 4241, "du" -> 4242, 
                    "unknown" -> 4243, "parties" -> 4244, "##les" -> 4245, 
                    "generation" -> 4246, "##ff" -> 4247, "continues" -> 4248,
                     "quick" -> 4249, "fields" -> 4250, "brigade" -> 4251, 
                    "quiet" -> 4252, "teaching" -> 4253, "clothes" -> 4254, 
                    "impact" -> 4255, "weapons" -> 4256, "partner" -> 4257, 
                    "flat" -> 4258, "theater" -> 4259, "supreme" -> 4260, 
                    "1938" -> 4261, "37" -> 4262, "relations" -> 4263, 
                    "##tor" -> 4264, "plants" -> 4265, "suffered" -> 4266, 
                    "1936" -> 4267, "wilson" -> 4268, "kids" -> 4269, 
                    "begins" -> 4270, "##age" -> 4271, "1918" -> 4272, 
                    "seats" -> 4273, "armed" -> 4274, "internet" -> 4275, 
                    "models" -> 4276, "worth" -> 4277, "laws" -> 4278, "400" -> 
                    4279, "communities" -> 4280, "classes" -> 4281, 
                    "background" -> 4282, "knows" -> 4283, "thanks" -> 4284, 
                    "quarter" -> 4285, "reaching" -> 4286, "humans" -> 4287, 
                    "carry" -> 4288, "killing" -> 4289, "format" -> 4290, 
                    "kong" -> 4291, "hong" -> 4292, "setting" -> 4293, "75" -> 
                    4294, "architecture" -> 4295, "disease" -> 4296, 
                    "railroad" -> 4297, "inc" -> 4298, "possibly" -> 4299, 
                    "wish" -> 4300, "arthur" -> 4301, "thoughts" -> 4302, 
                    "harry" -> 4303, "doors" -> 4304, "density" -> 4305, 
                    "##di" -> 4306, "crowd" -> 4307, "illinois" -> 4308, 
                    "stomach" -> 4309, "tone" -> 4310, "unique" -> 4311, 
                    "reports" -> 4312, "anyway" -> 4313, "##ir" -> 4314, 
                    "liberal" -> 4315, "der" -> 4316, "vehicle" -> 4317, 
                    "thick" -> 4318, "dry" -> 4319, "drug" -> 4320, "faced" -> 
                    4321, "largely" -> 4322, "facility" -> 4323, "theme" -> 
                    4324, "holds" -> 4325, "creation" -> 4326, "strange" -> 
                    4327, "colonel" -> 4328, "##mi" -> 4329, "revolution" -> 
                    4330, "bell" -> 4331, "politics" -> 4332, "turns" -> 4333,
                     "silent" -> 4334, "rail" -> 4335, "relief" -> 4336, 
                    "independence" -> 4337, "combat" -> 4338, "shape" -> 4339,
                     "write" -> 4340, "determined" -> 4341, "sales" -> 4342, 
                    "learned" -> 4343, "4th" -> 4344, "finger" -> 4345, 
                    "oxford" -> 4346, "providing" -> 4347, "1937" -> 4348, 
                    "heritage" -> 4349, "fiction" -> 4350, "situated" -> 4351,
                     "designated" -> 4352, "allowing" -> 4353, "distribution" -> 
                    4354, "hosted" -> 4355, "##est" -> 4356, "sight" -> 4357, 
                    "interview" -> 4358, "estimated" -> 4359, "reduced" -> 
                    4360, "##ria" -> 4361, "toronto" -> 4362, "footballer" -> 
                    4363, "keeping" -> 4364, "guys" -> 4365, "damn" -> 4366, 
                    "claim" -> 4367, "motion" -> 4368, "sport" -> 4369, 
                    "sixth" -> 4370, "stayed" -> 4371, "##ze" -> 4372, "en" -> 
                    4373, "rear" -> 4374, "receive" -> 4375, "handed" -> 4376,
                     "twelve" -> 4377, "dress" -> 4378, "audience" -> 4379, 
                    "granted" -> 4380, "brazil" -> 4381, "##well" -> 4382, 
                    "spirit" -> 4383, "##ated" -> 4384, "noticed" -> 4385, 
                    "etc" -> 4386, "olympic" -> 4387, "representative" -> 
                    4388, "eric" -> 4389, "tight" -> 4390, "trouble" -> 4391, 
                    "reviews" -> 4392, "drink" -> 4393, "vampire" -> 4394, 
                    "missing" -> 4395, "roles" -> 4396, "ranked" -> 4397, 
                    "newly" -> 4398, "household" -> 4399, "finals" -> 4400, 
                    "wave" -> 4401, "critics" -> 4402, "##ee" -> 4403, 
                    "phase" -> 4404, "massachusetts" -> 4405, "pilot" -> 4406,
                     "unlike" -> 4407, "philadelphia" -> 4408, "bright" -> 
                    4409, "guns" -> 4410, "crown" -> 4411, "organizations" -> 
                    4412, "roof" -> 4413, "42" -> 4414, "respectively" -> 
                    4415, "clearly" -> 4416, "tongue" -> 4417, "marked" -> 
                    4418, "circle" -> 4419, "fox" -> 4420, "korea" -> 4421, 
                    "bronze" -> 4422, "brian" -> 4423, "expanded" -> 4424, 
                    "sexual" -> 4425, "supply" -> 4426, "yourself" -> 4427, 
                    "inspired" -> 4428, "labour" -> 4429, "fc" -> 4430, 
                    "##ah" -> 4431, "reference" -> 4432, "vision" -> 4433, 
                    "draft" -> 4434, "connection" -> 4435, "brand" -> 4436, 
                    "reasons" -> 4437, "1935" -> 4438, "classic" -> 4439, 
                    "driving" -> 4440, "trip" -> 4441, "jesus" -> 4442, 
                    "cells" -> 4443, "entry" -> 4444, "1920" -> 4445, 
                    "neither" -> 4446, "trail" -> 4447, "claims" -> 4448, 
                    "atlantic" -> 4449, "orders" -> 4450, "labor" -> 4451, 
                    "nose" -> 4452, "afraid" -> 4453, "identified" -> 4454, 
                    "intelligence" -> 4455, "calls" -> 4456, "cancer" -> 4457,
                     "attacked" -> 4458, "passing" -> 4459, "stephen" -> 4460,
                     "positions" -> 4461, "imperial" -> 4462, "grey" -> 4463, 
                    "jason" -> 4464, "39" -> 4465, "sunday" -> 4466, "48" -> 
                    4467, "swedish" -> 4468, "avoid" -> 4469, "extra" -> 4470,
                     "uncle" -> 4471, "message" -> 4472, "covers" -> 4473, 
                    "allows" -> 4474, "surprise" -> 4475, "materials" -> 4476,
                     "fame" -> 4477, "hunter" -> 4478, "##ji" -> 4479, "1930" -> 
                    4480, "citizens" -> 4481, "figures" -> 4482, "davis" -> 
                    4483, "environmental" -> 4484, "confirmed" -> 4485, 
                    "shit" -> 4486, "titles" -> 4487, "di" -> 4488, 
                    "performing" -> 4489, "difference" -> 4490, "acts" -> 
                    4491, "attacks" -> 4492, "##ov" -> 4493, "existing" -> 
                    4494, "votes" -> 4495, "opportunity" -> 4496, "nor" -> 
                    4497, "shop" -> 4498, "entirely" -> 4499, "trains" -> 
                    4500, "opposite" -> 4501, "pakistan" -> 4502, "##pa" -> 
                    4503, "develop" -> 4504, "resulted" -> 4505, 
                    "representatives" -> 4506, "actions" -> 4507, "reality" -> 
                    4508, "pressed" -> 4509, "##ish" -> 4510, "barely" -> 
                    4511, "wine" -> 4512, "conversation" -> 4513, "faculty" -> 
                    4514, "northwest" -> 4515, "ends" -> 4516, "documentary" -> 
                    4517, "nuclear" -> 4518, "stock" -> 4519, "grace" -> 4520,
                     "sets" -> 4521, "eat" -> 4522, "alternative" -> 4523, 
                    "##ps" -> 4524, "bag" -> 4525, "resulting" -> 4526, 
                    "creating" -> 4527, "surprised" -> 4528, "cemetery" -> 
                    4529, "1919" -> 4530, "drop" -> 4531, "finding" -> 4532, 
                    "sarah" -> 4533, "cricket" -> 4534, "streets" -> 4535, 
                    "tradition" -> 4536, "ride" -> 4537, "1933" -> 4538, 
                    "exhibition" -> 4539, "target" -> 4540, "ear" -> 4541, 
                    "explained" -> 4542, "rain" -> 4543, "composer" -> 4544, 
                    "injury" -> 4545, "apartment" -> 4546, "municipal" -> 
                    4547, "educational" -> 4548, "occupied" -> 4549, 
                    "netherlands" -> 4550, "clean" -> 4551, "billion" -> 4552,
                     "constitution" -> 4553, "learn" -> 4554, "1914" -> 4555, 
                    "maximum" -> 4556, "classical" -> 4557, "francis" -> 4558,
                     "lose" -> 4559, "opposition" -> 4560, "jose" -> 4561, 
                    "ontario" -> 4562, "bear" -> 4563, "core" -> 4564, 
                    "hills" -> 4565, "rolled" -> 4566, "ending" -> 4567, 
                    "drawn" -> 4568, "permanent" -> 4569, "fun" -> 4570, 
                    "##tes" -> 4571, "##lla" -> 4572, "lewis" -> 4573, 
                    "sites" -> 4574, "chamber" -> 4575, "ryan" -> 4576, 
                    "##way" -> 4577, "scoring" -> 4578, "height" -> 4579, 
                    "1934" -> 4580, "##house" -> 4581, "lyrics" -> 4582, 
                    "staring" -> 4583, "55" -> 4584, "officials" -> 4585, 
                    "1917" -> 4586, "snow" -> 4587, "oldest" -> 4588, "##tic" -> 
                    4589, "orange" -> 4590, "##ger" -> 4591, "qualified" -> 
                    4592, "interior" -> 4593, "apparently" -> 4594, 
                    "succeeded" -> 4595, "thousand" -> 4596, "dinner" -> 4597,
                     "lights" -> 4598, "existence" -> 4599, "fans" -> 4600, 
                    "heavily" -> 4601, "41" -> 4602, "greatest" -> 4603, 
                    "conservative" -> 4604, "send" -> 4605, "bowl" -> 4606, 
                    "plus" -> 4607, "enter" -> 4608, "catch" -> 4609, "##un" -> 
                    4610, "economy" -> 4611, "duty" -> 4612, "1929" -> 4613, 
                    "speech" -> 4614, "authorities" -> 4615, "princess" -> 
                    4616, "performances" -> 4617, "versions" -> 4618, "shall" -> 
                    4619, "graduate" -> 4620, "pictures" -> 4621, "effective" -> 
                    4622, "remembered" -> 4623, "poetry" -> 4624, "desk" -> 
                    4625, "crossed" -> 4626, "starring" -> 4627, "starts" -> 
                    4628, "passenger" -> 4629, "sharp" -> 4630, "##ant" -> 
                    4631, "acres" -> 4632, "ass" -> 4633, "weather" -> 4634, 
                    "falling" -> 4635, "rank" -> 4636, "fund" -> 4637, 
                    "supporting" -> 4638, "check" -> 4639, "adult" -> 4640, 
                    "publishing" -> 4641, "heads" -> 4642, "cm" -> 4643, 
                    "southeast" -> 4644, "lane" -> 4645, "##burg" -> 4646, 
                    "application" -> 4647, "bc" -> 4648, "##ura" -> 4649, 
                    "les" -> 4650, "condition" -> 4651, "transfer" -> 4652, 
                    "prevent" -> 4653, "display" -> 4654, "ex" -> 4655, 
                    "regions" -> 4656, "earl" -> 4657, "federation" -> 4658, 
                    "cool" -> 4659, "relatively" -> 4660, "answered" -> 4661, 
                    "besides" -> 4662, "1928" -> 4663, "obtained" -> 4664, 
                    "portion" -> 4665, "##town" -> 4666, "mix" -> 4667, 
                    "##ding" -> 4668, "reaction" -> 4669, "liked" -> 4670, 
                    "dean" -> 4671, "express" -> 4672, "peak" -> 4673, "1932" -> 
                    4674, "##tte" -> 4675, "counter" -> 4676, "religion" -> 
                    4677, "chain" -> 4678, "rare" -> 4679, "miller" -> 4680, 
                    "convention" -> 4681, "aid" -> 4682, "lie" -> 4683, 
                    "vehicles" -> 4684, "mobile" -> 4685, "perform" -> 4686, 
                    "squad" -> 4687, "wonder" -> 4688, "lying" -> 4689, 
                    "crazy" -> 4690, "sword" -> 4691, "##ping" -> 4692, 
                    "attempted" -> 4693, "centuries" -> 4694, "weren" -> 4695,
                     "philosophy" -> 4696, "category" -> 4697, "##ize" -> 
                    4698, "anna" -> 4699, "interested" -> 4700, "47" -> 4701, 
                    "sweden" -> 4702, "wolf" -> 4703, "frequently" -> 4704, 
                    "abandoned" -> 4705, "kg" -> 4706, "literary" -> 4707, 
                    "alliance" -> 4708, "task" -> 4709, "entitled" -> 4710, 
                    "##ay" -> 4711, "threw" -> 4712, "promotion" -> 4713, 
                    "factory" -> 4714, "tiny" -> 4715, "soccer" -> 4716, 
                    "visited" -> 4717, "matt" -> 4718, "fm" -> 4719, 
                    "achieved" -> 4720, "52" -> 4721, "defence" -> 4722, 
                    "internal" -> 4723, "persian" -> 4724, "43" -> 4725, 
                    "methods" -> 4726, "##ging" -> 4727, "arrested" -> 4728, 
                    "otherwise" -> 4729, "cambridge" -> 4730, "programming" -> 
                    4731, "villages" -> 4732, "elementary" -> 4733, 
                    "districts" -> 4734, "rooms" -> 4735, "criminal" -> 4736, 
                    "conflict" -> 4737, "worry" -> 4738, "trained" -> 4739, 
                    "1931" -> 4740, "attempts" -> 4741, "waited" -> 4742, 
                    "signal" -> 4743, "bird" -> 4744, "truck" -> 4745, 
                    "subsequent" -> 4746, "programme" -> 4747, "##ol" -> 4748,
                     "ad" -> 4749, "49" -> 4750, "communist" -> 4751, 
                    "details" -> 4752, "faith" -> 4753, "sector" -> 4754, 
                    "patrick" -> 4755, "carrying" -> 4756, "laugh" -> 4757, 
                    "##ss" -> 4758, "controlled" -> 4759, "korean" -> 4760, 
                    "showing" -> 4761, "origin" -> 4762, "fuel" -> 4763, 
                    "evil" -> 4764, "1927" -> 4765, "##ent" -> 4766, "brief" -> 
                    4767, "identity" -> 4768, "darkness" -> 4769, "address" -> 
                    4770, "pool" -> 4771, "missed" -> 4772, "publication" -> 
                    4773, "web" -> 4774, "planet" -> 4775, "ian" -> 4776, 
                    "anne" -> 4777, "wings" -> 4778, "invited" -> 4779, 
                    "##tt" -> 4780, "briefly" -> 4781, "standards" -> 4782, 
                    "kissed" -> 4783, "##be" -> 4784, "ideas" -> 4785, 
                    "climate" -> 4786, "causing" -> 4787, "walter" -> 4788, 
                    "worse" -> 4789, "albert" -> 4790, "articles" -> 4791, 
                    "winners" -> 4792, "desire" -> 4793, "aged" -> 4794, 
                    "northeast" -> 4795, "dangerous" -> 4796, "gate" -> 4797, 
                    "doubt" -> 4798, "1922" -> 4799, "wooden" -> 4800, 
                    "multi" -> 4801, "##ky" -> 4802, "poet" -> 4803, "rising" -> 
                    4804, "funding" -> 4805, "46" -> 4806, "communications" -> 
                    4807, "communication" -> 4808, "violence" -> 4809, 
                    "copies" -> 4810, "prepared" -> 4811, "ford" -> 4812, 
                    "investigation" -> 4813, "skills" -> 4814, "1924" -> 4815,
                     "pulling" -> 4816, "electronic" -> 4817, "##ak" -> 4818, 
                    "##ial" -> 4819, "##han" -> 4820, "containing" -> 4821, 
                    "ultimately" -> 4822, "offices" -> 4823, "singing" -> 
                    4824, "understanding" -> 4825, "restaurant" -> 4826, 
                    "tomorrow" -> 4827, "fashion" -> 4828, "christ" -> 4829, 
                    "ward" -> 4830, "da" -> 4831, "pope" -> 4832, "stands" -> 
                    4833, "5th" -> 4834, "flow" -> 4835, "studios" -> 4836, 
                    "aired" -> 4837, "commissioned" -> 4838, "contained" -> 
                    4839, "exist" -> 4840, "fresh" -> 4841, "americans" -> 
                    4842, "##per" -> 4843, "wrestling" -> 4844, "approved" -> 
                    4845, "kid" -> 4846, "employed" -> 4847, "respect" -> 
                    4848, "suit" -> 4849, "1925" -> 4850, "angel" -> 4851, 
                    "asking" -> 4852, "increasing" -> 4853, "frame" -> 4854, 
                    "angry" -> 4855, "selling" -> 4856, "1950s" -> 4857, 
                    "thin" -> 4858, "finds" -> 4859, "##nd" -> 4860, 
                    "temperature" -> 4861, "statement" -> 4862, "ali" -> 4863,
                     "explain" -> 4864, "inhabitants" -> 4865, "towns" -> 
                    4866, "extensive" -> 4867, "narrow" -> 4868, "51" -> 4869,
                     "jane" -> 4870, "flowers" -> 4871, "images" -> 4872, 
                    "promise" -> 4873, "somewhere" -> 4874, "object" -> 4875, 
                    "fly" -> 4876, "closely" -> 4877, "##ls" -> 4878, "1912" -> 
                    4879, "bureau" -> 4880, "cape" -> 4881, "1926" -> 4882, 
                    "weekly" -> 4883, "presidential" -> 4884, "legislative" -> 
                    4885, "1921" -> 4886, "##ai" -> 4887, "##au" -> 4888, 
                    "launch" -> 4889, "founding" -> 4890, "##ny" -> 4891, 
                    "978" -> 4892, "##ring" -> 4893, "artillery" -> 4894, 
                    "strike" -> 4895, "un" -> 4896, "institutions" -> 4897, 
                    "roll" -> 4898, "writers" -> 4899, "landing" -> 4900, 
                    "chose" -> 4901, "kevin" -> 4902, "anymore" -> 4903, "pp" -> 
                    4904, "##ut" -> 4905, "attorney" -> 4906, "fit" -> 4907, 
                    "dan" -> 4908, "billboard" -> 4909, "receiving" -> 4910, 
                    "agricultural" -> 4911, "breaking" -> 4912, "sought" -> 
                    4913, "dave" -> 4914, "admitted" -> 4915, "lands" -> 4916,
                     "mexican" -> 4917, "##bury" -> 4918, "charlie" -> 4919, 
                    "specifically" -> 4920, "hole" -> 4921, "iv" -> 4922, 
                    "howard" -> 4923, "credit" -> 4924, "moscow" -> 4925, 
                    "roads" -> 4926, "accident" -> 4927, "1923" -> 4928, 
                    "proved" -> 4929, "wear" -> 4930, "struck" -> 4931, "hey" -> 
                    4932, "guards" -> 4933, "stuff" -> 4934, "slid" -> 4935, 
                    "expansion" -> 4936, "1915" -> 4937, "cat" -> 4938, 
                    "anthony" -> 4939, "##kin" -> 4940, "melbourne" -> 4941, 
                    "opposed" -> 4942, "sub" -> 4943, "southwest" -> 4944, 
                    "architect" -> 4945, "failure" -> 4946, "plane" -> 4947, 
                    "1916" -> 4948, "##ron" -> 4949, "map" -> 4950, "camera" -> 
                    4951, "tank" -> 4952, "listen" -> 4953, "regarding" -> 
                    4954, "wet" -> 4955, "introduction" -> 4956, 
                    "metropolitan" -> 4957, "link" -> 4958, "ep" -> 4959, 
                    "fighter" -> 4960, "inch" -> 4961, "grown" -> 4962, 
                    "gene" -> 4963, "anger" -> 4964, "fixed" -> 4965, "buy" -> 
                    4966, "dvd" -> 4967, "khan" -> 4968, "domestic" -> 4969, 
                    "worldwide" -> 4970, "chapel" -> 4971, "mill" -> 4972, 
                    "functions" -> 4973, "examples" -> 4974, "##head" -> 4975,
                     "developing" -> 4976, "1910" -> 4977, "turkey" -> 4978, 
                    "hits" -> 4979, "pocket" -> 4980, "antonio" -> 4981, 
                    "papers" -> 4982, "grow" -> 4983, "unless" -> 4984, 
                    "circuit" -> 4985, "18th" -> 4986, "concerned" -> 4987, 
                    "attached" -> 4988, "journalist" -> 4989, "selection" -> 
                    4990, "journey" -> 4991, "converted" -> 4992, 
                    "provincial" -> 4993, "painted" -> 4994, "hearing" -> 
                    4995, "aren" -> 4996, "bands" -> 4997, "negative" -> 4998,
                     "aside" -> 4999, "wondered" -> 5000, "knight" -> 5001, 
                    "lap" -> 5002, "survey" -> 5003, "ma" -> 5004, "##ow" -> 
                    5005, "noise" -> 5006, "billy" -> 5007, "##ium" -> 5008, 
                    "shooting" -> 5009, "guide" -> 5010, "bedroom" -> 5011, 
                    "priest" -> 5012, "resistance" -> 5013, "motor" -> 5014, 
                    "homes" -> 5015, "sounded" -> 5016, "giant" -> 5017, 
                    "##mer" -> 5018, "150" -> 5019, "scenes" -> 5020, "equal" -> 
                    5021, "comic" -> 5022, "patients" -> 5023, "hidden" -> 
                    5024, "solid" -> 5025, "actual" -> 5026, "bringing" -> 
                    5027, "afternoon" -> 5028, "touched" -> 5029, "funds" -> 
                    5030, "wedding" -> 5031, "consisted" -> 5032, "marie" -> 
                    5033, "canal" -> 5034, "sr" -> 5035, "kim" -> 5036, 
                    "treaty" -> 5037, "turkish" -> 5038, "recognition" -> 
                    5039, "residence" -> 5040, "cathedral" -> 5041, "broad" -> 
                    5042, "knees" -> 5043, "incident" -> 5044, "shaped" -> 
                    5045, "fired" -> 5046, "norwegian" -> 5047, "handle" -> 
                    5048, "cheek" -> 5049, "contest" -> 5050, "represent" -> 
                    5051, "##pe" -> 5052, "representing" -> 5053, "beauty" -> 
                    5054, "##sen" -> 5055, "birds" -> 5056, "advantage" -> 
                    5057, "emergency" -> 5058, "wrapped" -> 5059, "drawing" -> 
                    5060, "notice" -> 5061, "pink" -> 5062, "broadcasting" -> 
                    5063, "##ong" -> 5064, "somehow" -> 5065, "bachelor" -> 
                    5066, "seventh" -> 5067, "collected" -> 5068, 
                    "registered" -> 5069, "establishment" -> 5070, "alan" -> 
                    5071, "assumed" -> 5072, "chemical" -> 5073, "personnel" -> 
                    5074, "roger" -> 5075, "retirement" -> 5076, "jeff" -> 
                    5077, "portuguese" -> 5078, "wore" -> 5079, "tied" -> 
                    5080, "device" -> 5081, "threat" -> 5082, "progress" -> 
                    5083, "advance" -> 5084, "##ised" -> 5085, "banks" -> 
                    5086, "hired" -> 5087, "manchester" -> 5088, "nfl" -> 
                    5089, "teachers" -> 5090, "structures" -> 5091, "forever" -> 
                    5092, "##bo" -> 5093, "tennis" -> 5094, "helping" -> 5095,
                     "saturday" -> 5096, "sale" -> 5097, "applications" -> 
                    5098, "junction" -> 5099, "hip" -> 5100, "incorporated" -> 
                    5101, "neighborhood" -> 5102, "dressed" -> 5103, 
                    "ceremony" -> 5104, "##ds" -> 5105, "influenced" -> 5106, 
                    "hers" -> 5107, "visual" -> 5108, "stairs" -> 5109, 
                    "decades" -> 5110, "inner" -> 5111, "kansas" -> 5112, 
                    "hung" -> 5113, "hoped" -> 5114, "gain" -> 5115, 
                    "scheduled" -> 5116, "downtown" -> 5117, "engaged" -> 
                    5118, "austria" -> 5119, "clock" -> 5120, "norway" -> 
                    5121, "certainly" -> 5122, "pale" -> 5123, "protected" -> 
                    5124, "1913" -> 5125, "victor" -> 5126, "employees" -> 
                    5127, "plate" -> 5128, "putting" -> 5129, "surrounded" -> 
                    5130, "##ists" -> 5131, "finishing" -> 5132, "blues" -> 
                    5133, "tropical" -> 5134, "##ries" -> 5135, "minnesota" -> 
                    5136, "consider" -> 5137, "philippines" -> 5138, "accept" -> 
                    5139, "54" -> 5140, "retrieved" -> 5141, "1900" -> 5142, 
                    "concern" -> 5143, "anderson" -> 5144, "properties" -> 
                    5145, "institution" -> 5146, "gordon" -> 5147, 
                    "successfully" -> 5148, "vietnam" -> 5149, "##dy" -> 5150,
                     "backing" -> 5151, "outstanding" -> 5152, "muslim" -> 
                    5153, "crossing" -> 5154, "folk" -> 5155, "producing" -> 
                    5156, "usual" -> 5157, "demand" -> 5158, "occurs" -> 5159,
                     "observed" -> 5160, "lawyer" -> 5161, "educated" -> 5162,
                     "##ana" -> 5163, "kelly" -> 5164, "string" -> 5165, 
                    "pleasure" -> 5166, "budget" -> 5167, "items" -> 5168, 
                    "quietly" -> 5169, "colorado" -> 5170, "philip" -> 5171, 
                    "typical" -> 5172, "##worth" -> 5173, "derived" -> 5174, 
                    "600" -> 5175, "survived" -> 5176, "asks" -> 5177, 
                    "mental" -> 5178, "##ide" -> 5179, "56" -> 5180, "jake" -> 
                    5181, "jews" -> 5182, "distinguished" -> 5183, "ltd" -> 
                    5184, "1911" -> 5185, "sri" -> 5186, "extremely" -> 5187, 
                    "53" -> 5188, "athletic" -> 5189, "loud" -> 5190, 
                    "thousands" -> 5191, "worried" -> 5192, "shadow" -> 5193, 
                    "transportation" -> 5194, "horses" -> 5195, "weapon" -> 
                    5196, "arena" -> 5197, "importance" -> 5198, "users" -> 
                    5199, "tim" -> 5200, "objects" -> 5201, "contributed" -> 
                    5202, "dragon" -> 5203, "douglas" -> 5204, "aware" -> 
                    5205, "senator" -> 5206, "johnny" -> 5207, "jordan" -> 
                    5208, "sisters" -> 5209, "engines" -> 5210, "flag" -> 
                    5211, "investment" -> 5212, "samuel" -> 5213, "shock" -> 
                    5214, "capable" -> 5215, "clark" -> 5216, "row" -> 5217, 
                    "wheel" -> 5218, "refers" -> 5219, "session" -> 5220, 
                    "familiar" -> 5221, "biggest" -> 5222, "wins" -> 5223, 
                    "hate" -> 5224, "maintained" -> 5225, "drove" -> 5226, 
                    "hamilton" -> 5227, "request" -> 5228, "expressed" -> 
                    5229, "injured" -> 5230, "underground" -> 5231, 
                    "churches" -> 5232, "walker" -> 5233, "wars" -> 5234, 
                    "tunnel" -> 5235, "passes" -> 5236, "stupid" -> 5237, 
                    "agriculture" -> 5238, "softly" -> 5239, "cabinet" -> 
                    5240, "regarded" -> 5241, "joining" -> 5242, "indiana" -> 
                    5243, "##ea" -> 5244, "##ms" -> 5245, "push" -> 5246, 
                    "dates" -> 5247, "spend" -> 5248, "behavior" -> 5249, 
                    "woods" -> 5250, "protein" -> 5251, "gently" -> 5252, 
                    "chase" -> 5253, "morgan" -> 5254, "mention" -> 5255, 
                    "burning" -> 5256, "wake" -> 5257, "combination" -> 5258, 
                    "occur" -> 5259, "mirror" -> 5260, "leads" -> 5261, 
                    "jimmy" -> 5262, "indeed" -> 5263, "impossible" -> 5264, 
                    "singapore" -> 5265, "paintings" -> 5266, "covering" -> 
                    5267, "##nes" -> 5268, "soldier" -> 5269, "locations" -> 
                    5270, "attendance" -> 5271, "sell" -> 5272, "historian" -> 
                    5273, "wisconsin" -> 5274, "invasion" -> 5275, "argued" -> 
                    5276, "painter" -> 5277, "diego" -> 5278, "changing" -> 
                    5279, "egypt" -> 5280, "##don" -> 5281, "experienced" -> 
                    5282, "inches" -> 5283, "##ku" -> 5284, "missouri" -> 
                    5285, "vol" -> 5286, "grounds" -> 5287, "spoken" -> 5288, 
                    "switzerland" -> 5289, "##gan" -> 5290, "reform" -> 5291, 
                    "rolling" -> 5292, "ha" -> 5293, "forget" -> 5294, 
                    "massive" -> 5295, "resigned" -> 5296, "burned" -> 5297, 
                    "allen" -> 5298, "tennessee" -> 5299, "locked" -> 5300, 
                    "values" -> 5301, "improved" -> 5302, "##mo" -> 5303, 
                    "wounded" -> 5304, "universe" -> 5305, "sick" -> 5306, 
                    "dating" -> 5307, "facing" -> 5308, "pack" -> 5309, 
                    "purchase" -> 5310, "user" -> 5311, "##pur" -> 5312, 
                    "moments" -> 5313, "##ul" -> 5314, "merged" -> 5315, 
                    "anniversary" -> 5316, "1908" -> 5317, "coal" -> 5318, 
                    "brick" -> 5319, "understood" -> 5320, "causes" -> 5321, 
                    "dynasty" -> 5322, "queensland" -> 5323, "establish" -> 
                    5324, "stores" -> 5325, "crisis" -> 5326, "promote" -> 
                    5327, "hoping" -> 5328, "views" -> 5329, "cards" -> 5330, 
                    "referee" -> 5331, "extension" -> 5332, "##si" -> 5333, 
                    "raise" -> 5334, "arizona" -> 5335, "improve" -> 5336, 
                    "colonial" -> 5337, "formal" -> 5338, "charged" -> 5339, 
                    "##rt" -> 5340, "palm" -> 5341, "lucky" -> 5342, "hide" -> 
                    5343, "rescue" -> 5344, "faces" -> 5345, "95" -> 5346, 
                    "feelings" -> 5347, "candidates" -> 5348, "juan" -> 5349, 
                    "##ell" -> 5350, "goods" -> 5351, "6th" -> 5352, 
                    "courses" -> 5353, "weekend" -> 5354, "59" -> 5355, 
                    "luke" -> 5356, "cash" -> 5357, "fallen" -> 5358, "##om" -> 
                    5359, "delivered" -> 5360, "affected" -> 5361, 
                    "installed" -> 5362, "carefully" -> 5363, "tries" -> 5364,
                     "swiss" -> 5365, "hollywood" -> 5366, "costs" -> 5367, 
                    "lincoln" -> 5368, "responsibility" -> 5369, "##he" -> 
                    5370, "shore" -> 5371, "file" -> 5372, "proper" -> 5373, 
                    "normally" -> 5374, "maryland" -> 5375, "assistance" -> 
                    5376, "jump" -> 5377, "constant" -> 5378, "offering" -> 
                    5379, "friendly" -> 5380, "waters" -> 5381, "persons" -> 
                    5382, "realize" -> 5383, "contain" -> 5384, "trophy" -> 
                    5385, "800" -> 5386, "partnership" -> 5387, "factor" -> 
                    5388, "58" -> 5389, "musicians" -> 5390, "cry" -> 5391, 
                    "bound" -> 5392, "oregon" -> 5393, "indicated" -> 5394, 
                    "hero" -> 5395, "houston" -> 5396, "medium" -> 5397, 
                    "##ure" -> 5398, "consisting" -> 5399, "somewhat" -> 5400,
                     "##ara" -> 5401, "57" -> 5402, "cycle" -> 5403, "##che" -> 
                    5404, "beer" -> 5405, "moore" -> 5406, "frederick" -> 
                    5407, "gotten" -> 5408, "eleven" -> 5409, "worst" -> 5410,
                     "weak" -> 5411, "approached" -> 5412, "arranged" -> 5413,
                     "chin" -> 5414, "loan" -> 5415, "universal" -> 5416, 
                    "bond" -> 5417, "fifteen" -> 5418, "pattern" -> 5419, 
                    "disappeared" -> 5420, "##ney" -> 5421, "translated" -> 
                    5422, "##zed" -> 5423, "lip" -> 5424, "arab" -> 5425, 
                    "capture" -> 5426, "interests" -> 5427, "insurance" -> 
                    5428, "##chi" -> 5429, "shifted" -> 5430, "cave" -> 5431, 
                    "prix" -> 5432, "warning" -> 5433, "sections" -> 5434, 
                    "courts" -> 5435, "coat" -> 5436, "plot" -> 5437, "smell" -> 
                    5438, "feed" -> 5439, "golf" -> 5440, "favorite" -> 5441, 
                    "maintain" -> 5442, "knife" -> 5443, "vs" -> 5444, 
                    "voted" -> 5445, "degrees" -> 5446, "finance" -> 5447, 
                    "quebec" -> 5448, "opinion" -> 5449, "translation" -> 
                    5450, "manner" -> 5451, "ruled" -> 5452, "operate" -> 
                    5453, "productions" -> 5454, "choose" -> 5455, "musician" -> 
                    5456, "discovery" -> 5457, "confused" -> 5458, "tired" -> 
                    5459, "separated" -> 5460, "stream" -> 5461, "techniques" -> 
                    5462, "committed" -> 5463, "attend" -> 5464, "ranking" -> 
                    5465, "kings" -> 5466, "throw" -> 5467, "passengers" -> 
                    5468, "measure" -> 5469, "horror" -> 5470, "fan" -> 5471, 
                    "mining" -> 5472, "sand" -> 5473, "danger" -> 5474, 
                    "salt" -> 5475, "calm" -> 5476, "decade" -> 5477, "dam" -> 
                    5478, "require" -> 5479, "runner" -> 5480, "##ik" -> 5481,
                     "rush" -> 5482, "associate" -> 5483, "greece" -> 5484, 
                    "##ker" -> 5485, "rivers" -> 5486, "consecutive" -> 5487, 
                    "matthew" -> 5488, "##ski" -> 5489, "sighed" -> 5490, 
                    "sq" -> 5491, "documents" -> 5492, "steam" -> 5493, 
                    "edited" -> 5494, "closing" -> 5495, "tie" -> 5496, 
                    "accused" -> 5497, "1905" -> 5498, "##ini" -> 5499, 
                    "islamic" -> 5500, "distributed" -> 5501, "directors" -> 
                    5502, "organisation" -> 5503, "bruce" -> 5504, "7th" -> 
                    5505, "breathing" -> 5506, "mad" -> 5507, "lit" -> 5508, 
                    "arrival" -> 5509, "concrete" -> 5510, "taste" -> 5511, 
                    "08" -> 5512, "composition" -> 5513, "shaking" -> 5514, 
                    "faster" -> 5515, "amateur" -> 5516, "adjacent" -> 5517, 
                    "stating" -> 5518, "1906" -> 5519, "twin" -> 5520, "flew" -> 
                    5521, "##ran" -> 5522, "tokyo" -> 5523, "publications" -> 
                    5524, "##tone" -> 5525, "obviously" -> 5526, "ridge" -> 
                    5527, "storage" -> 5528, "1907" -> 5529, "carl" -> 5530, 
                    "pages" -> 5531, "concluded" -> 5532, "desert" -> 5533, 
                    "driven" -> 5534, "universities" -> 5535, "ages" -> 5536, 
                    "terminal" -> 5537, "sequence" -> 5538, "borough" -> 5539,
                     "250" -> 5540, "constituency" -> 5541, "creative" -> 
                    5542, "cousin" -> 5543, "economics" -> 5544, "dreams" -> 
                    5545, "margaret" -> 5546, "notably" -> 5547, "reduce" -> 
                    5548, "montreal" -> 5549, "mode" -> 5550, "17th" -> 5551, 
                    "ears" -> 5552, "saved" -> 5553, "jan" -> 5554, "vocal" -> 
                    5555, "##ica" -> 5556, "1909" -> 5557, "andy" -> 5558, 
                    "##jo" -> 5559, "riding" -> 5560, "roughly" -> 5561, 
                    "threatened" -> 5562, "##ise" -> 5563, "meters" -> 5564, 
                    "meanwhile" -> 5565, "landed" -> 5566, "compete" -> 5567, 
                    "repeated" -> 5568, "grass" -> 5569, "czech" -> 5570, 
                    "regularly" -> 5571, "charges" -> 5572, "tea" -> 5573, 
                    "sudden" -> 5574, "appeal" -> 5575, "##ung" -> 5576, 
                    "solution" -> 5577, "describes" -> 5578, "pierre" -> 5579,
                     "classification" -> 5580, "glad" -> 5581, "parking" -> 
                    5582, "##ning" -> 5583, "belt" -> 5584, "physics" -> 5585,
                     "99" -> 5586, "rachel" -> 5587, "add" -> 5588, 
                    "hungarian" -> 5589, "participate" -> 5590, "expedition" -> 
                    5591, "damaged" -> 5592, "gift" -> 5593, "childhood" -> 
                    5594, "85" -> 5595, "fifty" -> 5596, "##red" -> 5597, 
                    "mathematics" -> 5598, "jumped" -> 5599, "letting" -> 
                    5600, "defensive" -> 5601, "mph" -> 5602, "##ux" -> 5603, 
                    "##gh" -> 5604, "testing" -> 5605, "##hip" -> 5606, 
                    "hundreds" -> 5607, "shoot" -> 5608, "owners" -> 5609, 
                    "matters" -> 5610, "smoke" -> 5611, "israeli" -> 5612, 
                    "kentucky" -> 5613, "dancing" -> 5614, "mounted" -> 5615, 
                    "grandfather" -> 5616, "emma" -> 5617, "designs" -> 5618, 
                    "profit" -> 5619, "argentina" -> 5620, "##gs" -> 5621, 
                    "truly" -> 5622, "li" -> 5623, "lawrence" -> 5624, "cole" -> 
                    5625, "begun" -> 5626, "detroit" -> 5627, "willing" -> 
                    5628, "branches" -> 5629, "smiling" -> 5630, "decide" -> 
                    5631, "miami" -> 5632, "enjoyed" -> 5633, "recordings" -> 
                    5634, "##dale" -> 5635, "poverty" -> 5636, "ethnic" -> 
                    5637, "gay" -> 5638, "##bi" -> 5639, "gary" -> 5640, 
                    "arabic" -> 5641, "09" -> 5642, "accompanied" -> 5643, 
                    "##one" -> 5644, "##ons" -> 5645, "fishing" -> 5646, 
                    "determine" -> 5647, "residential" -> 5648, "acid" -> 
                    5649, "##ary" -> 5650, "alice" -> 5651, "returns" -> 5652,
                     "starred" -> 5653, "mail" -> 5654, "##ang" -> 5655, 
                    "jonathan" -> 5656, "strategy" -> 5657, "##ue" -> 5658, 
                    "net" -> 5659, "forty" -> 5660, "cook" -> 5661, 
                    "businesses" -> 5662, "equivalent" -> 5663, 
                    "commonwealth" -> 5664, "distinct" -> 5665, "ill" -> 5666,
                     "##cy" -> 5667, "seriously" -> 5668, "##ors" -> 5669, 
                    "##ped" -> 5670, "shift" -> 5671, "harris" -> 5672, 
                    "replace" -> 5673, "rio" -> 5674, "imagine" -> 5675, 
                    "formula" -> 5676, "ensure" -> 5677, "##ber" -> 5678, 
                    "additionally" -> 5679, "scheme" -> 5680, "conservation" -> 
                    5681, "occasionally" -> 5682, "purposes" -> 5683, "feels" -> 
                    5684, "favor" -> 5685, "##and" -> 5686, "##ore" -> 5687, 
                    "1930s" -> 5688, "contrast" -> 5689, "hanging" -> 5690, 
                    "hunt" -> 5691, "movies" -> 5692, "1904" -> 5693, 
                    "instruments" -> 5694, "victims" -> 5695, "danish" -> 
                    5696, "christopher" -> 5697, "busy" -> 5698, "demon" -> 
                    5699, "sugar" -> 5700, "earliest" -> 5701, "colony" -> 
                    5702, "studying" -> 5703, "balance" -> 5704, "duties" -> 
                    5705, "##ks" -> 5706, "belgium" -> 5707, "slipped" -> 
                    5708, "carter" -> 5709, "05" -> 5710, "visible" -> 5711, 
                    "stages" -> 5712, "iraq" -> 5713, "fifa" -> 5714, "##im" -> 
                    5715, "commune" -> 5716, "forming" -> 5717, "zero" -> 
                    5718, "07" -> 5719, "continuing" -> 5720, "talked" -> 
                    5721, "counties" -> 5722, "legend" -> 5723, "bathroom" -> 
                    5724, "option" -> 5725, "tail" -> 5726, "clay" -> 5727, 
                    "daughters" -> 5728, "afterwards" -> 5729, "severe" -> 
                    5730, "jaw" -> 5731, "visitors" -> 5732, "##ded" -> 5733, 
                    "devices" -> 5734, "aviation" -> 5735, "russell" -> 5736, 
                    "kate" -> 5737, "##vi" -> 5738, "entering" -> 5739, 
                    "subjects" -> 5740, "##ino" -> 5741, "temporary" -> 5742, 
                    "swimming" -> 5743, "forth" -> 5744, "smooth" -> 5745, 
                    "ghost" -> 5746, "audio" -> 5747, "bush" -> 5748, 
                    "operates" -> 5749, "rocks" -> 5750, "movements" -> 5751, 
                    "signs" -> 5752, "eddie" -> 5753, "##tz" -> 5754, "ann" -> 
                    5755, "voices" -> 5756, "honorary" -> 5757, "06" -> 5758, 
                    "memories" -> 5759, "dallas" -> 5760, "pure" -> 5761, 
                    "measures" -> 5762, "racial" -> 5763, "promised" -> 5764, 
                    "66" -> 5765, "harvard" -> 5766, "ceo" -> 5767, "16th" -> 
                    5768, "parliamentary" -> 5769, "indicate" -> 5770, 
                    "benefit" -> 5771, "flesh" -> 5772, "dublin" -> 5773, 
                    "louisiana" -> 5774, "1902" -> 5775, "1901" -> 5776, 
                    "patient" -> 5777, "sleeping" -> 5778, "1903" -> 5779, 
                    "membership" -> 5780, "coastal" -> 5781, "medieval" -> 
                    5782, "wanting" -> 5783, "element" -> 5784, "scholars" -> 
                    5785, "rice" -> 5786, "62" -> 5787, "limit" -> 5788, 
                    "survive" -> 5789, "makeup" -> 5790, "rating" -> 5791, 
                    "definitely" -> 5792, "collaboration" -> 5793, "obvious" -> 
                    5794, "##tan" -> 5795, "boss" -> 5796, "ms" -> 5797, 
                    "baron" -> 5798, "birthday" -> 5799, "linked" -> 5800, 
                    "soil" -> 5801, "diocese" -> 5802, "##lan" -> 5803, 
                    "ncaa" -> 5804, "##mann" -> 5805, "offensive" -> 5806, 
                    "shell" -> 5807, "shouldn" -> 5808, "waist" -> 5809, 
                    "##tus" -> 5810, "plain" -> 5811, "ross" -> 5812, "organ" -> 
                    5813, "resolution" -> 5814, "manufacturing" -> 5815, 
                    "adding" -> 5816, "relative" -> 5817, "kennedy" -> 5818, 
                    "98" -> 5819, "whilst" -> 5820, "moth" -> 5821, 
                    "marketing" -> 5822, "gardens" -> 5823, "crash" -> 5824, 
                    "72" -> 5825, "heading" -> 5826, "partners" -> 5827, 
                    "credited" -> 5828, "carlos" -> 5829, "moves" -> 5830, 
                    "cable" -> 5831, "##zi" -> 5832, "marshall" -> 5833, 
                    "##out" -> 5834, "depending" -> 5835, "bottle" -> 5836, 
                    "represents" -> 5837, "rejected" -> 5838, "responded" -> 
                    5839, "existed" -> 5840, "04" -> 5841, "jobs" -> 5842, 
                    "denmark" -> 5843, "lock" -> 5844, "##ating" -> 5845, 
                    "treated" -> 5846, "graham" -> 5847, "routes" -> 5848, 
                    "talent" -> 5849, "commissioner" -> 5850, "drugs" -> 5851,
                     "secure" -> 5852, "tests" -> 5853, "reign" -> 5854, 
                    "restored" -> 5855, "photography" -> 5856, "##gi" -> 5857,
                     "contributions" -> 5858, "oklahoma" -> 5859, "designer" -> 
                    5860, "disc" -> 5861, "grin" -> 5862, "seattle" -> 5863, 
                    "robin" -> 5864, "paused" -> 5865, "atlanta" -> 5866, 
                    "unusual" -> 5867, "##gate" -> 5868, "praised" -> 5869, 
                    "las" -> 5870, "laughing" -> 5871, "satellite" -> 5872, 
                    "hungary" -> 5873, "visiting" -> 5874, "##sky" -> 5875, 
                    "interesting" -> 5876, "factors" -> 5877, "deck" -> 5878, 
                    "poems" -> 5879, "norman" -> 5880, "##water" -> 5881, 
                    "stuck" -> 5882, "speaker" -> 5883, "rifle" -> 5884, 
                    "domain" -> 5885, "premiered" -> 5886, "##her" -> 5887, 
                    "dc" -> 5888, "comics" -> 5889, "actors" -> 5890, "01" -> 
                    5891, "reputation" -> 5892, "eliminated" -> 5893, "8th" -> 
                    5894, "ceiling" -> 5895, "prisoners" -> 5896, "script" -> 
                    5897, "##nce" -> 5898, "leather" -> 5899, "austin" -> 
                    5900, "mississippi" -> 5901, "rapidly" -> 5902, "admiral" -> 
                    5903, "parallel" -> 5904, "charlotte" -> 5905, "guilty" -> 
                    5906, "tools" -> 5907, "gender" -> 5908, "divisions" -> 
                    5909, "fruit" -> 5910, "##bs" -> 5911, "laboratory" -> 
                    5912, "nelson" -> 5913, "fantasy" -> 5914, "marry" -> 
                    5915, "rapid" -> 5916, "aunt" -> 5917, "tribe" -> 5918, 
                    "requirements" -> 5919, "aspects" -> 5920, "suicide" -> 
                    5921, "amongst" -> 5922, "adams" -> 5923, "bone" -> 5924, 
                    "ukraine" -> 5925, "abc" -> 5926, "kick" -> 5927, "sees" -> 
                    5928, "edinburgh" -> 5929, "clothing" -> 5930, "column" -> 
                    5931, "rough" -> 5932, "gods" -> 5933, "hunting" -> 5934, 
                    "broadway" -> 5935, "gathered" -> 5936, "concerns" -> 
                    5937, "##ek" -> 5938, "spending" -> 5939, "ty" -> 5940, 
                    "12th" -> 5941, "snapped" -> 5942, "requires" -> 5943, 
                    "solar" -> 5944, "bones" -> 5945, "cavalry" -> 5946, 
                    "##tta" -> 5947, "iowa" -> 5948, "drinking" -> 5949, 
                    "waste" -> 5950, "index" -> 5951, "franklin" -> 5952, 
                    "charity" -> 5953, "thompson" -> 5954, "stewart" -> 5955, 
                    "tip" -> 5956, "flash" -> 5957, "landscape" -> 5958, 
                    "friday" -> 5959, "enjoy" -> 5960, "singh" -> 5961, 
                    "poem" -> 5962, "listening" -> 5963, "##back" -> 5964, 
                    "eighth" -> 5965, "fred" -> 5966, "differences" -> 5967, 
                    "adapted" -> 5968, "bomb" -> 5969, "ukrainian" -> 5970, 
                    "surgery" -> 5971, "corporate" -> 5972, "masters" -> 5973,
                     "anywhere" -> 5974, "##more" -> 5975, "waves" -> 5976, 
                    "odd" -> 5977, "sean" -> 5978, "portugal" -> 5979, 
                    "orleans" -> 5980, "dick" -> 5981, "debate" -> 5982, 
                    "kent" -> 5983, "eating" -> 5984, "puerto" -> 5985, 
                    "cleared" -> 5986, "96" -> 5987, "expect" -> 5988, 
                    "cinema" -> 5989, "97" -> 5990, "guitarist" -> 5991, 
                    "blocks" -> 5992, "electrical" -> 5993, "agree" -> 5994, 
                    "involving" -> 5995, "depth" -> 5996, "dying" -> 5997, 
                    "panel" -> 5998, "struggle" -> 5999, "##ged" -> 6000, 
                    "peninsula" -> 6001, "adults" -> 6002, "novels" -> 6003, 
                    "emerged" -> 6004, "vienna" -> 6005, "metro" -> 6006, 
                    "debuted" -> 6007, "shoes" -> 6008, "tamil" -> 6009, 
                    "songwriter" -> 6010, "meets" -> 6011, "prove" -> 6012, 
                    "beating" -> 6013, "instance" -> 6014, "heaven" -> 6015, 
                    "scared" -> 6016, "sending" -> 6017, "marks" -> 6018, 
                    "artistic" -> 6019, "passage" -> 6020, "superior" -> 6021,
                     "03" -> 6022, "significantly" -> 6023, "shopping" -> 
                    6024, "##tive" -> 6025, "retained" -> 6026, "##izing" -> 
                    6027, "malaysia" -> 6028, "technique" -> 6029, "cheeks" -> 
                    6030, "##ola" -> 6031, "warren" -> 6032, "maintenance" -> 
                    6033, "destroy" -> 6034, "extreme" -> 6035, "allied" -> 
                    6036, "120" -> 6037, "appearing" -> 6038, "##yn" -> 6039, 
                    "fill" -> 6040, "advice" -> 6041, "alabama" -> 6042, 
                    "qualifying" -> 6043, "policies" -> 6044, "cleveland" -> 
                    6045, "hat" -> 6046, "battery" -> 6047, "smart" -> 6048, 
                    "authors" -> 6049, "10th" -> 6050, "soundtrack" -> 6051, 
                    "acted" -> 6052, "dated" -> 6053, "lb" -> 6054, "glance" -> 
                    6055, "equipped" -> 6056, "coalition" -> 6057, "funny" -> 
                    6058, "outer" -> 6059, "ambassador" -> 6060, "roy" -> 
                    6061, "possibility" -> 6062, "couples" -> 6063, 
                    "campbell" -> 6064, "dna" -> 6065, "loose" -> 6066, 
                    "ethan" -> 6067, "supplies" -> 6068, "1898" -> 6069, 
                    "gonna" -> 6070, "88" -> 6071, "monster" -> 6072, "##res" -> 
                    6073, "shake" -> 6074, "agents" -> 6075, "frequency" -> 
                    6076, "springs" -> 6077, "dogs" -> 6078, "practices" -> 
                    6079, "61" -> 6080, "gang" -> 6081, "plastic" -> 6082, 
                    "easier" -> 6083, "suggests" -> 6084, "gulf" -> 6085, 
                    "blade" -> 6086, "exposed" -> 6087, "colors" -> 6088, 
                    "industries" -> 6089, "markets" -> 6090, "pan" -> 6091, 
                    "nervous" -> 6092, "electoral" -> 6093, "charts" -> 6094, 
                    "legislation" -> 6095, "ownership" -> 6096, "##idae" -> 
                    6097, "mac" -> 6098, "appointment" -> 6099, "shield" -> 
                    6100, "copy" -> 6101, "assault" -> 6102, "socialist" -> 
                    6103, "abbey" -> 6104, "monument" -> 6105, "license" -> 
                    6106, "throne" -> 6107, "employment" -> 6108, "jay" -> 
                    6109, "93" -> 6110, "replacement" -> 6111, "charter" -> 
                    6112, "cloud" -> 6113, "powered" -> 6114, "suffering" -> 
                    6115, "accounts" -> 6116, "oak" -> 6117, "connecticut" -> 
                    6118, "strongly" -> 6119, "wright" -> 6120, "colour" -> 
                    6121, "crystal" -> 6122, "13th" -> 6123, "context" -> 
                    6124, "welsh" -> 6125, "networks" -> 6126, "voiced" -> 
                    6127, "gabriel" -> 6128, "jerry" -> 6129, "##cing" -> 
                    6130, "forehead" -> 6131, "mp" -> 6132, "##ens" -> 6133, 
                    "manage" -> 6134, "schedule" -> 6135, "totally" -> 6136, 
                    "remix" -> 6137, "##ii" -> 6138, "forests" -> 6139, 
                    "occupation" -> 6140, "print" -> 6141, "nicholas" -> 6142,
                     "brazilian" -> 6143, "strategic" -> 6144, "vampires" -> 
                    6145, "engineers" -> 6146, "76" -> 6147, "roots" -> 6148, 
                    "seek" -> 6149, "correct" -> 6150, "instrumental" -> 6151,
                     "und" -> 6152, "alfred" -> 6153, "backed" -> 6154, "hop" -> 
                    6155, "##des" -> 6156, "stanley" -> 6157, "robinson" -> 
                    6158, "traveled" -> 6159, "wayne" -> 6160, "welcome" -> 
                    6161, "austrian" -> 6162, "achieve" -> 6163, "67" -> 6164,
                     "exit" -> 6165, "rates" -> 6166, "1899" -> 6167, "strip" -> 
                    6168, "whereas" -> 6169, "##cs" -> 6170, "sing" -> 6171, 
                    "deeply" -> 6172, "adventure" -> 6173, "bobby" -> 6174, 
                    "rick" -> 6175, "jamie" -> 6176, "careful" -> 6177, 
                    "components" -> 6178, "cap" -> 6179, "useful" -> 6180, 
                    "personality" -> 6181, "knee" -> 6182, "##shi" -> 6183, 
                    "pushing" -> 6184, "hosts" -> 6185, "02" -> 6186, 
                    "protest" -> 6187, "ca" -> 6188, "ottoman" -> 6189, 
                    "symphony" -> 6190, "##sis" -> 6191, "63" -> 6192, 
                    "boundary" -> 6193, "1890" -> 6194, "processes" -> 6195, 
                    "considering" -> 6196, "considerable" -> 6197, "tons" -> 
                    6198, "##work" -> 6199, "##ft" -> 6200, "##nia" -> 6201, 
                    "cooper" -> 6202, "trading" -> 6203, "dear" -> 6204, 
                    "conduct" -> 6205, "91" -> 6206, "illegal" -> 6207, 
                    "apple" -> 6208, "revolutionary" -> 6209, "holiday" -> 
                    6210, "definition" -> 6211, "harder" -> 6212, "##van" -> 
                    6213, "jacob" -> 6214, "circumstances" -> 6215, 
                    "destruction" -> 6216, "##lle" -> 6217, "popularity" -> 
                    6218, "grip" -> 6219, "classified" -> 6220, "liverpool" -> 
                    6221, "donald" -> 6222, "baltimore" -> 6223, "flows" -> 
                    6224, "seeking" -> 6225, "honour" -> 6226, "approval" -> 
                    6227, "92" -> 6228, "mechanical" -> 6229, "till" -> 6230, 
                    "happening" -> 6231, "statue" -> 6232, "critic" -> 6233, 
                    "increasingly" -> 6234, "immediate" -> 6235, "describe" -> 
                    6236, "commerce" -> 6237, "stare" -> 6238, "##ster" -> 
                    6239, "indonesia" -> 6240, "meat" -> 6241, "rounds" -> 
                    6242, "boats" -> 6243, "baker" -> 6244, "orthodox" -> 
                    6245, "depression" -> 6246, "formally" -> 6247, "worn" -> 
                    6248, "naked" -> 6249, "claire" -> 6250, "muttered" -> 
                    6251, "sentence" -> 6252, "11th" -> 6253, "emily" -> 6254,
                     "document" -> 6255, "77" -> 6256, "criticism" -> 6257, 
                    "wished" -> 6258, "vessel" -> 6259, "spiritual" -> 6260, 
                    "bent" -> 6261, "virgin" -> 6262, "parker" -> 6263, 
                    "minimum" -> 6264, "murray" -> 6265, "lunch" -> 6266, 
                    "danny" -> 6267, "printed" -> 6268, "compilation" -> 6269,
                     "keyboards" -> 6270, "false" -> 6271, "blow" -> 6272, 
                    "belonged" -> 6273, "68" -> 6274, "raising" -> 6275, "78" -> 
                    6276, "cutting" -> 6277, "##board" -> 6278, "pittsburgh" -> 
                    6279, "##up" -> 6280, "9th" -> 6281, "shadows" -> 6282, 
                    "81" -> 6283, "hated" -> 6284, "indigenous" -> 6285, 
                    "jon" -> 6286, "15th" -> 6287, "barry" -> 6288, "scholar" -> 
                    6289, "ah" -> 6290, "##zer" -> 6291, "oliver" -> 6292, 
                    "##gy" -> 6293, "stick" -> 6294, "susan" -> 6295, 
                    "meetings" -> 6296, "attracted" -> 6297, "spell" -> 6298, 
                    "romantic" -> 6299, "##ver" -> 6300, "ye" -> 6301, "1895" -> 
                    6302, "photo" -> 6303, "demanded" -> 6304, "customers" -> 
                    6305, "##ac" -> 6306, "1896" -> 6307, "logan" -> 6308, 
                    "revival" -> 6309, "keys" -> 6310, "modified" -> 6311, 
                    "commanded" -> 6312, "jeans" -> 6313, "##ious" -> 6314, 
                    "upset" -> 6315, "raw" -> 6316, "phil" -> 6317, 
                    "detective" -> 6318, "hiding" -> 6319, "resident" -> 6320,
                     "vincent" -> 6321, "##bly" -> 6322, "experiences" -> 
                    6323, "diamond" -> 6324, "defeating" -> 6325, "coverage" -> 
                    6326, "lucas" -> 6327, "external" -> 6328, "parks" -> 
                    6329, "franchise" -> 6330, "helen" -> 6331, "bible" -> 
                    6332, "successor" -> 6333, "percussion" -> 6334, 
                    "celebrated" -> 6335, "il" -> 6336, "lift" -> 6337, 
                    "profile" -> 6338, "clan" -> 6339, "romania" -> 6340, 
                    "##ied" -> 6341, "mills" -> 6342, "##su" -> 6343, 
                    "nobody" -> 6344, "achievement" -> 6345, "shrugged" -> 
                    6346, "fault" -> 6347, "1897" -> 6348, "rhythm" -> 6349, 
                    "initiative" -> 6350, "breakfast" -> 6351, "carbon" -> 
                    6352, "700" -> 6353, "69" -> 6354, "lasted" -> 6355, 
                    "violent" -> 6356, "74" -> 6357, "wound" -> 6358, "ken" -> 
                    6359, "killer" -> 6360, "gradually" -> 6361, "filmed" -> 
                    6362, "\[Degree]c" -> 6363, "dollars" -> 6364, 
                    "processing" -> 6365, "94" -> 6366, "remove" -> 6367, 
                    "criticized" -> 6368, "guests" -> 6369, "sang" -> 6370, 
                    "chemistry" -> 6371, "##vin" -> 6372, "legislature" -> 
                    6373, "disney" -> 6374, "##bridge" -> 6375, "uniform" -> 
                    6376, "escaped" -> 6377, "integrated" -> 6378, "proposal" -> 
                    6379, "purple" -> 6380, "denied" -> 6381, "liquid" -> 
                    6382, "karl" -> 6383, "influential" -> 6384, "morris" -> 
                    6385, "nights" -> 6386, "stones" -> 6387, "intense" -> 
                    6388, "experimental" -> 6389, "twisted" -> 6390, "71" -> 
                    6391, "84" -> 6392, "##ld" -> 6393, "pace" -> 6394, 
                    "nazi" -> 6395, "mitchell" -> 6396, "ny" -> 6397, "blind" -> 
                    6398, "reporter" -> 6399, "newspapers" -> 6400, "14th" -> 
                    6401, "centers" -> 6402, "burn" -> 6403, "basin" -> 6404, 
                    "forgotten" -> 6405, "surviving" -> 6406, "filed" -> 6407,
                     "collections" -> 6408, "monastery" -> 6409, "losses" -> 
                    6410, "manual" -> 6411, "couch" -> 6412, "description" -> 
                    6413, "appropriate" -> 6414, "merely" -> 6415, "tag" -> 
                    6416, "missions" -> 6417, "sebastian" -> 6418, 
                    "restoration" -> 6419, "replacing" -> 6420, "triple" -> 
                    6421, "73" -> 6422, "elder" -> 6423, "julia" -> 6424, 
                    "warriors" -> 6425, "benjamin" -> 6426, "julian" -> 6427, 
                    "convinced" -> 6428, "stronger" -> 6429, "amazing" -> 
                    6430, "declined" -> 6431, "versus" -> 6432, "merchant" -> 
                    6433, "happens" -> 6434, "output" -> 6435, "finland" -> 
                    6436, "bare" -> 6437, "barbara" -> 6438, "absence" -> 
                    6439, "ignored" -> 6440, "dawn" -> 6441, "injuries" -> 
                    6442, "##port" -> 6443, "producers" -> 6444, "##ram" -> 
                    6445, "82" -> 6446, "luis" -> 6447, "##ities" -> 6448, 
                    "kw" -> 6449, "admit" -> 6450, "expensive" -> 6451, 
                    "electricity" -> 6452, "nba" -> 6453, "exception" -> 6454,
                     "symbol" -> 6455, "##ving" -> 6456, "ladies" -> 6457, 
                    "shower" -> 6458, "sheriff" -> 6459, "characteristics" -> 
                    6460, "##je" -> 6461, "aimed" -> 6462, "button" -> 6463, 
                    "ratio" -> 6464, "effectively" -> 6465, "summit" -> 6466, 
                    "angle" -> 6467, "jury" -> 6468, "bears" -> 6469, 
                    "foster" -> 6470, "vessels" -> 6471, "pants" -> 6472, 
                    "executed" -> 6473, "evans" -> 6474, "dozen" -> 6475, 
                    "advertising" -> 6476, "kicked" -> 6477, "patrol" -> 6478,
                     "1889" -> 6479, "competitions" -> 6480, "lifetime" -> 
                    6481, "principles" -> 6482, "athletics" -> 6483, "##logy" -> 
                    6484, "birmingham" -> 6485, "sponsored" -> 6486, "89" -> 
                    6487, "rob" -> 6488, "nomination" -> 6489, "1893" -> 6490,
                     "acoustic" -> 6491, "##sm" -> 6492, "creature" -> 6493, 
                    "longest" -> 6494, "##tra" -> 6495, "credits" -> 6496, 
                    "harbor" -> 6497, "dust" -> 6498, "josh" -> 6499, "##so" -> 
                    6500, "territories" -> 6501, "milk" -> 6502, 
                    "infrastructure" -> 6503, "completion" -> 6504, 
                    "thailand" -> 6505, "indians" -> 6506, "leon" -> 6507, 
                    "archbishop" -> 6508, "##sy" -> 6509, "assist" -> 6510, 
                    "pitch" -> 6511, "blake" -> 6512, "arrangement" -> 6513, 
                    "girlfriend" -> 6514, "serbian" -> 6515, "operational" -> 
                    6516, "hence" -> 6517, "sad" -> 6518, "scent" -> 6519, 
                    "fur" -> 6520, "dj" -> 6521, "sessions" -> 6522, "hp" -> 
                    6523, "refer" -> 6524, "rarely" -> 6525, "##ora" -> 6526, 
                    "exists" -> 6527, "1892" -> 6528, "##ten" -> 6529, 
                    "scientists" -> 6530, "dirty" -> 6531, "penalty" -> 6532, 
                    "burst" -> 6533, "portrait" -> 6534, "seed" -> 6535, "79" -> 
                    6536, "pole" -> 6537, "limits" -> 6538, "rival" -> 6539, 
                    "1894" -> 6540, "stable" -> 6541, "alpha" -> 6542, 
                    "grave" -> 6543, "constitutional" -> 6544, "alcohol" -> 
                    6545, "arrest" -> 6546, "flower" -> 6547, "mystery" -> 
                    6548, "devil" -> 6549, "architectural" -> 6550, 
                    "relationships" -> 6551, "greatly" -> 6552, "habitat" -> 
                    6553, "##istic" -> 6554, "larry" -> 6555, "progressive" -> 
                    6556, "remote" -> 6557, "cotton" -> 6558, "##ics" -> 6559,
                     "##ok" -> 6560, "preserved" -> 6561, "reaches" -> 6562, 
                    "##ming" -> 6563, "cited" -> 6564, "86" -> 6565, "vast" -> 
                    6566, "scholarship" -> 6567, "decisions" -> 6568, "cbs" -> 
                    6569, "joy" -> 6570, "teach" -> 6571, "1885" -> 6572, 
                    "editions" -> 6573, "knocked" -> 6574, "eve" -> 6575, 
                    "searching" -> 6576, "partly" -> 6577, "participation" -> 
                    6578, "gap" -> 6579, "animated" -> 6580, "fate" -> 6581, 
                    "excellent" -> 6582, "##ett" -> 6583, "na" -> 6584, "87" -> 
                    6585, "alternate" -> 6586, "saints" -> 6587, "youngest" -> 
                    6588, "##ily" -> 6589, "climbed" -> 6590, "##ita" -> 6591,
                     "##tors" -> 6592, "suggest" -> 6593, "##ct" -> 6594, 
                    "discussion" -> 6595, "staying" -> 6596, "choir" -> 6597, 
                    "lakes" -> 6598, "jacket" -> 6599, "revenue" -> 6600, 
                    "nevertheless" -> 6601, "peaked" -> 6602, "instrument" -> 
                    6603, "wondering" -> 6604, "annually" -> 6605, "managing" -> 
                    6606, "neil" -> 6607, "1891" -> 6608, "signing" -> 6609, 
                    "terry" -> 6610, "##ice" -> 6611, "apply" -> 6612, 
                    "clinical" -> 6613, "brooklyn" -> 6614, "aim" -> 6615, 
                    "catherine" -> 6616, "fuck" -> 6617, "farmers" -> 6618, 
                    "figured" -> 6619, "ninth" -> 6620, "pride" -> 6621, 
                    "hugh" -> 6622, "evolution" -> 6623, "ordinary" -> 6624, 
                    "involvement" -> 6625, "comfortable" -> 6626, "shouted" -> 
                    6627, "tech" -> 6628, "encouraged" -> 6629, "taiwan" -> 
                    6630, "representation" -> 6631, "sharing" -> 6632, 
                    "##lia" -> 6633, "##em" -> 6634, "panic" -> 6635, "exact" -> 
                    6636, "cargo" -> 6637, "competing" -> 6638, "fat" -> 6639,
                     "cried" -> 6640, "83" -> 6641, "1920s" -> 6642, 
                    "occasions" -> 6643, "pa" -> 6644, "cabin" -> 6645, 
                    "borders" -> 6646, "utah" -> 6647, "marcus" -> 6648, 
                    "##isation" -> 6649, "badly" -> 6650, "muscles" -> 6651, 
                    "##ance" -> 6652, "victorian" -> 6653, "transition" -> 
                    6654, "warner" -> 6655, "bet" -> 6656, "permission" -> 
                    6657, "##rin" -> 6658, "slave" -> 6659, "terrible" -> 
                    6660, "similarly" -> 6661, "shares" -> 6662, "seth" -> 
                    6663, "uefa" -> 6664, "possession" -> 6665, "medals" -> 
                    6666, "benefits" -> 6667, "colleges" -> 6668, "lowered" -> 
                    6669, "perfectly" -> 6670, "mall" -> 6671, "transit" -> 
                    6672, "##ye" -> 6673, "##kar" -> 6674, "publisher" -> 
                    6675, "##ened" -> 6676, "harrison" -> 6677, "deaths" -> 
                    6678, "elevation" -> 6679, "##ae" -> 6680, "asleep" -> 
                    6681, "machines" -> 6682, "sigh" -> 6683, "ash" -> 6684, 
                    "hardly" -> 6685, "argument" -> 6686, "occasion" -> 6687, 
                    "parent" -> 6688, "leo" -> 6689, "decline" -> 6690, 
                    "1888" -> 6691, "contribution" -> 6692, "##ua" -> 6693, 
                    "concentration" -> 6694, "1000" -> 6695, "opportunities" -> 
                    6696, "hispanic" -> 6697, "guardian" -> 6698, "extent" -> 
                    6699, "emotions" -> 6700, "hips" -> 6701, "mason" -> 6702,
                     "volumes" -> 6703, "bloody" -> 6704, "controversy" -> 
                    6705, "diameter" -> 6706, "steady" -> 6707, "mistake" -> 
                    6708, "phoenix" -> 6709, "identify" -> 6710, "violin" -> 
                    6711, "##sk" -> 6712, "departure" -> 6713, "richmond" -> 
                    6714, "spin" -> 6715, "funeral" -> 6716, "enemies" -> 
                    6717, "1864" -> 6718, "gear" -> 6719, "literally" -> 6720,
                     "connor" -> 6721, "random" -> 6722, "sergeant" -> 6723, 
                    "grab" -> 6724, "confusion" -> 6725, "1865" -> 6726, 
                    "transmission" -> 6727, "informed" -> 6728, "op" -> 6729, 
                    "leaning" -> 6730, "sacred" -> 6731, "suspended" -> 6732, 
                    "thinks" -> 6733, "gates" -> 6734, "portland" -> 6735, 
                    "luck" -> 6736, "agencies" -> 6737, "yours" -> 6738, 
                    "hull" -> 6739, "expert" -> 6740, "muscle" -> 6741, 
                    "layer" -> 6742, "practical" -> 6743, "sculpture" -> 6744,
                     "jerusalem" -> 6745, "latest" -> 6746, "lloyd" -> 6747, 
                    "statistics" -> 6748, "deeper" -> 6749, "recommended" -> 
                    6750, "warrior" -> 6751, "arkansas" -> 6752, "mess" -> 
                    6753, "supports" -> 6754, "greg" -> 6755, "eagle" -> 6756,
                     "1880" -> 6757, "recovered" -> 6758, "rated" -> 6759, 
                    "concerts" -> 6760, "rushed" -> 6761, "##ano" -> 6762, 
                    "stops" -> 6763, "eggs" -> 6764, "files" -> 6765, 
                    "premiere" -> 6766, "keith" -> 6767, "##vo" -> 6768, 
                    "delhi" -> 6769, "turner" -> 6770, "pit" -> 6771, 
                    "affair" -> 6772, "belief" -> 6773, "paint" -> 6774, 
                    "##zing" -> 6775, "mate" -> 6776, "##ach" -> 6777, "##ev" -> 
                    6778, "victim" -> 6779, "##ology" -> 6780, "withdrew" -> 
                    6781, "bonus" -> 6782, "styles" -> 6783, "fled" -> 6784, 
                    "##ud" -> 6785, "glasgow" -> 6786, "technologies" -> 6787,
                     "funded" -> 6788, "nbc" -> 6789, "adaptation" -> 6790, 
                    "##ata" -> 6791, "portrayed" -> 6792, "cooperation" -> 
                    6793, "supporters" -> 6794, "judges" -> 6795, "bernard" -> 
                    6796, "justin" -> 6797, "hallway" -> 6798, "ralph" -> 
                    6799, "##ick" -> 6800, "graduating" -> 6801, 
                    "controversial" -> 6802, "distant" -> 6803, "continental" -> 
                    6804, "spider" -> 6805, "bite" -> 6806, "##ho" -> 6807, 
                    "recognize" -> 6808, "intention" -> 6809, "mixing" -> 
                    6810, "##ese" -> 6811, "egyptian" -> 6812, "bow" -> 6813, 
                    "tourism" -> 6814, "suppose" -> 6815, "claiming" -> 6816, 
                    "tiger" -> 6817, "dominated" -> 6818, "participants" -> 
                    6819, "vi" -> 6820, "##ru" -> 6821, "nurse" -> 6822, 
                    "partially" -> 6823, "tape" -> 6824, "##rum" -> 6825, 
                    "psychology" -> 6826, "##rn" -> 6827, "essential" -> 6828,
                     "touring" -> 6829, "duo" -> 6830, "voting" -> 6831, 
                    "civilian" -> 6832, "emotional" -> 6833, "channels" -> 
                    6834, "##king" -> 6835, "apparent" -> 6836, "hebrew" -> 
                    6837, "1887" -> 6838, "tommy" -> 6839, "carrier" -> 6840, 
                    "intersection" -> 6841, "beast" -> 6842, "hudson" -> 6843,
                     "##gar" -> 6844, "##zo" -> 6845, "lab" -> 6846, "nova" -> 
                    6847, "bench" -> 6848, "discuss" -> 6849, "costa" -> 6850,
                     "##ered" -> 6851, "detailed" -> 6852, "behalf" -> 6853, 
                    "drivers" -> 6854, "unfortunately" -> 6855, "obtain" -> 
                    6856, "##lis" -> 6857, "rocky" -> 6858, "##dae" -> 6859, 
                    "siege" -> 6860, "friendship" -> 6861, "honey" -> 6862, 
                    "##rian" -> 6863, "1861" -> 6864, "amy" -> 6865, "hang" -> 
                    6866, "posted" -> 6867, "governments" -> 6868, "collins" -> 
                    6869, "respond" -> 6870, "wildlife" -> 6871, "preferred" -> 
                    6872, "operator" -> 6873, "##po" -> 6874, "laura" -> 6875,
                     "pregnant" -> 6876, "videos" -> 6877, "dennis" -> 6878, 
                    "suspected" -> 6879, "boots" -> 6880, "instantly" -> 6881,
                     "weird" -> 6882, "automatic" -> 6883, "businessman" -> 
                    6884, "alleged" -> 6885, "placing" -> 6886, "throwing" -> 
                    6887, "ph" -> 6888, "mood" -> 6889, "1862" -> 6890, 
                    "perry" -> 6891, "venue" -> 6892, "jet" -> 6893, 
                    "remainder" -> 6894, "##lli" -> 6895, "##ci" -> 6896, 
                    "passion" -> 6897, "biological" -> 6898, "boyfriend" -> 
                    6899, "1863" -> 6900, "dirt" -> 6901, "buffalo" -> 6902, 
                    "ron" -> 6903, "segment" -> 6904, "fa" -> 6905, "abuse" -> 
                    6906, "##era" -> 6907, "genre" -> 6908, "thrown" -> 6909, 
                    "stroke" -> 6910, "colored" -> 6911, "stress" -> 6912, 
                    "exercise" -> 6913, "displayed" -> 6914, "##gen" -> 6915, 
                    "struggled" -> 6916, "##tti" -> 6917, "abroad" -> 6918, 
                    "dramatic" -> 6919, "wonderful" -> 6920, "thereafter" -> 
                    6921, "madrid" -> 6922, "component" -> 6923, "widespread" -> 
                    6924, "##sed" -> 6925, "tale" -> 6926, "citizen" -> 6927, 
                    "todd" -> 6928, "monday" -> 6929, "1886" -> 6930, 
                    "vancouver" -> 6931, "overseas" -> 6932, "forcing" -> 
                    6933, "crying" -> 6934, "descent" -> 6935, "##ris" -> 
                    6936, "discussed" -> 6937, "substantial" -> 6938, "ranks" -> 
                    6939, "regime" -> 6940, "1870" -> 6941, "provinces" -> 
                    6942, "switch" -> 6943, "drum" -> 6944, "zane" -> 6945, 
                    "ted" -> 6946, "tribes" -> 6947, "proof" -> 6948, "lp" -> 
                    6949, "cream" -> 6950, "researchers" -> 6951, "volunteer" -> 
                    6952, "manor" -> 6953, "silk" -> 6954, "milan" -> 6955, 
                    "donated" -> 6956, "allies" -> 6957, "venture" -> 6958, 
                    "principle" -> 6959, "delivery" -> 6960, "enterprise" -> 
                    6961, "##ves" -> 6962, "##ans" -> 6963, "bars" -> 6964, 
                    "traditionally" -> 6965, "witch" -> 6966, "reminded" -> 
                    6967, "copper" -> 6968, "##uk" -> 6969, "pete" -> 6970, 
                    "inter" -> 6971, "links" -> 6972, "colin" -> 6973, 
                    "grinned" -> 6974, "elsewhere" -> 6975, "competitive" -> 
                    6976, "frequent" -> 6977, "##oy" -> 6978, "scream" -> 
                    6979, "##hu" -> 6980, "tension" -> 6981, "texts" -> 6982, 
                    "submarine" -> 6983, "finnish" -> 6984, "defending" -> 
                    6985, "defend" -> 6986, "pat" -> 6987, "detail" -> 6988, 
                    "1884" -> 6989, "affiliated" -> 6990, "stuart" -> 6991, 
                    "themes" -> 6992, "villa" -> 6993, "periods" -> 6994, 
                    "tool" -> 6995, "belgian" -> 6996, "ruling" -> 6997, 
                    "crimes" -> 6998, "answers" -> 6999, "folded" -> 7000, 
                    "licensed" -> 7001, "resort" -> 7002, "demolished" -> 
                    7003, "hans" -> 7004, "lucy" -> 7005, "1881" -> 7006, 
                    "lion" -> 7007, "traded" -> 7008, "photographs" -> 7009, 
                    "writes" -> 7010, "craig" -> 7011, "##fa" -> 7012, 
                    "trials" -> 7013, "generated" -> 7014, "beth" -> 7015, 
                    "noble" -> 7016, "debt" -> 7017, "percentage" -> 7018, 
                    "yorkshire" -> 7019, "erected" -> 7020, "ss" -> 7021, 
                    "viewed" -> 7022, "grades" -> 7023, "confidence" -> 7024, 
                    "ceased" -> 7025, "islam" -> 7026, "telephone" -> 7027, 
                    "retail" -> 7028, "##ible" -> 7029, "chile" -> 7030, 
                    "m\.b2" -> 7031, "roberts" -> 7032, "sixteen" -> 7033, 
                    "##ich" -> 7034, "commented" -> 7035, "hampshire" -> 7036,
                     "innocent" -> 7037, "dual" -> 7038, "pounds" -> 7039, 
                    "checked" -> 7040, "regulations" -> 7041, "afghanistan" -> 
                    7042, "sung" -> 7043, "rico" -> 7044, "liberty" -> 7045, 
                    "assets" -> 7046, "bigger" -> 7047, "options" -> 7048, 
                    "angels" -> 7049, "relegated" -> 7050, "tribute" -> 7051, 
                    "wells" -> 7052, "attending" -> 7053, "leaf" -> 7054, 
                    "##yan" -> 7055, "butler" -> 7056, "romanian" -> 7057, 
                    "forum" -> 7058, "monthly" -> 7059, "lisa" -> 7060, 
                    "patterns" -> 7061, "gmina" -> 7062, "##tory" -> 7063, 
                    "madison" -> 7064, "hurricane" -> 7065, "rev" -> 7066, 
                    "##ians" -> 7067, "bristol" -> 7068, "##ula" -> 7069, 
                    "elite" -> 7070, "valuable" -> 7071, "disaster" -> 7072, 
                    "democracy" -> 7073, "awareness" -> 7074, "germans" -> 
                    7075, "freyja" -> 7076, "##ins" -> 7077, "loop" -> 7078, 
                    "absolutely" -> 7079, "paying" -> 7080, "populations" -> 
                    7081, "maine" -> 7082, "sole" -> 7083, "prayer" -> 7084, 
                    "spencer" -> 7085, "releases" -> 7086, "doorway" -> 7087, 
                    "bull" -> 7088, "##ani" -> 7089, "lover" -> 7090, 
                    "midnight" -> 7091, "conclusion" -> 7092, "##sson" -> 
                    7093, "thirteen" -> 7094, "lily" -> 7095, "mediterranean" -> 
                    7096, "##lt" -> 7097, "nhl" -> 7098, "proud" -> 7099, 
                    "sample" -> 7100, "##hill" -> 7101, "drummer" -> 7102, 
                    "guinea" -> 7103, "##ova" -> 7104, "murphy" -> 7105, 
                    "climb" -> 7106, "##ston" -> 7107, "instant" -> 7108, 
                    "attributed" -> 7109, "horn" -> 7110, "ain" -> 7111, 
                    "railways" -> 7112, "steven" -> 7113, "##ao" -> 7114, 
                    "autumn" -> 7115, "ferry" -> 7116, "opponent" -> 7117, 
                    "root" -> 7118, "traveling" -> 7119, "secured" -> 7120, 
                    "corridor" -> 7121, "stretched" -> 7122, "tales" -> 7123, 
                    "sheet" -> 7124, "trinity" -> 7125, "cattle" -> 7126, 
                    "helps" -> 7127, "indicates" -> 7128, "manhattan" -> 7129,
                     "murdered" -> 7130, "fitted" -> 7131, "1882" -> 7132, 
                    "gentle" -> 7133, "grandmother" -> 7134, "mines" -> 7135, 
                    "shocked" -> 7136, "vegas" -> 7137, "produces" -> 7138, 
                    "##light" -> 7139, "caribbean" -> 7140, "##ou" -> 7141, 
                    "belong" -> 7142, "continuous" -> 7143, "desperate" -> 
                    7144, "drunk" -> 7145, "historically" -> 7146, "trio" -> 
                    7147, "waved" -> 7148, "raf" -> 7149, "dealing" -> 7150, 
                    "nathan" -> 7151, "bat" -> 7152, "murmured" -> 7153, 
                    "interrupted" -> 7154, "residing" -> 7155, "scientist" -> 
                    7156, "pioneer" -> 7157, "harold" -> 7158, "aaron" -> 
                    7159, "##net" -> 7160, "delta" -> 7161, "attempting" -> 
                    7162, "minority" -> 7163, "mini" -> 7164, "believes" -> 
                    7165, "chorus" -> 7166, "tend" -> 7167, "lots" -> 7168, 
                    "eyed" -> 7169, "indoor" -> 7170, "load" -> 7171, "shots" -> 
                    7172, "updated" -> 7173, "jail" -> 7174, "##llo" -> 7175, 
                    "concerning" -> 7176, "connecting" -> 7177, "wealth" -> 
                    7178, "##ved" -> 7179, "slaves" -> 7180, "arrive" -> 7181,
                     "rangers" -> 7182, "sufficient" -> 7183, "rebuilt" -> 
                    7184, "##wick" -> 7185, "cardinal" -> 7186, "flood" -> 
                    7187, "muhammad" -> 7188, "whenever" -> 7189, "relation" -> 
                    7190, "runners" -> 7191, "moral" -> 7192, "repair" -> 
                    7193, "viewers" -> 7194, "arriving" -> 7195, "revenge" -> 
                    7196, "punk" -> 7197, "assisted" -> 7198, "bath" -> 7199, 
                    "fairly" -> 7200, "breathe" -> 7201, "lists" -> 7202, 
                    "innings" -> 7203, "illustrated" -> 7204, "whisper" -> 
                    7205, "nearest" -> 7206, "voters" -> 7207, "clinton" -> 
                    7208, "ties" -> 7209, "ultimate" -> 7210, "screamed" -> 
                    7211, "beijing" -> 7212, "lions" -> 7213, "andre" -> 7214,
                     "fictional" -> 7215, "gathering" -> 7216, "comfort" -> 
                    7217, "radar" -> 7218, "suitable" -> 7219, "dismissed" -> 
                    7220, "hms" -> 7221, "ban" -> 7222, "pine" -> 7223, 
                    "wrist" -> 7224, "atmosphere" -> 7225, "voivodeship" -> 
                    7226, "bid" -> 7227, "timber" -> 7228, "##ned" -> 7229, 
                    "##nan" -> 7230, "giants" -> 7231, "##ane" -> 7232, 
                    "cameron" -> 7233, "recovery" -> 7234, "uss" -> 7235, 
                    "identical" -> 7236, "categories" -> 7237, "switched" -> 
                    7238, "serbia" -> 7239, "laughter" -> 7240, "noah" -> 
                    7241, "ensemble" -> 7242, "therapy" -> 7243, "peoples" -> 
                    7244, "touching" -> 7245, "##off" -> 7246, "locally" -> 
                    7247, "pearl" -> 7248, "platforms" -> 7249, "everywhere" -> 
                    7250, "ballet" -> 7251, "tables" -> 7252, "lanka" -> 7253,
                     "herbert" -> 7254, "outdoor" -> 7255, "toured" -> 7256, 
                    "derek" -> 7257, "1883" -> 7258, "spaces" -> 7259, 
                    "contested" -> 7260, "swept" -> 7261, "1878" -> 7262, 
                    "exclusive" -> 7263, "slight" -> 7264, "connections" -> 
                    7265, "##dra" -> 7266, "winds" -> 7267, "prisoner" -> 
                    7268, "collective" -> 7269, "bangladesh" -> 7270, "tube" -> 
                    7271, "publicly" -> 7272, "wealthy" -> 7273, "thai" -> 
                    7274, "##ys" -> 7275, "isolated" -> 7276, "select" -> 
                    7277, "##ric" -> 7278, "insisted" -> 7279, "pen" -> 7280, 
                    "fortune" -> 7281, "ticket" -> 7282, "spotted" -> 7283, 
                    "reportedly" -> 7284, "animation" -> 7285, "enforcement" -> 
                    7286, "tanks" -> 7287, "110" -> 7288, "decides" -> 7289, 
                    "wider" -> 7290, "lowest" -> 7291, "owen" -> 7292, 
                    "##time" -> 7293, "nod" -> 7294, "hitting" -> 7295, 
                    "##hn" -> 7296, "gregory" -> 7297, "furthermore" -> 7298, 
                    "magazines" -> 7299, "fighters" -> 7300, "solutions" -> 
                    7301, "##ery" -> 7302, "pointing" -> 7303, "requested" -> 
                    7304, "peru" -> 7305, "reed" -> 7306, "chancellor" -> 
                    7307, "knights" -> 7308, "mask" -> 7309, "worker" -> 7310,
                     "eldest" -> 7311, "flames" -> 7312, "reduction" -> 7313, 
                    "1860" -> 7314, "volunteers" -> 7315, "##tis" -> 7316, 
                    "reporting" -> 7317, "##hl" -> 7318, "wire" -> 7319, 
                    "advisory" -> 7320, "endemic" -> 7321, "origins" -> 7322, 
                    "settlers" -> 7323, "pursue" -> 7324, "knock" -> 7325, 
                    "consumer" -> 7326, "1876" -> 7327, "eu" -> 7328, 
                    "compound" -> 7329, "creatures" -> 7330, "mansion" -> 
                    7331, "sentenced" -> 7332, "ivan" -> 7333, "deployed" -> 
                    7334, "guitars" -> 7335, "frowned" -> 7336, "involves" -> 
                    7337, "mechanism" -> 7338, "kilometers" -> 7339, 
                    "perspective" -> 7340, "shops" -> 7341, "maps" -> 7342, 
                    "terminus" -> 7343, "duncan" -> 7344, "alien" -> 7345, 
                    "fist" -> 7346, "bridges" -> 7347, "##pers" -> 7348, 
                    "heroes" -> 7349, "fed" -> 7350, "derby" -> 7351, 
                    "swallowed" -> 7352, "##ros" -> 7353, "patent" -> 7354, 
                    "sara" -> 7355, "illness" -> 7356, "characterized" -> 
                    7357, "adventures" -> 7358, "slide" -> 7359, "hawaii" -> 
                    7360, "jurisdiction" -> 7361, "##op" -> 7362, "organised" -> 
                    7363, "##side" -> 7364, "adelaide" -> 7365, "walks" -> 
                    7366, "biology" -> 7367, "se" -> 7368, "##ties" -> 7369, 
                    "rogers" -> 7370, "swing" -> 7371, "tightly" -> 7372, 
                    "boundaries" -> 7373, "##rie" -> 7374, "prepare" -> 7375, 
                    "implementation" -> 7376, "stolen" -> 7377, "##sha" -> 
                    7378, "certified" -> 7379, "colombia" -> 7380, "edwards" -> 
                    7381, "garage" -> 7382, "##mm" -> 7383, "recalled" -> 
                    7384, "##ball" -> 7385, "rage" -> 7386, "harm" -> 7387, 
                    "nigeria" -> 7388, "breast" -> 7389, "##ren" -> 7390, 
                    "furniture" -> 7391, "pupils" -> 7392, "settle" -> 7393, 
                    "##lus" -> 7394, "cuba" -> 7395, "balls" -> 7396, 
                    "client" -> 7397, "alaska" -> 7398, "21st" -> 7399, 
                    "linear" -> 7400, "thrust" -> 7401, "celebration" -> 7402,
                     "latino" -> 7403, "genetic" -> 7404, "terror" -> 7405, 
                    "##cia" -> 7406, "##ening" -> 7407, "lightning" -> 7408, 
                    "fee" -> 7409, "witness" -> 7410, "lodge" -> 7411, 
                    "establishing" -> 7412, "skull" -> 7413, "##ique" -> 7414,
                     "earning" -> 7415, "hood" -> 7416, "##ei" -> 7417, 
                    "rebellion" -> 7418, "wang" -> 7419, "sporting" -> 7420, 
                    "warned" -> 7421, "missile" -> 7422, "devoted" -> 7423, 
                    "activist" -> 7424, "porch" -> 7425, "worship" -> 7426, 
                    "fourteen" -> 7427, "package" -> 7428, "1871" -> 7429, 
                    "decorated" -> 7430, "##shire" -> 7431, "housed" -> 7432, 
                    "##ock" -> 7433, "chess" -> 7434, "sailed" -> 7435, 
                    "doctors" -> 7436, "oscar" -> 7437, "joan" -> 7438, 
                    "treat" -> 7439, "garcia" -> 7440, "harbour" -> 7441, 
                    "jeremy" -> 7442, "##ire" -> 7443, "traditions" -> 7444, 
                    "dominant" -> 7445, "jacques" -> 7446, "##gon" -> 7447, 
                    "##wan" -> 7448, "relocated" -> 7449, "1879" -> 7450, 
                    "amendment" -> 7451, "sized" -> 7452, "companion" -> 7453,
                     "simultaneously" -> 7454, "volleyball" -> 7455, "spun" -> 
                    7456, "acre" -> 7457, "increases" -> 7458, "stopping" -> 
                    7459, "loves" -> 7460, "belongs" -> 7461, "affect" -> 
                    7462, "drafted" -> 7463, "tossed" -> 7464, "scout" -> 
                    7465, "battles" -> 7466, "1875" -> 7467, "filming" -> 
                    7468, "shoved" -> 7469, "munich" -> 7470, "tenure" -> 
                    7471, "vertical" -> 7472, "romance" -> 7473, "pc" -> 7474,
                     "##cher" -> 7475, "argue" -> 7476, "##ical" -> 7477, 
                    "craft" -> 7478, "ranging" -> 7479, "www" -> 7480, 
                    "opens" -> 7481, "honest" -> 7482, "tyler" -> 7483, 
                    "yesterday" -> 7484, "virtual" -> 7485, "##let" -> 7486, 
                    "muslims" -> 7487, "reveal" -> 7488, "snake" -> 7489, 
                    "immigrants" -> 7490, "radical" -> 7491, "screaming" -> 
                    7492, "speakers" -> 7493, "firing" -> 7494, "saving" -> 
                    7495, "belonging" -> 7496, "ease" -> 7497, "lighting" -> 
                    7498, "prefecture" -> 7499, "blame" -> 7500, "farmer" -> 
                    7501, "hungry" -> 7502, "grows" -> 7503, "rubbed" -> 7504,
                     "beam" -> 7505, "sur" -> 7506, "subsidiary" -> 7507, 
                    "##cha" -> 7508, "armenian" -> 7509, "sao" -> 7510, 
                    "dropping" -> 7511, "conventional" -> 7512, "##fer" -> 
                    7513, "microsoft" -> 7514, "reply" -> 7515, "qualify" -> 
                    7516, "spots" -> 7517, "1867" -> 7518, "sweat" -> 7519, 
                    "festivals" -> 7520, "##ken" -> 7521, "immigration" -> 
                    7522, "physician" -> 7523, "discover" -> 7524, "exposure" -> 
                    7525, "sandy" -> 7526, "explanation" -> 7527, "isaac" -> 
                    7528, "implemented" -> 7529, "##fish" -> 7530, "hart" -> 
                    7531, "initiated" -> 7532, "connect" -> 7533, "stakes" -> 
                    7534, "presents" -> 7535, "heights" -> 7536, 
                    "householder" -> 7537, "pleased" -> 7538, "tourist" -> 
                    7539, "regardless" -> 7540, "slip" -> 7541, "closest" -> 
                    7542, "##ction" -> 7543, "surely" -> 7544, "sultan" -> 
                    7545, "brings" -> 7546, "riley" -> 7547, "preparation" -> 
                    7548, "aboard" -> 7549, "slammed" -> 7550, "baptist" -> 
                    7551, "experiment" -> 7552, "ongoing" -> 7553, 
                    "interstate" -> 7554, "organic" -> 7555, "playoffs" -> 
                    7556, "##ika" -> 7557, "1877" -> 7558, "130" -> 7559, 
                    "##tar" -> 7560, "hindu" -> 7561, "error" -> 7562, 
                    "tours" -> 7563, "tier" -> 7564, "plenty" -> 7565, 
                    "arrangements" -> 7566, "talks" -> 7567, "trapped" -> 
                    7568, "excited" -> 7569, "sank" -> 7570, "ho" -> 7571, 
                    "athens" -> 7572, "1872" -> 7573, "denver" -> 7574, 
                    "welfare" -> 7575, "suburb" -> 7576, "athletes" -> 7577, 
                    "trick" -> 7578, "diverse" -> 7579, "belly" -> 7580, 
                    "exclusively" -> 7581, "yelled" -> 7582, "1868" -> 7583, 
                    "##med" -> 7584, "conversion" -> 7585, "##ette" -> 7586, 
                    "1874" -> 7587, "internationally" -> 7588, "computers" -> 
                    7589, "conductor" -> 7590, "abilities" -> 7591, 
                    "sensitive" -> 7592, "hello" -> 7593, "dispute" -> 7594, 
                    "measured" -> 7595, "globe" -> 7596, "rocket" -> 7597, 
                    "prices" -> 7598, "amsterdam" -> 7599, "flights" -> 7600, 
                    "tigers" -> 7601, "inn" -> 7602, "municipalities" -> 7603,
                     "emotion" -> 7604, "references" -> 7605, "3d" -> 7606, 
                    "##mus" -> 7607, "explains" -> 7608, "airlines" -> 7609, 
                    "manufactured" -> 7610, "pm" -> 7611, "archaeological" -> 
                    7612, "1873" -> 7613, "interpretation" -> 7614, "devon" -> 
                    7615, "comment" -> 7616, "##ites" -> 7617, "settlements" -> 
                    7618, "kissing" -> 7619, "absolute" -> 7620, 
                    "improvement" -> 7621, "suite" -> 7622, "impressed" -> 
                    7623, "barcelona" -> 7624, "sullivan" -> 7625, 
                    "jefferson" -> 7626, "towers" -> 7627, "jesse" -> 7628, 
                    "julie" -> 7629, "##tin" -> 7630, "##lu" -> 7631, 
                    "grandson" -> 7632, "hi" -> 7633, "gauge" -> 7634, 
                    "regard" -> 7635, "rings" -> 7636, "interviews" -> 7637, 
                    "trace" -> 7638, "raymond" -> 7639, "thumb" -> 7640, 
                    "departments" -> 7641, "burns" -> 7642, "serial" -> 7643, 
                    "bulgarian" -> 7644, "scores" -> 7645, "demonstrated" -> 
                    7646, "##ix" -> 7647, "1866" -> 7648, "kyle" -> 7649, 
                    "alberta" -> 7650, "underneath" -> 7651, "romanized" -> 
                    7652, "##ward" -> 7653, "relieved" -> 7654, "acquisition" -> 
                    7655, "phrase" -> 7656, "cliff" -> 7657, "reveals" -> 
                    7658, "han" -> 7659, "cuts" -> 7660, "merger" -> 7661, 
                    "custom" -> 7662, "##dar" -> 7663, "nee" -> 7664, 
                    "gilbert" -> 7665, "graduation" -> 7666, "##nts" -> 7667, 
                    "assessment" -> 7668, "cafe" -> 7669, "difficulty" -> 
                    7670, "demands" -> 7671, "swung" -> 7672, "democrat" -> 
                    7673, "jennifer" -> 7674, "commons" -> 7675, "1940s" -> 
                    7676, "grove" -> 7677, "##yo" -> 7678, "completing" -> 
                    7679, "focuses" -> 7680, "sum" -> 7681, "substitute" -> 
                    7682, "bearing" -> 7683, "stretch" -> 7684, "reception" -> 
                    7685, "##py" -> 7686, "reflected" -> 7687, "essentially" -> 
                    7688, "destination" -> 7689, "pairs" -> 7690, "##ched" -> 
                    7691, "survival" -> 7692, "resource" -> 7693, "##bach" -> 
                    7694, "promoting" -> 7695, "doubles" -> 7696, "messages" -> 
                    7697, "tear" -> 7698, "##down" -> 7699, "##fully" -> 7700,
                     "parade" -> 7701, "florence" -> 7702, "harvey" -> 7703, 
                    "incumbent" -> 7704, "partial" -> 7705, "framework" -> 
                    7706, "900" -> 7707, "pedro" -> 7708, "frozen" -> 7709, 
                    "procedure" -> 7710, "olivia" -> 7711, "controls" -> 7712,
                     "##mic" -> 7713, "shelter" -> 7714, "personally" -> 7715,
                     "temperatures" -> 7716, "##od" -> 7717, "brisbane" -> 
                    7718, "tested" -> 7719, "sits" -> 7720, "marble" -> 7721, 
                    "comprehensive" -> 7722, "oxygen" -> 7723, "leonard" -> 
                    7724, "##kov" -> 7725, "inaugural" -> 7726, "iranian" -> 
                    7727, "referring" -> 7728, "quarters" -> 7729, "attitude" -> 
                    7730, "##ivity" -> 7731, "mainstream" -> 7732, "lined" -> 
                    7733, "mars" -> 7734, "dakota" -> 7735, "norfolk" -> 7736,
                     "unsuccessful" -> 7737, "##\[Degree]" -> 7738, 
                    "explosion" -> 7739, "helicopter" -> 7740, 
                    "congressional" -> 7741, "##sing" -> 7742, "inspector" -> 
                    7743, "bitch" -> 7744, "seal" -> 7745, "departed" -> 7746,
                     "divine" -> 7747, "##ters" -> 7748, "coaching" -> 7749, 
                    "examination" -> 7750, "punishment" -> 7751, 
                    "manufacturer" -> 7752, "sink" -> 7753, "columns" -> 7754,
                     "unincorporated" -> 7755, "signals" -> 7756, "nevada" -> 
                    7757, "squeezed" -> 7758, "dylan" -> 7759, "dining" -> 
                    7760, "photos" -> 7761, "martial" -> 7762, "manuel" -> 
                    7763, "eighteen" -> 7764, "elevator" -> 7765, "brushed" -> 
                    7766, "plates" -> 7767, "ministers" -> 7768, "ivy" -> 
                    7769, "congregation" -> 7770, "##len" -> 7771, "slept" -> 
                    7772, "specialized" -> 7773, "taxes" -> 7774, "curve" -> 
                    7775, "restricted" -> 7776, "negotiations" -> 7777, 
                    "likes" -> 7778, "statistical" -> 7779, "arnold" -> 7780, 
                    "inspiration" -> 7781, "execution" -> 7782, "bold" -> 
                    7783, "intermediate" -> 7784, "significance" -> 7785, 
                    "margin" -> 7786, "ruler" -> 7787, "wheels" -> 7788, 
                    "gothic" -> 7789, "intellectual" -> 7790, "dependent" -> 
                    7791, "listened" -> 7792, "eligible" -> 7793, "buses" -> 
                    7794, "widow" -> 7795, "syria" -> 7796, "earn" -> 7797, 
                    "cincinnati" -> 7798, "collapsed" -> 7799, "recipient" -> 
                    7800, "secrets" -> 7801, "accessible" -> 7802, 
                    "philippine" -> 7803, "maritime" -> 7804, "goddess" -> 
                    7805, "clerk" -> 7806, "surrender" -> 7807, "breaks" -> 
                    7808, "playoff" -> 7809, "database" -> 7810, "##ified" -> 
                    7811, "##lon" -> 7812, "ideal" -> 7813, "beetle" -> 7814, 
                    "aspect" -> 7815, "soap" -> 7816, "regulation" -> 7817, 
                    "strings" -> 7818, "expand" -> 7819, "anglo" -> 7820, 
                    "shorter" -> 7821, "crosses" -> 7822, "retreat" -> 7823, 
                    "tough" -> 7824, "coins" -> 7825, "wallace" -> 7826, 
                    "directions" -> 7827, "pressing" -> 7828, "##oon" -> 7829,
                     "shipping" -> 7830, "locomotives" -> 7831, "comparison" -> 
                    7832, "topics" -> 7833, "nephew" -> 7834, "##mes" -> 7835,
                     "distinction" -> 7836, "honors" -> 7837, "travelled" -> 
                    7838, "sierra" -> 7839, "ibn" -> 7840, "##over" -> 7841, 
                    "fortress" -> 7842, "sa" -> 7843, "recognised" -> 7844, 
                    "carved" -> 7845, "1869" -> 7846, "clients" -> 7847, 
                    "##dan" -> 7848, "intent" -> 7849, "##mar" -> 7850, 
                    "coaches" -> 7851, "describing" -> 7852, "bread" -> 7853, 
                    "##ington" -> 7854, "beaten" -> 7855, "northwestern" -> 
                    7856, "##ona" -> 7857, "merit" -> 7858, "youtube" -> 7859,
                     "collapse" -> 7860, "challenges" -> 7861, "em" -> 7862, 
                    "historians" -> 7863, "objective" -> 7864, "submitted" -> 
                    7865, "virus" -> 7866, "attacking" -> 7867, "drake" -> 
                    7868, "assume" -> 7869, "##ere" -> 7870, "diseases" -> 
                    7871, "marc" -> 7872, "stem" -> 7873, "leeds" -> 7874, 
                    "##cus" -> 7875, "##ab" -> 7876, "farming" -> 7877, 
                    "glasses" -> 7878, "##lock" -> 7879, "visits" -> 7880, 
                    "nowhere" -> 7881, "fellowship" -> 7882, "relevant" -> 
                    7883, "carries" -> 7884, "restaurants" -> 7885, 
                    "experiments" -> 7886, "101" -> 7887, "constantly" -> 
                    7888, "bases" -> 7889, "targets" -> 7890, "shah" -> 7891, 
                    "tenth" -> 7892, "opponents" -> 7893, "verse" -> 7894, 
                    "territorial" -> 7895, "##ira" -> 7896, "writings" -> 
                    7897, "corruption" -> 7898, "##hs" -> 7899, "instruction" -> 
                    7900, "inherited" -> 7901, "reverse" -> 7902, "emphasis" -> 
                    7903, "##vic" -> 7904, "employee" -> 7905, "arch" -> 7906,
                     "keeps" -> 7907, "rabbi" -> 7908, "watson" -> 7909, 
                    "payment" -> 7910, "uh" -> 7911, "##ala" -> 7912, "nancy" -> 
                    7913, "##tre" -> 7914, "venice" -> 7915, "fastest" -> 
                    7916, "sexy" -> 7917, "banned" -> 7918, "adrian" -> 7919, 
                    "properly" -> 7920, "ruth" -> 7921, "touchdown" -> 7922, 
                    "dollar" -> 7923, "boards" -> 7924, "metre" -> 7925, 
                    "circles" -> 7926, "edges" -> 7927, "favour" -> 7928, 
                    "comments" -> 7929, "ok" -> 7930, "travels" -> 7931, 
                    "liberation" -> 7932, "scattered" -> 7933, "firmly" -> 
                    7934, "##ular" -> 7935, "holland" -> 7936, "permitted" -> 
                    7937, "diesel" -> 7938, "kenya" -> 7939, "den" -> 7940, 
                    "originated" -> 7941, "##ral" -> 7942, "demons" -> 7943, 
                    "resumed" -> 7944, "dragged" -> 7945, "rider" -> 7946, 
                    "##rus" -> 7947, "servant" -> 7948, "blinked" -> 7949, 
                    "extend" -> 7950, "torn" -> 7951, "##ias" -> 7952, 
                    "##sey" -> 7953, "input" -> 7954, "meal" -> 7955, 
                    "everybody" -> 7956, "cylinder" -> 7957, "kinds" -> 7958, 
                    "camps" -> 7959, "##fe" -> 7960, "bullet" -> 7961, 
                    "logic" -> 7962, "##wn" -> 7963, "croatian" -> 7964, 
                    "evolved" -> 7965, "healthy" -> 7966, "fool" -> 7967, 
                    "chocolate" -> 7968, "wise" -> 7969, "preserve" -> 7970, 
                    "pradesh" -> 7971, "##ess" -> 7972, "respective" -> 7973, 
                    "1850" -> 7974, "##ew" -> 7975, "chicken" -> 7976, 
                    "artificial" -> 7977, "gross" -> 7978, "corresponding" -> 
                    7979, "convicted" -> 7980, "cage" -> 7981, "caroline" -> 
                    7982, "dialogue" -> 7983, "##dor" -> 7984, "narrative" -> 
                    7985, "stranger" -> 7986, "mario" -> 7987, "br" -> 7988, 
                    "christianity" -> 7989, "failing" -> 7990, "trent" -> 
                    7991, "commanding" -> 7992, "buddhist" -> 7993, "1848" -> 
                    7994, "maurice" -> 7995, "focusing" -> 7996, "yale" -> 
                    7997, "bike" -> 7998, "altitude" -> 7999, "##ering" -> 
                    8000, "mouse" -> 8001, "revised" -> 8002, "##sley" -> 
                    8003, "veteran" -> 8004, "##ig" -> 8005, "pulls" -> 8006, 
                    "theology" -> 8007, "crashed" -> 8008, "campaigns" -> 
                    8009, "legion" -> 8010, "##ability" -> 8011, "drag" -> 
                    8012, "excellence" -> 8013, "customer" -> 8014, 
                    "cancelled" -> 8015, "intensity" -> 8016, "excuse" -> 
                    8017, "##lar" -> 8018, "liga" -> 8019, "participating" -> 
                    8020, "contributing" -> 8021, "printing" -> 8022, 
                    "##burn" -> 8023, "variable" -> 8024, "##rk" -> 8025, 
                    "curious" -> 8026, "bin" -> 8027, "legacy" -> 8028, 
                    "renaissance" -> 8029, "##my" -> 8030, "symptoms" -> 8031,
                     "binding" -> 8032, "vocalist" -> 8033, "dancer" -> 8034, 
                    "##nie" -> 8035, "grammar" -> 8036, "gospel" -> 8037, 
                    "democrats" -> 8038, "ya" -> 8039, "enters" -> 8040, "sc" -> 
                    8041, "diplomatic" -> 8042, "hitler" -> 8043, "##ser" -> 
                    8044, "clouds" -> 8045, "mathematical" -> 8046, "quit" -> 
                    8047, "defended" -> 8048, "oriented" -> 8049, "##heim" -> 
                    8050, "fundamental" -> 8051, "hardware" -> 8052, 
                    "impressive" -> 8053, "equally" -> 8054, "convince" -> 
                    8055, "confederate" -> 8056, "guilt" -> 8057, "chuck" -> 
                    8058, "sliding" -> 8059, "##ware" -> 8060, "magnetic" -> 
                    8061, "narrowed" -> 8062, "petersburg" -> 8063, 
                    "bulgaria" -> 8064, "otto" -> 8065, "phd" -> 8066, 
                    "skill" -> 8067, "##ama" -> 8068, "reader" -> 8069, 
                    "hopes" -> 8070, "pitcher" -> 8071, "reservoir" -> 8072, 
                    "hearts" -> 8073, "automatically" -> 8074, "expecting" -> 
                    8075, "mysterious" -> 8076, "bennett" -> 8077, 
                    "extensively" -> 8078, "imagined" -> 8079, "seeds" -> 
                    8080, "monitor" -> 8081, "fix" -> 8082, "##ative" -> 8083,
                     "journalism" -> 8084, "struggling" -> 8085, "signature" -> 
                    8086, "ranch" -> 8087, "encounter" -> 8088, 
                    "photographer" -> 8089, "observation" -> 8090, "protests" -> 
                    8091, "##pin" -> 8092, "influences" -> 8093, "##hr" -> 
                    8094, "calendar" -> 8095, "##all" -> 8096, "cruz" -> 8097,
                     "croatia" -> 8098, "locomotive" -> 8099, "hughes" -> 
                    8100, "naturally" -> 8101, "shakespeare" -> 8102, 
                    "basement" -> 8103, "hook" -> 8104, "uncredited" -> 8105, 
                    "faded" -> 8106, "theories" -> 8107, "approaches" -> 8108,
                     "dare" -> 8109, "phillips" -> 8110, "filling" -> 8111, 
                    "fury" -> 8112, "obama" -> 8113, "##ain" -> 8114, 
                    "efficient" -> 8115, "arc" -> 8116, "deliver" -> 8117, 
                    "min" -> 8118, "raid" -> 8119, "breeding" -> 8120, 
                    "inducted" -> 8121, "leagues" -> 8122, "efficiency" -> 
                    8123, "axis" -> 8124, "montana" -> 8125, "eagles" -> 8126,
                     "##ked" -> 8127, "supplied" -> 8128, "instructions" -> 
                    8129, "karen" -> 8130, "picking" -> 8131, "indicating" -> 
                    8132, "trap" -> 8133, "anchor" -> 8134, "practically" -> 
                    8135, "christians" -> 8136, "tomb" -> 8137, "vary" -> 
                    8138, "occasional" -> 8139, "electronics" -> 8140, 
                    "lords" -> 8141, "readers" -> 8142, "newcastle" -> 8143, 
                    "faint" -> 8144, "innovation" -> 8145, "collect" -> 8146, 
                    "situations" -> 8147, "engagement" -> 8148, "160" -> 8149,
                     "claude" -> 8150, "mixture" -> 8151, "##feld" -> 8152, 
                    "peer" -> 8153, "tissue" -> 8154, "logo" -> 8155, "lean" -> 
                    8156, "##ration" -> 8157, "\[Degree]f" -> 8158, "floors" -> 
                    8159, "##ven" -> 8160, "architects" -> 8161, "reducing" -> 
                    8162, "##our" -> 8163, "##ments" -> 8164, "rope" -> 8165, 
                    "1859" -> 8166, "ottawa" -> 8167, "##har" -> 8168, 
                    "samples" -> 8169, "banking" -> 8170, "declaration" -> 
                    8171, "proteins" -> 8172, "resignation" -> 8173, 
                    "francois" -> 8174, "saudi" -> 8175, "advocate" -> 8176, 
                    "exhibited" -> 8177, "armor" -> 8178, "twins" -> 8179, 
                    "divorce" -> 8180, "##ras" -> 8181, "abraham" -> 8182, 
                    "reviewed" -> 8183, "jo" -> 8184, "temporarily" -> 8185, 
                    "matrix" -> 8186, "physically" -> 8187, "pulse" -> 8188, 
                    "curled" -> 8189, "##ena" -> 8190, "difficulties" -> 8191,
                     "bengal" -> 8192, "usage" -> 8193, "##ban" -> 8194, 
                    "annie" -> 8195, "riders" -> 8196, "certificate" -> 8197, 
                    "##pi" -> 8198, "holes" -> 8199, "warsaw" -> 8200, 
                    "distinctive" -> 8201, "jessica" -> 8202, "##mon" -> 8203,
                     "mutual" -> 8204, "1857" -> 8205, "customs" -> 8206, 
                    "circular" -> 8207, "eugene" -> 8208, "removal" -> 8209, 
                    "loaded" -> 8210, "mere" -> 8211, "vulnerable" -> 8212, 
                    "depicted" -> 8213, "generations" -> 8214, "dame" -> 8215,
                     "heir" -> 8216, "enormous" -> 8217, "lightly" -> 8218, 
                    "climbing" -> 8219, "pitched" -> 8220, "lessons" -> 8221, 
                    "pilots" -> 8222, "nepal" -> 8223, "ram" -> 8224, 
                    "google" -> 8225, "preparing" -> 8226, "brad" -> 8227, 
                    "louise" -> 8228, "renowned" -> 8229, "##\:2082" -> 8230, 
                    "liam" -> 8231, "##ably" -> 8232, "plaza" -> 8233, "shaw" -> 
                    8234, "sophie" -> 8235, "brilliant" -> 8236, "bills" -> 
                    8237, "##bar" -> 8238, "##nik" -> 8239, "fucking" -> 8240,
                     "mainland" -> 8241, "server" -> 8242, "pleasant" -> 8243,
                     "seized" -> 8244, "veterans" -> 8245, "jerked" -> 8246, 
                    "fail" -> 8247, "beta" -> 8248, "brush" -> 8249, 
                    "radiation" -> 8250, "stored" -> 8251, "warmth" -> 8252, 
                    "southeastern" -> 8253, "nate" -> 8254, "sin" -> 8255, 
                    "raced" -> 8256, "berkeley" -> 8257, "joke" -> 8258, 
                    "athlete" -> 8259, "designation" -> 8260, "trunk" -> 8261,
                     "##low" -> 8262, "roland" -> 8263, "qualification" -> 
                    8264, "archives" -> 8265, "heels" -> 8266, "artwork" -> 
                    8267, "receives" -> 8268, "judicial" -> 8269, "reserves" -> 
                    8270, "##bed" -> 8271, "woke" -> 8272, "installation" -> 
                    8273, "abu" -> 8274, "floating" -> 8275, "fake" -> 8276, 
                    "lesser" -> 8277, "excitement" -> 8278, "interface" -> 
                    8279, "concentrated" -> 8280, "addressed" -> 8281, 
                    "characteristic" -> 8282, "amanda" -> 8283, "saxophone" -> 
                    8284, "monk" -> 8285, "auto" -> 8286, "##bus" -> 8287, 
                    "releasing" -> 8288, "egg" -> 8289, "dies" -> 8290, 
                    "interaction" -> 8291, "defender" -> 8292, "ce" -> 8293, 
                    "outbreak" -> 8294, "glory" -> 8295, "loving" -> 8296, 
                    "##bert" -> 8297, "sequel" -> 8298, "consciousness" -> 
                    8299, "http" -> 8300, "awake" -> 8301, "ski" -> 8302, 
                    "enrolled" -> 8303, "##ress" -> 8304, "handling" -> 8305, 
                    "rookie" -> 8306, "brow" -> 8307, "somebody" -> 8308, 
                    "biography" -> 8309, "warfare" -> 8310, "amounts" -> 8311,
                     "contracts" -> 8312, "presentation" -> 8313, "fabric" -> 
                    8314, "dissolved" -> 8315, "challenged" -> 8316, "meter" -> 
                    8317, "psychological" -> 8318, "lt" -> 8319, "elevated" -> 
                    8320, "rally" -> 8321, "accurate" -> 8322, "##tha" -> 
                    8323, "hospitals" -> 8324, "undergraduate" -> 8325, 
                    "specialist" -> 8326, "venezuela" -> 8327, "exhibit" -> 
                    8328, "shed" -> 8329, "nursing" -> 8330, "protestant" -> 
                    8331, "fluid" -> 8332, "structural" -> 8333, "footage" -> 
                    8334, "jared" -> 8335, "consistent" -> 8336, "prey" -> 
                    8337, "##ska" -> 8338, "succession" -> 8339, "reflect" -> 
                    8340, "exile" -> 8341, "lebanon" -> 8342, "wiped" -> 8343,
                     "suspect" -> 8344, "shanghai" -> 8345, "resting" -> 8346,
                     "integration" -> 8347, "preservation" -> 8348, "marvel" -> 
                    8349, "variant" -> 8350, "pirates" -> 8351, "sheep" -> 
                    8352, "rounded" -> 8353, "capita" -> 8354, "sailing" -> 
                    8355, "colonies" -> 8356, "manuscript" -> 8357, "deemed" -> 
                    8358, "variations" -> 8359, "clarke" -> 8360, 
                    "functional" -> 8361, "emerging" -> 8362, "boxing" -> 
                    8363, "relaxed" -> 8364, "curse" -> 8365, "azerbaijan" -> 
                    8366, "heavyweight" -> 8367, "nickname" -> 8368, 
                    "editorial" -> 8369, "rang" -> 8370, "grid" -> 8371, 
                    "tightened" -> 8372, "earthquake" -> 8373, "flashed" -> 
                    8374, "miguel" -> 8375, "rushing" -> 8376, "##ches" -> 
                    8377, "improvements" -> 8378, "boxes" -> 8379, "brooks" -> 
                    8380, "180" -> 8381, "consumption" -> 8382, "molecular" -> 
                    8383, "felix" -> 8384, "societies" -> 8385, "repeatedly" -> 
                    8386, "variation" -> 8387, "aids" -> 8388, "civic" -> 
                    8389, "graphics" -> 8390, "professionals" -> 8391, 
                    "realm" -> 8392, "autonomous" -> 8393, "receiver" -> 8394,
                     "delayed" -> 8395, "workshop" -> 8396, "militia" -> 8397,
                     "chairs" -> 8398, "trump" -> 8399, "canyon" -> 8400, 
                    "##point" -> 8401, "harsh" -> 8402, "extending" -> 8403, 
                    "lovely" -> 8404, "happiness" -> 8405, "##jan" -> 8406, 
                    "stake" -> 8407, "eyebrows" -> 8408, "embassy" -> 8409, 
                    "wellington" -> 8410, "hannah" -> 8411, "##ella" -> 8412, 
                    "sony" -> 8413, "corners" -> 8414, "bishops" -> 8415, 
                    "swear" -> 8416, "cloth" -> 8417, "contents" -> 8418, 
                    "xi" -> 8419, "namely" -> 8420, "commenced" -> 8421, 
                    "1854" -> 8422, "stanford" -> 8423, "nashville" -> 8424, 
                    "courage" -> 8425, "graphic" -> 8426, "commitment" -> 
                    8427, "garrison" -> 8428, "##bin" -> 8429, "hamlet" -> 
                    8430, "clearing" -> 8431, "rebels" -> 8432, "attraction" -> 
                    8433, "literacy" -> 8434, "cooking" -> 8435, "ruins" -> 
                    8436, "temples" -> 8437, "jenny" -> 8438, "humanity" -> 
                    8439, "celebrate" -> 8440, "hasn" -> 8441, "freight" -> 
                    8442, "sixty" -> 8443, "rebel" -> 8444, "bastard" -> 8445,
                     "##art" -> 8446, "newton" -> 8447, "##ada" -> 8448, 
                    "deer" -> 8449, "##ges" -> 8450, "##ching" -> 8451, 
                    "smiles" -> 8452, "delaware" -> 8453, "singers" -> 8454, 
                    "##ets" -> 8455, "approaching" -> 8456, "assists" -> 8457,
                     "flame" -> 8458, "##ph" -> 8459, "boulevard" -> 8460, 
                    "barrel" -> 8461, "planted" -> 8462, "##ome" -> 8463, 
                    "pursuit" -> 8464, "##sia" -> 8465, "consequences" -> 
                    8466, "posts" -> 8467, "shallow" -> 8468, "invitation" -> 
                    8469, "rode" -> 8470, "depot" -> 8471, "ernest" -> 8472, 
                    "kane" -> 8473, "rod" -> 8474, "concepts" -> 8475, 
                    "preston" -> 8476, "topic" -> 8477, "chambers" -> 8478, 
                    "striking" -> 8479, "blast" -> 8480, "arrives" -> 8481, 
                    "descendants" -> 8482, "montgomery" -> 8483, "ranges" -> 
                    8484, "worlds" -> 8485, "##lay" -> 8486, "##ari" -> 8487, 
                    "span" -> 8488, "chaos" -> 8489, "praise" -> 8490, "##ag" -> 
                    8491, "fewer" -> 8492, "1855" -> 8493, "sanctuary" -> 
                    8494, "mud" -> 8495, "fbi" -> 8496, "##ions" -> 8497, 
                    "programmes" -> 8498, "maintaining" -> 8499, "unity" -> 
                    8500, "harper" -> 8501, "bore" -> 8502, "handsome" -> 
                    8503, "closure" -> 8504, "tournaments" -> 8505, "thunder" -> 
                    8506, "nebraska" -> 8507, "linda" -> 8508, "facade" -> 
                    8509, "puts" -> 8510, "satisfied" -> 8511, "argentine" -> 
                    8512, "dale" -> 8513, "cork" -> 8514, "dome" -> 8515, 
                    "panama" -> 8516, "##yl" -> 8517, "1858" -> 8518, "tasks" -> 
                    8519, "experts" -> 8520, "##ates" -> 8521, "feeding" -> 
                    8522, "equation" -> 8523, "##las" -> 8524, "##ida" -> 
                    8525, "##tu" -> 8526, "engage" -> 8527, "bryan" -> 8528, 
                    "##ax" -> 8529, "um" -> 8530, "quartet" -> 8531, "melody" -> 
                    8532, "disbanded" -> 8533, "sheffield" -> 8534, "blocked" -> 
                    8535, "gasped" -> 8536, "delay" -> 8537, "kisses" -> 8538,
                     "maggie" -> 8539, "connects" -> 8540, "##non" -> 8541, 
                    "sts" -> 8542, "poured" -> 8543, "creator" -> 8544, 
                    "publishers" -> 8545, "##we" -> 8546, "guided" -> 8547, 
                    "ellis" -> 8548, "extinct" -> 8549, "hug" -> 8550, 
                    "gaining" -> 8551, "##ord" -> 8552, "complicated" -> 8553,
                     "##bility" -> 8554, "poll" -> 8555, "clenched" -> 8556, 
                    "investigate" -> 8557, "##use" -> 8558, "thereby" -> 8559,
                     "quantum" -> 8560, "spine" -> 8561, "cdp" -> 8562, 
                    "humor" -> 8563, "kills" -> 8564, "administered" -> 8565, 
                    "semifinals" -> 8566, "##du" -> 8567, "encountered" -> 
                    8568, "ignore" -> 8569, "##bu" -> 8570, "commentary" -> 
                    8571, "##maker" -> 8572, "bother" -> 8573, "roosevelt" -> 
                    8574, "140" -> 8575, "plains" -> 8576, "halfway" -> 8577, 
                    "flowing" -> 8578, "cultures" -> 8579, "crack" -> 8580, 
                    "imprisoned" -> 8581, "neighboring" -> 8582, "airline" -> 
                    8583, "##ses" -> 8584, "##view" -> 8585, "##mate" -> 8586,
                     "##ec" -> 8587, "gather" -> 8588, "wolves" -> 8589, 
                    "marathon" -> 8590, "transformed" -> 8591, "##ill" -> 
                    8592, "cruise" -> 8593, "organisations" -> 8594, "carol" -> 
                    8595, "punch" -> 8596, "exhibitions" -> 8597, "numbered" -> 
                    8598, "alarm" -> 8599, "ratings" -> 8600, "daddy" -> 8601,
                     "silently" -> 8602, "##stein" -> 8603, "queens" -> 8604, 
                    "colours" -> 8605, "impression" -> 8606, "guidance" -> 
                    8607, "liu" -> 8608, "tactical" -> 8609, "##rat" -> 8610, 
                    "marshal" -> 8611, "della" -> 8612, "arrow" -> 8613, 
                    "##ings" -> 8614, "rested" -> 8615, "feared" -> 8616, 
                    "tender" -> 8617, "owns" -> 8618, "bitter" -> 8619, 
                    "advisor" -> 8620, "escort" -> 8621, "##ides" -> 8622, 
                    "spare" -> 8623, "farms" -> 8624, "grants" -> 8625, 
                    "##ene" -> 8626, "dragons" -> 8627, "encourage" -> 8628, 
                    "colleagues" -> 8629, "cameras" -> 8630, "##und" -> 8631, 
                    "sucked" -> 8632, "pile" -> 8633, "spirits" -> 8634, 
                    "prague" -> 8635, "statements" -> 8636, "suspension" -> 
                    8637, "landmark" -> 8638, "fence" -> 8639, "torture" -> 
                    8640, "recreation" -> 8641, "bags" -> 8642, "permanently" -> 
                    8643, "survivors" -> 8644, "pond" -> 8645, "spy" -> 8646, 
                    "predecessor" -> 8647, "bombing" -> 8648, "coup" -> 8649, 
                    "##og" -> 8650, "protecting" -> 8651, "transformation" -> 
                    8652, "glow" -> 8653, "##lands" -> 8654, "##book" -> 8655,
                     "dug" -> 8656, "priests" -> 8657, "andrea" -> 8658, 
                    "feat" -> 8659, "barn" -> 8660, "jumping" -> 8661, 
                    "##chen" -> 8662, "##ologist" -> 8663, "##con" -> 8664, 
                    "casualties" -> 8665, "stern" -> 8666, "auckland" -> 8667,
                     "pipe" -> 8668, "serie" -> 8669, "revealing" -> 8670, 
                    "ba" -> 8671, "##bel" -> 8672, "trevor" -> 8673, "mercy" -> 
                    8674, "spectrum" -> 8675, "yang" -> 8676, "consist" -> 
                    8677, "governing" -> 8678, "collaborated" -> 8679, 
                    "possessed" -> 8680, "epic" -> 8681, "comprises" -> 8682, 
                    "blew" -> 8683, "shane" -> 8684, "##ack" -> 8685, "lopez" -> 
                    8686, "honored" -> 8687, "magical" -> 8688, "sacrifice" -> 
                    8689, "judgment" -> 8690, "perceived" -> 8691, "hammer" -> 
                    8692, "mtv" -> 8693, "baronet" -> 8694, "tune" -> 8695, 
                    "das" -> 8696, "missionary" -> 8697, "sheets" -> 8698, 
                    "350" -> 8699, "neutral" -> 8700, "oral" -> 8701, 
                    "threatening" -> 8702, "attractive" -> 8703, "shade" -> 
                    8704, "aims" -> 8705, "seminary" -> 8706, "##master" -> 
                    8707, "estates" -> 8708, "1856" -> 8709, "michel" -> 8710,
                     "wounds" -> 8711, "refugees" -> 8712, "manufacturers" -> 
                    8713, "##nic" -> 8714, "mercury" -> 8715, "syndrome" -> 
                    8716, "porter" -> 8717, "##iya" -> 8718, "##din" -> 8719, 
                    "hamburg" -> 8720, "identification" -> 8721, "upstairs" -> 
                    8722, "purse" -> 8723, "widened" -> 8724, "pause" -> 8725,
                     "cared" -> 8726, "breathed" -> 8727, "affiliate" -> 8728,
                     "santiago" -> 8729, "prevented" -> 8730, "celtic" -> 
                    8731, "fisher" -> 8732, "125" -> 8733, "recruited" -> 
                    8734, "byzantine" -> 8735, "reconstruction" -> 8736, 
                    "farther" -> 8737, "##mp" -> 8738, "diet" -> 8739, "sake" -> 
                    8740, "au" -> 8741, "spite" -> 8742, "sensation" -> 8743, 
                    "##ert" -> 8744, "blank" -> 8745, "separation" -> 8746, 
                    "105" -> 8747, "##hon" -> 8748, "vladimir" -> 8749, 
                    "armies" -> 8750, "anime" -> 8751, "##lie" -> 8752, 
                    "accommodate" -> 8753, "orbit" -> 8754, "cult" -> 8755, 
                    "sofia" -> 8756, "archive" -> 8757, "##ify" -> 8758, 
                    "##box" -> 8759, "founders" -> 8760, "sustained" -> 8761, 
                    "disorder" -> 8762, "honours" -> 8763, "northeastern" -> 
                    8764, "mia" -> 8765, "crops" -> 8766, "violet" -> 8767, 
                    "threats" -> 8768, "blanket" -> 8769, "fires" -> 8770, 
                    "canton" -> 8771, "followers" -> 8772, "southwestern" -> 
                    8773, "prototype" -> 8774, "voyage" -> 8775, "assignment" -> 
                    8776, "altered" -> 8777, "moderate" -> 8778, "protocol" -> 
                    8779, "pistol" -> 8780, "##eo" -> 8781, "questioned" -> 
                    8782, "brass" -> 8783, "lifting" -> 8784, "1852" -> 8785, 
                    "math" -> 8786, "authored" -> 8787, "##ual" -> 8788, 
                    "doug" -> 8789, "dimensional" -> 8790, "dynamic" -> 8791, 
                    "##san" -> 8792, "1851" -> 8793, "pronounced" -> 8794, 
                    "grateful" -> 8795, "quest" -> 8796, "uncomfortable" -> 
                    8797, "boom" -> 8798, "presidency" -> 8799, "stevens" -> 
                    8800, "relating" -> 8801, "politicians" -> 8802, "chen" -> 
                    8803, "barrier" -> 8804, "quinn" -> 8805, "diana" -> 8806,
                     "mosque" -> 8807, "tribal" -> 8808, "cheese" -> 8809, 
                    "palmer" -> 8810, "portions" -> 8811, "sometime" -> 8812, 
                    "chester" -> 8813, "treasure" -> 8814, "wu" -> 8815, 
                    "bend" -> 8816, "download" -> 8817, "millions" -> 8818, 
                    "reforms" -> 8819, "registration" -> 8820, "##osa" -> 
                    8821, "consequently" -> 8822, "monitoring" -> 8823, "ate" -> 
                    8824, "preliminary" -> 8825, "brandon" -> 8826, 
                    "invented" -> 8827, "ps" -> 8828, "eaten" -> 8829, 
                    "exterior" -> 8830, "intervention" -> 8831, "ports" -> 
                    8832, "documented" -> 8833, "log" -> 8834, "displays" -> 
                    8835, "lecture" -> 8836, "sally" -> 8837, "favourite" -> 
                    8838, "##itz" -> 8839, "vermont" -> 8840, "lo" -> 8841, 
                    "invisible" -> 8842, "isle" -> 8843, "breed" -> 8844, 
                    "##ator" -> 8845, "journalists" -> 8846, "relay" -> 8847, 
                    "speaks" -> 8848, "backward" -> 8849, "explore" -> 8850, 
                    "midfielder" -> 8851, "actively" -> 8852, "stefan" -> 
                    8853, "procedures" -> 8854, "cannon" -> 8855, "blond" -> 
                    8856, "kenneth" -> 8857, "centered" -> 8858, "servants" -> 
                    8859, "chains" -> 8860, "libraries" -> 8861, "malcolm" -> 
                    8862, "essex" -> 8863, "henri" -> 8864, "slavery" -> 8865,
                     "##hal" -> 8866, "facts" -> 8867, "fairy" -> 8868, 
                    "coached" -> 8869, "cassie" -> 8870, "cats" -> 8871, 
                    "washed" -> 8872, "cop" -> 8873, "##fi" -> 8874, 
                    "announcement" -> 8875, "item" -> 8876, "2000s" -> 8877, 
                    "vinyl" -> 8878, "activated" -> 8879, "marco" -> 8880, 
                    "frontier" -> 8881, "growled" -> 8882, "curriculum" -> 
                    8883, "##das" -> 8884, "loyal" -> 8885, "accomplished" -> 
                    8886, "leslie" -> 8887, "ritual" -> 8888, "kenny" -> 8889,
                     "##00" -> 8890, "vii" -> 8891, "napoleon" -> 8892, 
                    "hollow" -> 8893, "hybrid" -> 8894, "jungle" -> 8895, 
                    "stationed" -> 8896, "friedrich" -> 8897, "counted" -> 
                    8898, "##ulated" -> 8899, "platinum" -> 8900, 
                    "theatrical" -> 8901, "seated" -> 8902, "col" -> 8903, 
                    "rubber" -> 8904, "glen" -> 8905, "1840" -> 8906, 
                    "diversity" -> 8907, "healing" -> 8908, "extends" -> 8909,
                     "id" -> 8910, "provisions" -> 8911, "administrator" -> 
                    8912, "columbus" -> 8913, "##oe" -> 8914, "tributary" -> 
                    8915, "te" -> 8916, "assured" -> 8917, "org" -> 8918, 
                    "##uous" -> 8919, "prestigious" -> 8920, "examined" -> 
                    8921, "lectures" -> 8922, "grammy" -> 8923, "ronald" -> 
                    8924, "associations" -> 8925, "bailey" -> 8926, "allan" -> 
                    8927, "essays" -> 8928, "flute" -> 8929, "believing" -> 
                    8930, "consultant" -> 8931, "proceedings" -> 8932, 
                    "travelling" -> 8933, "1853" -> 8934, "kit" -> 8935, 
                    "kerala" -> 8936, "yugoslavia" -> 8937, "buddy" -> 8938, 
                    "methodist" -> 8939, "##ith" -> 8940, "burial" -> 8941, 
                    "centres" -> 8942, "batman" -> 8943, "##nda" -> 8944, 
                    "discontinued" -> 8945, "bo" -> 8946, "dock" -> 8947, 
                    "stockholm" -> 8948, "lungs" -> 8949, "severely" -> 8950, 
                    "##nk" -> 8951, "citing" -> 8952, "manga" -> 8953, 
                    "##ugh" -> 8954, "steal" -> 8955, "mumbai" -> 8956, 
                    "iraqi" -> 8957, "robot" -> 8958, "celebrity" -> 8959, 
                    "bride" -> 8960, "broadcasts" -> 8961, "abolished" -> 
                    8962, "pot" -> 8963, "joel" -> 8964, "overhead" -> 8965, 
                    "franz" -> 8966, "packed" -> 8967, "reconnaissance" -> 
                    8968, "johann" -> 8969, "acknowledged" -> 8970, 
                    "introduce" -> 8971, "handled" -> 8972, "doctorate" -> 
                    8973, "developments" -> 8974, "drinks" -> 8975, "alley" -> 
                    8976, "palestine" -> 8977, "##nis" -> 8978, "##aki" -> 
                    8979, "proceeded" -> 8980, "recover" -> 8981, "bradley" -> 
                    8982, "grain" -> 8983, "patch" -> 8984, "afford" -> 8985, 
                    "infection" -> 8986, "nationalist" -> 8987, "legendary" -> 
                    8988, "##ath" -> 8989, "interchange" -> 8990, "virtually" -> 
                    8991, "gen" -> 8992, "gravity" -> 8993, "exploration" -> 
                    8994, "amber" -> 8995, "vital" -> 8996, "wishes" -> 8997, 
                    "powell" -> 8998, "doctrine" -> 8999, "elbow" -> 9000, 
                    "screenplay" -> 9001, "##bird" -> 9002, "contribute" -> 
                    9003, "indonesian" -> 9004, "pet" -> 9005, "creates" -> 
                    9006, "##com" -> 9007, "enzyme" -> 9008, "kylie" -> 9009, 
                    "discipline" -> 9010, "drops" -> 9011, "manila" -> 9012, 
                    "hunger" -> 9013, "##ien" -> 9014, "layers" -> 9015, 
                    "suffer" -> 9016, "fever" -> 9017, "bits" -> 9018, 
                    "monica" -> 9019, "keyboard" -> 9020, "manages" -> 9021, 
                    "##hood" -> 9022, "searched" -> 9023, "appeals" -> 9024, 
                    "##bad" -> 9025, "testament" -> 9026, "grande" -> 9027, 
                    "reid" -> 9028, "##war" -> 9029, "beliefs" -> 9030, 
                    "congo" -> 9031, "##ification" -> 9032, "##dia" -> 9033, 
                    "si" -> 9034, "requiring" -> 9035, "##via" -> 9036, 
                    "casey" -> 9037, "1849" -> 9038, "regret" -> 9039, 
                    "streak" -> 9040, "rape" -> 9041, "depends" -> 9042, 
                    "syrian" -> 9043, "sprint" -> 9044, "pound" -> 9045, 
                    "tourists" -> 9046, "upcoming" -> 9047, "pub" -> 9048, 
                    "##xi" -> 9049, "tense" -> 9050, "##els" -> 9051, 
                    "practiced" -> 9052, "echo" -> 9053, "nationwide" -> 9054,
                     "guild" -> 9055, "motorcycle" -> 9056, "liz" -> 9057, 
                    "##zar" -> 9058, "chiefs" -> 9059, "desired" -> 9060, 
                    "elena" -> 9061, "bye" -> 9062, "precious" -> 9063, 
                    "absorbed" -> 9064, "relatives" -> 9065, "booth" -> 9066, 
                    "pianist" -> 9067, "##mal" -> 9068, "citizenship" -> 9069,
                     "exhausted" -> 9070, "wilhelm" -> 9071, "##ceae" -> 9072,
                     "##hed" -> 9073, "noting" -> 9074, "quarterback" -> 9075,
                     "urge" -> 9076, "hectares" -> 9077, "##gue" -> 9078, 
                    "ace" -> 9079, "holly" -> 9080, "##tal" -> 9081, "blonde" -> 
                    9082, "davies" -> 9083, "parked" -> 9084, "sustainable" -> 
                    9085, "stepping" -> 9086, "twentieth" -> 9087, "airfield" -> 
                    9088, "galaxy" -> 9089, "nest" -> 9090, "chip" -> 9091, 
                    "##nell" -> 9092, "tan" -> 9093, "shaft" -> 9094, "paulo" -> 
                    9095, "requirement" -> 9096, "##zy" -> 9097, "paradise" -> 
                    9098, "tobacco" -> 9099, "trans" -> 9100, "renewed" -> 
                    9101, "vietnamese" -> 9102, "##cker" -> 9103, "##ju" -> 
                    9104, "suggesting" -> 9105, "catching" -> 9106, "holmes" -> 
                    9107, "enjoying" -> 9108, "md" -> 9109, "trips" -> 9110, 
                    "colt" -> 9111, "holder" -> 9112, "butterfly" -> 9113, 
                    "nerve" -> 9114, "reformed" -> 9115, "cherry" -> 9116, 
                    "bowling" -> 9117, "trailer" -> 9118, "carriage" -> 9119, 
                    "goodbye" -> 9120, "appreciate" -> 9121, "toy" -> 9122, 
                    "joshua" -> 9123, "interactive" -> 9124, "enabled" -> 
                    9125, "involve" -> 9126, "##kan" -> 9127, "collar" -> 
                    9128, "determination" -> 9129, "bunch" -> 9130, 
                    "facebook" -> 9131, "recall" -> 9132, "shorts" -> 9133, 
                    "superintendent" -> 9134, "episcopal" -> 9135, 
                    "frustration" -> 9136, "giovanni" -> 9137, "nineteenth" -> 
                    9138, "laser" -> 9139, "privately" -> 9140, "array" -> 
                    9141, "circulation" -> 9142, "##ovic" -> 9143, 
                    "armstrong" -> 9144, "deals" -> 9145, "painful" -> 9146, 
                    "permit" -> 9147, "discrimination" -> 9148, "##wi" -> 
                    9149, "aires" -> 9150, "retiring" -> 9151, "cottage" -> 
                    9152, "ni" -> 9153, "##sta" -> 9154, "horizon" -> 9155, 
                    "ellen" -> 9156, "jamaica" -> 9157, "ripped" -> 9158, 
                    "fernando" -> 9159, "chapters" -> 9160, "playstation" -> 
                    9161, "patron" -> 9162, "lecturer" -> 9163, "navigation" -> 
                    9164, "behaviour" -> 9165, "genes" -> 9166, "georgian" -> 
                    9167, "export" -> 9168, "solomon" -> 9169, "rivals" -> 
                    9170, "swift" -> 9171, "seventeen" -> 9172, "rodriguez" -> 
                    9173, "princeton" -> 9174, "independently" -> 9175, "sox" -> 
                    9176, "1847" -> 9177, "arguing" -> 9178, "entity" -> 9179,
                     "casting" -> 9180, "hank" -> 9181, "criteria" -> 9182, 
                    "oakland" -> 9183, "geographic" -> 9184, "milwaukee" -> 
                    9185, "reflection" -> 9186, "expanding" -> 9187, 
                    "conquest" -> 9188, "dubbed" -> 9189, "##tv" -> 9190, 
                    "halt" -> 9191, "brave" -> 9192, "brunswick" -> 9193, 
                    "doi" -> 9194, "arched" -> 9195, "curtis" -> 9196, 
                    "divorced" -> 9197, "predominantly" -> 9198, "somerset" -> 
                    9199, "streams" -> 9200, "ugly" -> 9201, "zoo" -> 9202, 
                    "horrible" -> 9203, "curved" -> 9204, "buenos" -> 9205, 
                    "fierce" -> 9206, "dictionary" -> 9207, "vector" -> 9208, 
                    "theological" -> 9209, "unions" -> 9210, "handful" -> 
                    9211, "stability" -> 9212, "chan" -> 9213, "punjab" -> 
                    9214, "segments" -> 9215, "##lly" -> 9216, "altar" -> 
                    9217, "ignoring" -> 9218, "gesture" -> 9219, "monsters" -> 
                    9220, "pastor" -> 9221, "##stone" -> 9222, "thighs" -> 
                    9223, "unexpected" -> 9224, "operators" -> 9225, 
                    "abruptly" -> 9226, "coin" -> 9227, "compiled" -> 9228, 
                    "associates" -> 9229, "improving" -> 9230, "migration" -> 
                    9231, "pin" -> 9232, "##ose" -> 9233, "compact" -> 9234, 
                    "collegiate" -> 9235, "reserved" -> 9236, "##urs" -> 9237,
                     "quarterfinals" -> 9238, "roster" -> 9239, "restore" -> 
                    9240, "assembled" -> 9241, "hurry" -> 9242, "oval" -> 
                    9243, "##cies" -> 9244, "1846" -> 9245, "flags" -> 9246, 
                    "martha" -> 9247, "##del" -> 9248, "victories" -> 9249, 
                    "sharply" -> 9250, "##rated" -> 9251, "argues" -> 9252, 
                    "deadly" -> 9253, "neo" -> 9254, "drawings" -> 9255, 
                    "symbols" -> 9256, "performer" -> 9257, "##iel" -> 9258, 
                    "griffin" -> 9259, "restrictions" -> 9260, "editing" -> 
                    9261, "andrews" -> 9262, "java" -> 9263, "journals" -> 
                    9264, "arabia" -> 9265, "compositions" -> 9266, "dee" -> 
                    9267, "pierce" -> 9268, "removing" -> 9269, "hindi" -> 
                    9270, "casino" -> 9271, "runway" -> 9272, "civilians" -> 
                    9273, "minds" -> 9274, "nasa" -> 9275, "hotels" -> 9276, 
                    "##zation" -> 9277, "refuge" -> 9278, "rent" -> 9279, 
                    "retain" -> 9280, "potentially" -> 9281, "conferences" -> 
                    9282, "suburban" -> 9283, "conducting" -> 9284, "##tto" -> 
                    9285, "##tions" -> 9286, "##tle" -> 9287, "descended" -> 
                    9288, "massacre" -> 9289, "##cal" -> 9290, "ammunition" -> 
                    9291, "terrain" -> 9292, "fork" -> 9293, "souls" -> 9294, 
                    "counts" -> 9295, "chelsea" -> 9296, "durham" -> 9297, 
                    "drives" -> 9298, "cab" -> 9299, "##bank" -> 9300, 
                    "perth" -> 9301, "realizing" -> 9302, "palestinian" -> 
                    9303, "finn" -> 9304, "simpson" -> 9305, "##dal" -> 9306, 
                    "betty" -> 9307, "##ule" -> 9308, "moreover" -> 9309, 
                    "particles" -> 9310, "cardinals" -> 9311, "tent" -> 9312, 
                    "evaluation" -> 9313, "extraordinary" -> 9314, "##oid" -> 
                    9315, "inscription" -> 9316, "##works" -> 9317, 
                    "wednesday" -> 9318, "chloe" -> 9319, "maintains" -> 9320,
                     "panels" -> 9321, "ashley" -> 9322, "trucks" -> 9323, 
                    "##nation" -> 9324, "cluster" -> 9325, "sunlight" -> 9326,
                     "strikes" -> 9327, "zhang" -> 9328, "##wing" -> 9329, 
                    "dialect" -> 9330, "canon" -> 9331, "##ap" -> 9332, 
                    "tucked" -> 9333, "##ws" -> 9334, "collecting" -> 9335, 
                    "##mas" -> 9336, "##can" -> 9337, "##sville" -> 9338, 
                    "maker" -> 9339, "quoted" -> 9340, "evan" -> 9341, 
                    "franco" -> 9342, "aria" -> 9343, "buying" -> 9344, 
                    "cleaning" -> 9345, "eva" -> 9346, "closet" -> 9347, 
                    "provision" -> 9348, "apollo" -> 9349, "clinic" -> 9350, 
                    "rat" -> 9351, "##ez" -> 9352, "necessarily" -> 9353, 
                    "ac" -> 9354, "##gle" -> 9355, "##ising" -> 9356, 
                    "venues" -> 9357, "flipped" -> 9358, "cent" -> 9359, 
                    "spreading" -> 9360, "trustees" -> 9361, "checking" -> 
                    9362, "authorized" -> 9363, "##sco" -> 9364, 
                    "disappointed" -> 9365, "##ado" -> 9366, "notion" -> 9367,
                     "duration" -> 9368, "trumpet" -> 9369, "hesitated" -> 
                    9370, "topped" -> 9371, "brussels" -> 9372, "rolls" -> 
                    9373, "theoretical" -> 9374, "hint" -> 9375, "define" -> 
                    9376, "aggressive" -> 9377, "repeat" -> 9378, "wash" -> 
                    9379, "peaceful" -> 9380, "optical" -> 9381, "width" -> 
                    9382, "allegedly" -> 9383, "mcdonald" -> 9384, "strict" -> 
                    9385, "copyright" -> 9386, "##illa" -> 9387, "investors" -> 
                    9388, "mar" -> 9389, "jam" -> 9390, "witnesses" -> 9391, 
                    "sounding" -> 9392, "miranda" -> 9393, "michelle" -> 9394,
                     "privacy" -> 9395, "hugo" -> 9396, "harmony" -> 9397, 
                    "##pp" -> 9398, "valid" -> 9399, "lynn" -> 9400, "glared" -> 
                    9401, "nina" -> 9402, "102" -> 9403, "headquartered" -> 
                    9404, "diving" -> 9405, "boarding" -> 9406, "gibson" -> 
                    9407, "##ncy" -> 9408, "albanian" -> 9409, "marsh" -> 
                    9410, "routine" -> 9411, "dealt" -> 9412, "enhanced" -> 
                    9413, "er" -> 9414, "intelligent" -> 9415, "substance" -> 
                    9416, "targeted" -> 9417, "enlisted" -> 9418, "discovers" -> 
                    9419, "spinning" -> 9420, "observations" -> 9421, 
                    "pissed" -> 9422, "smoking" -> 9423, "rebecca" -> 9424, 
                    "capitol" -> 9425, "visa" -> 9426, "varied" -> 9427, 
                    "costume" -> 9428, "seemingly" -> 9429, "indies" -> 9430, 
                    "compensation" -> 9431, "surgeon" -> 9432, "thursday" -> 
                    9433, "arsenal" -> 9434, "westminster" -> 9435, "suburbs" -> 
                    9436, "rid" -> 9437, "anglican" -> 9438, "##ridge" -> 
                    9439, "knots" -> 9440, "foods" -> 9441, "alumni" -> 9442, 
                    "lighter" -> 9443, "fraser" -> 9444, "whoever" -> 9445, 
                    "portal" -> 9446, "scandal" -> 9447, "##ray" -> 9448, 
                    "gavin" -> 9449, "advised" -> 9450, "instructor" -> 9451, 
                    "flooding" -> 9452, "terrorist" -> 9453, "##ale" -> 9454, 
                    "teenage" -> 9455, "interim" -> 9456, "senses" -> 9457, 
                    "duck" -> 9458, "teen" -> 9459, "thesis" -> 9460, "abby" -> 
                    9461, "eager" -> 9462, "overcome" -> 9463, "##ile" -> 
                    9464, "newport" -> 9465, "glenn" -> 9466, "rises" -> 9467,
                     "shame" -> 9468, "##cc" -> 9469, "prompted" -> 9470, 
                    "priority" -> 9471, "forgot" -> 9472, "bomber" -> 9473, 
                    "nicolas" -> 9474, "protective" -> 9475, "360" -> 9476, 
                    "cartoon" -> 9477, "katherine" -> 9478, "breeze" -> 9479, 
                    "lonely" -> 9480, "trusted" -> 9481, "henderson" -> 9482, 
                    "richardson" -> 9483, "relax" -> 9484, "banner" -> 9485, 
                    "candy" -> 9486, "palms" -> 9487, "remarkable" -> 9488, 
                    "##rio" -> 9489, "legends" -> 9490, "cricketer" -> 9491, 
                    "essay" -> 9492, "ordained" -> 9493, "edmund" -> 9494, 
                    "rifles" -> 9495, "trigger" -> 9496, "##uri" -> 9497, 
                    "##away" -> 9498, "sail" -> 9499, "alert" -> 9500, "1830" -> 
                    9501, "audiences" -> 9502, "penn" -> 9503, "sussex" -> 
                    9504, "siblings" -> 9505, "pursued" -> 9506, 
                    "indianapolis" -> 9507, "resist" -> 9508, "rosa" -> 9509, 
                    "consequence" -> 9510, "succeed" -> 9511, "avoided" -> 
                    9512, "1845" -> 9513, "##ulation" -> 9514, "inland" -> 
                    9515, "##tie" -> 9516, "##nna" -> 9517, "counsel" -> 9518,
                     "profession" -> 9519, "chronicle" -> 9520, "hurried" -> 
                    9521, "##una" -> 9522, "eyebrow" -> 9523, "eventual" -> 
                    9524, "bleeding" -> 9525, "innovative" -> 9526, "cure" -> 
                    9527, "##dom" -> 9528, "committees" -> 9529, "accounting" -> 
                    9530, "con" -> 9531, "scope" -> 9532, "hardy" -> 9533, 
                    "heather" -> 9534, "tenor" -> 9535, "gut" -> 9536, 
                    "herald" -> 9537, "codes" -> 9538, "tore" -> 9539, 
                    "scales" -> 9540, "wagon" -> 9541, "##oo" -> 9542, 
                    "luxury" -> 9543, "tin" -> 9544, "prefer" -> 9545, 
                    "fountain" -> 9546, "triangle" -> 9547, "bonds" -> 9548, 
                    "darling" -> 9549, "convoy" -> 9550, "dried" -> 9551, 
                    "traced" -> 9552, "beings" -> 9553, "troy" -> 9554, 
                    "accidentally" -> 9555, "slam" -> 9556, "findings" -> 
                    9557, "smelled" -> 9558, "joey" -> 9559, "lawyers" -> 
                    9560, "outcome" -> 9561, "steep" -> 9562, "bosnia" -> 
                    9563, "configuration" -> 9564, "shifting" -> 9565, "toll" -> 
                    9566, "brook" -> 9567, "performers" -> 9568, "lobby" -> 
                    9569, "philosophical" -> 9570, "construct" -> 9571, 
                    "shrine" -> 9572, "aggregate" -> 9573, "boot" -> 9574, 
                    "cox" -> 9575, "phenomenon" -> 9576, "savage" -> 9577, 
                    "insane" -> 9578, "solely" -> 9579, "reynolds" -> 9580, 
                    "lifestyle" -> 9581, "##ima" -> 9582, "nationally" -> 
                    9583, "holdings" -> 9584, "consideration" -> 9585, 
                    "enable" -> 9586, "edgar" -> 9587, "mo" -> 9588, "mama" -> 
                    9589, "##tein" -> 9590, "fights" -> 9591, "relegation" -> 
                    9592, "chances" -> 9593, "atomic" -> 9594, "hub" -> 9595, 
                    "conjunction" -> 9596, "awkward" -> 9597, "reactions" -> 
                    9598, "currency" -> 9599, "finale" -> 9600, "kumar" -> 
                    9601, "underwent" -> 9602, "steering" -> 9603, 
                    "elaborate" -> 9604, "gifts" -> 9605, "comprising" -> 
                    9606, "melissa" -> 9607, "veins" -> 9608, "reasonable" -> 
                    9609, "sunshine" -> 9610, "chi" -> 9611, "solve" -> 9612, 
                    "trails" -> 9613, "inhabited" -> 9614, "elimination" -> 
                    9615, "ethics" -> 9616, "huh" -> 9617, "ana" -> 9618, 
                    "molly" -> 9619, "consent" -> 9620, "apartments" -> 9621, 
                    "layout" -> 9622, "marines" -> 9623, "##ces" -> 9624, 
                    "hunters" -> 9625, "bulk" -> 9626, "##oma" -> 9627, 
                    "hometown" -> 9628, "##wall" -> 9629, "##mont" -> 9630, 
                    "cracked" -> 9631, "reads" -> 9632, "neighbouring" -> 
                    9633, "withdrawn" -> 9634, "admission" -> 9635, 
                    "wingspan" -> 9636, "damned" -> 9637, "anthology" -> 9638,
                     "lancashire" -> 9639, "brands" -> 9640, "batting" -> 
                    9641, "forgive" -> 9642, "cuban" -> 9643, "awful" -> 9644,
                     "##lyn" -> 9645, "104" -> 9646, "dimensions" -> 9647, 
                    "imagination" -> 9648, "##ade" -> 9649, "dante" -> 9650, 
                    "##ship" -> 9651, "tracking" -> 9652, "desperately" -> 
                    9653, "goalkeeper" -> 9654, "##yne" -> 9655, "groaned" -> 
                    9656, "workshops" -> 9657, "confident" -> 9658, "burton" -> 
                    9659, "gerald" -> 9660, "milton" -> 9661, "circus" -> 
                    9662, "uncertain" -> 9663, "slope" -> 9664, "copenhagen" -> 
                    9665, "sophia" -> 9666, "fog" -> 9667, "philosopher" -> 
                    9668, "portraits" -> 9669, "accent" -> 9670, "cycling" -> 
                    9671, "varying" -> 9672, "gripped" -> 9673, "larvae" -> 
                    9674, "garrett" -> 9675, "specified" -> 9676, "scotia" -> 
                    9677, "mature" -> 9678, "luther" -> 9679, "kurt" -> 9680, 
                    "rap" -> 9681, "##kes" -> 9682, "aerial" -> 9683, "750" -> 
                    9684, "ferdinand" -> 9685, "heated" -> 9686, "es" -> 9687,
                     "transported" -> 9688, "##shan" -> 9689, "safely" -> 
                    9690, "nonetheless" -> 9691, "##orn" -> 9692, "##gal" -> 
                    9693, "motors" -> 9694, "demanding" -> 9695, "##sburg" -> 
                    9696, "startled" -> 9697, "##brook" -> 9698, "ally" -> 
                    9699, "generate" -> 9700, "caps" -> 9701, "ghana" -> 9702,
                     "stained" -> 9703, "demo" -> 9704, "mentions" -> 9705, 
                    "beds" -> 9706, "ap" -> 9707, "afterward" -> 9708, 
                    "diary" -> 9709, "##bling" -> 9710, "utility" -> 9711, 
                    "##iro" -> 9712, "richards" -> 9713, "1837" -> 9714, 
                    "conspiracy" -> 9715, "conscious" -> 9716, "shining" -> 
                    9717, "footsteps" -> 9718, "observer" -> 9719, "cyprus" -> 
                    9720, "urged" -> 9721, "loyalty" -> 9722, "developer" -> 
                    9723, "probability" -> 9724, "olive" -> 9725, "upgraded" -> 
                    9726, "gym" -> 9727, "miracle" -> 9728, "insects" -> 9729,
                     "graves" -> 9730, "1844" -> 9731, "ourselves" -> 9732, 
                    "hydrogen" -> 9733, "amazon" -> 9734, "katie" -> 9735, 
                    "tickets" -> 9736, "poets" -> 9737, "##pm" -> 9738, 
                    "planes" -> 9739, "##pan" -> 9740, "prevention" -> 9741, 
                    "witnessed" -> 9742, "dense" -> 9743, "jin" -> 9744, 
                    "randy" -> 9745, "tang" -> 9746, "warehouse" -> 9747, 
                    "monroe" -> 9748, "bang" -> 9749, "archived" -> 9750, 
                    "elderly" -> 9751, "investigations" -> 9752, "alec" -> 
                    9753, "granite" -> 9754, "mineral" -> 9755, "conflicts" -> 
                    9756, "controlling" -> 9757, "aboriginal" -> 9758, 
                    "carlo" -> 9759, "##zu" -> 9760, "mechanics" -> 9761, 
                    "stan" -> 9762, "stark" -> 9763, "rhode" -> 9764, "skirt" -> 
                    9765, "est" -> 9766, "##berry" -> 9767, "bombs" -> 9768, 
                    "respected" -> 9769, "##horn" -> 9770, "imposed" -> 9771, 
                    "limestone" -> 9772, "deny" -> 9773, "nominee" -> 9774, 
                    "memphis" -> 9775, "grabbing" -> 9776, "disabled" -> 9777,
                     "##als" -> 9778, "amusement" -> 9779, "aa" -> 9780, 
                    "frankfurt" -> 9781, "corn" -> 9782, "referendum" -> 9783,
                     "varies" -> 9784, "slowed" -> 9785, "disk" -> 9786, 
                    "firms" -> 9787, "unconscious" -> 9788, "incredible" -> 
                    9789, "clue" -> 9790, "sue" -> 9791, "##zhou" -> 9792, 
                    "twist" -> 9793, "##cio" -> 9794, "joins" -> 9795, 
                    "idaho" -> 9796, "chad" -> 9797, "developers" -> 9798, 
                    "computing" -> 9799, "destroyer" -> 9800, "103" -> 9801, 
                    "mortal" -> 9802, "tucker" -> 9803, "kingston" -> 9804, 
                    "choices" -> 9805, "yu" -> 9806, "carson" -> 9807, "1800" -> 
                    9808, "os" -> 9809, "whitney" -> 9810, "geneva" -> 9811, 
                    "pretend" -> 9812, "dimension" -> 9813, "staged" -> 9814, 
                    "plateau" -> 9815, "maya" -> 9816, "##une" -> 9817, 
                    "freestyle" -> 9818, "##bc" -> 9819, "rovers" -> 9820, 
                    "hiv" -> 9821, "##ids" -> 9822, "tristan" -> 9823, 
                    "classroom" -> 9824, "prospect" -> 9825, "##hus" -> 9826, 
                    "honestly" -> 9827, "diploma" -> 9828, "lied" -> 9829, 
                    "thermal" -> 9830, "auxiliary" -> 9831, "feast" -> 9832, 
                    "unlikely" -> 9833, "iata" -> 9834, "##tel" -> 9835, 
                    "morocco" -> 9836, "pounding" -> 9837, "treasury" -> 9838,
                     "lithuania" -> 9839, "considerably" -> 9840, "1841" -> 
                    9841, "dish" -> 9842, "1812" -> 9843, "geological" -> 
                    9844, "matching" -> 9845, "stumbled" -> 9846, 
                    "destroying" -> 9847, "marched" -> 9848, "brien" -> 9849, 
                    "advances" -> 9850, "cake" -> 9851, "nicole" -> 9852, 
                    "belle" -> 9853, "settling" -> 9854, "measuring" -> 9855, 
                    "directing" -> 9856, "##mie" -> 9857, "tuesday" -> 9858, 
                    "bassist" -> 9859, "capabilities" -> 9860, "stunned" -> 
                    9861, "fraud" -> 9862, "torpedo" -> 9863, "##list" -> 
                    9864, "##phone" -> 9865, "anton" -> 9866, "wisdom" -> 
                    9867, "surveillance" -> 9868, "ruined" -> 9869, "##ulate" -> 
                    9870, "lawsuit" -> 9871, "healthcare" -> 9872, "theorem" -> 
                    9873, "halls" -> 9874, "trend" -> 9875, "aka" -> 9876, 
                    "horizontal" -> 9877, "dozens" -> 9878, "acquire" -> 9879,
                     "lasting" -> 9880, "swim" -> 9881, "hawk" -> 9882, 
                    "gorgeous" -> 9883, "fees" -> 9884, "vicinity" -> 9885, 
                    "decrease" -> 9886, "adoption" -> 9887, "tactics" -> 9888,
                     "##ography" -> 9889, "pakistani" -> 9890, "##ole" -> 
                    9891, "draws" -> 9892, "##hall" -> 9893, "willie" -> 9894,
                     "burke" -> 9895, "heath" -> 9896, "algorithm" -> 9897, 
                    "integral" -> 9898, "powder" -> 9899, "elliott" -> 9900, 
                    "brigadier" -> 9901, "jackie" -> 9902, "tate" -> 9903, 
                    "varieties" -> 9904, "darker" -> 9905, "##cho" -> 9906, 
                    "lately" -> 9907, "cigarette" -> 9908, "specimens" -> 
                    9909, "adds" -> 9910, "##ree" -> 9911, "##ensis" -> 9912, 
                    "##inger" -> 9913, "exploded" -> 9914, "finalist" -> 9915,
                     "cia" -> 9916, "murders" -> 9917, "wilderness" -> 9918, 
                    "arguments" -> 9919, "nicknamed" -> 9920, "acceptance" -> 
                    9921, "onwards" -> 9922, "manufacture" -> 9923, 
                    "robertson" -> 9924, "jets" -> 9925, "tampa" -> 9926, 
                    "enterprises" -> 9927, "blog" -> 9928, "loudly" -> 9929, 
                    "composers" -> 9930, "nominations" -> 9931, "1838" -> 
                    9932, "ai" -> 9933, "malta" -> 9934, "inquiry" -> 9935, 
                    "automobile" -> 9936, "hosting" -> 9937, "viii" -> 9938, 
                    "rays" -> 9939, "tilted" -> 9940, "grief" -> 9941, 
                    "museums" -> 9942, "strategies" -> 9943, "furious" -> 
                    9944, "euro" -> 9945, "equality" -> 9946, "cohen" -> 9947,
                     "poison" -> 9948, "surrey" -> 9949, "wireless" -> 9950, 
                    "governed" -> 9951, "ridiculous" -> 9952, "moses" -> 9953,
                     "##esh" -> 9954, "##room" -> 9955, "vanished" -> 9956, 
                    "##ito" -> 9957, "barnes" -> 9958, "attract" -> 9959, 
                    "morrison" -> 9960, "istanbul" -> 9961, "##iness" -> 9962,
                     "absent" -> 9963, "rotation" -> 9964, "petition" -> 9965,
                     "janet" -> 9966, "##logical" -> 9967, "satisfaction" -> 
                    9968, "custody" -> 9969, "deliberately" -> 9970, 
                    "observatory" -> 9971, "comedian" -> 9972, "surfaces" -> 
                    9973, "pinyin" -> 9974, "novelist" -> 9975, "strictly" -> 
                    9976, "canterbury" -> 9977, "oslo" -> 9978, "monks" -> 
                    9979, "embrace" -> 9980, "ibm" -> 9981, "jealous" -> 9982,
                     "photograph" -> 9983, "continent" -> 9984, "dorothy" -> 
                    9985, "marina" -> 9986, "doc" -> 9987, "excess" -> 9988, 
                    "holden" -> 9989, "allegations" -> 9990, "explaining" -> 
                    9991, "stack" -> 9992, "avoiding" -> 9993, "lance" -> 
                    9994, "storyline" -> 9995, "majesty" -> 9996, "poorly" -> 
                    9997, "spike" -> 9998, "dos" -> 9999, "bradford" -> 10000,
                     "raven" -> 10001, "travis" -> 10002, "classics" -> 10003,
                     "proven" -> 10004, "voltage" -> 10005, "pillow" -> 10006,
                     "fists" -> 10007, "butt" -> 10008, "1842" -> 10009, 
                    "interpreted" -> 10010, "##car" -> 10011, "1839" -> 10012,
                     "gage" -> 10013, "telegraph" -> 10014, "lens" -> 10015, 
                    "promising" -> 10016, "expelled" -> 10017, "casual" -> 
                    10018, "collector" -> 10019, "zones" -> 10020, "##min" -> 
                    10021, "silly" -> 10022, "nintendo" -> 10023, "##kh" -> 
                    10024, "##bra" -> 10025, "downstairs" -> 10026, "chef" -> 
                    10027, "suspicious" -> 10028, "afl" -> 10029, "flies" -> 
                    10030, "vacant" -> 10031, "uganda" -> 10032, "pregnancy" -> 
                    10033, "condemned" -> 10034, "lutheran" -> 10035, 
                    "estimates" -> 10036, "cheap" -> 10037, "decree" -> 10038,
                     "saxon" -> 10039, "proximity" -> 10040, "stripped" -> 
                    10041, "idiot" -> 10042, "deposits" -> 10043, "contrary" -> 
                    10044, "presenter" -> 10045, "magnus" -> 10046, "glacier" -> 
                    10047, "im" -> 10048, "offense" -> 10049, "edwin" -> 
                    10050, "##ori" -> 10051, "upright" -> 10052, "##long" -> 
                    10053, "bolt" -> 10054, "##ois" -> 10055, "toss" -> 10056,
                     "geographical" -> 10057, "##izes" -> 10058, 
                    "environments" -> 10059, "delicate" -> 10060, "marking" -> 
                    10061, "abstract" -> 10062, "xavier" -> 10063, "nails" -> 
                    10064, "windsor" -> 10065, "plantation" -> 10066, 
                    "occurring" -> 10067, "equity" -> 10068, "saskatchewan" -> 
                    10069, "fears" -> 10070, "drifted" -> 10071, "sequences" -> 
                    10072, "vegetation" -> 10073, "revolt" -> 10074, "##stic" -> 
                    10075, "1843" -> 10076, "sooner" -> 10077, "fusion" -> 
                    10078, "opposing" -> 10079, "nato" -> 10080, "skating" -> 
                    10081, "1836" -> 10082, "secretly" -> 10083, "ruin" -> 
                    10084, "lease" -> 10085, "##oc" -> 10086, "edit" -> 10087,
                     "##nne" -> 10088, "flora" -> 10089, "anxiety" -> 10090, 
                    "ruby" -> 10091, "##ological" -> 10092, "##mia" -> 10093, 
                    "tel" -> 10094, "bout" -> 10095, "taxi" -> 10096, "emmy" -> 
                    10097, "frost" -> 10098, "rainbow" -> 10099, "compounds" -> 
                    10100, "foundations" -> 10101, "rainfall" -> 10102, 
                    "assassination" -> 10103, "nightmare" -> 10104, 
                    "dominican" -> 10105, "##win" -> 10106, "achievements" -> 
                    10107, "deserve" -> 10108, "orlando" -> 10109, "intact" -> 
                    10110, "armenia" -> 10111, "##nte" -> 10112, "calgary" -> 
                    10113, "valentine" -> 10114, "106" -> 10115, "marion" -> 
                    10116, "proclaimed" -> 10117, "theodore" -> 10118, 
                    "bells" -> 10119, "courtyard" -> 10120, "thigh" -> 10121, 
                    "gonzalez" -> 10122, "console" -> 10123, "troop" -> 10124,
                     "minimal" -> 10125, "monte" -> 10126, "everyday" -> 
                    10127, "##ence" -> 10128, "##if" -> 10129, "supporter" -> 
                    10130, "terrorism" -> 10131, "buck" -> 10132, "openly" -> 
                    10133, "presbyterian" -> 10134, "activists" -> 10135, 
                    "carpet" -> 10136, "##iers" -> 10137, "rubbing" -> 10138, 
                    "uprising" -> 10139, "##yi" -> 10140, "cute" -> 10141, 
                    "conceived" -> 10142, "legally" -> 10143, "##cht" -> 
                    10144, "millennium" -> 10145, "cello" -> 10146, 
                    "velocity" -> 10147, "ji" -> 10148, "rescued" -> 10149, 
                    "cardiff" -> 10150, "1835" -> 10151, "rex" -> 10152, 
                    "concentrate" -> 10153, "senators" -> 10154, "beard" -> 
                    10155, "rendered" -> 10156, "glowing" -> 10157, 
                    "battalions" -> 10158, "scouts" -> 10159, "competitors" -> 
                    10160, "sculptor" -> 10161, "catalogue" -> 10162, 
                    "arctic" -> 10163, "ion" -> 10164, "raja" -> 10165, 
                    "bicycle" -> 10166, "wow" -> 10167, "glancing" -> 10168, 
                    "lawn" -> 10169, "##woman" -> 10170, "gentleman" -> 10171,
                     "lighthouse" -> 10172, "publish" -> 10173, "predicted" -> 
                    10174, "calculated" -> 10175, "##val" -> 10176, 
                    "variants" -> 10177, "##gne" -> 10178, "strain" -> 10179, 
                    "##ui" -> 10180, "winston" -> 10181, "deceased" -> 10182, 
                    "##nus" -> 10183, "touchdowns" -> 10184, "brady" -> 10185,
                     "caleb" -> 10186, "sinking" -> 10187, "echoed" -> 10188, 
                    "crush" -> 10189, "hon" -> 10190, "blessed" -> 10191, 
                    "protagonist" -> 10192, "hayes" -> 10193, "endangered" -> 
                    10194, "magnitude" -> 10195, "editors" -> 10196, "##tine" -> 
                    10197, "estimate" -> 10198, "responsibilities" -> 10199, 
                    "##mel" -> 10200, "backup" -> 10201, "laying" -> 10202, 
                    "consumed" -> 10203, "sealed" -> 10204, "zurich" -> 10205,
                     "lovers" -> 10206, "frustrated" -> 10207, "##eau" -> 
                    10208, "ahmed" -> 10209, "kicking" -> 10210, "mit" -> 
                    10211, "treasurer" -> 10212, "1832" -> 10213, "biblical" -> 
                    10214, "refuse" -> 10215, "terrified" -> 10216, "pump" -> 
                    10217, "agrees" -> 10218, "genuine" -> 10219, 
                    "imprisonment" -> 10220, "refuses" -> 10221, "plymouth" -> 
                    10222, "##hen" -> 10223, "lou" -> 10224, "##nen" -> 10225,
                     "tara" -> 10226, "trembling" -> 10227, "antarctic" -> 
                    10228, "ton" -> 10229, "learns" -> 10230, "##tas" -> 
                    10231, "crap" -> 10232, "crucial" -> 10233, "faction" -> 
                    10234, "atop" -> 10235, "##borough" -> 10236, "wrap" -> 
                    10237, "lancaster" -> 10238, "odds" -> 10239, "hopkins" -> 
                    10240, "erik" -> 10241, "lyon" -> 10242, "##eon" -> 10243,
                     "bros" -> 10244, "##ode" -> 10245, "snap" -> 10246, 
                    "locality" -> 10247, "tips" -> 10248, "empress" -> 10249, 
                    "crowned" -> 10250, "cal" -> 10251, "acclaimed" -> 10252, 
                    "chuckled" -> 10253, "##ory" -> 10254, "clara" -> 10255, 
                    "sends" -> 10256, "mild" -> 10257, "towel" -> 10258, 
                    "##fl" -> 10259, "##day" -> 10260, "##\:0430" -> 10261, 
                    "wishing" -> 10262, "assuming" -> 10263, "interviewed" -> 
                    10264, "##bal" -> 10265, "##die" -> 10266, "interactions" -> 
                    10267, "eden" -> 10268, "cups" -> 10269, "helena" -> 
                    10270, "##lf" -> 10271, "indie" -> 10272, "beck" -> 10273,
                     "##fire" -> 10274, "batteries" -> 10275, "filipino" -> 
                    10276, "wizard" -> 10277, "parted" -> 10278, "##lam" -> 
                    10279, "traces" -> 10280, "##born" -> 10281, "rows" -> 
                    10282, "idol" -> 10283, "albany" -> 10284, "delegates" -> 
                    10285, "##ees" -> 10286, "##sar" -> 10287, "discussions" -> 
                    10288, "##ex" -> 10289, "notre" -> 10290, "instructed" -> 
                    10291, "belgrade" -> 10292, "highways" -> 10293, 
                    "suggestion" -> 10294, "lauren" -> 10295, "possess" -> 
                    10296, "orientation" -> 10297, "alexandria" -> 10298, 
                    "abdul" -> 10299, "beats" -> 10300, "salary" -> 10301, 
                    "reunion" -> 10302, "ludwig" -> 10303, "alright" -> 10304,
                     "wagner" -> 10305, "intimate" -> 10306, "pockets" -> 
                    10307, "slovenia" -> 10308, "hugged" -> 10309, "brighton" -> 
                    10310, "merchants" -> 10311, "cruel" -> 10312, "stole" -> 
                    10313, "trek" -> 10314, "slopes" -> 10315, "repairs" -> 
                    10316, "enrollment" -> 10317, "politically" -> 10318, 
                    "underlying" -> 10319, "promotional" -> 10320, "counting" -> 
                    10321, "boeing" -> 10322, "##bb" -> 10323, "isabella" -> 
                    10324, "naming" -> 10325, "##\:0438" -> 10326, "keen" -> 
                    10327, "bacteria" -> 10328, "listing" -> 10329, 
                    "separately" -> 10330, "belfast" -> 10331, "ussr" -> 
                    10332, "450" -> 10333, "lithuanian" -> 10334, "anybody" -> 
                    10335, "ribs" -> 10336, "sphere" -> 10337, "martinez" -> 
                    10338, "cock" -> 10339, "embarrassed" -> 10340, 
                    "proposals" -> 10341, "fragments" -> 10342, "nationals" -> 
                    10343, "##fs" -> 10344, "##wski" -> 10345, "premises" -> 
                    10346, "fin" -> 10347, "1500" -> 10348, "alpine" -> 10349,
                     "matched" -> 10350, "freely" -> 10351, "bounded" -> 
                    10352, "jace" -> 10353, "sleeve" -> 10354, "##af" -> 
                    10355, "gaming" -> 10356, "pier" -> 10357, "populated" -> 
                    10358, "evident" -> 10359, "##like" -> 10360, "frances" -> 
                    10361, "flooded" -> 10362, "##dle" -> 10363, "frightened" -> 
                    10364, "pour" -> 10365, "trainer" -> 10366, "framed" -> 
                    10367, "visitor" -> 10368, "challenging" -> 10369, "pig" -> 
                    10370, "wickets" -> 10371, "##fold" -> 10372, "infected" -> 
                    10373, "email" -> 10374, "##pes" -> 10375, "arose" -> 
                    10376, "##aw" -> 10377, "reward" -> 10378, "ecuador" -> 
                    10379, "oblast" -> 10380, "vale" -> 10381, "ch" -> 10382, 
                    "shuttle" -> 10383, "##usa" -> 10384, "bach" -> 10385, 
                    "rankings" -> 10386, "forbidden" -> 10387, "cornwall" -> 
                    10388, "accordance" -> 10389, "salem" -> 10390, 
                    "consumers" -> 10391, "bruno" -> 10392, "fantastic" -> 
                    10393, "toes" -> 10394, "machinery" -> 10395, "resolved" -> 
                    10396, "julius" -> 10397, "remembering" -> 10398, 
                    "propaganda" -> 10399, "iceland" -> 10400, "bombardment" -> 
                    10401, "tide" -> 10402, "contacts" -> 10403, "wives" -> 
                    10404, "##rah" -> 10405, "concerto" -> 10406, "macdonald" -> 
                    10407, "albania" -> 10408, "implement" -> 10409, "daisy" -> 
                    10410, "tapped" -> 10411, "sudan" -> 10412, "helmet" -> 
                    10413, "angela" -> 10414, "mistress" -> 10415, "##lic" -> 
                    10416, "crop" -> 10417, "sunk" -> 10418, "finest" -> 
                    10419, "##craft" -> 10420, "hostile" -> 10421, "##ute" -> 
                    10422, "##tsu" -> 10423, "boxer" -> 10424, "fr" -> 10425, 
                    "paths" -> 10426, "adjusted" -> 10427, "habit" -> 10428, 
                    "ballot" -> 10429, "supervision" -> 10430, "soprano" -> 
                    10431, "##zen" -> 10432, "bullets" -> 10433, "wicked" -> 
                    10434, "sunset" -> 10435, "regiments" -> 10436, 
                    "disappear" -> 10437, "lamp" -> 10438, "performs" -> 
                    10439, "app" -> 10440, "##gia" -> 10441, "##oa" -> 10442, 
                    "rabbit" -> 10443, "digging" -> 10444, "incidents" -> 
                    10445, "entries" -> 10446, "##cion" -> 10447, "dishes" -> 
                    10448, "##oi" -> 10449, "introducing" -> 10450, "##ati" -> 
                    10451, "##fied" -> 10452, "freshman" -> 10453, "slot" -> 
                    10454, "jill" -> 10455, "tackles" -> 10456, "baroque" -> 
                    10457, "backs" -> 10458, "##iest" -> 10459, "lone" -> 
                    10460, "sponsor" -> 10461, "destiny" -> 10462, 
                    "altogether" -> 10463, "convert" -> 10464, "##aro" -> 
                    10465, "consensus" -> 10466, "shapes" -> 10467, 
                    "demonstration" -> 10468, "basically" -> 10469, 
                    "feminist" -> 10470, "auction" -> 10471, "artifacts" -> 
                    10472, "##bing" -> 10473, "strongest" -> 10474, "twitter" -> 
                    10475, "halifax" -> 10476, "2019" -> 10477, "allmusic" -> 
                    10478, "mighty" -> 10479, "smallest" -> 10480, "precise" -> 
                    10481, "alexandra" -> 10482, "viola" -> 10483, "##los" -> 
                    10484, "##ille" -> 10485, "manuscripts" -> 10486, 
                    "##illo" -> 10487, "dancers" -> 10488, "ari" -> 10489, 
                    "managers" -> 10490, "monuments" -> 10491, "blades" -> 
                    10492, "barracks" -> 10493, "springfield" -> 10494, 
                    "maiden" -> 10495, "consolidated" -> 10496, "electron" -> 
                    10497, "##end" -> 10498, "berry" -> 10499, "airing" -> 
                    10500, "wheat" -> 10501, "nobel" -> 10502, "inclusion" -> 
                    10503, "blair" -> 10504, "payments" -> 10505, "geography" -> 
                    10506, "bee" -> 10507, "cc" -> 10508, "eleanor" -> 10509, 
                    "react" -> 10510, "##hurst" -> 10511, "afc" -> 10512, 
                    "manitoba" -> 10513, "##yu" -> 10514, "su" -> 10515, 
                    "lineup" -> 10516, "fitness" -> 10517, "recreational" -> 
                    10518, "investments" -> 10519, "airborne" -> 10520, 
                    "disappointment" -> 10521, "##dis" -> 10522, "edmonton" -> 
                    10523, "viewing" -> 10524, "##row" -> 10525, "renovation" -> 
                    10526, "##cast" -> 10527, "infant" -> 10528, "bankruptcy" -> 
                    10529, "roses" -> 10530, "aftermath" -> 10531, "pavilion" -> 
                    10532, "##yer" -> 10533, "carpenter" -> 10534, 
                    "withdrawal" -> 10535, "ladder" -> 10536, "##hy" -> 10537,
                     "discussing" -> 10538, "popped" -> 10539, "reliable" -> 
                    10540, "agreements" -> 10541, "rochester" -> 10542, 
                    "##abad" -> 10543, "curves" -> 10544, "bombers" -> 10545, 
                    "220" -> 10546, "rao" -> 10547, "reverend" -> 10548, 
                    "decreased" -> 10549, "choosing" -> 10550, "107" -> 10551,
                     "stiff" -> 10552, "consulting" -> 10553, "naples" -> 
                    10554, "crawford" -> 10555, "tracy" -> 10556, "ka" -> 
                    10557, "ribbon" -> 10558, "cops" -> 10559, "##lee" -> 
                    10560, "crushed" -> 10561, "deciding" -> 10562, "unified" -> 
                    10563, "teenager" -> 10564, "accepting" -> 10565, 
                    "flagship" -> 10566, "explorer" -> 10567, "poles" -> 
                    10568, "sanchez" -> 10569, "inspection" -> 10570, 
                    "revived" -> 10571, "skilled" -> 10572, "induced" -> 
                    10573, "exchanged" -> 10574, "flee" -> 10575, "locals" -> 
                    10576, "tragedy" -> 10577, "swallow" -> 10578, "loading" -> 
                    10579, "hanna" -> 10580, "demonstrate" -> 10581, "##ela" -> 
                    10582, "salvador" -> 10583, "flown" -> 10584, 
                    "contestants" -> 10585, "civilization" -> 10586, "##ines" -> 
                    10587, "wanna" -> 10588, "rhodes" -> 10589, "fletcher" -> 
                    10590, "hector" -> 10591, "knocking" -> 10592, 
                    "considers" -> 10593, "##ough" -> 10594, "nash" -> 10595, 
                    "mechanisms" -> 10596, "sensed" -> 10597, "mentally" -> 
                    10598, "walt" -> 10599, "unclear" -> 10600, "##eus" -> 
                    10601, "renovated" -> 10602, "madame" -> 10603, "##cks" -> 
                    10604, "crews" -> 10605, "governmental" -> 10606, "##hin" -> 
                    10607, "undertaken" -> 10608, "monkey" -> 10609, "##ben" -> 
                    10610, "##ato" -> 10611, "fatal" -> 10612, "armored" -> 
                    10613, "copa" -> 10614, "caves" -> 10615, "governance" -> 
                    10616, "grasp" -> 10617, "perception" -> 10618, 
                    "certification" -> 10619, "froze" -> 10620, "damp" -> 
                    10621, "tugged" -> 10622, "wyoming" -> 10623, "##rg" -> 
                    10624, "##ero" -> 10625, "newman" -> 10626, "##lor" -> 
                    10627, "nerves" -> 10628, "curiosity" -> 10629, "graph" -> 
                    10630, "115" -> 10631, "##ami" -> 10632, "withdraw" -> 
                    10633, "tunnels" -> 10634, "dull" -> 10635, "meredith" -> 
                    10636, "moss" -> 10637, "exhibits" -> 10638, "neighbors" -> 
                    10639, "communicate" -> 10640, "accuracy" -> 10641, 
                    "explored" -> 10642, "raiders" -> 10643, "republicans" -> 
                    10644, "secular" -> 10645, "kat" -> 10646, "superman" -> 
                    10647, "penny" -> 10648, "criticised" -> 10649, "##tch" -> 
                    10650, "freed" -> 10651, "update" -> 10652, "conviction" -> 
                    10653, "wade" -> 10654, "ham" -> 10655, "likewise" -> 
                    10656, "delegation" -> 10657, "gotta" -> 10658, "doll" -> 
                    10659, "promises" -> 10660, "technological" -> 10661, 
                    "myth" -> 10662, "nationality" -> 10663, "resolve" -> 
                    10664, "convent" -> 10665, "##mark" -> 10666, "sharon" -> 
                    10667, "dig" -> 10668, "sip" -> 10669, "coordinator" -> 
                    10670, "entrepreneur" -> 10671, "fold" -> 10672, "##dine" -> 
                    10673, "capability" -> 10674, "councillor" -> 10675, 
                    "synonym" -> 10676, "blown" -> 10677, "swan" -> 10678, 
                    "cursed" -> 10679, "1815" -> 10680, "jonas" -> 10681, 
                    "haired" -> 10682, "sofa" -> 10683, "canvas" -> 10684, 
                    "keeper" -> 10685, "rivalry" -> 10686, "##hart" -> 10687, 
                    "rapper" -> 10688, "speedway" -> 10689, "swords" -> 10690,
                     "postal" -> 10691, "maxwell" -> 10692, "estonia" -> 
                    10693, "potter" -> 10694, "recurring" -> 10695, "##nn" -> 
                    10696, "##ave" -> 10697, "errors" -> 10698, "##oni" -> 
                    10699, "cognitive" -> 10700, "1834" -> 10701, "##\.b2" -> 
                    10702, "claws" -> 10703, "nadu" -> 10704, "roberto" -> 
                    10705, "bce" -> 10706, "wrestler" -> 10707, "ellie" -> 
                    10708, "##ations" -> 10709, "infinite" -> 10710, "ink" -> 
                    10711, "##tia" -> 10712, "presumably" -> 10713, "finite" -> 
                    10714, "staircase" -> 10715, "108" -> 10716, "noel" -> 
                    10717, "patricia" -> 10718, "nacional" -> 10719, 
                    "##cation" -> 10720, "chill" -> 10721, "eternal" -> 10722,
                     "tu" -> 10723, "preventing" -> 10724, "prussia" -> 10725,
                     "fossil" -> 10726, "limbs" -> 10727, "##logist" -> 10728,
                     "ernst" -> 10729, "frog" -> 10730, "perez" -> 10731, 
                    "rene" -> 10732, "##ace" -> 10733, "pizza" -> 10734, 
                    "prussian" -> 10735, "##ios" -> 10736, "##vy" -> 10737, 
                    "molecules" -> 10738, "regulatory" -> 10739, "answering" -> 
                    10740, "opinions" -> 10741, "sworn" -> 10742, "lengths" -> 
                    10743, "supposedly" -> 10744, "hypothesis" -> 10745, 
                    "upward" -> 10746, "habitats" -> 10747, "seating" -> 
                    10748, "ancestors" -> 10749, "drank" -> 10750, "yield" -> 
                    10751, "hd" -> 10752, "synthesis" -> 10753, "researcher" -> 
                    10754, "modest" -> 10755, "##var" -> 10756, "mothers" -> 
                    10757, "peered" -> 10758, "voluntary" -> 10759, 
                    "homeland" -> 10760, "##the" -> 10761, "acclaim" -> 10762,
                     "##igan" -> 10763, "static" -> 10764, "valve" -> 10765, 
                    "luxembourg" -> 10766, "alto" -> 10767, "carroll" -> 
                    10768, "fe" -> 10769, "receptor" -> 10770, "norton" -> 
                    10771, "ambulance" -> 10772, "##tian" -> 10773, 
                    "johnston" -> 10774, "catholics" -> 10775, "depicting" -> 
                    10776, "jointly" -> 10777, "elephant" -> 10778, "gloria" -> 
                    10779, "mentor" -> 10780, "badge" -> 10781, "ahmad" -> 
                    10782, "distinguish" -> 10783, "remarked" -> 10784, 
                    "councils" -> 10785, "precisely" -> 10786, "allison" -> 
                    10787, "advancing" -> 10788, "detection" -> 10789, 
                    "crowded" -> 10790, "##10" -> 10791, "cooperative" -> 
                    10792, "ankle" -> 10793, "mercedes" -> 10794, "dagger" -> 
                    10795, "surrendered" -> 10796, "pollution" -> 10797, 
                    "commit" -> 10798, "subway" -> 10799, "jeffrey" -> 10800, 
                    "lesson" -> 10801, "sculptures" -> 10802, "provider" -> 
                    10803, "##fication" -> 10804, "membrane" -> 10805, 
                    "timothy" -> 10806, "rectangular" -> 10807, "fiscal" -> 
                    10808, "heating" -> 10809, "teammate" -> 10810, "basket" -> 
                    10811, "particle" -> 10812, "anonymous" -> 10813, 
                    "deployment" -> 10814, "##ple" -> 10815, "missiles" -> 
                    10816, "courthouse" -> 10817, "proportion" -> 10818, 
                    "shoe" -> 10819, "sec" -> 10820, "##ller" -> 10821, 
                    "complaints" -> 10822, "forbes" -> 10823, "blacks" -> 
                    10824, "abandon" -> 10825, "remind" -> 10826, "sizes" -> 
                    10827, "overwhelming" -> 10828, "autobiography" -> 10829, 
                    "natalie" -> 10830, "##awa" -> 10831, "risks" -> 10832, 
                    "contestant" -> 10833, "countryside" -> 10834, "babies" -> 
                    10835, "scorer" -> 10836, "invaded" -> 10837, "enclosed" -> 
                    10838, "proceed" -> 10839, "hurling" -> 10840, 
                    "disorders" -> 10841, "##cu" -> 10842, "reflecting" -> 
                    10843, "continuously" -> 10844, "cruiser" -> 10845, 
                    "graduates" -> 10846, "freeway" -> 10847, "investigated" -> 
                    10848, "ore" -> 10849, "deserved" -> 10850, "maid" -> 
                    10851, "blocking" -> 10852, "phillip" -> 10853, "jorge" -> 
                    10854, "shakes" -> 10855, "dove" -> 10856, "mann" -> 
                    10857, "variables" -> 10858, "lacked" -> 10859, "burden" -> 
                    10860, "accompanying" -> 10861, "que" -> 10862, 
                    "consistently" -> 10863, "organizing" -> 10864, 
                    "provisional" -> 10865, "complained" -> 10866, "endless" -> 
                    10867, "##rm" -> 10868, "tubes" -> 10869, "juice" -> 
                    10870, "georges" -> 10871, "krishna" -> 10872, "mick" -> 
                    10873, "labels" -> 10874, "thriller" -> 10875, "##uch" -> 
                    10876, "laps" -> 10877, "arcade" -> 10878, "sage" -> 
                    10879, "snail" -> 10880, "##table" -> 10881, "shannon" -> 
                    10882, "fi" -> 10883, "laurence" -> 10884, "seoul" -> 
                    10885, "vacation" -> 10886, "presenting" -> 10887, "hire" -> 
                    10888, "churchill" -> 10889, "surprisingly" -> 10890, 
                    "prohibited" -> 10891, "savannah" -> 10892, "technically" -> 
                    10893, "##oli" -> 10894, "170" -> 10895, "##lessly" -> 
                    10896, "testimony" -> 10897, "suited" -> 10898, "speeds" -> 
                    10899, "toys" -> 10900, "romans" -> 10901, "mlb" -> 10902,
                     "flowering" -> 10903, "measurement" -> 10904, "talented" -> 
                    10905, "kay" -> 10906, "settings" -> 10907, "charleston" -> 
                    10908, "expectations" -> 10909, "shattered" -> 10910, 
                    "achieving" -> 10911, "triumph" -> 10912, "ceremonies" -> 
                    10913, "portsmouth" -> 10914, "lanes" -> 10915, 
                    "mandatory" -> 10916, "loser" -> 10917, "stretching" -> 
                    10918, "cologne" -> 10919, "realizes" -> 10920, "seventy" -> 
                    10921, "cornell" -> 10922, "careers" -> 10923, "webb" -> 
                    10924, "##ulating" -> 10925, "americas" -> 10926, 
                    "budapest" -> 10927, "ava" -> 10928, "suspicion" -> 10929,
                     "##ison" -> 10930, "yo" -> 10931, "conrad" -> 10932, 
                    "##hai" -> 10933, "sterling" -> 10934, "jessie" -> 10935, 
                    "rector" -> 10936, "##az" -> 10937, "1831" -> 10938, 
                    "transform" -> 10939, "organize" -> 10940, "loans" -> 
                    10941, "christine" -> 10942, "volcanic" -> 10943, 
                    "warrant" -> 10944, "slender" -> 10945, "summers" -> 
                    10946, "subfamily" -> 10947, "newer" -> 10948, "danced" -> 
                    10949, "dynamics" -> 10950, "rhine" -> 10951, "proceeds" -> 
                    10952, "heinrich" -> 10953, "gastropod" -> 10954, 
                    "commands" -> 10955, "sings" -> 10956, "facilitate" -> 
                    10957, "easter" -> 10958, "ra" -> 10959, "positioned" -> 
                    10960, "responses" -> 10961, "expense" -> 10962, "fruits" -> 
                    10963, "yanked" -> 10964, "imported" -> 10965, "25th" -> 
                    10966, "velvet" -> 10967, "vic" -> 10968, "primitive" -> 
                    10969, "tribune" -> 10970, "baldwin" -> 10971, 
                    "neighbourhood" -> 10972, "donna" -> 10973, "rip" -> 
                    10974, "hay" -> 10975, "pr" -> 10976, "##uro" -> 10977, 
                    "1814" -> 10978, "espn" -> 10979, "welcomed" -> 10980, 
                    "##aria" -> 10981, "qualifier" -> 10982, "glare" -> 10983,
                     "highland" -> 10984, "timing" -> 10985, "##cted" -> 
                    10986, "shells" -> 10987, "eased" -> 10988, "geometry" -> 
                    10989, "louder" -> 10990, "exciting" -> 10991, "slovakia" -> 
                    10992, "##sion" -> 10993, "##iz" -> 10994, "##lot" -> 
                    10995, "savings" -> 10996, "prairie" -> 10997, "##ques" -> 
                    10998, "marching" -> 10999, "rafael" -> 11000, "tonnes" -> 
                    11001, "##lled" -> 11002, "curtain" -> 11003, "preceding" -> 
                    11004, "shy" -> 11005, "heal" -> 11006, "greene" -> 11007,
                     "worthy" -> 11008, "##pot" -> 11009, "detachment" -> 
                    11010, "bury" -> 11011, "sherman" -> 11012, "##eck" -> 
                    11013, "reinforced" -> 11014, "seeks" -> 11015, "bottles" -> 
                    11016, "contracted" -> 11017, "duchess" -> 11018, 
                    "outfit" -> 11019, "walsh" -> 11020, "##sc" -> 11021, 
                    "mickey" -> 11022, "##ase" -> 11023, "geoffrey" -> 11024, 
                    "archer" -> 11025, "squeeze" -> 11026, "dawson" -> 11027, 
                    "eliminate" -> 11028, "invention" -> 11029, "##enberg" -> 
                    11030, "neal" -> 11031, "##eth" -> 11032, "stance" -> 
                    11033, "dealer" -> 11034, "coral" -> 11035, "maple" -> 
                    11036, "retire" -> 11037, "polo" -> 11038, "simplified" -> 
                    11039, "##ht" -> 11040, "1833" -> 11041, "hid" -> 11042, 
                    "watts" -> 11043, "backwards" -> 11044, "jules" -> 11045, 
                    "##oke" -> 11046, "genesis" -> 11047, "mt" -> 11048, 
                    "frames" -> 11049, "rebounds" -> 11050, "burma" -> 11051, 
                    "woodland" -> 11052, "moist" -> 11053, "santos" -> 11054, 
                    "whispers" -> 11055, "drained" -> 11056, "subspecies" -> 
                    11057, "##aa" -> 11058, "streaming" -> 11059, "ulster" -> 
                    11060, "burnt" -> 11061, "correspondence" -> 11062, 
                    "maternal" -> 11063, "gerard" -> 11064, "denis" -> 11065, 
                    "stealing" -> 11066, "##load" -> 11067, "genius" -> 11068,
                     "duchy" -> 11069, "##oria" -> 11070, "inaugurated" -> 
                    11071, "momentum" -> 11072, "suits" -> 11073, "placement" -> 
                    11074, "sovereign" -> 11075, "clause" -> 11076, "thames" -> 
                    11077, "##hara" -> 11078, "confederation" -> 11079, 
                    "reservation" -> 11080, "sketch" -> 11081, "yankees" -> 
                    11082, "lets" -> 11083, "rotten" -> 11084, "charm" -> 
                    11085, "hal" -> 11086, "verses" -> 11087, "ultra" -> 
                    11088, "commercially" -> 11089, "dot" -> 11090, "salon" -> 
                    11091, "citation" -> 11092, "adopt" -> 11093, "winnipeg" -> 
                    11094, "mist" -> 11095, "allocated" -> 11096, "cairo" -> 
                    11097, "##boy" -> 11098, "jenkins" -> 11099, 
                    "interference" -> 11100, "objectives" -> 11101, "##wind" -> 
                    11102, "1820" -> 11103, "portfolio" -> 11104, "armoured" -> 
                    11105, "sectors" -> 11106, "##eh" -> 11107, "initiatives" -> 
                    11108, "##world" -> 11109, "integrity" -> 11110, 
                    "exercises" -> 11111, "robe" -> 11112, "tap" -> 11113, 
                    "ab" -> 11114, "gazed" -> 11115, "##tones" -> 11116, 
                    "distracted" -> 11117, "rulers" -> 11118, "111" -> 11119, 
                    "favorable" -> 11120, "jerome" -> 11121, "tended" -> 
                    11122, "cart" -> 11123, "factories" -> 11124, "##eri" -> 
                    11125, "diplomat" -> 11126, "valued" -> 11127, "gravel" -> 
                    11128, "charitable" -> 11129, "##try" -> 11130, "calvin" -> 
                    11131, "exploring" -> 11132, "chang" -> 11133, "shepherd" -> 
                    11134, "terrace" -> 11135, "pdf" -> 11136, "pupil" -> 
                    11137, "##ural" -> 11138, "reflects" -> 11139, "ups" -> 
                    11140, "##rch" -> 11141, "governors" -> 11142, "shelf" -> 
                    11143, "depths" -> 11144, "##nberg" -> 11145, "trailed" -> 
                    11146, "crest" -> 11147, "tackle" -> 11148, "##nian" -> 
                    11149, "##ats" -> 11150, "hatred" -> 11151, "##kai" -> 
                    11152, "clare" -> 11153, "makers" -> 11154, "ethiopia" -> 
                    11155, "longtime" -> 11156, "detected" -> 11157, 
                    "embedded" -> 11158, "lacking" -> 11159, "slapped" -> 
                    11160, "rely" -> 11161, "thomson" -> 11162, 
                    "anticipation" -> 11163, "iso" -> 11164, "morton" -> 
                    11165, "successive" -> 11166, "agnes" -> 11167, 
                    "screenwriter" -> 11168, "straightened" -> 11169, 
                    "philippe" -> 11170, "playwright" -> 11171, "haunted" -> 
                    11172, "licence" -> 11173, "iris" -> 11174, "intentions" -> 
                    11175, "sutton" -> 11176, "112" -> 11177, "logical" -> 
                    11178, "correctly" -> 11179, "##weight" -> 11180, 
                    "branded" -> 11181, "licked" -> 11182, "tipped" -> 11183, 
                    "silva" -> 11184, "ricky" -> 11185, "narrator" -> 11186, 
                    "requests" -> 11187, "##ents" -> 11188, "greeted" -> 
                    11189, "supernatural" -> 11190, "cow" -> 11191, "##wald" -> 
                    11192, "lung" -> 11193, "refusing" -> 11194, "employer" -> 
                    11195, "strait" -> 11196, "gaelic" -> 11197, "liner" -> 
                    11198, "##piece" -> 11199, "zoe" -> 11200, "sabha" -> 
                    11201, "##mba" -> 11202, "driveway" -> 11203, "harvest" -> 
                    11204, "prints" -> 11205, "bates" -> 11206, "reluctantly" -> 
                    11207, "threshold" -> 11208, "algebra" -> 11209, "ira" -> 
                    11210, "wherever" -> 11211, "coupled" -> 11212, "240" -> 
                    11213, "assumption" -> 11214, "picks" -> 11215, "##air" -> 
                    11216, "designers" -> 11217, "raids" -> 11218, 
                    "gentlemen" -> 11219, "##ean" -> 11220, "roller" -> 11221,
                     "blowing" -> 11222, "leipzig" -> 11223, "locks" -> 11224,
                     "screw" -> 11225, "dressing" -> 11226, "strand" -> 11227,
                     "##lings" -> 11228, "scar" -> 11229, "dwarf" -> 11230, 
                    "depicts" -> 11231, "##nu" -> 11232, "nods" -> 11233, 
                    "##mine" -> 11234, "differ" -> 11235, "boris" -> 11236, 
                    "##eur" -> 11237, "yuan" -> 11238, "flip" -> 11239, 
                    "##gie" -> 11240, "mob" -> 11241, "invested" -> 11242, 
                    "questioning" -> 11243, "applying" -> 11244, "##ture" -> 
                    11245, "shout" -> 11246, "##sel" -> 11247, "gameplay" -> 
                    11248, "blamed" -> 11249, "illustrations" -> 11250, 
                    "bothered" -> 11251, "weakness" -> 11252, 
                    "rehabilitation" -> 11253, "##of" -> 11254, "##zes" -> 
                    11255, "envelope" -> 11256, "rumors" -> 11257, "miners" -> 
                    11258, "leicester" -> 11259, "subtle" -> 11260, "kerry" -> 
                    11261, "##ico" -> 11262, "ferguson" -> 11263, "##fu" -> 
                    11264, "premiership" -> 11265, "ne" -> 11266, "##cat" -> 
                    11267, "bengali" -> 11268, "prof" -> 11269, "catches" -> 
                    11270, "remnants" -> 11271, "dana" -> 11272, "##rily" -> 
                    11273, "shouting" -> 11274, "presidents" -> 11275, 
                    "baltic" -> 11276, "ought" -> 11277, "ghosts" -> 11278, 
                    "dances" -> 11279, "sailors" -> 11280, "shirley" -> 11281,
                     "fancy" -> 11282, "dominic" -> 11283, "##bie" -> 11284, 
                    "madonna" -> 11285, "##rick" -> 11286, "bark" -> 11287, 
                    "buttons" -> 11288, "gymnasium" -> 11289, "ashes" -> 
                    11290, "liver" -> 11291, "toby" -> 11292, "oath" -> 11293,
                     "providence" -> 11294, "doyle" -> 11295, "evangelical" -> 
                    11296, "nixon" -> 11297, "cement" -> 11298, "carnegie" -> 
                    11299, "embarked" -> 11300, "hatch" -> 11301, 
                    "surroundings" -> 11302, "guarantee" -> 11303, "needing" -> 
                    11304, "pirate" -> 11305, "essence" -> 11306, "##bee" -> 
                    11307, "filter" -> 11308, "crane" -> 11309, "hammond" -> 
                    11310, "projected" -> 11311, "immune" -> 11312, "percy" -> 
                    11313, "twelfth" -> 11314, "##ult" -> 11315, "regent" -> 
                    11316, "doctoral" -> 11317, "damon" -> 11318, "mikhail" -> 
                    11319, "##ichi" -> 11320, "lu" -> 11321, "critically" -> 
                    11322, "elect" -> 11323, "realised" -> 11324, "abortion" -> 
                    11325, "acute" -> 11326, "screening" -> 11327, 
                    "mythology" -> 11328, "steadily" -> 11329, "##fc" -> 
                    11330, "frown" -> 11331, "nottingham" -> 11332, "kirk" -> 
                    11333, "wa" -> 11334, "minneapolis" -> 11335, "##rra" -> 
                    11336, "module" -> 11337, "algeria" -> 11338, "mc" -> 
                    11339, "nautical" -> 11340, "encounters" -> 11341, 
                    "surprising" -> 11342, "statues" -> 11343, "availability" -> 
                    11344, "shirts" -> 11345, "pie" -> 11346, "alma" -> 11347,
                     "brows" -> 11348, "munster" -> 11349, "mack" -> 11350, 
                    "soup" -> 11351, "crater" -> 11352, "tornado" -> 11353, 
                    "sanskrit" -> 11354, "cedar" -> 11355, "explosive" -> 
                    11356, "bordered" -> 11357, "dixon" -> 11358, "planets" -> 
                    11359, "stamp" -> 11360, "exam" -> 11361, "happily" -> 
                    11362, "##bble" -> 11363, "carriers" -> 11364, 
                    "kidnapped" -> 11365, "##vis" -> 11366, "accommodation" -> 
                    11367, "emigrated" -> 11368, "##met" -> 11369, "knockout" -> 
                    11370, "correspondent" -> 11371, "violation" -> 11372, 
                    "profits" -> 11373, "peaks" -> 11374, "lang" -> 11375, 
                    "specimen" -> 11376, "agenda" -> 11377, "ancestry" -> 
                    11378, "pottery" -> 11379, "spelling" -> 11380, 
                    "equations" -> 11381, "obtaining" -> 11382, "ki" -> 11383,
                     "linking" -> 11384, "1825" -> 11385, "debris" -> 11386, 
                    "asylum" -> 11387, "##20" -> 11388, "buddhism" -> 11389, 
                    "teddy" -> 11390, "##ants" -> 11391, "gazette" -> 11392, 
                    "##nger" -> 11393, "##sse" -> 11394, "dental" -> 11395, 
                    "eligibility" -> 11396, "utc" -> 11397, "fathers" -> 
                    11398, "averaged" -> 11399, "zimbabwe" -> 11400, 
                    "francesco" -> 11401, "coloured" -> 11402, "hissed" -> 
                    11403, "translator" -> 11404, "lynch" -> 11405, "mandate" -> 
                    11406, "humanities" -> 11407, "mackenzie" -> 11408, 
                    "uniforms" -> 11409, "lin" -> 11410, "##iana" -> 11411, 
                    "##gio" -> 11412, "asset" -> 11413, "mhz" -> 11414, 
                    "fitting" -> 11415, "samantha" -> 11416, "genera" -> 
                    11417, "wei" -> 11418, "rim" -> 11419, "beloved" -> 11420,
                     "shark" -> 11421, "riot" -> 11422, "entities" -> 11423, 
                    "expressions" -> 11424, "indo" -> 11425, "carmen" -> 
                    11426, "slipping" -> 11427, "owing" -> 11428, "abbot" -> 
                    11429, "neighbor" -> 11430, "sidney" -> 11431, "##av" -> 
                    11432, "rats" -> 11433, "recommendations" -> 11434, 
                    "encouraging" -> 11435, "squadrons" -> 11436, 
                    "anticipated" -> 11437, "commanders" -> 11438, 
                    "conquered" -> 11439, "##oto" -> 11440, "donations" -> 
                    11441, "diagnosed" -> 11442, "##mond" -> 11443, "divide" -> 
                    11444, "##iva" -> 11445, "guessed" -> 11446, "decoration" -> 
                    11447, "vernon" -> 11448, "auditorium" -> 11449, 
                    "revelation" -> 11450, "conversations" -> 11451, "##kers" -> 
                    11452, "##power" -> 11453, "herzegovina" -> 11454, "dash" -> 
                    11455, "alike" -> 11456, "protested" -> 11457, "lateral" -> 
                    11458, "herman" -> 11459, "accredited" -> 11460, "mg" -> 
                    11461, "##gent" -> 11462, "freeman" -> 11463, "mel" -> 
                    11464, "fiji" -> 11465, "crow" -> 11466, "crimson" -> 
                    11467, "##rine" -> 11468, "livestock" -> 11469, "##pped" -> 
                    11470, "humanitarian" -> 11471, "bored" -> 11472, "oz" -> 
                    11473, "whip" -> 11474, "##lene" -> 11475, "##ali" -> 
                    11476, "legitimate" -> 11477, "alter" -> 11478, 
                    "grinning" -> 11479, "spelled" -> 11480, "anxious" -> 
                    11481, "oriental" -> 11482, "wesley" -> 11483, "##nin" -> 
                    11484, "##hole" -> 11485, "carnival" -> 11486, 
                    "controller" -> 11487, "detect" -> 11488, "##ssa" -> 
                    11489, "bowed" -> 11490, "educator" -> 11491, "kosovo" -> 
                    11492, "macedonia" -> 11493, "##sin" -> 11494, "occupy" -> 
                    11495, "mastering" -> 11496, "stephanie" -> 11497, 
                    "janeiro" -> 11498, "para" -> 11499, "unaware" -> 11500, 
                    "nurses" -> 11501, "noon" -> 11502, "135" -> 11503, "cam" -> 
                    11504, "hopefully" -> 11505, "ranger" -> 11506, "combine" -> 
                    11507, "sociology" -> 11508, "polar" -> 11509, "rica" -> 
                    11510, "##eer" -> 11511, "neill" -> 11512, "##sman" -> 
                    11513, "holocaust" -> 11514, "##ip" -> 11515, "doubled" -> 
                    11516, "lust" -> 11517, "1828" -> 11518, "109" -> 11519, 
                    "decent" -> 11520, "cooling" -> 11521, "unveiled" -> 
                    11522, "##card" -> 11523, "1829" -> 11524, "nsw" -> 11525,
                     "homer" -> 11526, "chapman" -> 11527, "meyer" -> 11528, 
                    "##gin" -> 11529, "dive" -> 11530, "mae" -> 11531, 
                    "reagan" -> 11532, "expertise" -> 11533, "##gled" -> 
                    11534, "darwin" -> 11535, "brooke" -> 11536, "sided" -> 
                    11537, "prosecution" -> 11538, "investigating" -> 11539, 
                    "comprised" -> 11540, "petroleum" -> 11541, "genres" -> 
                    11542, "reluctant" -> 11543, "differently" -> 11544, 
                    "trilogy" -> 11545, "johns" -> 11546, "vegetables" -> 
                    11547, "corpse" -> 11548, "highlighted" -> 11549, 
                    "lounge" -> 11550, "pension" -> 11551, "unsuccessfully" -> 
                    11552, "elegant" -> 11553, "aided" -> 11554, "ivory" -> 
                    11555, "beatles" -> 11556, "amelia" -> 11557, "cain" -> 
                    11558, "dubai" -> 11559, "sunny" -> 11560, "immigrant" -> 
                    11561, "babe" -> 11562, "click" -> 11563, "##nder" -> 
                    11564, "underwater" -> 11565, "pepper" -> 11566, 
                    "combining" -> 11567, "mumbled" -> 11568, "atlas" -> 
                    11569, "horns" -> 11570, "accessed" -> 11571, "ballad" -> 
                    11572, "physicians" -> 11573, "homeless" -> 11574, 
                    "gestured" -> 11575, "rpm" -> 11576, "freak" -> 11577, 
                    "louisville" -> 11578, "corporations" -> 11579, 
                    "patriots" -> 11580, "prizes" -> 11581, "rational" -> 
                    11582, "warn" -> 11583, "modes" -> 11584, "decorative" -> 
                    11585, "overnight" -> 11586, "din" -> 11587, "troubled" -> 
                    11588, "phantom" -> 11589, "##ort" -> 11590, "monarch" -> 
                    11591, "sheer" -> 11592, "##dorf" -> 11593, "generals" -> 
                    11594, "guidelines" -> 11595, "organs" -> 11596, 
                    "addresses" -> 11597, "##zon" -> 11598, "enhance" -> 
                    11599, "curling" -> 11600, "parishes" -> 11601, "cord" -> 
                    11602, "##kie" -> 11603, "linux" -> 11604, "caesar" -> 
                    11605, "deutsche" -> 11606, "bavaria" -> 11607, "##bia" -> 
                    11608, "coleman" -> 11609, "cyclone" -> 11610, "##eria" -> 
                    11611, "bacon" -> 11612, "petty" -> 11613, "##yama" -> 
                    11614, "##old" -> 11615, "hampton" -> 11616, "diagnosis" -> 
                    11617, "1824" -> 11618, "throws" -> 11619, "complexity" -> 
                    11620, "rita" -> 11621, "disputed" -> 11622, "##\:2083" -> 
                    11623, "pablo" -> 11624, "##sch" -> 11625, "marketed" -> 
                    11626, "trafficking" -> 11627, "##ulus" -> 11628, 
                    "examine" -> 11629, "plague" -> 11630, "formats" -> 11631,
                     "##oh" -> 11632, "vault" -> 11633, "faithful" -> 11634, 
                    "##bourne" -> 11635, "webster" -> 11636, "##ox" -> 11637, 
                    "highlights" -> 11638, "##ient" -> 11639, "##ann" -> 
                    11640, "phones" -> 11641, "vacuum" -> 11642, "sandwich" -> 
                    11643, "modeling" -> 11644, "##gated" -> 11645, "bolivia" -> 
                    11646, "clergy" -> 11647, "qualities" -> 11648, "isabel" -> 
                    11649, "##nas" -> 11650, "##ars" -> 11651, "wears" -> 
                    11652, "screams" -> 11653, "reunited" -> 11654, "annoyed" -> 
                    11655, "bra" -> 11656, "##ancy" -> 11657, "##rate" -> 
                    11658, "differential" -> 11659, "transmitter" -> 11660, 
                    "tattoo" -> 11661, "container" -> 11662, "poker" -> 11663,
                     "##och" -> 11664, "excessive" -> 11665, "resides" -> 
                    11666, "cowboys" -> 11667, "##tum" -> 11668, "augustus" -> 
                    11669, "trash" -> 11670, "providers" -> 11671, "statute" -> 
                    11672, "retreated" -> 11673, "balcony" -> 11674, 
                    "reversed" -> 11675, "void" -> 11676, "storey" -> 11677, 
                    "preceded" -> 11678, "masses" -> 11679, "leap" -> 11680, 
                    "laughs" -> 11681, "neighborhoods" -> 11682, "wards" -> 
                    11683, "schemes" -> 11684, "falcon" -> 11685, "santo" -> 
                    11686, "battlefield" -> 11687, "pad" -> 11688, "ronnie" -> 
                    11689, "thread" -> 11690, "lesbian" -> 11691, "venus" -> 
                    11692, "##dian" -> 11693, "beg" -> 11694, "sandstone" -> 
                    11695, "daylight" -> 11696, "punched" -> 11697, "gwen" -> 
                    11698, "analog" -> 11699, "stroked" -> 11700, "wwe" -> 
                    11701, "acceptable" -> 11702, "measurements" -> 11703, 
                    "dec" -> 11704, "toxic" -> 11705, "##kel" -> 11706, 
                    "adequate" -> 11707, "surgical" -> 11708, "economist" -> 
                    11709, "parameters" -> 11710, "varsity" -> 11711, 
                    "##sberg" -> 11712, "quantity" -> 11713, "ella" -> 11714, 
                    "##chy" -> 11715, "##rton" -> 11716, "countess" -> 11717, 
                    "generating" -> 11718, "precision" -> 11719, "diamonds" -> 
                    11720, "expressway" -> 11721, "ga" -> 11722, 
                    "##\[DotlessI]" -> 11723, "1821" -> 11724, "uruguay" -> 
                    11725, "talents" -> 11726, "galleries" -> 11727, 
                    "expenses" -> 11728, "scanned" -> 11729, "colleague" -> 
                    11730, "outlets" -> 11731, "ryder" -> 11732, "lucien" -> 
                    11733, "##ila" -> 11734, "paramount" -> 11735, "##bon" -> 
                    11736, "syracuse" -> 11737, "dim" -> 11738, "fangs" -> 
                    11739, "gown" -> 11740, "sweep" -> 11741, "##sie" -> 
                    11742, "toyota" -> 11743, "missionaries" -> 11744, 
                    "websites" -> 11745, "##nsis" -> 11746, "sentences" -> 
                    11747, "adviser" -> 11748, "val" -> 11749, "trademark" -> 
                    11750, "spells" -> 11751, "##plane" -> 11752, "patience" -> 
                    11753, "starter" -> 11754, "slim" -> 11755, "##borg" -> 
                    11756, "toe" -> 11757, "incredibly" -> 11758, "shoots" -> 
                    11759, "elliot" -> 11760, "nobility" -> 11761, "##wyn" -> 
                    11762, "cowboy" -> 11763, "endorsed" -> 11764, "gardner" -> 
                    11765, "tendency" -> 11766, "persuaded" -> 11767, 
                    "organisms" -> 11768, "emissions" -> 11769, "kazakhstan" -> 
                    11770, "amused" -> 11771, "boring" -> 11772, "chips" -> 
                    11773, "themed" -> 11774, "##hand" -> 11775, "llc" -> 
                    11776, "constantinople" -> 11777, "chasing" -> 11778, 
                    "systematic" -> 11779, "guatemala" -> 11780, "borrowed" -> 
                    11781, "erin" -> 11782, "carey" -> 11783, "##hard" -> 
                    11784, "highlands" -> 11785, "struggles" -> 11786, "1810" -> 
                    11787, "##ifying" -> 11788, "##ced" -> 11789, "wong" -> 
                    11790, "exceptions" -> 11791, "develops" -> 11792, 
                    "enlarged" -> 11793, "kindergarten" -> 11794, "castro" -> 
                    11795, "##ern" -> 11796, "##rina" -> 11797, "leigh" -> 
                    11798, "zombie" -> 11799, "juvenile" -> 11800, "##most" -> 
                    11801, "consul" -> 11802, "##nar" -> 11803, "sailor" -> 
                    11804, "hyde" -> 11805, "clarence" -> 11806, "intensive" -> 
                    11807, "pinned" -> 11808, "nasty" -> 11809, "useless" -> 
                    11810, "jung" -> 11811, "clayton" -> 11812, "stuffed" -> 
                    11813, "exceptional" -> 11814, "ix" -> 11815, "apostolic" -> 
                    11816, "230" -> 11817, "transactions" -> 11818, "##dge" -> 
                    11819, "exempt" -> 11820, "swinging" -> 11821, "cove" -> 
                    11822, "religions" -> 11823, "##ash" -> 11824, "shields" -> 
                    11825, "dairy" -> 11826, "bypass" -> 11827, "190" -> 
                    11828, "pursuing" -> 11829, "bug" -> 11830, "joyce" -> 
                    11831, "bombay" -> 11832, "chassis" -> 11833, 
                    "southampton" -> 11834, "chat" -> 11835, "interact" -> 
                    11836, "redesignated" -> 11837, "##pen" -> 11838, 
                    "nascar" -> 11839, "pray" -> 11840, "salmon" -> 11841, 
                    "rigid" -> 11842, "regained" -> 11843, "malaysian" -> 
                    11844, "grim" -> 11845, "publicity" -> 11846, 
                    "constituted" -> 11847, "capturing" -> 11848, "toilet" -> 
                    11849, "delegate" -> 11850, "purely" -> 11851, "tray" -> 
                    11852, "drift" -> 11853, "loosely" -> 11854, "striker" -> 
                    11855, "weakened" -> 11856, "trinidad" -> 11857, "mitch" -> 
                    11858, "itv" -> 11859, "defines" -> 11860, "transmitted" -> 
                    11861, "ming" -> 11862, "scarlet" -> 11863, "nodding" -> 
                    11864, "fitzgerald" -> 11865, "fu" -> 11866, "narrowly" -> 
                    11867, "sp" -> 11868, "tooth" -> 11869, "standings" -> 
                    11870, "virtue" -> 11871, "##\:2081" -> 11872, "##wara" -> 
                    11873, "##cting" -> 11874, "chateau" -> 11875, "gloves" -> 
                    11876, "lid" -> 11877, "##nel" -> 11878, "hurting" -> 
                    11879, "conservatory" -> 11880, "##pel" -> 11881, 
                    "sinclair" -> 11882, "reopened" -> 11883, "sympathy" -> 
                    11884, "nigerian" -> 11885, "strode" -> 11886, 
                    "advocated" -> 11887, "optional" -> 11888, "chronic" -> 
                    11889, "discharge" -> 11890, "##rc" -> 11891, "suck" -> 
                    11892, "compatible" -> 11893, "laurel" -> 11894, "stella" -> 
                    11895, "shi" -> 11896, "fails" -> 11897, "wage" -> 11898, 
                    "dodge" -> 11899, "128" -> 11900, "informal" -> 11901, 
                    "sorts" -> 11902, "levi" -> 11903, "buddha" -> 11904, 
                    "villagers" -> 11905, "##aka" -> 11906, "chronicles" -> 
                    11907, "heavier" -> 11908, "summoned" -> 11909, "gateway" -> 
                    11910, "3000" -> 11911, "eleventh" -> 11912, "jewelry" -> 
                    11913, "translations" -> 11914, "accordingly" -> 11915, 
                    "seas" -> 11916, "##ency" -> 11917, "fiber" -> 11918, 
                    "pyramid" -> 11919, "cubic" -> 11920, "dragging" -> 11921,
                     "##ista" -> 11922, "caring" -> 11923, "##ops" -> 11924, 
                    "android" -> 11925, "contacted" -> 11926, "lunar" -> 
                    11927, "##dt" -> 11928, "kai" -> 11929, "lisbon" -> 11930,
                     "patted" -> 11931, "1826" -> 11932, "sacramento" -> 
                    11933, "theft" -> 11934, "madagascar" -> 11935, 
                    "subtropical" -> 11936, "disputes" -> 11937, "ta" -> 
                    11938, "holidays" -> 11939, "piper" -> 11940, "willow" -> 
                    11941, "mare" -> 11942, "cane" -> 11943, "itunes" -> 
                    11944, "newfoundland" -> 11945, "benny" -> 11946, 
                    "companions" -> 11947, "dong" -> 11948, "raj" -> 11949, 
                    "observe" -> 11950, "roar" -> 11951, "charming" -> 11952, 
                    "plaque" -> 11953, "tibetan" -> 11954, "fossils" -> 11955,
                     "enacted" -> 11956, "manning" -> 11957, "bubble" -> 
                    11958, "tina" -> 11959, "tanzania" -> 11960, "##eda" -> 
                    11961, "##hir" -> 11962, "funk" -> 11963, "swamp" -> 
                    11964, "deputies" -> 11965, "cloak" -> 11966, "ufc" -> 
                    11967, "scenario" -> 11968, "par" -> 11969, "scratch" -> 
                    11970, "metals" -> 11971, "anthem" -> 11972, "guru" -> 
                    11973, "engaging" -> 11974, "specially" -> 11975, 
                    "##boat" -> 11976, "dialects" -> 11977, "nineteen" -> 
                    11978, "cecil" -> 11979, "duet" -> 11980, "disability" -> 
                    11981, "messenger" -> 11982, "unofficial" -> 11983, 
                    "##lies" -> 11984, "defunct" -> 11985, "eds" -> 11986, 
                    "moonlight" -> 11987, "drainage" -> 11988, "surname" -> 
                    11989, "puzzle" -> 11990, "honda" -> 11991, "switching" -> 
                    11992, "conservatives" -> 11993, "mammals" -> 11994, 
                    "knox" -> 11995, "broadcaster" -> 11996, "sidewalk" -> 
                    11997, "cope" -> 11998, "##ried" -> 11999, "benson" -> 
                    12000, "princes" -> 12001, "peterson" -> 12002, "##sal" -> 
                    12003, "bedford" -> 12004, "sharks" -> 12005, "eli" -> 
                    12006, "wreck" -> 12007, "alberto" -> 12008, "gasp" -> 
                    12009, "archaeology" -> 12010, "lgbt" -> 12011, "teaches" -> 
                    12012, "securities" -> 12013, "madness" -> 12014, 
                    "compromise" -> 12015, "waving" -> 12016, "coordination" -> 
                    12017, "davidson" -> 12018, "visions" -> 12019, "leased" -> 
                    12020, "possibilities" -> 12021, "eighty" -> 12022, "jun" -> 
                    12023, "fernandez" -> 12024, "enthusiasm" -> 12025, 
                    "assassin" -> 12026, "sponsorship" -> 12027, "reviewer" -> 
                    12028, "kingdoms" -> 12029, "estonian" -> 12030, 
                    "laboratories" -> 12031, "##fy" -> 12032, "##nal" -> 
                    12033, "applies" -> 12034, "verb" -> 12035, 
                    "celebrations" -> 12036, "##zzo" -> 12037, "rowing" -> 
                    12038, "lightweight" -> 12039, "sadness" -> 12040, 
                    "submit" -> 12041, "mvp" -> 12042, "balanced" -> 12043, 
                    "dude" -> 12044, "##vas" -> 12045, "explicitly" -> 12046, 
                    "metric" -> 12047, "magnificent" -> 12048, "mound" -> 
                    12049, "brett" -> 12050, "mohammad" -> 12051, "mistakes" -> 
                    12052, "irregular" -> 12053, "##hing" -> 12054, "##ass" -> 
                    12055, "sanders" -> 12056, "betrayed" -> 12057, "shipped" -> 
                    12058, "surge" -> 12059, "##enburg" -> 12060, "reporters" -> 
                    12061, "termed" -> 12062, "georg" -> 12063, "pity" -> 
                    12064, "verbal" -> 12065, "bulls" -> 12066, "abbreviated" -> 
                    12067, "enabling" -> 12068, "appealed" -> 12069, "##are" -> 
                    12070, "##atic" -> 12071, "sicily" -> 12072, "sting" -> 
                    12073, "heel" -> 12074, "sweetheart" -> 12075, "bart" -> 
                    12076, "spacecraft" -> 12077, "brutal" -> 12078, 
                    "monarchy" -> 12079, "##tter" -> 12080, "aberdeen" -> 
                    12081, "cameo" -> 12082, "diane" -> 12083, "##ub" -> 
                    12084, "survivor" -> 12085, "clyde" -> 12086, "##aries" -> 
                    12087, "complaint" -> 12088, "##makers" -> 12089, 
                    "clarinet" -> 12090, "delicious" -> 12091, "chilean" -> 
                    12092, "karnataka" -> 12093, "coordinates" -> 12094, 
                    "1818" -> 12095, "panties" -> 12096, "##rst" -> 12097, 
                    "pretending" -> 12098, "ar" -> 12099, "dramatically" -> 
                    12100, "kiev" -> 12101, "bella" -> 12102, "tends" -> 
                    12103, "distances" -> 12104, "113" -> 12105, "catalog" -> 
                    12106, "launching" -> 12107, "instances" -> 12108, 
                    "telecommunications" -> 12109, "portable" -> 12110, 
                    "lindsay" -> 12111, "vatican" -> 12112, "##eim" -> 12113, 
                    "angles" -> 12114, "aliens" -> 12115, "marker" -> 12116, 
                    "stint" -> 12117, "screens" -> 12118, "bolton" -> 12119, 
                    "##rne" -> 12120, "judy" -> 12121, "wool" -> 12122, 
                    "benedict" -> 12123, "plasma" -> 12124, "europa" -> 12125,
                     "spark" -> 12126, "imaging" -> 12127, "filmmaker" -> 
                    12128, "swiftly" -> 12129, "##een" -> 12130, 
                    "contributor" -> 12131, "##nor" -> 12132, "opted" -> 
                    12133, "stamps" -> 12134, "apologize" -> 12135, 
                    "financing" -> 12136, "butter" -> 12137, "gideon" -> 
                    12138, "sophisticated" -> 12139, "alignment" -> 12140, 
                    "avery" -> 12141, "chemicals" -> 12142, "yearly" -> 12143,
                     "speculation" -> 12144, "prominence" -> 12145, 
                    "professionally" -> 12146, "##ils" -> 12147, "immortal" -> 
                    12148, "institutional" -> 12149, "inception" -> 12150, 
                    "wrists" -> 12151, "identifying" -> 12152, "tribunal" -> 
                    12153, "derives" -> 12154, "gains" -> 12155, "##wo" -> 
                    12156, "papal" -> 12157, "preference" -> 12158, 
                    "linguistic" -> 12159, "vince" -> 12160, "operative" -> 
                    12161, "brewery" -> 12162, "##ont" -> 12163, 
                    "unemployment" -> 12164, "boyd" -> 12165, "##ured" -> 
                    12166, "##outs" -> 12167, "albeit" -> 12168, "prophet" -> 
                    12169, "1813" -> 12170, "bi" -> 12171, "##rr" -> 12172, 
                    "##face" -> 12173, "##rad" -> 12174, "quarterly" -> 12175,
                     "asteroid" -> 12176, "cleaned" -> 12177, "radius" -> 
                    12178, "temper" -> 12179, "##llen" -> 12180, "telugu" -> 
                    12181, "jerk" -> 12182, "viscount" -> 12183, "menu" -> 
                    12184, "##ote" -> 12185, "glimpse" -> 12186, "##aya" -> 
                    12187, "yacht" -> 12188, "hawaiian" -> 12189, "baden" -> 
                    12190, "##rl" -> 12191, "laptop" -> 12192, "readily" -> 
                    12193, "##gu" -> 12194, "monetary" -> 12195, "offshore" -> 
                    12196, "scots" -> 12197, "watches" -> 12198, "##yang" -> 
                    12199, "##arian" -> 12200, "upgrade" -> 12201, "needle" -> 
                    12202, "xbox" -> 12203, "lea" -> 12204, "encyclopedia" -> 
                    12205, "flank" -> 12206, "fingertips" -> 12207, "##pus" -> 
                    12208, "delight" -> 12209, "teachings" -> 12210, 
                    "confirm" -> 12211, "roth" -> 12212, "beaches" -> 12213, 
                    "midway" -> 12214, "winters" -> 12215, "##iah" -> 12216, 
                    "teasing" -> 12217, "daytime" -> 12218, "beverly" -> 
                    12219, "gambling" -> 12220, "bonnie" -> 12221, "##backs" -> 
                    12222, "regulated" -> 12223, "clement" -> 12224, 
                    "hermann" -> 12225, "tricks" -> 12226, "knot" -> 12227, 
                    "##shing" -> 12228, "##uring" -> 12229, "##vre" -> 12230, 
                    "detached" -> 12231, "ecological" -> 12232, "owed" -> 
                    12233, "specialty" -> 12234, "byron" -> 12235, "inventor" -> 
                    12236, "bats" -> 12237, "stays" -> 12238, "screened" -> 
                    12239, "unesco" -> 12240, "midland" -> 12241, "trim" -> 
                    12242, "affection" -> 12243, "##ander" -> 12244, "##rry" -> 
                    12245, "jess" -> 12246, "thoroughly" -> 12247, "feedback" -> 
                    12248, "##uma" -> 12249, "chennai" -> 12250, "strained" -> 
                    12251, "heartbeat" -> 12252, "wrapping" -> 12253, 
                    "overtime" -> 12254, "pleaded" -> 12255, "##sworth" -> 
                    12256, "mon" -> 12257, "leisure" -> 12258, "oclc" -> 
                    12259, "##tate" -> 12260, "##ele" -> 12261, "feathers" -> 
                    12262, "angelo" -> 12263, "thirds" -> 12264, "nuts" -> 
                    12265, "surveys" -> 12266, "clever" -> 12267, "gill" -> 
                    12268, "commentator" -> 12269, "##dos" -> 12270, "darren" -> 
                    12271, "rides" -> 12272, "gibraltar" -> 12273, "##nc" -> 
                    12274, "##mu" -> 12275, "dissolution" -> 12276, 
                    "dedication" -> 12277, "shin" -> 12278, "meals" -> 12279, 
                    "saddle" -> 12280, "elvis" -> 12281, "reds" -> 12282, 
                    "chaired" -> 12283, "taller" -> 12284, "appreciation" -> 
                    12285, "functioning" -> 12286, "niece" -> 12287, 
                    "favored" -> 12288, "advocacy" -> 12289, "robbie" -> 
                    12290, "criminals" -> 12291, "suffolk" -> 12292, 
                    "yugoslav" -> 12293, "passport" -> 12294, "constable" -> 
                    12295, "congressman" -> 12296, "hastings" -> 12297, 
                    "vera" -> 12298, "##rov" -> 12299, "consecrated" -> 12300,
                     "sparks" -> 12301, "ecclesiastical" -> 12302, "confined" -> 
                    12303, "##ovich" -> 12304, "muller" -> 12305, "floyd" -> 
                    12306, "nora" -> 12307, "1822" -> 12308, "paved" -> 12309,
                     "1827" -> 12310, "cumberland" -> 12311, "ned" -> 12312, 
                    "saga" -> 12313, "spiral" -> 12314, "##flow" -> 12315, 
                    "appreciated" -> 12316, "yi" -> 12317, "collaborative" -> 
                    12318, "treating" -> 12319, "similarities" -> 12320, 
                    "feminine" -> 12321, "finishes" -> 12322, "##ib" -> 12323,
                     "jade" -> 12324, "import" -> 12325, "##nse" -> 12326, 
                    "##hot" -> 12327, "champagne" -> 12328, "mice" -> 12329, 
                    "securing" -> 12330, "celebrities" -> 12331, "helsinki" -> 
                    12332, "attributes" -> 12333, "##gos" -> 12334, "cousins" -> 
                    12335, "phases" -> 12336, "ache" -> 12337, "lucia" -> 
                    12338, "gandhi" -> 12339, "submission" -> 12340, "vicar" -> 
                    12341, "spear" -> 12342, "shine" -> 12343, "tasmania" -> 
                    12344, "biting" -> 12345, "detention" -> 12346, 
                    "constitute" -> 12347, "tighter" -> 12348, "seasonal" -> 
                    12349, "##gus" -> 12350, "terrestrial" -> 12351, 
                    "matthews" -> 12352, "##oka" -> 12353, "effectiveness" -> 
                    12354, "parody" -> 12355, "philharmonic" -> 12356, 
                    "##onic" -> 12357, "1816" -> 12358, "strangers" -> 12359, 
                    "encoded" -> 12360, "consortium" -> 12361, "guaranteed" -> 
                    12362, "regards" -> 12363, "shifts" -> 12364, "tortured" -> 
                    12365, "collision" -> 12366, "supervisor" -> 12367, 
                    "inform" -> 12368, "broader" -> 12369, "insight" -> 12370,
                     "theaters" -> 12371, "armour" -> 12372, "emeritus" -> 
                    12373, "blink" -> 12374, "incorporates" -> 12375, 
                    "mapping" -> 12376, "##50" -> 12377, "##ein" -> 12378, 
                    "handball" -> 12379, "flexible" -> 12380, "##nta" -> 
                    12381, "substantially" -> 12382, "generous" -> 12383, 
                    "thief" -> 12384, "##own" -> 12385, "carr" -> 12386, 
                    "loses" -> 12387, "1793" -> 12388, "prose" -> 12389, 
                    "ucla" -> 12390, "romeo" -> 12391, "generic" -> 12392, 
                    "metallic" -> 12393, "realization" -> 12394, "damages" -> 
                    12395, "mk" -> 12396, "commissioners" -> 12397, "zach" -> 
                    12398, "default" -> 12399, "##ther" -> 12400, 
                    "helicopters" -> 12401, "lengthy" -> 12402, "stems" -> 
                    12403, "spa" -> 12404, "partnered" -> 12405, "spectators" -> 
                    12406, "rogue" -> 12407, "indication" -> 12408, 
                    "penalties" -> 12409, "teresa" -> 12410, "1801" -> 12411, 
                    "sen" -> 12412, "##tric" -> 12413, "dalton" -> 12414, 
                    "##wich" -> 12415, "irving" -> 12416, "photographic" -> 
                    12417, "##vey" -> 12418, "dell" -> 12419, "deaf" -> 12420,
                     "peters" -> 12421, "excluded" -> 12422, "unsure" -> 
                    12423, "##vable" -> 12424, "patterson" -> 12425, 
                    "crawled" -> 12426, "##zio" -> 12427, "resided" -> 12428, 
                    "whipped" -> 12429, "latvia" -> 12430, "slower" -> 12431, 
                    "ecole" -> 12432, "pipes" -> 12433, "employers" -> 12434, 
                    "maharashtra" -> 12435, "comparable" -> 12436, "va" -> 
                    12437, "textile" -> 12438, "pageant" -> 12439, "##gel" -> 
                    12440, "alphabet" -> 12441, "binary" -> 12442, 
                    "irrigation" -> 12443, "chartered" -> 12444, "choked" -> 
                    12445, "antoine" -> 12446, "offs" -> 12447, "waking" -> 
                    12448, "supplement" -> 12449, "##wen" -> 12450, 
                    "quantities" -> 12451, "demolition" -> 12452, "regain" -> 
                    12453, "locate" -> 12454, "urdu" -> 12455, "folks" -> 
                    12456, "alt" -> 12457, "114" -> 12458, "##mc" -> 12459, 
                    "scary" -> 12460, "andreas" -> 12461, "whites" -> 12462, 
                    "##ava" -> 12463, "classrooms" -> 12464, "mw" -> 12465, 
                    "aesthetic" -> 12466, "publishes" -> 12467, "valleys" -> 
                    12468, "guides" -> 12469, "cubs" -> 12470, "johannes" -> 
                    12471, "bryant" -> 12472, "conventions" -> 12473, 
                    "affecting" -> 12474, "##itt" -> 12475, "drain" -> 12476, 
                    "awesome" -> 12477, "isolation" -> 12478, "prosecutor" -> 
                    12479, "ambitious" -> 12480, "apology" -> 12481, 
                    "captive" -> 12482, "downs" -> 12483, "atmospheric" -> 
                    12484, "lorenzo" -> 12485, "aisle" -> 12486, "beef" -> 
                    12487, "foul" -> 12488, "##onia" -> 12489, "kidding" -> 
                    12490, "composite" -> 12491, "disturbed" -> 12492, 
                    "illusion" -> 12493, "natives" -> 12494, "##ffer" -> 
                    12495, "emi" -> 12496, "rockets" -> 12497, "riverside" -> 
                    12498, "wartime" -> 12499, "painters" -> 12500, "adolf" -> 
                    12501, "melted" -> 12502, "##ail" -> 12503, "uncertainty" -> 
                    12504, "simulation" -> 12505, "hawks" -> 12506, 
                    "progressed" -> 12507, "meantime" -> 12508, "builder" -> 
                    12509, "spray" -> 12510, "breach" -> 12511, "unhappy" -> 
                    12512, "regina" -> 12513, "russians" -> 12514, "##urg" -> 
                    12515, "determining" -> 12516, "##tation" -> 12517, 
                    "tram" -> 12518, "1806" -> 12519, "##quin" -> 12520, 
                    "aging" -> 12521, "##12" -> 12522, "1823" -> 12523, 
                    "garion" -> 12524, "rented" -> 12525, "mister" -> 12526, 
                    "diaz" -> 12527, "terminated" -> 12528, "clip" -> 12529, 
                    "1817" -> 12530, "depend" -> 12531, "nervously" -> 12532, 
                    "disco" -> 12533, "owe" -> 12534, "defenders" -> 12535, 
                    "shiva" -> 12536, "notorious" -> 12537, "disbelief" -> 
                    12538, "shiny" -> 12539, "worcester" -> 12540, "##gation" -> 
                    12541, "##yr" -> 12542, "trailing" -> 12543, "undertook" -> 
                    12544, "islander" -> 12545, "belarus" -> 12546, 
                    "limitations" -> 12547, "watershed" -> 12548, "fuller" -> 
                    12549, "overlooking" -> 12550, "utilized" -> 12551, 
                    "raphael" -> 12552, "1819" -> 12553, "synthetic" -> 12554,
                     "breakdown" -> 12555, "klein" -> 12556, "##nate" -> 
                    12557, "moaned" -> 12558, "memoir" -> 12559, "lamb" -> 
                    12560, "practicing" -> 12561, "##erly" -> 12562, 
                    "cellular" -> 12563, "arrows" -> 12564, "exotic" -> 12565,
                     "##graphy" -> 12566, "witches" -> 12567, "117" -> 12568, 
                    "charted" -> 12569, "rey" -> 12570, "hut" -> 12571, 
                    "hierarchy" -> 12572, "subdivision" -> 12573, 
                    "freshwater" -> 12574, "giuseppe" -> 12575, "aloud" -> 
                    12576, "reyes" -> 12577, "qatar" -> 12578, "marty" -> 
                    12579, "sideways" -> 12580, "utterly" -> 12581, 
                    "sexually" -> 12582, "jude" -> 12583, "prayers" -> 12584, 
                    "mccarthy" -> 12585, "softball" -> 12586, "blend" -> 
                    12587, "damien" -> 12588, "##gging" -> 12589, "##metric" -> 
                    12590, "wholly" -> 12591, "erupted" -> 12592, "lebanese" -> 
                    12593, "negro" -> 12594, "revenues" -> 12595, "tasted" -> 
                    12596, "comparative" -> 12597, "teamed" -> 12598, 
                    "transaction" -> 12599, "labeled" -> 12600, "maori" -> 
                    12601, "sovereignty" -> 12602, "parkway" -> 12603, 
                    "trauma" -> 12604, "gran" -> 12605, "malay" -> 12606, 
                    "121" -> 12607, "advancement" -> 12608, "descendant" -> 
                    12609, "2020" -> 12610, "buzz" -> 12611, "salvation" -> 
                    12612, "inventory" -> 12613, "symbolic" -> 12614, 
                    "##making" -> 12615, "antarctica" -> 12616, "mps" -> 
                    12617, "##gas" -> 12618, "##bro" -> 12619, "mohammed" -> 
                    12620, "myanmar" -> 12621, "holt" -> 12622, "submarines" -> 
                    12623, "tones" -> 12624, "##lman" -> 12625, "locker" -> 
                    12626, "patriarch" -> 12627, "bangkok" -> 12628, 
                    "emerson" -> 12629, "remarks" -> 12630, "predators" -> 
                    12631, "kin" -> 12632, "afghan" -> 12633, "confession" -> 
                    12634, "norwich" -> 12635, "rental" -> 12636, "emerge" -> 
                    12637, "advantages" -> 12638, "##zel" -> 12639, "rca" -> 
                    12640, "##hold" -> 12641, "shortened" -> 12642, "storms" -> 
                    12643, "aidan" -> 12644, "##matic" -> 12645, "autonomy" -> 
                    12646, "compliance" -> 12647, "##quet" -> 12648, "dudley" -> 
                    12649, "atp" -> 12650, "##osis" -> 12651, "1803" -> 12652,
                     "motto" -> 12653, "documentation" -> 12654, "summary" -> 
                    12655, "professors" -> 12656, "spectacular" -> 12657, 
                    "christina" -> 12658, "archdiocese" -> 12659, "flashing" -> 
                    12660, "innocence" -> 12661, "remake" -> 12662, "##dell" -> 
                    12663, "psychic" -> 12664, "reef" -> 12665, "scare" -> 
                    12666, "employ" -> 12667, "rs" -> 12668, "sticks" -> 
                    12669, "meg" -> 12670, "gus" -> 12671, "leans" -> 12672, 
                    "##ude" -> 12673, "accompany" -> 12674, "bergen" -> 12675,
                     "tomas" -> 12676, "##iko" -> 12677, "doom" -> 12678, 
                    "wages" -> 12679, "pools" -> 12680, "##nch" -> 12681, 
                    "##bes" -> 12682, "breasts" -> 12683, "scholarly" -> 
                    12684, "alison" -> 12685, "outline" -> 12686, "brittany" -> 
                    12687, "breakthrough" -> 12688, "willis" -> 12689, 
                    "realistic" -> 12690, "##cut" -> 12691, "##boro" -> 12692,
                     "competitor" -> 12693, "##stan" -> 12694, "pike" -> 
                    12695, "picnic" -> 12696, "icon" -> 12697, "designing" -> 
                    12698, "commercials" -> 12699, "washing" -> 12700, 
                    "villain" -> 12701, "skiing" -> 12702, "micro" -> 12703, 
                    "costumes" -> 12704, "auburn" -> 12705, "halted" -> 12706,
                     "executives" -> 12707, "##hat" -> 12708, "logistics" -> 
                    12709, "cycles" -> 12710, "vowel" -> 12711, "applicable" -> 
                    12712, "barrett" -> 12713, "exclaimed" -> 12714, 
                    "eurovision" -> 12715, "eternity" -> 12716, "ramon" -> 
                    12717, "##umi" -> 12718, "##lls" -> 12719, 
                    "modifications" -> 12720, "sweeping" -> 12721, "disgust" -> 
                    12722, "##uck" -> 12723, "torch" -> 12724, "aviv" -> 
                    12725, "ensuring" -> 12726, "rude" -> 12727, "dusty" -> 
                    12728, "sonic" -> 12729, "donovan" -> 12730, "outskirts" -> 
                    12731, "cu" -> 12732, "pathway" -> 12733, "##band" -> 
                    12734, "##gun" -> 12735, "##lines" -> 12736, 
                    "disciplines" -> 12737, "acids" -> 12738, "cadet" -> 
                    12739, "paired" -> 12740, "##40" -> 12741, "sketches" -> 
                    12742, "##sive" -> 12743, "marriages" -> 12744, 
                    "##\:207a" -> 12745, "folding" -> 12746, "peers" -> 12747,
                     "slovak" -> 12748, "implies" -> 12749, "admired" -> 
                    12750, "##beck" -> 12751, "1880s" -> 12752, "leopold" -> 
                    12753, "instinct" -> 12754, "attained" -> 12755, "weston" -> 
                    12756, "megan" -> 12757, "horace" -> 12758, "##ination" -> 
                    12759, "dorsal" -> 12760, "ingredients" -> 12761, 
                    "evolutionary" -> 12762, "##its" -> 12763, 
                    "complications" -> 12764, "deity" -> 12765, "lethal" -> 
                    12766, "brushing" -> 12767, "levy" -> 12768, "deserted" -> 
                    12769, "institutes" -> 12770, "posthumously" -> 12771, 
                    "delivering" -> 12772, "telescope" -> 12773, "coronation" -> 
                    12774, "motivated" -> 12775, "rapids" -> 12776, "luc" -> 
                    12777, "flicked" -> 12778, "pays" -> 12779, "volcano" -> 
                    12780, "tanner" -> 12781, "weighed" -> 12782, "##nica" -> 
                    12783, "crowds" -> 12784, "frankie" -> 12785, "gifted" -> 
                    12786, "addressing" -> 12787, "granddaughter" -> 12788, 
                    "winding" -> 12789, "##rna" -> 12790, "constantine" -> 
                    12791, "gomez" -> 12792, "##front" -> 12793, "landscapes" -> 
                    12794, "rudolf" -> 12795, "anthropology" -> 12796, 
                    "slate" -> 12797, "werewolf" -> 12798, "##lio" -> 12799, 
                    "astronomy" -> 12800, "circa" -> 12801, "rouge" -> 12802, 
                    "dreaming" -> 12803, "sack" -> 12804, "knelt" -> 12805, 
                    "drowned" -> 12806, "naomi" -> 12807, "prolific" -> 12808,
                     "tracked" -> 12809, "freezing" -> 12810, "herb" -> 12811,
                     "##dium" -> 12812, "agony" -> 12813, "randall" -> 12814, 
                    "twisting" -> 12815, "wendy" -> 12816, "deposit" -> 12817,
                     "touches" -> 12818, "vein" -> 12819, "wheeler" -> 12820, 
                    "##bbled" -> 12821, "##bor" -> 12822, "batted" -> 12823, 
                    "retaining" -> 12824, "tire" -> 12825, "presently" -> 
                    12826, "compare" -> 12827, "specification" -> 12828, 
                    "daemon" -> 12829, "nigel" -> 12830, "##grave" -> 12831, 
                    "merry" -> 12832, "recommendation" -> 12833, 
                    "czechoslovakia" -> 12834, "sandra" -> 12835, "ng" -> 
                    12836, "roma" -> 12837, "##sts" -> 12838, "lambert" -> 
                    12839, "inheritance" -> 12840, "sheikh" -> 12841, 
                    "winchester" -> 12842, "cries" -> 12843, "examining" -> 
                    12844, "##yle" -> 12845, "comeback" -> 12846, "cuisine" -> 
                    12847, "nave" -> 12848, "##iv" -> 12849, "ko" -> 12850, 
                    "retrieve" -> 12851, "tomatoes" -> 12852, "barker" -> 
                    12853, "polished" -> 12854, "defining" -> 12855, "irene" -> 
                    12856, "lantern" -> 12857, "personalities" -> 12858, 
                    "begging" -> 12859, "tract" -> 12860, "swore" -> 12861, 
                    "1809" -> 12862, "175" -> 12863, "##gic" -> 12864, 
                    "omaha" -> 12865, "brotherhood" -> 12866, "##rley" -> 
                    12867, "haiti" -> 12868, "##ots" -> 12869, "exeter" -> 
                    12870, "##ete" -> 12871, "##zia" -> 12872, "steele" -> 
                    12873, "dumb" -> 12874, "pearson" -> 12875, "210" -> 
                    12876, "surveyed" -> 12877, "elisabeth" -> 12878, 
                    "trends" -> 12879, "##ef" -> 12880, "fritz" -> 12881, 
                    "##rf" -> 12882, "premium" -> 12883, "bugs" -> 12884, 
                    "fraction" -> 12885, "calmly" -> 12886, "viking" -> 12887,
                     "##birds" -> 12888, "tug" -> 12889, "inserted" -> 12890, 
                    "unusually" -> 12891, "##ield" -> 12892, "confronted" -> 
                    12893, "distress" -> 12894, "crashing" -> 12895, "brent" -> 
                    12896, "turks" -> 12897, "resign" -> 12898, "##olo" -> 
                    12899, "cambodia" -> 12900, "gabe" -> 12901, "sauce" -> 
                    12902, "##kal" -> 12903, "evelyn" -> 12904, "116" -> 
                    12905, "extant" -> 12906, "clusters" -> 12907, "quarry" -> 
                    12908, "teenagers" -> 12909, "luna" -> 12910, "##lers" -> 
                    12911, "##ister" -> 12912, "affiliation" -> 12913, 
                    "drill" -> 12914, "##ashi" -> 12915, "panthers" -> 12916, 
                    "scenic" -> 12917, "libya" -> 12918, "anita" -> 12919, 
                    "strengthen" -> 12920, "inscriptions" -> 12921, "##cated" -> 
                    12922, "lace" -> 12923, "sued" -> 12924, "judith" -> 
                    12925, "riots" -> 12926, "##uted" -> 12927, "mint" -> 
                    12928, "##eta" -> 12929, "preparations" -> 12930, "midst" -> 
                    12931, "dub" -> 12932, "challenger" -> 12933, "##vich" -> 
                    12934, "mock" -> 12935, "cf" -> 12936, "displaced" -> 
                    12937, "wicket" -> 12938, "breaths" -> 12939, "enables" -> 
                    12940, "schmidt" -> 12941, "analyst" -> 12942, "##lum" -> 
                    12943, "ag" -> 12944, "highlight" -> 12945, "automotive" -> 
                    12946, "axe" -> 12947, "josef" -> 12948, "newark" -> 
                    12949, "sufficiently" -> 12950, "resembles" -> 12951, 
                    "50th" -> 12952, "##pal" -> 12953, "flushed" -> 12954, 
                    "mum" -> 12955, "traits" -> 12956, "##ante" -> 12957, 
                    "commodore" -> 12958, "incomplete" -> 12959, "warming" -> 
                    12960, "titular" -> 12961, "ceremonial" -> 12962, 
                    "ethical" -> 12963, "118" -> 12964, "celebrating" -> 
                    12965, "eighteenth" -> 12966, "cao" -> 12967, "lima" -> 
                    12968, "medalist" -> 12969, "mobility" -> 12970, "strips" -> 
                    12971, "snakes" -> 12972, "##city" -> 12973, "miniature" -> 
                    12974, "zagreb" -> 12975, "barton" -> 12976, "escapes" -> 
                    12977, "umbrella" -> 12978, "automated" -> 12979, 
                    "doubted" -> 12980, "differs" -> 12981, "cooled" -> 12982,
                     "georgetown" -> 12983, "dresden" -> 12984, "cooked" -> 
                    12985, "fade" -> 12986, "wyatt" -> 12987, "rna" -> 12988, 
                    "jacobs" -> 12989, "carlton" -> 12990, "abundant" -> 
                    12991, "stereo" -> 12992, "boost" -> 12993, "madras" -> 
                    12994, "inning" -> 12995, "##hia" -> 12996, "spur" -> 
                    12997, "ip" -> 12998, "malayalam" -> 12999, "begged" -> 
                    13000, "osaka" -> 13001, "groan" -> 13002, "escaping" -> 
                    13003, "charging" -> 13004, "dose" -> 13005, "vista" -> 
                    13006, "##aj" -> 13007, "bud" -> 13008, "papa" -> 13009, 
                    "communists" -> 13010, "advocates" -> 13011, "edged" -> 
                    13012, "tri" -> 13013, "##cent" -> 13014, "resemble" -> 
                    13015, "peaking" -> 13016, "necklace" -> 13017, "fried" -> 
                    13018, "montenegro" -> 13019, "saxony" -> 13020, "goose" -> 
                    13021, "glances" -> 13022, "stuttgart" -> 13023, 
                    "curator" -> 13024, "recruit" -> 13025, "grocery" -> 
                    13026, "sympathetic" -> 13027, "##tting" -> 13028, 
                    "##fort" -> 13029, "127" -> 13030, "lotus" -> 13031, 
                    "randolph" -> 13032, "ancestor" -> 13033, "##rand" -> 
                    13034, "succeeding" -> 13035, "jupiter" -> 13036, "1798" -> 
                    13037, "macedonian" -> 13038, "##heads" -> 13039, 
                    "hiking" -> 13040, "1808" -> 13041, "handing" -> 13042, 
                    "fischer" -> 13043, "##itive" -> 13044, "garbage" -> 
                    13045, "node" -> 13046, "##pies" -> 13047, "prone" -> 
                    13048, "singular" -> 13049, "papua" -> 13050, "inclined" -> 
                    13051, "attractions" -> 13052, "italia" -> 13053, 
                    "pouring" -> 13054, "motioned" -> 13055, "grandma" -> 
                    13056, "garnered" -> 13057, "jacksonville" -> 13058, 
                    "corp" -> 13059, "ego" -> 13060, "ringing" -> 13061, 
                    "aluminum" -> 13062, "##hausen" -> 13063, "ordering" -> 
                    13064, "##foot" -> 13065, "drawer" -> 13066, "traders" -> 
                    13067, "synagogue" -> 13068, "##play" -> 13069, "##kawa" -> 
                    13070, "resistant" -> 13071, "wandering" -> 13072, 
                    "fragile" -> 13073, "fiona" -> 13074, "teased" -> 13075, 
                    "var" -> 13076, "hardcore" -> 13077, "soaked" -> 13078, 
                    "jubilee" -> 13079, "decisive" -> 13080, "exposition" -> 
                    13081, "mercer" -> 13082, "poster" -> 13083, "valencia" -> 
                    13084, "hale" -> 13085, "kuwait" -> 13086, "1811" -> 
                    13087, "##ises" -> 13088, "##wr" -> 13089, "##eed" -> 
                    13090, "tavern" -> 13091, "gamma" -> 13092, "122" -> 
                    13093, "johan" -> 13094, "##uer" -> 13095, "airways" -> 
                    13096, "amino" -> 13097, "gil" -> 13098, "##ury" -> 13099,
                     "vocational" -> 13100, "domains" -> 13101, "torres" -> 
                    13102, "##sp" -> 13103, "generator" -> 13104, "folklore" -> 
                    13105, "outcomes" -> 13106, "##keeper" -> 13107, 
                    "canberra" -> 13108, "shooter" -> 13109, "fl" -> 13110, 
                    "beams" -> 13111, "confrontation" -> 13112, "##lling" -> 
                    13113, "##gram" -> 13114, "feb" -> 13115, "aligned" -> 
                    13116, "forestry" -> 13117, "pipeline" -> 13118, "jax" -> 
                    13119, "motorway" -> 13120, "conception" -> 13121, 
                    "decay" -> 13122, "##tos" -> 13123, "coffin" -> 13124, 
                    "##cott" -> 13125, "stalin" -> 13126, "1805" -> 13127, 
                    "escorted" -> 13128, "minded" -> 13129, "##nam" -> 13130, 
                    "sitcom" -> 13131, "purchasing" -> 13132, "twilight" -> 
                    13133, "veronica" -> 13134, "additions" -> 13135, 
                    "passive" -> 13136, "tensions" -> 13137, "straw" -> 13138,
                     "123" -> 13139, "frequencies" -> 13140, "1804" -> 13141, 
                    "refugee" -> 13142, "cultivation" -> 13143, "##iate" -> 
                    13144, "christie" -> 13145, "clary" -> 13146, "bulletin" -> 
                    13147, "crept" -> 13148, "disposal" -> 13149, "##rich" -> 
                    13150, "##zong" -> 13151, "processor" -> 13152, 
                    "crescent" -> 13153, "##rol" -> 13154, "bmw" -> 13155, 
                    "emphasized" -> 13156, "whale" -> 13157, "nazis" -> 13158,
                     "aurora" -> 13159, "##eng" -> 13160, "dwelling" -> 13161,
                     "hauled" -> 13162, "sponsors" -> 13163, "toledo" -> 
                    13164, "mega" -> 13165, "ideology" -> 13166, "theatres" -> 
                    13167, "tessa" -> 13168, "cerambycidae" -> 13169, "saves" -> 
                    13170, "turtle" -> 13171, "cone" -> 13172, "suspects" -> 
                    13173, "kara" -> 13174, "rusty" -> 13175, "yelling" -> 
                    13176, "greeks" -> 13177, "mozart" -> 13178, "shades" -> 
                    13179, "cocked" -> 13180, "participant" -> 13181, "##tro" -> 
                    13182, "shire" -> 13183, "spit" -> 13184, "freeze" -> 
                    13185, "necessity" -> 13186, "##cos" -> 13187, "inmates" -> 
                    13188, "nielsen" -> 13189, "councillors" -> 13190, 
                    "loaned" -> 13191, "uncommon" -> 13192, "omar" -> 13193, 
                    "peasants" -> 13194, "botanical" -> 13195, "offspring" -> 
                    13196, "daniels" -> 13197, "formations" -> 13198, "jokes" -> 
                    13199, "1794" -> 13200, "pioneers" -> 13201, "sigma" -> 
                    13202, "licensing" -> 13203, "##sus" -> 13204, 
                    "wheelchair" -> 13205, "polite" -> 13206, "1807" -> 13207,
                     "liquor" -> 13208, "pratt" -> 13209, "trustee" -> 13210, 
                    "##uta" -> 13211, "forewings" -> 13212, "balloon" -> 
                    13213, "##zz" -> 13214, "kilometre" -> 13215, "camping" -> 
                    13216, "explicit" -> 13217, "casually" -> 13218, "shawn" -> 
                    13219, "foolish" -> 13220, "teammates" -> 13221, "nm" -> 
                    13222, "hassan" -> 13223, "carrie" -> 13224, "judged" -> 
                    13225, "satisfy" -> 13226, "vanessa" -> 13227, "knives" -> 
                    13228, "selective" -> 13229, "cnn" -> 13230, "flowed" -> 
                    13231, "##lice" -> 13232, "eclipse" -> 13233, "stressed" -> 
                    13234, "eliza" -> 13235, "mathematician" -> 13236, 
                    "cease" -> 13237, "cultivated" -> 13238, "##roy" -> 13239,
                     "commissions" -> 13240, "browns" -> 13241, "##ania" -> 
                    13242, "destroyers" -> 13243, "sheridan" -> 13244, 
                    "meadow" -> 13245, "##rius" -> 13246, "minerals" -> 13247,
                     "##cial" -> 13248, "downstream" -> 13249, "clash" -> 
                    13250, "gram" -> 13251, "memoirs" -> 13252, "ventures" -> 
                    13253, "baha" -> 13254, "seymour" -> 13255, "archie" -> 
                    13256, "midlands" -> 13257, "edith" -> 13258, "fare" -> 
                    13259, "flynn" -> 13260, "invite" -> 13261, "canceled" -> 
                    13262, "tiles" -> 13263, "stabbed" -> 13264, "boulder" -> 
                    13265, "incorporate" -> 13266, "amended" -> 13267, 
                    "camden" -> 13268, "facial" -> 13269, "mollusk" -> 13270, 
                    "unreleased" -> 13271, "descriptions" -> 13272, "yoga" -> 
                    13273, "grabs" -> 13274, "550" -> 13275, "raises" -> 
                    13276, "ramp" -> 13277, "shiver" -> 13278, "##rose" -> 
                    13279, "coined" -> 13280, "pioneering" -> 13281, "tunes" -> 
                    13282, "qing" -> 13283, "warwick" -> 13284, "tops" -> 
                    13285, "119" -> 13286, "melanie" -> 13287, "giles" -> 
                    13288, "##rous" -> 13289, "wandered" -> 13290, "##inal" -> 
                    13291, "annexed" -> 13292, "nov" -> 13293, "30th" -> 
                    13294, "unnamed" -> 13295, "##ished" -> 13296, 
                    "organizational" -> 13297, "airplane" -> 13298, 
                    "normandy" -> 13299, "stoke" -> 13300, "whistle" -> 13301,
                     "blessing" -> 13302, "violations" -> 13303, "chased" -> 
                    13304, "holders" -> 13305, "shotgun" -> 13306, "##ctic" -> 
                    13307, "outlet" -> 13308, "reactor" -> 13309, "##vik" -> 
                    13310, "tires" -> 13311, "tearing" -> 13312, "shores" -> 
                    13313, "fortified" -> 13314, "mascot" -> 13315, 
                    "constituencies" -> 13316, "nc" -> 13317, "columnist" -> 
                    13318, "productive" -> 13319, "tibet" -> 13320, "##rta" -> 
                    13321, "lineage" -> 13322, "hooked" -> 13323, "oct" -> 
                    13324, "tapes" -> 13325, "judging" -> 13326, "cody" -> 
                    13327, "##gger" -> 13328, "hansen" -> 13329, "kashmir" -> 
                    13330, "triggered" -> 13331, "##eva" -> 13332, "solved" -> 
                    13333, "cliffs" -> 13334, "##tree" -> 13335, "resisted" -> 
                    13336, "anatomy" -> 13337, "protesters" -> 13338, 
                    "transparent" -> 13339, "implied" -> 13340, "##iga" -> 
                    13341, "injection" -> 13342, "mattress" -> 13343, 
                    "excluding" -> 13344, "##mbo" -> 13345, "defenses" -> 
                    13346, "helpless" -> 13347, "devotion" -> 13348, "##elli" -> 
                    13349, "growl" -> 13350, "liberals" -> 13351, "weber" -> 
                    13352, "phenomena" -> 13353, "atoms" -> 13354, "plug" -> 
                    13355, "##iff" -> 13356, "mortality" -> 13357, 
                    "apprentice" -> 13358, "howe" -> 13359, "convincing" -> 
                    13360, "aaa" -> 13361, "swimmer" -> 13362, "barber" -> 
                    13363, "leone" -> 13364, "promptly" -> 13365, "sodium" -> 
                    13366, "def" -> 13367, "nowadays" -> 13368, "arise" -> 
                    13369, "##oning" -> 13370, "gloucester" -> 13371, 
                    "corrected" -> 13372, "dignity" -> 13373, "norm" -> 13374,
                     "erie" -> 13375, "##ders" -> 13376, "elders" -> 13377, 
                    "evacuated" -> 13378, "sylvia" -> 13379, "compression" -> 
                    13380, "##yar" -> 13381, "hartford" -> 13382, "pose" -> 
                    13383, "backpack" -> 13384, "reasoning" -> 13385, 
                    "accepts" -> 13386, "24th" -> 13387, "wipe" -> 13388, 
                    "millimetres" -> 13389, "marcel" -> 13390, "##oda" -> 
                    13391, "dodgers" -> 13392, "albion" -> 13393, "1790" -> 
                    13394, "overwhelmed" -> 13395, "aerospace" -> 13396, 
                    "oaks" -> 13397, "1795" -> 13398, "showcase" -> 13399, 
                    "acknowledge" -> 13400, "recovering" -> 13401, "nolan" -> 
                    13402, "ashe" -> 13403, "hurts" -> 13404, "geology" -> 
                    13405, "fashioned" -> 13406, "disappearance" -> 13407, 
                    "farewell" -> 13408, "swollen" -> 13409, "shrug" -> 13410,
                     "marquis" -> 13411, "wimbledon" -> 13412, "124" -> 13413,
                     "rue" -> 13414, "1792" -> 13415, "commemorate" -> 13416, 
                    "reduces" -> 13417, "experiencing" -> 13418, "inevitable" -> 
                    13419, "calcutta" -> 13420, "intel" -> 13421, "##court" -> 
                    13422, "murderer" -> 13423, "sticking" -> 13424, 
                    "fisheries" -> 13425, "imagery" -> 13426, "bloom" -> 
                    13427, "280" -> 13428, "brake" -> 13429, "##inus" -> 
                    13430, "gustav" -> 13431, "hesitation" -> 13432, 
                    "memorable" -> 13433, "po" -> 13434, "viral" -> 13435, 
                    "beans" -> 13436, "accidents" -> 13437, "tunisia" -> 
                    13438, "antenna" -> 13439, "spilled" -> 13440, "consort" -> 
                    13441, "treatments" -> 13442, "aye" -> 13443, "perimeter" -> 
                    13444, "##gard" -> 13445, "donation" -> 13446, "hostage" -> 
                    13447, "migrated" -> 13448, "banker" -> 13449, 
                    "addiction" -> 13450, "apex" -> 13451, "lil" -> 13452, 
                    "trout" -> 13453, "##ously" -> 13454, "conscience" -> 
                    13455, "##nova" -> 13456, "rams" -> 13457, "sands" -> 
                    13458, "genome" -> 13459, "passionate" -> 13460, 
                    "troubles" -> 13461, "##lets" -> 13462, "##set" -> 13463, 
                    "amid" -> 13464, "##ibility" -> 13465, "##ret" -> 13466, 
                    "higgins" -> 13467, "exceed" -> 13468, "vikings" -> 13469,
                     "##vie" -> 13470, "payne" -> 13471, "##zan" -> 13472, 
                    "muscular" -> 13473, "##ste" -> 13474, "defendant" -> 
                    13475, "sucking" -> 13476, "##wal" -> 13477, "ibrahim" -> 
                    13478, "fuselage" -> 13479, "claudia" -> 13480, "vfl" -> 
                    13481, "europeans" -> 13482, "snails" -> 13483, 
                    "interval" -> 13484, "##garh" -> 13485, "preparatory" -> 
                    13486, "statewide" -> 13487, "tasked" -> 13488, 
                    "lacrosse" -> 13489, "viktor" -> 13490, "##lation" -> 
                    13491, "angola" -> 13492, "##hra" -> 13493, "flint" -> 
                    13494, "implications" -> 13495, "employs" -> 13496, 
                    "teens" -> 13497, "patrons" -> 13498, "stall" -> 13499, 
                    "weekends" -> 13500, "barriers" -> 13501, "scrambled" -> 
                    13502, "nucleus" -> 13503, "tehran" -> 13504, "jenna" -> 
                    13505, "parsons" -> 13506, "lifelong" -> 13507, "robots" -> 
                    13508, "displacement" -> 13509, "5000" -> 13510, "##bles" -> 
                    13511, "precipitation" -> 13512, "##gt" -> 13513, 
                    "knuckles" -> 13514, "clutched" -> 13515, "1802" -> 13516,
                     "marrying" -> 13517, "ecology" -> 13518, "marx" -> 13519,
                     "accusations" -> 13520, "declare" -> 13521, "scars" -> 
                    13522, "kolkata" -> 13523, "mat" -> 13524, "meadows" -> 
                    13525, "bermuda" -> 13526, "skeleton" -> 13527, 
                    "finalists" -> 13528, "vintage" -> 13529, "crawl" -> 
                    13530, "coordinate" -> 13531, "affects" -> 13532, 
                    "subjected" -> 13533, "orchestral" -> 13534, "mistaken" -> 
                    13535, "##tc" -> 13536, "mirrors" -> 13537, "dipped" -> 
                    13538, "relied" -> 13539, "260" -> 13540, "arches" -> 
                    13541, "candle" -> 13542, "##nick" -> 13543, 
                    "incorporating" -> 13544, "wildly" -> 13545, "fond" -> 
                    13546, "basilica" -> 13547, "owl" -> 13548, "fringe" -> 
                    13549, "rituals" -> 13550, "whispering" -> 13551, 
                    "stirred" -> 13552, "feud" -> 13553, "tertiary" -> 13554, 
                    "slick" -> 13555, "goat" -> 13556, "honorable" -> 13557, 
                    "whereby" -> 13558, "skip" -> 13559, "ricardo" -> 13560, 
                    "stripes" -> 13561, "parachute" -> 13562, "adjoining" -> 
                    13563, "submerged" -> 13564, "synthesizer" -> 13565, 
                    "##gren" -> 13566, "intend" -> 13567, "positively" -> 
                    13568, "ninety" -> 13569, "phi" -> 13570, "beaver" -> 
                    13571, "partition" -> 13572, "fellows" -> 13573, "alexis" -> 
                    13574, "prohibition" -> 13575, "carlisle" -> 13576, 
                    "bizarre" -> 13577, "fraternity" -> 13578, "##bre" -> 
                    13579, "doubts" -> 13580, "icy" -> 13581, "cbc" -> 13582, 
                    "aquatic" -> 13583, "sneak" -> 13584, "sonny" -> 13585, 
                    "combines" -> 13586, "airports" -> 13587, "crude" -> 
                    13588, "supervised" -> 13589, "spatial" -> 13590, "merge" -> 
                    13591, "alfonso" -> 13592, "##bic" -> 13593, "corrupt" -> 
                    13594, "scan" -> 13595, "undergo" -> 13596, "##ams" -> 
                    13597, "disabilities" -> 13598, "colombian" -> 13599, 
                    "comparing" -> 13600, "dolphins" -> 13601, "perkins" -> 
                    13602, "##lish" -> 13603, "reprinted" -> 13604, 
                    "unanimous" -> 13605, "bounced" -> 13606, "hairs" -> 
                    13607, "underworld" -> 13608, "midwest" -> 13609, 
                    "semester" -> 13610, "bucket" -> 13611, "paperback" -> 
                    13612, "miniseries" -> 13613, "coventry" -> 13614, 
                    "demise" -> 13615, "##leigh" -> 13616, "demonstrations" -> 
                    13617, "sensor" -> 13618, "rotating" -> 13619, "yan" -> 
                    13620, "##hler" -> 13621, "arrange" -> 13622, "soils" -> 
                    13623, "##idge" -> 13624, "hyderabad" -> 13625, "labs" -> 
                    13626, "##dr" -> 13627, "brakes" -> 13628, 
                    "grandchildren" -> 13629, "##nde" -> 13630, "negotiated" -> 
                    13631, "rover" -> 13632, "ferrari" -> 13633, 
                    "continuation" -> 13634, "directorate" -> 13635, 
                    "augusta" -> 13636, "stevenson" -> 13637, "counterpart" -> 
                    13638, "gore" -> 13639, "##rda" -> 13640, "nursery" -> 
                    13641, "rican" -> 13642, "ave" -> 13643, "collectively" -> 
                    13644, "broadly" -> 13645, "pastoral" -> 13646, 
                    "repertoire" -> 13647, "asserted" -> 13648, "discovering" -> 
                    13649, "nordic" -> 13650, "styled" -> 13651, "fiba" -> 
                    13652, "cunningham" -> 13653, "harley" -> 13654, 
                    "middlesex" -> 13655, "survives" -> 13656, "tumor" -> 
                    13657, "tempo" -> 13658, "zack" -> 13659, "aiming" -> 
                    13660, "lok" -> 13661, "urgent" -> 13662, "##rade" -> 
                    13663, "##nto" -> 13664, "devils" -> 13665, "##ement" -> 
                    13666, "contractor" -> 13667, "turin" -> 13668, "##wl" -> 
                    13669, "##ool" -> 13670, "bliss" -> 13671, "repaired" -> 
                    13672, "simmons" -> 13673, "moan" -> 13674, 
                    "astronomical" -> 13675, "cr" -> 13676, "negotiate" -> 
                    13677, "lyric" -> 13678, "1890s" -> 13679, "lara" -> 
                    13680, "bred" -> 13681, "clad" -> 13682, "angus" -> 13683,
                     "pbs" -> 13684, "##ience" -> 13685, "engineered" -> 
                    13686, "posed" -> 13687, "##lk" -> 13688, "hernandez" -> 
                    13689, "possessions" -> 13690, "elbows" -> 13691, 
                    "psychiatric" -> 13692, "strokes" -> 13693, "confluence" -> 
                    13694, "electorate" -> 13695, "lifts" -> 13696, 
                    "campuses" -> 13697, "lava" -> 13698, "alps" -> 13699, 
                    "##ep" -> 13700, "##ution" -> 13701, "##date" -> 13702, 
                    "physicist" -> 13703, "woody" -> 13704, "##page" -> 13705,
                     "##ographic" -> 13706, "##itis" -> 13707, "juliet" -> 
                    13708, "reformation" -> 13709, "sparhawk" -> 13710, "320" -> 
                    13711, "complement" -> 13712, "suppressed" -> 13713, 
                    "jewel" -> 13714, "##\.bd" -> 13715, "floated" -> 13716, 
                    "##kas" -> 13717, "continuity" -> 13718, "sadly" -> 13719,
                     "##ische" -> 13720, "inability" -> 13721, "melting" -> 
                    13722, "scanning" -> 13723, "paula" -> 13724, "flour" -> 
                    13725, "judaism" -> 13726, "safer" -> 13727, "vague" -> 
                    13728, "##lm" -> 13729, "solving" -> 13730, "curb" -> 
                    13731, "##stown" -> 13732, "financially" -> 13733, 
                    "gable" -> 13734, "bees" -> 13735, "expired" -> 13736, 
                    "miserable" -> 13737, "cassidy" -> 13738, "dominion" -> 
                    13739, "1789" -> 13740, "cupped" -> 13741, "145" -> 13742,
                     "robbery" -> 13743, "facto" -> 13744, "amos" -> 13745, 
                    "warden" -> 13746, "resume" -> 13747, "tallest" -> 13748, 
                    "marvin" -> 13749, "ing" -> 13750, "pounded" -> 13751, 
                    "usd" -> 13752, "declaring" -> 13753, "gasoline" -> 13754,
                     "##aux" -> 13755, "darkened" -> 13756, "270" -> 13757, 
                    "650" -> 13758, "sophomore" -> 13759, "##mere" -> 13760, 
                    "erection" -> 13761, "gossip" -> 13762, "televised" -> 
                    13763, "risen" -> 13764, "dial" -> 13765, "##eu" -> 13766,
                     "pillars" -> 13767, "##link" -> 13768, "passages" -> 
                    13769, "profound" -> 13770, "##tina" -> 13771, "arabian" -> 
                    13772, "ashton" -> 13773, "silicon" -> 13774, "nail" -> 
                    13775, "##ead" -> 13776, "##lated" -> 13777, "##wer" -> 
                    13778, "##hardt" -> 13779, "fleming" -> 13780, "firearms" -> 
                    13781, "ducked" -> 13782, "circuits" -> 13783, "blows" -> 
                    13784, "waterloo" -> 13785, "titans" -> 13786, "##lina" -> 
                    13787, "atom" -> 13788, "fireplace" -> 13789, "cheshire" -> 
                    13790, "financed" -> 13791, "activation" -> 13792, 
                    "algorithms" -> 13793, "##zzi" -> 13794, "constituent" -> 
                    13795, "catcher" -> 13796, "cherokee" -> 13797, 
                    "partnerships" -> 13798, "sexuality" -> 13799, "platoon" -> 
                    13800, "tragic" -> 13801, "vivian" -> 13802, "guarded" -> 
                    13803, "whiskey" -> 13804, "meditation" -> 13805, 
                    "poetic" -> 13806, "##late" -> 13807, "##nga" -> 13808, 
                    "##ake" -> 13809, "porto" -> 13810, "listeners" -> 13811, 
                    "dominance" -> 13812, "kendra" -> 13813, "mona" -> 13814, 
                    "chandler" -> 13815, "factions" -> 13816, "22nd" -> 13817,
                     "salisbury" -> 13818, "attitudes" -> 13819, "derivative" -> 
                    13820, "##ido" -> 13821, "##haus" -> 13822, "intake" -> 
                    13823, "paced" -> 13824, "javier" -> 13825, "illustrator" -> 
                    13826, "barrels" -> 13827, "bias" -> 13828, "cockpit" -> 
                    13829, "burnett" -> 13830, "dreamed" -> 13831, "ensuing" -> 
                    13832, "##anda" -> 13833, "receptors" -> 13834, "someday" -> 
                    13835, "hawkins" -> 13836, "mattered" -> 13837, "##lal" -> 
                    13838, "slavic" -> 13839, "1799" -> 13840, "jesuit" -> 
                    13841, "cameroon" -> 13842, "wasted" -> 13843, "tai" -> 
                    13844, "wax" -> 13845, "lowering" -> 13846, "victorious" -> 
                    13847, "freaking" -> 13848, "outright" -> 13849, 
                    "hancock" -> 13850, "librarian" -> 13851, "sensing" -> 
                    13852, "bald" -> 13853, "calcium" -> 13854, "myers" -> 
                    13855, "tablet" -> 13856, "announcing" -> 13857, "barack" -> 
                    13858, "shipyard" -> 13859, "pharmaceutical" -> 13860, 
                    "##uan" -> 13861, "greenwich" -> 13862, "flush" -> 13863, 
                    "medley" -> 13864, "patches" -> 13865, "wolfgang" -> 
                    13866, "pt" -> 13867, "speeches" -> 13868, "acquiring" -> 
                    13869, "exams" -> 13870, "nikolai" -> 13871, "##gg" -> 
                    13872, "hayden" -> 13873, "kannada" -> 13874, "##type" -> 
                    13875, "reilly" -> 13876, "##pt" -> 13877, "waitress" -> 
                    13878, "abdomen" -> 13879, "devastated" -> 13880, 
                    "capped" -> 13881, "pseudonym" -> 13882, "pharmacy" -> 
                    13883, "fulfill" -> 13884, "paraguay" -> 13885, "1796" -> 
                    13886, "clicked" -> 13887, "##trom" -> 13888, 
                    "archipelago" -> 13889, "syndicated" -> 13890, "##hman" -> 
                    13891, "lumber" -> 13892, "orgasm" -> 13893, "rejection" -> 
                    13894, "clifford" -> 13895, "lorraine" -> 13896, "advent" -> 
                    13897, "mafia" -> 13898, "rodney" -> 13899, "brock" -> 
                    13900, "##ght" -> 13901, "##used" -> 13902, "##elia" -> 
                    13903, "cassette" -> 13904, "chamberlain" -> 13905, 
                    "despair" -> 13906, "mongolia" -> 13907, "sensors" -> 
                    13908, "developmental" -> 13909, "upstream" -> 13910, 
                    "##eg" -> 13911, "##alis" -> 13912, "spanning" -> 13913, 
                    "165" -> 13914, "trombone" -> 13915, "basque" -> 13916, 
                    "seeded" -> 13917, "interred" -> 13918, "renewable" -> 
                    13919, "rhys" -> 13920, "leapt" -> 13921, "revision" -> 
                    13922, "molecule" -> 13923, "##ages" -> 13924, "chord" -> 
                    13925, "vicious" -> 13926, "nord" -> 13927, "shivered" -> 
                    13928, "23rd" -> 13929, "arlington" -> 13930, "debts" -> 
                    13931, "corpus" -> 13932, "sunrise" -> 13933, "bays" -> 
                    13934, "blackburn" -> 13935, "centimetres" -> 13936, 
                    "##uded" -> 13937, "shuddered" -> 13938, "gm" -> 13939, 
                    "strangely" -> 13940, "gripping" -> 13941, "cartoons" -> 
                    13942, "isabelle" -> 13943, "orbital" -> 13944, "##ppa" -> 
                    13945, "seals" -> 13946, "proving" -> 13947, "##lton" -> 
                    13948, "refusal" -> 13949, "strengthened" -> 13950, 
                    "bust" -> 13951, "assisting" -> 13952, "baghdad" -> 13953,
                     "batsman" -> 13954, "portrayal" -> 13955, "mara" -> 
                    13956, "pushes" -> 13957, "spears" -> 13958, "og" -> 
                    13959, "##cock" -> 13960, "reside" -> 13961, "nathaniel" -> 
                    13962, "brennan" -> 13963, "1776" -> 13964, 
                    "confirmation" -> 13965, "caucus" -> 13966, "##worthy" -> 
                    13967, "markings" -> 13968, "yemen" -> 13969, "nobles" -> 
                    13970, "ku" -> 13971, "lazy" -> 13972, "viewer" -> 13973, 
                    "catalan" -> 13974, "encompasses" -> 13975, "sawyer" -> 
                    13976, "##fall" -> 13977, "sparked" -> 13978, 
                    "substances" -> 13979, "patents" -> 13980, "braves" -> 
                    13981, "arranger" -> 13982, "evacuation" -> 13983, 
                    "sergio" -> 13984, "persuade" -> 13985, "dover" -> 13986, 
                    "tolerance" -> 13987, "penguin" -> 13988, "cum" -> 13989, 
                    "jockey" -> 13990, "insufficient" -> 13991, "townships" -> 
                    13992, "occupying" -> 13993, "declining" -> 13994, 
                    "plural" -> 13995, "processed" -> 13996, "projection" -> 
                    13997, "puppet" -> 13998, "flanders" -> 13999, 
                    "introduces" -> 14000, "liability" -> 14001, "##yon" -> 
                    14002, "gymnastics" -> 14003, "antwerp" -> 14004, 
                    "taipei" -> 14005, "hobart" -> 14006, "candles" -> 14007, 
                    "jeep" -> 14008, "wes" -> 14009, "observers" -> 14010, 
                    "126" -> 14011, "chaplain" -> 14012, "bundle" -> 14013, 
                    "glorious" -> 14014, "##hine" -> 14015, "hazel" -> 14016, 
                    "flung" -> 14017, "sol" -> 14018, "excavations" -> 14019, 
                    "dumped" -> 14020, "stares" -> 14021, "sh" -> 14022, 
                    "bangalore" -> 14023, "triangular" -> 14024, "icelandic" -> 
                    14025, "intervals" -> 14026, "expressing" -> 14027, 
                    "turbine" -> 14028, "##vers" -> 14029, "songwriting" -> 
                    14030, "crafts" -> 14031, "##igo" -> 14032, "jasmine" -> 
                    14033, "ditch" -> 14034, "rite" -> 14035, "##ways" -> 
                    14036, "entertaining" -> 14037, "comply" -> 14038, 
                    "sorrow" -> 14039, "wrestlers" -> 14040, "basel" -> 14041,
                     "emirates" -> 14042, "marian" -> 14043, "rivera" -> 
                    14044, "helpful" -> 14045, "##some" -> 14046, "caution" -> 
                    14047, "downward" -> 14048, "networking" -> 14049, 
                    "##atory" -> 14050, "##tered" -> 14051, "darted" -> 14052,
                     "genocide" -> 14053, "emergence" -> 14054, "replies" -> 
                    14055, "specializing" -> 14056, "spokesman" -> 14057, 
                    "convenient" -> 14058, "unlocked" -> 14059, "fading" -> 
                    14060, "augustine" -> 14061, "concentrations" -> 14062, 
                    "resemblance" -> 14063, "elijah" -> 14064, "investigator" -> 
                    14065, "andhra" -> 14066, "##uda" -> 14067, "promotes" -> 
                    14068, "bean" -> 14069, "##rrell" -> 14070, "fleeing" -> 
                    14071, "wan" -> 14072, "simone" -> 14073, "announcer" -> 
                    14074, "##ame" -> 14075, "##bby" -> 14076, "lydia" -> 
                    14077, "weaver" -> 14078, "132" -> 14079, "residency" -> 
                    14080, "modification" -> 14081, "##fest" -> 14082, 
                    "stretches" -> 14083, "##ast" -> 14084, "alternatively" -> 
                    14085, "nat" -> 14086, "lowe" -> 14087, "lacks" -> 14088, 
                    "##ented" -> 14089, "pam" -> 14090, "tile" -> 14091, 
                    "concealed" -> 14092, "inferior" -> 14093, "abdullah" -> 
                    14094, "residences" -> 14095, "tissues" -> 14096, 
                    "vengeance" -> 14097, "##ided" -> 14098, "moisture" -> 
                    14099, "peculiar" -> 14100, "groove" -> 14101, "zip" -> 
                    14102, "bologna" -> 14103, "jennings" -> 14104, "ninja" -> 
                    14105, "oversaw" -> 14106, "zombies" -> 14107, "pumping" -> 
                    14108, "batch" -> 14109, "livingston" -> 14110, "emerald" -> 
                    14111, "installations" -> 14112, "1797" -> 14113, "peel" -> 
                    14114, "nitrogen" -> 14115, "rama" -> 14116, "##fying" -> 
                    14117, "##star" -> 14118, "schooling" -> 14119, "strands" -> 
                    14120, "responding" -> 14121, "werner" -> 14122, "##ost" -> 
                    14123, "lime" -> 14124, "casa" -> 14125, "accurately" -> 
                    14126, "targeting" -> 14127, "##rod" -> 14128, "underway" -> 
                    14129, "##uru" -> 14130, "hemisphere" -> 14131, "lester" -> 
                    14132, "##yard" -> 14133, "occupies" -> 14134, "2d" -> 
                    14135, "griffith" -> 14136, "angrily" -> 14137, 
                    "reorganized" -> 14138, "##owing" -> 14139, "courtney" -> 
                    14140, "deposited" -> 14141, "##dd" -> 14142, "##30" -> 
                    14143, "estadio" -> 14144, "##ifies" -> 14145, "dunn" -> 
                    14146, "exiled" -> 14147, "##ying" -> 14148, "checks" -> 
                    14149, "##combe" -> 14150, "##\:043e" -> 14151, "##fly" -> 
                    14152, "successes" -> 14153, "unexpectedly" -> 14154, 
                    "blu" -> 14155, "assessed" -> 14156, "##flower" -> 14157, 
                    "##\:0647" -> 14158, "observing" -> 14159, "sacked" -> 
                    14160, "spiders" -> 14161, "kn" -> 14162, "##tail" -> 
                    14163, "mu" -> 14164, "nodes" -> 14165, "prosperity" -> 
                    14166, "audrey" -> 14167, "divisional" -> 14168, "155" -> 
                    14169, "broncos" -> 14170, "tangled" -> 14171, "adjust" -> 
                    14172, "feeds" -> 14173, "erosion" -> 14174, "paolo" -> 
                    14175, "surf" -> 14176, "directory" -> 14177, "snatched" -> 
                    14178, "humid" -> 14179, "admiralty" -> 14180, "screwed" -> 
                    14181, "gt" -> 14182, "reddish" -> 14183, "##nese" -> 
                    14184, "modules" -> 14185, "trench" -> 14186, "lamps" -> 
                    14187, "bind" -> 14188, "leah" -> 14189, "bucks" -> 14190,
                     "competes" -> 14191, "##nz" -> 14192, "##form" -> 14193, 
                    "transcription" -> 14194, "##uc" -> 14195, "isles" -> 
                    14196, "violently" -> 14197, "clutching" -> 14198, "pga" -> 
                    14199, "cyclist" -> 14200, "inflation" -> 14201, "flats" -> 
                    14202, "ragged" -> 14203, "unnecessary" -> 14204, 
                    "##hian" -> 14205, "stubborn" -> 14206, "coordinated" -> 
                    14207, "harriet" -> 14208, "baba" -> 14209, 
                    "disqualified" -> 14210, "330" -> 14211, "insect" -> 
                    14212, "wolfe" -> 14213, "##fies" -> 14214, 
                    "reinforcements" -> 14215, "rocked" -> 14216, "duel" -> 
                    14217, "winked" -> 14218, "embraced" -> 14219, "bricks" -> 
                    14220, "##raj" -> 14221, "hiatus" -> 14222, "defeats" -> 
                    14223, "pending" -> 14224, "brightly" -> 14225, 
                    "jealousy" -> 14226, "##xton" -> 14227, "##hm" -> 14228, 
                    "##uki" -> 14229, "lena" -> 14230, "gdp" -> 14231, 
                    "colorful" -> 14232, "##dley" -> 14233, "stein" -> 14234, 
                    "kidney" -> 14235, "##shu" -> 14236, "underwear" -> 14237,
                     "wanderers" -> 14238, "##haw" -> 14239, "##icus" -> 
                    14240, "guardians" -> 14241, "m\.b3" -> 14242, "roared" -> 
                    14243, "habits" -> 14244, "##wise" -> 14245, "permits" -> 
                    14246, "gp" -> 14247, "uranium" -> 14248, "punished" -> 
                    14249, "disguise" -> 14250, "bundesliga" -> 14251, 
                    "elise" -> 14252, "dundee" -> 14253, "erotic" -> 14254, 
                    "partisan" -> 14255, "pi" -> 14256, "collectors" -> 14257,
                     "float" -> 14258, "individually" -> 14259, "rendering" -> 
                    14260, "behavioral" -> 14261, "bucharest" -> 14262, "ser" -> 
                    14263, "hare" -> 14264, "valerie" -> 14265, "corporal" -> 
                    14266, "nutrition" -> 14267, "proportional" -> 14268, 
                    "##isa" -> 14269, "immense" -> 14270, "##kis" -> 14271, 
                    "pavement" -> 14272, "##zie" -> 14273, "##eld" -> 14274, 
                    "sutherland" -> 14275, "crouched" -> 14276, "1775" -> 
                    14277, "##lp" -> 14278, "suzuki" -> 14279, "trades" -> 
                    14280, "endurance" -> 14281, "operas" -> 14282, "crosby" -> 
                    14283, "prayed" -> 14284, "priory" -> 14285, "rory" -> 
                    14286, "socially" -> 14287, "##urn" -> 14288, "gujarat" -> 
                    14289, "##pu" -> 14290, "walton" -> 14291, "cube" -> 
                    14292, "pasha" -> 14293, "privilege" -> 14294, "lennon" -> 
                    14295, "floods" -> 14296, "thorne" -> 14297, "waterfall" -> 
                    14298, "nipple" -> 14299, "scouting" -> 14300, "approve" -> 
                    14301, "##lov" -> 14302, "minorities" -> 14303, "voter" -> 
                    14304, "dwight" -> 14305, "extensions" -> 14306, "assure" -> 
                    14307, "ballroom" -> 14308, "slap" -> 14309, "dripping" -> 
                    14310, "privileges" -> 14311, "rejoined" -> 14312, 
                    "confessed" -> 14313, "demonstrating" -> 14314, 
                    "patriotic" -> 14315, "yell" -> 14316, "investor" -> 
                    14317, "##uth" -> 14318, "pagan" -> 14319, "slumped" -> 
                    14320, "squares" -> 14321, "##cle" -> 14322, "##kins" -> 
                    14323, "confront" -> 14324, "bert" -> 14325, 
                    "embarrassment" -> 14326, "##aid" -> 14327, "aston" -> 
                    14328, "urging" -> 14329, "sweater" -> 14330, "starr" -> 
                    14331, "yuri" -> 14332, "brains" -> 14333, "williamson" -> 
                    14334, "commuter" -> 14335, "mortar" -> 14336, 
                    "structured" -> 14337, "selfish" -> 14338, "exports" -> 
                    14339, "##jon" -> 14340, "cds" -> 14341, "##him" -> 14342,
                     "unfinished" -> 14343, "##rre" -> 14344, "mortgage" -> 
                    14345, "destinations" -> 14346, "##nagar" -> 14347, 
                    "canoe" -> 14348, "solitary" -> 14349, "buchanan" -> 
                    14350, "delays" -> 14351, "magistrate" -> 14352, "fk" -> 
                    14353, "##pling" -> 14354, "motivation" -> 14355, 
                    "##lier" -> 14356, "##vier" -> 14357, "recruiting" -> 
                    14358, "assess" -> 14359, "##mouth" -> 14360, "malik" -> 
                    14361, "antique" -> 14362, "1791" -> 14363, "pius" -> 
                    14364, "rahman" -> 14365, "reich" -> 14366, "tub" -> 
                    14367, "zhou" -> 14368, "smashed" -> 14369, "airs" -> 
                    14370, "galway" -> 14371, "xii" -> 14372, "conditioning" -> 
                    14373, "honduras" -> 14374, "discharged" -> 14375, 
                    "dexter" -> 14376, "##pf" -> 14377, "lionel" -> 14378, 
                    "129" -> 14379, "debates" -> 14380, "lemon" -> 14381, 
                    "tiffany" -> 14382, "volunteered" -> 14383, "dom" -> 
                    14384, "dioxide" -> 14385, "procession" -> 14386, "devi" -> 
                    14387, "sic" -> 14388, "tremendous" -> 14389, 
                    "advertisements" -> 14390, "colts" -> 14391, 
                    "transferring" -> 14392, "verdict" -> 14393, "hanover" -> 
                    14394, "decommissioned" -> 14395, "utter" -> 14396, 
                    "relate" -> 14397, "pac" -> 14398, "racism" -> 14399, 
                    "##top" -> 14400, "beacon" -> 14401, "limp" -> 14402, 
                    "similarity" -> 14403, "terra" -> 14404, "occurrence" -> 
                    14405, "ant" -> 14406, "##how" -> 14407, "becky" -> 14408,
                     "capt" -> 14409, "updates" -> 14410, "armament" -> 14411,
                     "richie" -> 14412, "pal" -> 14413, "##graph" -> 14414, 
                    "halloween" -> 14415, "mayo" -> 14416, "##ssen" -> 14417, 
                    "##bone" -> 14418, "cara" -> 14419, "serena" -> 14420, 
                    "fcc" -> 14421, "dolls" -> 14422, "obligations" -> 14423, 
                    "##dling" -> 14424, "violated" -> 14425, "lafayette" -> 
                    14426, "jakarta" -> 14427, "exploitation" -> 14428, 
                    "##ime" -> 14429, "infamous" -> 14430, "iconic" -> 14431, 
                    "##lah" -> 14432, "##park" -> 14433, "kitty" -> 14434, 
                    "moody" -> 14435, "reginald" -> 14436, "dread" -> 14437, 
                    "spill" -> 14438, "crystals" -> 14439, "olivier" -> 14440,
                     "modeled" -> 14441, "bluff" -> 14442, "equilibrium" -> 
                    14443, "separating" -> 14444, "notices" -> 14445, 
                    "ordnance" -> 14446, "extinction" -> 14447, "onset" -> 
                    14448, "cosmic" -> 14449, "attachment" -> 14450, "sammy" -> 
                    14451, "expose" -> 14452, "privy" -> 14453, "anchored" -> 
                    14454, "##bil" -> 14455, "abbott" -> 14456, "admits" -> 
                    14457, "bending" -> 14458, "baritone" -> 14459, 
                    "emmanuel" -> 14460, "policeman" -> 14461, "vaughan" -> 
                    14462, "winged" -> 14463, "climax" -> 14464, "dresses" -> 
                    14465, "denny" -> 14466, "polytechnic" -> 14467, 
                    "mohamed" -> 14468, "burmese" -> 14469, "authentic" -> 
                    14470, "nikki" -> 14471, "genetics" -> 14472, 
                    "grandparents" -> 14473, "homestead" -> 14474, "gaza" -> 
                    14475, "postponed" -> 14476, "metacritic" -> 14477, "una" -> 
                    14478, "##sby" -> 14479, "##bat" -> 14480, "unstable" -> 
                    14481, "dissertation" -> 14482, "##rial" -> 14483, 
                    "##cian" -> 14484, "curls" -> 14485, "obscure" -> 14486, 
                    "uncovered" -> 14487, "bronx" -> 14488, "praying" -> 
                    14489, "disappearing" -> 14490, "##hoe" -> 14491, 
                    "prehistoric" -> 14492, "coke" -> 14493, "turret" -> 
                    14494, "mutations" -> 14495, "nonprofit" -> 14496, "pits" -> 
                    14497, "monaco" -> 14498, "##\:064a" -> 14499, "##usion" -> 
                    14500, "prominently" -> 14501, "dispatched" -> 14502, 
                    "podium" -> 14503, "##mir" -> 14504, "uci" -> 14505, 
                    "##uation" -> 14506, "133" -> 14507, "fortifications" -> 
                    14508, "birthplace" -> 14509, "kendall" -> 14510, "##lby" -> 
                    14511, "##oll" -> 14512, "preacher" -> 14513, "rack" -> 
                    14514, "goodman" -> 14515, "##rman" -> 14516, 
                    "persistent" -> 14517, "##ott" -> 14518, "countless" -> 
                    14519, "jaime" -> 14520, "recorder" -> 14521, "lexington" -> 
                    14522, "persecution" -> 14523, "jumps" -> 14524, 
                    "renewal" -> 14525, "wagons" -> 14526, "##11" -> 14527, 
                    "crushing" -> 14528, "##holder" -> 14529, "decorations" -> 
                    14530, "##lake" -> 14531, "abundance" -> 14532, "wrath" -> 
                    14533, "laundry" -> 14534, "\[Sterling]1" -> 14535, 
                    "garde" -> 14536, "##rp" -> 14537, "jeanne" -> 14538, 
                    "beetles" -> 14539, "peasant" -> 14540, "##sl" -> 14541, 
                    "splitting" -> 14542, "caste" -> 14543, "sergei" -> 14544,
                     "##rer" -> 14545, "##ema" -> 14546, "scripts" -> 14547, 
                    "##ively" -> 14548, "rub" -> 14549, "satellites" -> 14550,
                     "##vor" -> 14551, "inscribed" -> 14552, "verlag" -> 
                    14553, "scrapped" -> 14554, "gale" -> 14555, "packages" -> 
                    14556, "chick" -> 14557, "potato" -> 14558, "slogan" -> 
                    14559, "kathleen" -> 14560, "arabs" -> 14561, "##culture" -> 
                    14562, "counterparts" -> 14563, "reminiscent" -> 14564, 
                    "choral" -> 14565, "##tead" -> 14566, "rand" -> 14567, 
                    "retains" -> 14568, "bushes" -> 14569, "dane" -> 14570, 
                    "accomplish" -> 14571, "courtesy" -> 14572, "closes" -> 
                    14573, "##oth" -> 14574, "slaughter" -> 14575, "hague" -> 
                    14576, "krakow" -> 14577, "lawson" -> 14578, "tailed" -> 
                    14579, "elias" -> 14580, "ginger" -> 14581, "##ttes" -> 
                    14582, "canopy" -> 14583, "betrayal" -> 14584, 
                    "rebuilding" -> 14585, "turf" -> 14586, "##hof" -> 14587, 
                    "frowning" -> 14588, "allegiance" -> 14589, "brigades" -> 
                    14590, "kicks" -> 14591, "rebuild" -> 14592, "polls" -> 
                    14593, "alias" -> 14594, "nationalism" -> 14595, "td" -> 
                    14596, "rowan" -> 14597, "audition" -> 14598, "bowie" -> 
                    14599, "fortunately" -> 14600, "recognizes" -> 14601, 
                    "harp" -> 14602, "dillon" -> 14603, "horrified" -> 14604, 
                    "##oro" -> 14605, "renault" -> 14606, "##tics" -> 14607, 
                    "ropes" -> 14608, "##\[Alpha]" -> 14609, "presumed" -> 
                    14610, "rewarded" -> 14611, "infrared" -> 14612, "wiping" -> 
                    14613, "accelerated" -> 14614, "illustration" -> 14615, 
                    "##rid" -> 14616, "presses" -> 14617, "practitioners" -> 
                    14618, "badminton" -> 14619, "##iard" -> 14620, 
                    "detained" -> 14621, "##tera" -> 14622, "recognizing" -> 
                    14623, "relates" -> 14624, "misery" -> 14625, "##sies" -> 
                    14626, "##tly" -> 14627, "reproduction" -> 14628, 
                    "piercing" -> 14629, "potatoes" -> 14630, "thornton" -> 
                    14631, "esther" -> 14632, "manners" -> 14633, "hbo" -> 
                    14634, "##aan" -> 14635, "ours" -> 14636, "bullshit" -> 
                    14637, "ernie" -> 14638, "perennial" -> 14639, 
                    "sensitivity" -> 14640, "illuminated" -> 14641, "rupert" -> 
                    14642, "##jin" -> 14643, "##iss" -> 14644, "##ear" -> 
                    14645, "rfc" -> 14646, "nassau" -> 14647, "##dock" -> 
                    14648, "staggered" -> 14649, "socialism" -> 14650, 
                    "##haven" -> 14651, "appointments" -> 14652, "nonsense" -> 
                    14653, "prestige" -> 14654, "sharma" -> 14655, "haul" -> 
                    14656, "##tical" -> 14657, "solidarity" -> 14658, "gps" -> 
                    14659, "##ook" -> 14660, "##rata" -> 14661, "igor" -> 
                    14662, "pedestrian" -> 14663, "##uit" -> 14664, "baxter" -> 
                    14665, "tenants" -> 14666, "wires" -> 14667, "medication" -> 
                    14668, "unlimited" -> 14669, "guiding" -> 14670, 
                    "impacts" -> 14671, "diabetes" -> 14672, "##rama" -> 
                    14673, "sasha" -> 14674, "pas" -> 14675, "clive" -> 14676,
                     "extraction" -> 14677, "131" -> 14678, "continually" -> 
                    14679, "constraints" -> 14680, "##bilities" -> 14681, 
                    "sonata" -> 14682, "hunted" -> 14683, "sixteenth" -> 
                    14684, "chu" -> 14685, "planting" -> 14686, "quote" -> 
                    14687, "mayer" -> 14688, "pretended" -> 14689, "abs" -> 
                    14690, "spat" -> 14691, "##hua" -> 14692, "ceramic" -> 
                    14693, "##cci" -> 14694, "curtains" -> 14695, "pigs" -> 
                    14696, "pitching" -> 14697, "##dad" -> 14698, "latvian" -> 
                    14699, "sore" -> 14700, "dayton" -> 14701, "##sted" -> 
                    14702, "##qi" -> 14703, "patrols" -> 14704, "slice" -> 
                    14705, "playground" -> 14706, "##nted" -> 14707, "shone" -> 
                    14708, "stool" -> 14709, "apparatus" -> 14710, 
                    "inadequate" -> 14711, "mates" -> 14712, "treason" -> 
                    14713, "##ija" -> 14714, "desires" -> 14715, "##liga" -> 
                    14716, "##croft" -> 14717, "somalia" -> 14718, "laurent" -> 
                    14719, "mir" -> 14720, "leonardo" -> 14721, "oracle" -> 
                    14722, "grape" -> 14723, "obliged" -> 14724, "chevrolet" -> 
                    14725, "thirteenth" -> 14726, "stunning" -> 14727, 
                    "enthusiastic" -> 14728, "##ede" -> 14729, "accounted" -> 
                    14730, "concludes" -> 14731, "currents" -> 14732, "basil" -> 
                    14733, "##kovic" -> 14734, "drought" -> 14735, "##rica" -> 
                    14736, "mai" -> 14737, "##aire" -> 14738, "shove" -> 
                    14739, "posting" -> 14740, "##shed" -> 14741, 
                    "pilgrimage" -> 14742, "humorous" -> 14743, "packing" -> 
                    14744, "fry" -> 14745, "pencil" -> 14746, "wines" -> 
                    14747, "smells" -> 14748, "144" -> 14749, "marilyn" -> 
                    14750, "aching" -> 14751, "newest" -> 14752, "clung" -> 
                    14753, "bon" -> 14754, "neighbours" -> 14755, 
                    "sanctioned" -> 14756, "##pie" -> 14757, "mug" -> 14758, 
                    "##stock" -> 14759, "drowning" -> 14760, "##mma" -> 14761,
                     "hydraulic" -> 14762, "##vil" -> 14763, "hiring" -> 
                    14764, "reminder" -> 14765, "lilly" -> 14766, 
                    "investigators" -> 14767, "##ncies" -> 14768, "sour" -> 
                    14769, "##eous" -> 14770, "compulsory" -> 14771, "packet" -> 
                    14772, "##rion" -> 14773, "##graphic" -> 14774, "##elle" -> 
                    14775, "cannes" -> 14776, "##inate" -> 14777, "depressed" -> 
                    14778, "##rit" -> 14779, "heroic" -> 14780, "importantly" -> 
                    14781, "theresa" -> 14782, "##tled" -> 14783, "conway" -> 
                    14784, "saturn" -> 14785, "marginal" -> 14786, "rae" -> 
                    14787, "##xia" -> 14788, "corresponds" -> 14789, "royce" -> 
                    14790, "pact" -> 14791, "jasper" -> 14792, "explosives" -> 
                    14793, "packaging" -> 14794, "aluminium" -> 14795, 
                    "##ttered" -> 14796, "denotes" -> 14797, "rhythmic" -> 
                    14798, "spans" -> 14799, "assignments" -> 14800, 
                    "hereditary" -> 14801, "outlined" -> 14802, "originating" -> 
                    14803, "sundays" -> 14804, "lad" -> 14805, "reissued" -> 
                    14806, "greeting" -> 14807, "beatrice" -> 14808, "##dic" -> 
                    14809, "pillar" -> 14810, "marcos" -> 14811, "plots" -> 
                    14812, "handbook" -> 14813, "alcoholic" -> 14814, 
                    "judiciary" -> 14815, "avant" -> 14816, "slides" -> 14817,
                     "extract" -> 14818, "masculine" -> 14819, "blur" -> 
                    14820, "##eum" -> 14821, "##force" -> 14822, "homage" -> 
                    14823, "trembled" -> 14824, "owens" -> 14825, "hymn" -> 
                    14826, "trey" -> 14827, "omega" -> 14828, "signaling" -> 
                    14829, "socks" -> 14830, "accumulated" -> 14831, 
                    "reacted" -> 14832, "attic" -> 14833, "theo" -> 14834, 
                    "lining" -> 14835, "angie" -> 14836, "distraction" -> 
                    14837, "primera" -> 14838, "talbot" -> 14839, "##key" -> 
                    14840, "1200" -> 14841, "ti" -> 14842, "creativity" -> 
                    14843, "billed" -> 14844, "##hey" -> 14845, "deacon" -> 
                    14846, "eduardo" -> 14847, "identifies" -> 14848, 
                    "proposition" -> 14849, "dizzy" -> 14850, "gunner" -> 
                    14851, "hogan" -> 14852, "##yam" -> 14853, "##pping" -> 
                    14854, "##hol" -> 14855, "ja" -> 14856, "##chan" -> 14857,
                     "jensen" -> 14858, "reconstructed" -> 14859, "##berger" -> 
                    14860, "clearance" -> 14861, "darius" -> 14862, "##nier" -> 
                    14863, "abe" -> 14864, "harlem" -> 14865, "plea" -> 14866,
                     "dei" -> 14867, "circled" -> 14868, "emotionally" -> 
                    14869, "notation" -> 14870, "fascist" -> 14871, "neville" -> 
                    14872, "exceeded" -> 14873, "upwards" -> 14874, "viable" -> 
                    14875, "ducks" -> 14876, "##fo" -> 14877, "workforce" -> 
                    14878, "racer" -> 14879, "limiting" -> 14880, "shri" -> 
                    14881, "##lson" -> 14882, "possesses" -> 14883, "1600" -> 
                    14884, "kerr" -> 14885, "moths" -> 14886, "devastating" -> 
                    14887, "laden" -> 14888, "disturbing" -> 14889, "locking" -> 
                    14890, "##cture" -> 14891, "gal" -> 14892, "fearing" -> 
                    14893, "accreditation" -> 14894, "flavor" -> 14895, 
                    "aide" -> 14896, "1870s" -> 14897, "mountainous" -> 14898,
                     "##baum" -> 14899, "melt" -> 14900, "##ures" -> 14901, 
                    "motel" -> 14902, "texture" -> 14903, "servers" -> 14904, 
                    "soda" -> 14905, "##mb" -> 14906, "herd" -> 14907, 
                    "##nium" -> 14908, "erect" -> 14909, "puzzled" -> 14910, 
                    "hum" -> 14911, "peggy" -> 14912, "examinations" -> 14913,
                     "gould" -> 14914, "testified" -> 14915, "geoff" -> 14916,
                     "ren" -> 14917, "devised" -> 14918, "sacks" -> 14919, 
                    "##law" -> 14920, "denial" -> 14921, "posters" -> 14922, 
                    "grunted" -> 14923, "cesar" -> 14924, "tutor" -> 14925, 
                    "ec" -> 14926, "gerry" -> 14927, "offerings" -> 14928, 
                    "byrne" -> 14929, "falcons" -> 14930, "combinations" -> 
                    14931, "ct" -> 14932, "incoming" -> 14933, "pardon" -> 
                    14934, "rocking" -> 14935, "26th" -> 14936, "avengers" -> 
                    14937, "flared" -> 14938, "mankind" -> 14939, "seller" -> 
                    14940, "uttar" -> 14941, "loch" -> 14942, "nadia" -> 
                    14943, "stroking" -> 14944, "exposing" -> 14945, "##hd" -> 
                    14946, "fertile" -> 14947, "ancestral" -> 14948, 
                    "instituted" -> 14949, "##has" -> 14950, "noises" -> 
                    14951, "prophecy" -> 14952, "taxation" -> 14953, 
                    "eminent" -> 14954, "vivid" -> 14955, "pol" -> 14956, 
                    "##bol" -> 14957, "dart" -> 14958, "indirect" -> 14959, 
                    "multimedia" -> 14960, "notebook" -> 14961, "upside" -> 
                    14962, "displaying" -> 14963, "adrenaline" -> 14964, 
                    "referenced" -> 14965, "geometric" -> 14966, "##iving" -> 
                    14967, "progression" -> 14968, "##ddy" -> 14969, "blunt" -> 
                    14970, "announce" -> 14971, "##far" -> 14972, 
                    "implementing" -> 14973, "##lav" -> 14974, "aggression" -> 
                    14975, "liaison" -> 14976, "cooler" -> 14977, "cares" -> 
                    14978, "headache" -> 14979, "plantations" -> 14980, 
                    "gorge" -> 14981, "dots" -> 14982, "impulse" -> 14983, 
                    "thickness" -> 14984, "ashamed" -> 14985, "averaging" -> 
                    14986, "kathy" -> 14987, "obligation" -> 14988, 
                    "precursor" -> 14989, "137" -> 14990, "fowler" -> 14991, 
                    "symmetry" -> 14992, "thee" -> 14993, "225" -> 14994, 
                    "hears" -> 14995, "##rai" -> 14996, "undergoing" -> 14997,
                     "ads" -> 14998, "butcher" -> 14999, "bowler" -> 15000, 
                    "##lip" -> 15001, "cigarettes" -> 15002, "subscription" -> 
                    15003, "goodness" -> 15004, "##ically" -> 15005, "browne" -> 
                    15006, "##hos" -> 15007, "##tech" -> 15008, "kyoto" -> 
                    15009, "donor" -> 15010, "##erty" -> 15011, "damaging" -> 
                    15012, "friction" -> 15013, "drifting" -> 15014, 
                    "expeditions" -> 15015, "hardened" -> 15016, 
                    "prostitution" -> 15017, "152" -> 15018, "fauna" -> 15019,
                     "blankets" -> 15020, "claw" -> 15021, "tossing" -> 15022,
                     "snarled" -> 15023, "butterflies" -> 15024, "recruits" -> 
                    15025, "investigative" -> 15026, "coated" -> 15027, 
                    "healed" -> 15028, "138" -> 15029, "communal" -> 15030, 
                    "hai" -> 15031, "xiii" -> 15032, "academics" -> 15033, 
                    "boone" -> 15034, "psychologist" -> 15035, "restless" -> 
                    15036, "lahore" -> 15037, "stephens" -> 15038, "mba" -> 
                    15039, "brendan" -> 15040, "foreigners" -> 15041, 
                    "printer" -> 15042, "##pc" -> 15043, "ached" -> 15044, 
                    "explode" -> 15045, "27th" -> 15046, "deed" -> 15047, 
                    "scratched" -> 15048, "dared" -> 15049, "##pole" -> 15050,
                     "cardiac" -> 15051, "1780" -> 15052, "okinawa" -> 15053, 
                    "proto" -> 15054, "commando" -> 15055, "compelled" -> 
                    15056, "oddly" -> 15057, "electrons" -> 15058, "##base" -> 
                    15059, "replica" -> 15060, "thanksgiving" -> 15061, 
                    "##rist" -> 15062, "sheila" -> 15063, "deliberate" -> 
                    15064, "stafford" -> 15065, "tidal" -> 15066, 
                    "representations" -> 15067, "hercules" -> 15068, "ou" -> 
                    15069, "##path" -> 15070, "##iated" -> 15071, 
                    "kidnapping" -> 15072, "lenses" -> 15073, "##tling" -> 
                    15074, "deficit" -> 15075, "samoa" -> 15076, "mouths" -> 
                    15077, "consuming" -> 15078, "computational" -> 15079, 
                    "maze" -> 15080, "granting" -> 15081, "smirk" -> 15082, 
                    "razor" -> 15083, "fixture" -> 15084, "ideals" -> 15085, 
                    "inviting" -> 15086, "aiden" -> 15087, "nominal" -> 15088,
                     "##vs" -> 15089, "issuing" -> 15090, "julio" -> 15091, 
                    "pitt" -> 15092, "ramsey" -> 15093, "docks" -> 15094, 
                    "##oss" -> 15095, "exhaust" -> 15096, "##owed" -> 15097, 
                    "bavarian" -> 15098, "draped" -> 15099, "anterior" -> 
                    15100, "mating" -> 15101, "ethiopian" -> 15102, 
                    "explores" -> 15103, "noticing" -> 15104, "##nton" -> 
                    15105, "discarded" -> 15106, "convenience" -> 15107, 
                    "hoffman" -> 15108, "endowment" -> 15109, "beasts" -> 
                    15110, "cartridge" -> 15111, "mormon" -> 15112, 
                    "paternal" -> 15113, "probe" -> 15114, "sleeves" -> 15115,
                     "interfere" -> 15116, "lump" -> 15117, "deadline" -> 
                    15118, "##rail" -> 15119, "jenks" -> 15120, "bulldogs" -> 
                    15121, "scrap" -> 15122, "alternating" -> 15123, 
                    "justified" -> 15124, "reproductive" -> 15125, "nam" -> 
                    15126, "seize" -> 15127, "descending" -> 15128, 
                    "secretariat" -> 15129, "kirby" -> 15130, "coupe" -> 
                    15131, "grouped" -> 15132, "smash" -> 15133, "panther" -> 
                    15134, "sedan" -> 15135, "tapping" -> 15136, "##18" -> 
                    15137, "lola" -> 15138, "cheer" -> 15139, "germanic" -> 
                    15140, "unfortunate" -> 15141, "##eter" -> 15142, 
                    "unrelated" -> 15143, "##fan" -> 15144, "subordinate" -> 
                    15145, "##sdale" -> 15146, "suzanne" -> 15147, 
                    "advertisement" -> 15148, "##ility" -> 15149, 
                    "horsepower" -> 15150, "##lda" -> 15151, "cautiously" -> 
                    15152, "discourse" -> 15153, "luigi" -> 15154, "##mans" -> 
                    15155, "##fields" -> 15156, "noun" -> 15157, "prevalent" -> 
                    15158, "mao" -> 15159, "schneider" -> 15160, "everett" -> 
                    15161, "surround" -> 15162, "governorate" -> 15163, 
                    "kira" -> 15164, "##avia" -> 15165, "westward" -> 15166, 
                    "##take" -> 15167, "misty" -> 15168, "rails" -> 15169, 
                    "sustainability" -> 15170, "134" -> 15171, "unused" -> 
                    15172, "##rating" -> 15173, "packs" -> 15174, "toast" -> 
                    15175, "unwilling" -> 15176, "regulate" -> 15177, "thy" -> 
                    15178, "suffrage" -> 15179, "nile" -> 15180, "awe" -> 
                    15181, "assam" -> 15182, "definitions" -> 15183, 
                    "travelers" -> 15184, "affordable" -> 15185, "##rb" -> 
                    15186, "conferred" -> 15187, "sells" -> 15188, 
                    "undefeated" -> 15189, "beneficial" -> 15190, "torso" -> 
                    15191, "basal" -> 15192, "repeating" -> 15193, "remixes" -> 
                    15194, "##pass" -> 15195, "bahrain" -> 15196, "cables" -> 
                    15197, "fang" -> 15198, "##itated" -> 15199, "excavated" -> 
                    15200, "numbering" -> 15201, "statutory" -> 15202, 
                    "##rey" -> 15203, "deluxe" -> 15204, "##lian" -> 15205, 
                    "forested" -> 15206, "ramirez" -> 15207, "derbyshire" -> 
                    15208, "zeus" -> 15209, "slamming" -> 15210, "transfers" -> 
                    15211, "astronomer" -> 15212, "banana" -> 15213, 
                    "lottery" -> 15214, "berg" -> 15215, "histories" -> 15216,
                     "bamboo" -> 15217, "##uchi" -> 15218, "resurrection" -> 
                    15219, "posterior" -> 15220, "bowls" -> 15221, "vaguely" -> 
                    15222, "##thi" -> 15223, "thou" -> 15224, "preserving" -> 
                    15225, "tensed" -> 15226, "offence" -> 15227, "##inas" -> 
                    15228, "meyrick" -> 15229, "callum" -> 15230, "ridden" -> 
                    15231, "watt" -> 15232, "langdon" -> 15233, "tying" -> 
                    15234, "lowland" -> 15235, "snorted" -> 15236, "daring" -> 
                    15237, "truman" -> 15238, "##hale" -> 15239, "##girl" -> 
                    15240, "aura" -> 15241, "overly" -> 15242, "filing" -> 
                    15243, "weighing" -> 15244, "goa" -> 15245, "infections" -> 
                    15246, "philanthropist" -> 15247, "saunders" -> 15248, 
                    "eponymous" -> 15249, "##owski" -> 15250, "latitude" -> 
                    15251, "perspectives" -> 15252, "reviewing" -> 15253, 
                    "mets" -> 15254, "commandant" -> 15255, "radial" -> 15256,
                     "##kha" -> 15257, "flashlight" -> 15258, "reliability" -> 
                    15259, "koch" -> 15260, "vowels" -> 15261, "amazed" -> 
                    15262, "ada" -> 15263, "elaine" -> 15264, "supper" -> 
                    15265, "##rth" -> 15266, "##encies" -> 15267, "predator" -> 
                    15268, "debated" -> 15269, "soviets" -> 15270, "cola" -> 
                    15271, "##boards" -> 15272, "##nah" -> 15273, 
                    "compartment" -> 15274, "crooked" -> 15275, "arbitrary" -> 
                    15276, "fourteenth" -> 15277, "##ctive" -> 15278, 
                    "havana" -> 15279, "majors" -> 15280, "steelers" -> 15281,
                     "clips" -> 15282, "profitable" -> 15283, "ambush" -> 
                    15284, "exited" -> 15285, "packers" -> 15286, "##tile" -> 
                    15287, "nude" -> 15288, "cracks" -> 15289, "fungi" -> 
                    15290, "##\:0435" -> 15291, "limb" -> 15292, "trousers" -> 
                    15293, "josie" -> 15294, "shelby" -> 15295, "tens" -> 
                    15296, "frederic" -> 15297, "##\[Omicron]\[FinalSigma]" -> 
                    15298, "definite" -> 15299, "smoothly" -> 15300, 
                    "constellation" -> 15301, "insult" -> 15302, "baton" -> 
                    15303, "discs" -> 15304, "lingering" -> 15305, "##nco" -> 
                    15306, "conclusions" -> 15307, "lent" -> 15308, "staging" -> 
                    15309, "becker" -> 15310, "grandpa" -> 15311, "shaky" -> 
                    15312, "##tron" -> 15313, "einstein" -> 15314, 
                    "obstacles" -> 15315, "sk" -> 15316, "adverse" -> 15317, 
                    "elle" -> 15318, "economically" -> 15319, "##moto" -> 
                    15320, "mccartney" -> 15321, "thor" -> 15322, "dismissal" -> 
                    15323, "motions" -> 15324, "readings" -> 15325, 
                    "nostrils" -> 15326, "treatise" -> 15327, "##pace" -> 
                    15328, "squeezing" -> 15329, "evidently" -> 15330, 
                    "prolonged" -> 15331, "1783" -> 15332, "venezuelan" -> 
                    15333, "je" -> 15334, "marguerite" -> 15335, "beirut" -> 
                    15336, "takeover" -> 15337, "shareholders" -> 15338, 
                    "##vent" -> 15339, "denise" -> 15340, "digit" -> 15341, 
                    "airplay" -> 15342, "norse" -> 15343, "##bbling" -> 15344,
                     "imaginary" -> 15345, "pills" -> 15346, "hubert" -> 
                    15347, "blaze" -> 15348, "vacated" -> 15349, 
                    "eliminating" -> 15350, "##ello" -> 15351, "vine" -> 
                    15352, "mansfield" -> 15353, "##tty" -> 15354, 
                    "retrospective" -> 15355, "barrow" -> 15356, "borne" -> 
                    15357, "clutch" -> 15358, "bail" -> 15359, "forensic" -> 
                    15360, "weaving" -> 15361, "##nett" -> 15362, "##witz" -> 
                    15363, "desktop" -> 15364, "citadel" -> 15365, 
                    "promotions" -> 15366, "worrying" -> 15367, "dorset" -> 
                    15368, "ieee" -> 15369, "subdivided" -> 15370, "##iating" -> 
                    15371, "manned" -> 15372, "expeditionary" -> 15373, 
                    "pickup" -> 15374, "synod" -> 15375, "chuckle" -> 15376, 
                    "185" -> 15377, "barney" -> 15378, "##rz" -> 15379, 
                    "##ffin" -> 15380, "functionality" -> 15381, "karachi" -> 
                    15382, "litigation" -> 15383, "meanings" -> 15384, "uc" -> 
                    15385, "lick" -> 15386, "turbo" -> 15387, "anders" -> 
                    15388, "##ffed" -> 15389, "execute" -> 15390, "curl" -> 
                    15391, "oppose" -> 15392, "ankles" -> 15393, "typhoon" -> 
                    15394, "##\:062f" -> 15395, "##ache" -> 15396, "##asia" -> 
                    15397, "linguistics" -> 15398, "compassion" -> 15399, 
                    "pressures" -> 15400, "grazing" -> 15401, "perfection" -> 
                    15402, "##iting" -> 15403, "immunity" -> 15404, 
                    "monopoly" -> 15405, "muddy" -> 15406, "backgrounds" -> 
                    15407, "136" -> 15408, "namibia" -> 15409, "francesca" -> 
                    15410, "monitors" -> 15411, "attracting" -> 15412, 
                    "stunt" -> 15413, "tuition" -> 15414, "##\:0438\:0438" -> 
                    15415, "vegetable" -> 15416, "##mates" -> 15417, 
                    "##quent" -> 15418, "mgm" -> 15419, "jen" -> 15420, 
                    "complexes" -> 15421, "forts" -> 15422, "##ond" -> 15423, 
                    "cellar" -> 15424, "bites" -> 15425, "seventeenth" -> 
                    15426, "royals" -> 15427, "flemish" -> 15428, "failures" -> 
                    15429, "mast" -> 15430, "charities" -> 15431, "##cular" -> 
                    15432, "peruvian" -> 15433, "capitals" -> 15434, 
                    "macmillan" -> 15435, "ipswich" -> 15436, "outward" -> 
                    15437, "frigate" -> 15438, "postgraduate" -> 15439, 
                    "folds" -> 15440, "employing" -> 15441, "##ouse" -> 15442,
                     "concurrently" -> 15443, "fiery" -> 15444, "##tai" -> 
                    15445, "contingent" -> 15446, "nightmares" -> 15447, 
                    "monumental" -> 15448, "nicaragua" -> 15449, "##kowski" -> 
                    15450, "lizard" -> 15451, "mal" -> 15452, "fielding" -> 
                    15453, "gig" -> 15454, "reject" -> 15455, "##pad" -> 
                    15456, "harding" -> 15457, "##ipe" -> 15458, "coastline" -> 
                    15459, "##cin" -> 15460, "##nos" -> 15461, "beethoven" -> 
                    15462, "humphrey" -> 15463, "innovations" -> 15464, 
                    "##tam" -> 15465, "##nge" -> 15466, "norris" -> 15467, 
                    "doris" -> 15468, "solicitor" -> 15469, "huang" -> 15470, 
                    "obey" -> 15471, "141" -> 15472, "##lc" -> 15473, 
                    "niagara" -> 15474, "##tton" -> 15475, "shelves" -> 15476,
                     "aug" -> 15477, "bourbon" -> 15478, "curry" -> 15479, 
                    "nightclub" -> 15480, "specifications" -> 15481, "hilton" -> 
                    15482, "##ndo" -> 15483, "centennial" -> 15484, 
                    "dispersed" -> 15485, "worm" -> 15486, "neglected" -> 
                    15487, "briggs" -> 15488, "sm" -> 15489, "font" -> 15490, 
                    "kuala" -> 15491, "uneasy" -> 15492, "plc" -> 15493, 
                    "##nstein" -> 15494, "##bound" -> 15495, "##aking" -> 
                    15496, "##burgh" -> 15497, "awaiting" -> 15498, 
                    "pronunciation" -> 15499, "##bbed" -> 15500, "##quest" -> 
                    15501, "eh" -> 15502, "optimal" -> 15503, "zhu" -> 15504, 
                    "raped" -> 15505, "greens" -> 15506, "presided" -> 15507, 
                    "brenda" -> 15508, "worries" -> 15509, "##life" -> 15510, 
                    "venetian" -> 15511, "marxist" -> 15512, "turnout" -> 
                    15513, "##lius" -> 15514, "refined" -> 15515, "braced" -> 
                    15516, "sins" -> 15517, "grasped" -> 15518, "sunderland" -> 
                    15519, "nickel" -> 15520, "speculated" -> 15521, "lowell" -> 
                    15522, "cyrillic" -> 15523, "communism" -> 15524, 
                    "fundraising" -> 15525, "resembling" -> 15526, 
                    "colonists" -> 15527, "mutant" -> 15528, "freddie" -> 
                    15529, "usc" -> 15530, "##mos" -> 15531, "gratitude" -> 
                    15532, "##run" -> 15533, "mural" -> 15534, "##lous" -> 
                    15535, "chemist" -> 15536, "wi" -> 15537, "reminds" -> 
                    15538, "28th" -> 15539, "steals" -> 15540, "tess" -> 
                    15541, "pietro" -> 15542, "##ingen" -> 15543, "promoter" -> 
                    15544, "ri" -> 15545, "microphone" -> 15546, "honoured" -> 
                    15547, "rai" -> 15548, "sant" -> 15549, "##qui" -> 15550, 
                    "feather" -> 15551, "##nson" -> 15552, "burlington" -> 
                    15553, "kurdish" -> 15554, "terrorists" -> 15555, 
                    "deborah" -> 15556, "sickness" -> 15557, "##wed" -> 15558,
                     "##eet" -> 15559, "hazard" -> 15560, "irritated" -> 
                    15561, "desperation" -> 15562, "veil" -> 15563, "clarity" -> 
                    15564, "##rik" -> 15565, "jewels" -> 15566, "xv" -> 15567,
                     "##gged" -> 15568, "##ows" -> 15569, "##cup" -> 15570, 
                    "berkshire" -> 15571, "unfair" -> 15572, "mysteries" -> 
                    15573, "orchid" -> 15574, "winced" -> 15575, "exhaustion" -> 
                    15576, "renovations" -> 15577, "stranded" -> 15578, "obe" -> 
                    15579, "infinity" -> 15580, "##nies" -> 15581, "adapt" -> 
                    15582, "redevelopment" -> 15583, "thanked" -> 15584, 
                    "registry" -> 15585, "olga" -> 15586, "domingo" -> 15587, 
                    "noir" -> 15588, "tudor" -> 15589, "ole" -> 15590, 
                    "##atus" -> 15591, "commenting" -> 15592, "behaviors" -> 
                    15593, "##ais" -> 15594, "crisp" -> 15595, "pauline" -> 
                    15596, "probable" -> 15597, "stirling" -> 15598, "wigan" -> 
                    15599, "##bian" -> 15600, "paralympics" -> 15601, 
                    "panting" -> 15602, "surpassed" -> 15603, "##rew" -> 
                    15604, "luca" -> 15605, "barred" -> 15606, "pony" -> 
                    15607, "famed" -> 15608, "##sters" -> 15609, "cassandra" -> 
                    15610, "waiter" -> 15611, "carolyn" -> 15612, "exported" -> 
                    15613, "##orted" -> 15614, "andres" -> 15615, 
                    "destructive" -> 15616, "deeds" -> 15617, "jonah" -> 
                    15618, "castles" -> 15619, "vacancy" -> 15620, "suv" -> 
                    15621, "##glass" -> 15622, "1788" -> 15623, "orchard" -> 
                    15624, "yep" -> 15625, "famine" -> 15626, "belarusian" -> 
                    15627, "sprang" -> 15628, "##forth" -> 15629, "skinny" -> 
                    15630, "##mis" -> 15631, "administrators" -> 15632, 
                    "rotterdam" -> 15633, "zambia" -> 15634, "zhao" -> 15635, 
                    "boiler" -> 15636, "discoveries" -> 15637, "##ride" -> 
                    15638, "##physics" -> 15639, "lucius" -> 15640, 
                    "disappointing" -> 15641, "outreach" -> 15642, "spoon" -> 
                    15643, "##frame" -> 15644, "qualifications" -> 15645, 
                    "unanimously" -> 15646, "enjoys" -> 15647, "regency" -> 
                    15648, "##iidae" -> 15649, "stade" -> 15650, "realism" -> 
                    15651, "veterinary" -> 15652, "rodgers" -> 15653, "dump" -> 
                    15654, "alain" -> 15655, "chestnut" -> 15656, "castile" -> 
                    15657, "censorship" -> 15658, "rumble" -> 15659, "gibbs" -> 
                    15660, "##itor" -> 15661, "communion" -> 15662, "reggae" -> 
                    15663, "inactivated" -> 15664, "logs" -> 15665, "loads" -> 
                    15666, "##houses" -> 15667, "homosexual" -> 15668, 
                    "##iano" -> 15669, "ale" -> 15670, "informs" -> 15671, 
                    "##cas" -> 15672, "phrases" -> 15673, "plaster" -> 15674, 
                    "linebacker" -> 15675, "ambrose" -> 15676, "kaiser" -> 
                    15677, "fascinated" -> 15678, "850" -> 15679, "limerick" -> 
                    15680, "recruitment" -> 15681, "forge" -> 15682, 
                    "mastered" -> 15683, "##nding" -> 15684, "leinster" -> 
                    15685, "rooted" -> 15686, "threaten" -> 15687, "##strom" -> 
                    15688, "borneo" -> 15689, "##hes" -> 15690, "suggestions" -> 
                    15691, "scholarships" -> 15692, "propeller" -> 15693, 
                    "documentaries" -> 15694, "patronage" -> 15695, "coats" -> 
                    15696, "constructing" -> 15697, "invest" -> 15698, 
                    "neurons" -> 15699, "comet" -> 15700, "entirety" -> 15701,
                     "shouts" -> 15702, "identities" -> 15703, "annoying" -> 
                    15704, "unchanged" -> 15705, "wary" -> 15706, "##antly" -> 
                    15707, "##ogy" -> 15708, "neat" -> 15709, "oversight" -> 
                    15710, "##kos" -> 15711, "phillies" -> 15712, "replay" -> 
                    15713, "constance" -> 15714, "##kka" -> 15715, 
                    "incarnation" -> 15716, "humble" -> 15717, "skies" -> 
                    15718, "minus" -> 15719, "##acy" -> 15720, "smithsonian" -> 
                    15721, "##chel" -> 15722, "guerrilla" -> 15723, "jar" -> 
                    15724, "cadets" -> 15725, "##plate" -> 15726, "surplus" -> 
                    15727, "audit" -> 15728, "##aru" -> 15729, "cracking" -> 
                    15730, "joanna" -> 15731, "louisa" -> 15732, "pacing" -> 
                    15733, "##lights" -> 15734, "intentionally" -> 15735, 
                    "##iri" -> 15736, "diner" -> 15737, "nwa" -> 15738, 
                    "imprint" -> 15739, "australians" -> 15740, "tong" -> 
                    15741, "unprecedented" -> 15742, "bunker" -> 15743, 
                    "naive" -> 15744, "specialists" -> 15745, "ark" -> 15746, 
                    "nichols" -> 15747, "railing" -> 15748, "leaked" -> 15749,
                     "pedal" -> 15750, "##uka" -> 15751, "shrub" -> 15752, 
                    "longing" -> 15753, "roofs" -> 15754, "v8" -> 15755, 
                    "captains" -> 15756, "neural" -> 15757, "tuned" -> 15758, 
                    "##ntal" -> 15759, "##jet" -> 15760, "emission" -> 15761, 
                    "medina" -> 15762, "frantic" -> 15763, "codex" -> 15764, 
                    "definitive" -> 15765, "sid" -> 15766, "abolition" -> 
                    15767, "intensified" -> 15768, "stocks" -> 15769, 
                    "enrique" -> 15770, "sustain" -> 15771, "genoa" -> 15772, 
                    "oxide" -> 15773, "##written" -> 15774, "clues" -> 15775, 
                    "cha" -> 15776, "##gers" -> 15777, "tributaries" -> 15778,
                     "fragment" -> 15779, "venom" -> 15780, "##rity" -> 15781,
                     "##ente" -> 15782, "##sca" -> 15783, "muffled" -> 15784, 
                    "vain" -> 15785, "sire" -> 15786, "laos" -> 15787, 
                    "##ingly" -> 15788, "##hana" -> 15789, "hastily" -> 15790,
                     "snapping" -> 15791, "surfaced" -> 15792, "sentiment" -> 
                    15793, "motive" -> 15794, "##oft" -> 15795, "contests" -> 
                    15796, "approximate" -> 15797, "mesa" -> 15798, "luckily" -> 
                    15799, "dinosaur" -> 15800, "exchanges" -> 15801, 
                    "propelled" -> 15802, "accord" -> 15803, "bourne" -> 
                    15804, "relieve" -> 15805, "tow" -> 15806, "masks" -> 
                    15807, "offended" -> 15808, "##ues" -> 15809, "cynthia" -> 
                    15810, "##mmer" -> 15811, "rains" -> 15812, "bartender" -> 
                    15813, "zinc" -> 15814, "reviewers" -> 15815, "lois" -> 
                    15816, "##sai" -> 15817, "legged" -> 15818, "arrogant" -> 
                    15819, "rafe" -> 15820, "rosie" -> 15821, "comprise" -> 
                    15822, "handicap" -> 15823, "blockade" -> 15824, "inlet" -> 
                    15825, "lagoon" -> 15826, "copied" -> 15827, "drilling" -> 
                    15828, "shelley" -> 15829, "petals" -> 15830, "##inian" -> 
                    15831, "mandarin" -> 15832, "obsolete" -> 15833, 
                    "##inated" -> 15834, "onward" -> 15835, "arguably" -> 
                    15836, "productivity" -> 15837, "cindy" -> 15838, 
                    "praising" -> 15839, "seldom" -> 15840, "busch" -> 15841, 
                    "discusses" -> 15842, "raleigh" -> 15843, "shortage" -> 
                    15844, "ranged" -> 15845, "stanton" -> 15846, 
                    "encouragement" -> 15847, "firstly" -> 15848, "conceded" -> 
                    15849, "overs" -> 15850, "temporal" -> 15851, "##uke" -> 
                    15852, "cbe" -> 15853, "##bos" -> 15854, "woo" -> 15855, 
                    "certainty" -> 15856, "pumps" -> 15857, "##pton" -> 15858,
                     "stalked" -> 15859, "##uli" -> 15860, "lizzie" -> 15861, 
                    "periodic" -> 15862, "thieves" -> 15863, "weaker" -> 
                    15864, "##night" -> 15865, "gases" -> 15866, "shoving" -> 
                    15867, "chooses" -> 15868, "wc" -> 15869, "##chemical" -> 
                    15870, "prompting" -> 15871, "weights" -> 15872, "##kill" -> 
                    15873, "robust" -> 15874, "flanked" -> 15875, "sticky" -> 
                    15876, "hu" -> 15877, "tuberculosis" -> 15878, "##eb" -> 
                    15879, "##eal" -> 15880, "christchurch" -> 15881, 
                    "resembled" -> 15882, "wallet" -> 15883, "reese" -> 15884,
                     "inappropriate" -> 15885, "pictured" -> 15886, 
                    "distract" -> 15887, "fixing" -> 15888, "fiddle" -> 15889,
                     "giggled" -> 15890, "burger" -> 15891, "heirs" -> 15892, 
                    "hairy" -> 15893, "mechanic" -> 15894, "torque" -> 15895, 
                    "apache" -> 15896, "obsessed" -> 15897, "chiefly" -> 
                    15898, "cheng" -> 15899, "logging" -> 15900, "##tag" -> 
                    15901, "extracted" -> 15902, "meaningful" -> 15903, 
                    "numb" -> 15904, "##vsky" -> 15905, "gloucestershire" -> 
                    15906, "reminding" -> 15907, "##bay" -> 15908, "unite" -> 
                    15909, "##lit" -> 15910, "breeds" -> 15911, "diminished" -> 
                    15912, "clown" -> 15913, "glove" -> 15914, "1860s" -> 
                    15915, "##\:0646" -> 15916, "##ug" -> 15917, "archibald" -> 
                    15918, "focal" -> 15919, "freelance" -> 15920, "sliced" -> 
                    15921, "depiction" -> 15922, "##yk" -> 15923, "organism" -> 
                    15924, "switches" -> 15925, "sights" -> 15926, "stray" -> 
                    15927, "crawling" -> 15928, "##ril" -> 15929, "lever" -> 
                    15930, "leningrad" -> 15931, "interpretations" -> 15932, 
                    "loops" -> 15933, "anytime" -> 15934, "reel" -> 15935, 
                    "alicia" -> 15936, "delighted" -> 15937, "##ech" -> 15938,
                     "inhaled" -> 15939, "xiv" -> 15940, "suitcase" -> 15941, 
                    "bernie" -> 15942, "vega" -> 15943, "licenses" -> 15944, 
                    "northampton" -> 15945, "exclusion" -> 15946, "induction" -> 
                    15947, "monasteries" -> 15948, "racecourse" -> 15949, 
                    "homosexuality" -> 15950, "##right" -> 15951, "##sfield" -> 
                    15952, "##rky" -> 15953, "dimitri" -> 15954, "michele" -> 
                    15955, "alternatives" -> 15956, "ions" -> 15957, 
                    "commentators" -> 15958, "genuinely" -> 15959, "objected" -> 
                    15960, "pork" -> 15961, "hospitality" -> 15962, "fencing" -> 
                    15963, "stephan" -> 15964, "warships" -> 15965, 
                    "peripheral" -> 15966, "wit" -> 15967, "drunken" -> 15968,
                     "wrinkled" -> 15969, "quentin" -> 15970, "spends" -> 
                    15971, "departing" -> 15972, "chung" -> 15973, 
                    "numerical" -> 15974, "spokesperson" -> 15975, "##zone" -> 
                    15976, "johannesburg" -> 15977, "caliber" -> 15978, 
                    "killers" -> 15979, "##udge" -> 15980, "assumes" -> 15981,
                     "neatly" -> 15982, "demographic" -> 15983, "abigail" -> 
                    15984, "bloc" -> 15985, "##vel" -> 15986, "mounting" -> 
                    15987, "##lain" -> 15988, "bentley" -> 15989, "slightest" -> 
                    15990, "xu" -> 15991, "recipients" -> 15992, "##jk" -> 
                    15993, "merlin" -> 15994, "##writer" -> 15995, "seniors" -> 
                    15996, "prisons" -> 15997, "blinking" -> 15998, 
                    "hindwings" -> 15999, "flickered" -> 16000, "kappa" -> 
                    16001, "##hel" -> 16002, "80s" -> 16003, "strengthening" -> 
                    16004, "appealing" -> 16005, "brewing" -> 16006, "gypsy" -> 
                    16007, "mali" -> 16008, "lashes" -> 16009, "hulk" -> 
                    16010, "unpleasant" -> 16011, "harassment" -> 16012, 
                    "bio" -> 16013, "treaties" -> 16014, "predict" -> 16015, 
                    "instrumentation" -> 16016, "pulp" -> 16017, "troupe" -> 
                    16018, "boiling" -> 16019, "mantle" -> 16020, "##ffe" -> 
                    16021, "ins" -> 16022, "##vn" -> 16023, "dividing" -> 
                    16024, "handles" -> 16025, "verbs" -> 16026, "##onal" -> 
                    16027, "coconut" -> 16028, "senegal" -> 16029, "340" -> 
                    16030, "thorough" -> 16031, "gum" -> 16032, "momentarily" -> 
                    16033, "##sto" -> 16034, "cocaine" -> 16035, "panicked" -> 
                    16036, "destined" -> 16037, "##turing" -> 16038, "teatro" -> 
                    16039, "denying" -> 16040, "weary" -> 16041, "captained" -> 
                    16042, "mans" -> 16043, "##hawks" -> 16044, "##code" -> 
                    16045, "wakefield" -> 16046, "bollywood" -> 16047, 
                    "thankfully" -> 16048, "##16" -> 16049, "cyril" -> 16050, 
                    "##wu" -> 16051, "amendments" -> 16052, "##bahn" -> 16053,
                     "consultation" -> 16054, "stud" -> 16055, "reflections" -> 
                    16056, "kindness" -> 16057, "1787" -> 16058, "internally" -> 
                    16059, "##ovo" -> 16060, "tex" -> 16061, "mosaic" -> 
                    16062, "distribute" -> 16063, "paddy" -> 16064, "seeming" -> 
                    16065, "143" -> 16066, "##hic" -> 16067, "piers" -> 16068,
                     "##15" -> 16069, "##mura" -> 16070, "##verse" -> 16071, 
                    "popularly" -> 16072, "winger" -> 16073, "kang" -> 16074, 
                    "sentinel" -> 16075, "mccoy" -> 16076, "##anza" -> 16077, 
                    "covenant" -> 16078, "##bag" -> 16079, "verge" -> 16080, 
                    "fireworks" -> 16081, "suppress" -> 16082, "thrilled" -> 
                    16083, "dominate" -> 16084, "##jar" -> 16085, "swansea" -> 
                    16086, "##60" -> 16087, "142" -> 16088, "reconciliation" -> 
                    16089, "##ndi" -> 16090, "stiffened" -> 16091, "cue" -> 
                    16092, "dorian" -> 16093, "##uf" -> 16094, "damascus" -> 
                    16095, "amor" -> 16096, "ida" -> 16097, "foremost" -> 
                    16098, "##aga" -> 16099, "porsche" -> 16100, "unseen" -> 
                    16101, "dir" -> 16102, "##had" -> 16103, "##azi" -> 16104,
                     "stony" -> 16105, "lexi" -> 16106, "melodies" -> 16107, 
                    "##nko" -> 16108, "angular" -> 16109, "integer" -> 16110, 
                    "podcast" -> 16111, "ants" -> 16112, "inherent" -> 16113, 
                    "jaws" -> 16114, "justify" -> 16115, "persona" -> 16116, 
                    "##olved" -> 16117, "josephine" -> 16118, "##nr" -> 16119,
                     "##ressed" -> 16120, "customary" -> 16121, "flashes" -> 
                    16122, "gala" -> 16123, "cyrus" -> 16124, "glaring" -> 
                    16125, "backyard" -> 16126, "ariel" -> 16127, 
                    "physiology" -> 16128, "greenland" -> 16129, "html" -> 
                    16130, "stir" -> 16131, "avon" -> 16132, "atletico" -> 
                    16133, "finch" -> 16134, "methodology" -> 16135, "ked" -> 
                    16136, "##lent" -> 16137, "mas" -> 16138, "catholicism" -> 
                    16139, "townsend" -> 16140, "branding" -> 16141, "quincy" -> 
                    16142, "fits" -> 16143, "containers" -> 16144, "1777" -> 
                    16145, "ashore" -> 16146, "aragon" -> 16147, "##19" -> 
                    16148, "forearm" -> 16149, "poisoning" -> 16150, "##sd" -> 
                    16151, "adopting" -> 16152, "conquer" -> 16153, 
                    "grinding" -> 16154, "amnesty" -> 16155, "keller" -> 
                    16156, "finances" -> 16157, "evaluate" -> 16158, "forged" -> 
                    16159, "lankan" -> 16160, "instincts" -> 16161, "##uto" -> 
                    16162, "guam" -> 16163, "bosnian" -> 16164, 
                    "photographed" -> 16165, "workplace" -> 16166, 
                    "desirable" -> 16167, "protector" -> 16168, "##dog" -> 
                    16169, "allocation" -> 16170, "intently" -> 16171, 
                    "encourages" -> 16172, "willy" -> 16173, "##sten" -> 
                    16174, "bodyguard" -> 16175, "electro" -> 16176, 
                    "brighter" -> 16177, "##\[Nu]" -> 16178, "bihar" -> 16179,
                     "##chev" -> 16180, "lasts" -> 16181, "opener" -> 16182, 
                    "amphibious" -> 16183, "sal" -> 16184, "verde" -> 16185, 
                    "arte" -> 16186, "##cope" -> 16187, "captivity" -> 16188, 
                    "vocabulary" -> 16189, "yields" -> 16190, "##tted" -> 
                    16191, "agreeing" -> 16192, "desmond" -> 16193, 
                    "pioneered" -> 16194, "##chus" -> 16195, "strap" -> 16196,
                     "campaigned" -> 16197, "railroads" -> 16198, 
                    "##\:043e\:0432\:0438\:0447" -> 16199, "emblem" -> 16200, 
                    "##dre" -> 16201, "stormed" -> 16202, "501" -> 16203, 
                    "##ulous" -> 16204, "marijuana" -> 16205, 
                    "northumberland" -> 16206, "##gn" -> 16207, "##nath" -> 
                    16208, "bowen" -> 16209, "landmarks" -> 16210, "beaumont" -> 
                    16211, "##qua" -> 16212, "danube" -> 16213, "##bler" -> 
                    16214, "attorneys" -> 16215, "th" -> 16216, "ge" -> 16217,
                     "flyers" -> 16218, "critique" -> 16219, "villains" -> 
                    16220, "cass" -> 16221, "mutation" -> 16222, "acc" -> 
                    16223, "##0s" -> 16224, "colombo" -> 16225, "mckay" -> 
                    16226, "motif" -> 16227, "sampling" -> 16228, 
                    "concluding" -> 16229, "syndicate" -> 16230, "##rell" -> 
                    16231, "neon" -> 16232, "stables" -> 16233, "ds" -> 16234,
                     "warnings" -> 16235, "clint" -> 16236, "mourning" -> 
                    16237, "wilkinson" -> 16238, "##tated" -> 16239, 
                    "merrill" -> 16240, "leopard" -> 16241, "evenings" -> 
                    16242, "exhaled" -> 16243, "emil" -> 16244, "sonia" -> 
                    16245, "ezra" -> 16246, "discrete" -> 16247, "stove" -> 
                    16248, "farrell" -> 16249, "fifteenth" -> 16250, 
                    "prescribed" -> 16251, "superhero" -> 16252, "##rier" -> 
                    16253, "worms" -> 16254, "helm" -> 16255, "wren" -> 16256,
                     "##duction" -> 16257, "##hc" -> 16258, "expo" -> 16259, 
                    "##rator" -> 16260, "hq" -> 16261, "unfamiliar" -> 16262, 
                    "antony" -> 16263, "prevents" -> 16264, "acceleration" -> 
                    16265, "fiercely" -> 16266, "mari" -> 16267, "painfully" -> 
                    16268, "calculations" -> 16269, "cheaper" -> 16270, "ign" -> 
                    16271, "clifton" -> 16272, "irvine" -> 16273, "davenport" -> 
                    16274, "mozambique" -> 16275, "##np" -> 16276, "pierced" -> 
                    16277, "##evich" -> 16278, "wonders" -> 16279, "##wig" -> 
                    16280, "##cate" -> 16281, "##iling" -> 16282, "crusade" -> 
                    16283, "ware" -> 16284, "##uel" -> 16285, "enzymes" -> 
                    16286, "reasonably" -> 16287, "mls" -> 16288, "##coe" -> 
                    16289, "mater" -> 16290, "ambition" -> 16291, "bunny" -> 
                    16292, "eliot" -> 16293, "kernel" -> 16294, "##fin" -> 
                    16295, "asphalt" -> 16296, "headmaster" -> 16297, "torah" -> 
                    16298, "aden" -> 16299, "lush" -> 16300, "pins" -> 16301, 
                    "waived" -> 16302, "##care" -> 16303, "##yas" -> 16304, 
                    "joao" -> 16305, "substrate" -> 16306, "enforce" -> 16307,
                     "##grad" -> 16308, "##ules" -> 16309, "alvarez" -> 16310,
                     "selections" -> 16311, "epidemic" -> 16312, "tempted" -> 
                    16313, "##bit" -> 16314, "bremen" -> 16315, "translates" -> 
                    16316, "ensured" -> 16317, "waterfront" -> 16318, "29th" -> 
                    16319, "forrest" -> 16320, "manny" -> 16321, "malone" -> 
                    16322, "kramer" -> 16323, "reigning" -> 16324, "cookies" -> 
                    16325, "simpler" -> 16326, "absorption" -> 16327, "205" -> 
                    16328, "engraved" -> 16329, "##ffy" -> 16330, "evaluated" -> 
                    16331, "1778" -> 16332, "haze" -> 16333, "146" -> 16334, 
                    "comforting" -> 16335, "crossover" -> 16336, "##abe" -> 
                    16337, "thorn" -> 16338, "##rift" -> 16339, "##imo" -> 
                    16340, "##pop" -> 16341, "suppression" -> 16342, 
                    "fatigue" -> 16343, "cutter" -> 16344, "##tr" -> 16345, 
                    "201" -> 16346, "wurttemberg" -> 16347, "##orf" -> 16348, 
                    "enforced" -> 16349, "hovering" -> 16350, "proprietary" -> 
                    16351, "gb" -> 16352, "samurai" -> 16353, "syllable" -> 
                    16354, "ascent" -> 16355, "lacey" -> 16356, "tick" -> 
                    16357, "lars" -> 16358, "tractor" -> 16359, "merchandise" -> 
                    16360, "rep" -> 16361, "bouncing" -> 16362, "defendants" -> 
                    16363, "##yre" -> 16364, "huntington" -> 16365, 
                    "##ground" -> 16366, "##oko" -> 16367, "standardized" -> 
                    16368, "##hor" -> 16369, "##hima" -> 16370, 
                    "assassinated" -> 16371, "nu" -> 16372, "predecessors" -> 
                    16373, "rainy" -> 16374, "liar" -> 16375, "assurance" -> 
                    16376, "lyrical" -> 16377, "##uga" -> 16378, "secondly" -> 
                    16379, "flattened" -> 16380, "ios" -> 16381, "parameter" -> 
                    16382, "undercover" -> 16383, "##mity" -> 16384, 
                    "bordeaux" -> 16385, "punish" -> 16386, "ridges" -> 16387,
                     "markers" -> 16388, "exodus" -> 16389, "inactive" -> 
                    16390, "hesitate" -> 16391, "debbie" -> 16392, "nyc" -> 
                    16393, "pledge" -> 16394, "savoy" -> 16395, "nagar" -> 
                    16396, "offset" -> 16397, "organist" -> 16398, "##tium" -> 
                    16399, "hesse" -> 16400, "marin" -> 16401, "converting" -> 
                    16402, "##iver" -> 16403, "diagram" -> 16404, 
                    "propulsion" -> 16405, "pu" -> 16406, "validity" -> 16407,
                     "reverted" -> 16408, "supportive" -> 16409, "##dc" -> 
                    16410, "ministries" -> 16411, "clans" -> 16412, 
                    "responds" -> 16413, "proclamation" -> 16414, "##inae" -> 
                    16415, "##\[OSlash]" -> 16416, "##rea" -> 16417, "ein" -> 
                    16418, "pleading" -> 16419, "patriot" -> 16420, "sf" -> 
                    16421, "birch" -> 16422, "islanders" -> 16423, "strauss" -> 
                    16424, "hates" -> 16425, "##dh" -> 16426, "brandenburg" -> 
                    16427, "concession" -> 16428, "rd" -> 16429, "##ob" -> 
                    16430, "1900s" -> 16431, "killings" -> 16432, "textbook" -> 
                    16433, "antiquity" -> 16434, "cinematography" -> 16435, 
                    "wharf" -> 16436, "embarrassing" -> 16437, "setup" -> 
                    16438, "creed" -> 16439, "farmland" -> 16440, 
                    "inequality" -> 16441, "centred" -> 16442, "signatures" -> 
                    16443, "fallon" -> 16444, "370" -> 16445, "##ingham" -> 
                    16446, "##uts" -> 16447, "ceylon" -> 16448, "gazing" -> 
                    16449, "directive" -> 16450, "laurie" -> 16451, "##tern" -> 
                    16452, "globally" -> 16453, "##uated" -> 16454, "##dent" -> 
                    16455, "allah" -> 16456, "excavation" -> 16457, "threads" -> 
                    16458, "##cross" -> 16459, "148" -> 16460, "frantically" -> 
                    16461, "icc" -> 16462, "utilize" -> 16463, "determines" -> 
                    16464, "respiratory" -> 16465, "thoughtful" -> 16466, 
                    "receptions" -> 16467, "##dicate" -> 16468, "merging" -> 
                    16469, "chandra" -> 16470, "seine" -> 16471, "147" -> 
                    16472, "builders" -> 16473, "builds" -> 16474, 
                    "diagnostic" -> 16475, "dev" -> 16476, "visibility" -> 
                    16477, "goddamn" -> 16478, "analyses" -> 16479, "dhaka" -> 
                    16480, "cho" -> 16481, "proves" -> 16482, "chancel" -> 
                    16483, "concurrent" -> 16484, "curiously" -> 16485, 
                    "canadians" -> 16486, "pumped" -> 16487, "restoring" -> 
                    16488, "1850s" -> 16489, "turtles" -> 16490, "jaguar" -> 
                    16491, "sinister" -> 16492, "spinal" -> 16493, "traction" -> 
                    16494, "declan" -> 16495, "vows" -> 16496, "1784" -> 
                    16497, "glowed" -> 16498, "capitalism" -> 16499, 
                    "swirling" -> 16500, "install" -> 16501, "universidad" -> 
                    16502, "##lder" -> 16503, "##oat" -> 16504, "soloist" -> 
                    16505, "##genic" -> 16506, "##oor" -> 16507, 
                    "coincidence" -> 16508, "beginnings" -> 16509, "nissan" -> 
                    16510, "dip" -> 16511, "resorts" -> 16512, "caucasus" -> 
                    16513, "combustion" -> 16514, "infectious" -> 16515, 
                    "##eno" -> 16516, "pigeon" -> 16517, "serpent" -> 16518, 
                    "##itating" -> 16519, "conclude" -> 16520, "masked" -> 
                    16521, "salad" -> 16522, "jew" -> 16523, "##gr" -> 16524, 
                    "surreal" -> 16525, "toni" -> 16526, "##wc" -> 16527, 
                    "harmonica" -> 16528, "151" -> 16529, "##gins" -> 16530, 
                    "##etic" -> 16531, "##coat" -> 16532, "fishermen" -> 
                    16533, "intending" -> 16534, "bravery" -> 16535, "##wave" -> 
                    16536, "klaus" -> 16537, "titan" -> 16538, "wembley" -> 
                    16539, "taiwanese" -> 16540, "ransom" -> 16541, "40th" -> 
                    16542, "incorrect" -> 16543, "hussein" -> 16544, 
                    "eyelids" -> 16545, "jp" -> 16546, "cooke" -> 16547, 
                    "dramas" -> 16548, "utilities" -> 16549, "##etta" -> 
                    16550, "##print" -> 16551, "eisenhower" -> 16552, 
                    "principally" -> 16553, "granada" -> 16554, "lana" -> 
                    16555, "##rak" -> 16556, "openings" -> 16557, "concord" -> 
                    16558, "##bl" -> 16559, "bethany" -> 16560, "connie" -> 
                    16561, "morality" -> 16562, "sega" -> 16563, "##mons" -> 
                    16564, "##nard" -> 16565, "earnings" -> 16566, "##kara" -> 
                    16567, "##cine" -> 16568, "wii" -> 16569, "communes" -> 
                    16570, "##rel" -> 16571, "coma" -> 16572, "composing" -> 
                    16573, "softened" -> 16574, "severed" -> 16575, "grapes" -> 
                    16576, "##17" -> 16577, "nguyen" -> 16578, "analyzed" -> 
                    16579, "warlord" -> 16580, "hubbard" -> 16581, "heavenly" -> 
                    16582, "behave" -> 16583, "slovenian" -> 16584, "##hit" -> 
                    16585, "##ony" -> 16586, "hailed" -> 16587, "filmmakers" -> 
                    16588, "trance" -> 16589, "caldwell" -> 16590, "skye" -> 
                    16591, "unrest" -> 16592, "coward" -> 16593, "likelihood" -> 
                    16594, "##aging" -> 16595, "bern" -> 16596, "sci" -> 
                    16597, "taliban" -> 16598, "honolulu" -> 16599, "propose" -> 
                    16600, "##wang" -> 16601, "1700" -> 16602, "browser" -> 
                    16603, "imagining" -> 16604, "cobra" -> 16605, 
                    "contributes" -> 16606, "dukes" -> 16607, "instinctively" -> 
                    16608, "conan" -> 16609, "violinist" -> 16610, "##ores" -> 
                    16611, "accessories" -> 16612, "gradual" -> 16613, 
                    "##amp" -> 16614, "quotes" -> 16615, "sioux" -> 16616, 
                    "##dating" -> 16617, "undertake" -> 16618, "intercepted" -> 
                    16619, "sparkling" -> 16620, "compressed" -> 16621, "139" -> 
                    16622, "fungus" -> 16623, "tombs" -> 16624, "haley" -> 
                    16625, "imposing" -> 16626, "rests" -> 16627, 
                    "degradation" -> 16628, "lincolnshire" -> 16629, 
                    "retailers" -> 16630, "wetlands" -> 16631, "tulsa" -> 
                    16632, "distributor" -> 16633, "dungeon" -> 16634, "nun" -> 
                    16635, "greenhouse" -> 16636, "convey" -> 16637, 
                    "atlantis" -> 16638, "aft" -> 16639, "exits" -> 16640, 
                    "oman" -> 16641, "dresser" -> 16642, "lyons" -> 16643, 
                    "##sti" -> 16644, "joking" -> 16645, "eddy" -> 16646, 
                    "judgement" -> 16647, "omitted" -> 16648, "digits" -> 
                    16649, "##cts" -> 16650, "##game" -> 16651, "juniors" -> 
                    16652, "##rae" -> 16653, "cents" -> 16654, "stricken" -> 
                    16655, "une" -> 16656, "##ngo" -> 16657, "wizards" -> 
                    16658, "weir" -> 16659, "breton" -> 16660, "nan" -> 16661,
                     "technician" -> 16662, "fibers" -> 16663, "liking" -> 
                    16664, "royalty" -> 16665, "##cca" -> 16666, "154" -> 
                    16667, "persia" -> 16668, "terribly" -> 16669, "magician" -> 
                    16670, "##rable" -> 16671, "##unt" -> 16672, "vance" -> 
                    16673, "cafeteria" -> 16674, "booker" -> 16675, "camille" -> 
                    16676, "warmer" -> 16677, "##static" -> 16678, "consume" -> 
                    16679, "cavern" -> 16680, "gaps" -> 16681, "compass" -> 
                    16682, "contemporaries" -> 16683, "foyer" -> 16684, 
                    "soothing" -> 16685, "graveyard" -> 16686, "maj" -> 16687,
                     "plunged" -> 16688, "blush" -> 16689, "##wear" -> 16690, 
                    "cascade" -> 16691, "demonstrates" -> 16692, "ordinance" -> 
                    16693, "##nov" -> 16694, "boyle" -> 16695, "##lana" -> 
                    16696, "rockefeller" -> 16697, "shaken" -> 16698, "banjo" -> 
                    16699, "izzy" -> 16700, "##ense" -> 16701, "breathless" -> 
                    16702, "vines" -> 16703, "##32" -> 16704, "##eman" -> 
                    16705, "alterations" -> 16706, "chromosome" -> 16707, 
                    "dwellings" -> 16708, "feudal" -> 16709, "mole" -> 16710, 
                    "153" -> 16711, "catalonia" -> 16712, "relics" -> 16713, 
                    "tenant" -> 16714, "mandated" -> 16715, "##fm" -> 16716, 
                    "fridge" -> 16717, "hats" -> 16718, "honesty" -> 16719, 
                    "patented" -> 16720, "raul" -> 16721, "heap" -> 16722, 
                    "cruisers" -> 16723, "accusing" -> 16724, "enlightenment" -> 
                    16725, "infants" -> 16726, "wherein" -> 16727, "chatham" -> 
                    16728, "contractors" -> 16729, "zen" -> 16730, "affinity" -> 
                    16731, "hc" -> 16732, "osborne" -> 16733, "piston" -> 
                    16734, "156" -> 16735, "traps" -> 16736, "maturity" -> 
                    16737, "##rana" -> 16738, "lagos" -> 16739, "##zal" -> 
                    16740, "peering" -> 16741, "##nay" -> 16742, "attendant" -> 
                    16743, "dealers" -> 16744, "protocols" -> 16745, "subset" -> 
                    16746, "prospects" -> 16747, "biographical" -> 16748, 
                    "##cre" -> 16749, "artery" -> 16750, "##zers" -> 16751, 
                    "insignia" -> 16752, "nuns" -> 16753, "endured" -> 16754, 
                    "##eration" -> 16755, "recommend" -> 16756, "schwartz" -> 
                    16757, "serbs" -> 16758, "berger" -> 16759, "cromwell" -> 
                    16760, "crossroads" -> 16761, "##ctor" -> 16762, 
                    "enduring" -> 16763, "clasped" -> 16764, "grounded" -> 
                    16765, "##bine" -> 16766, "marseille" -> 16767, 
                    "twitched" -> 16768, "abel" -> 16769, "choke" -> 16770, 
                    "https" -> 16771, "catalyst" -> 16772, "moldova" -> 16773,
                     "italians" -> 16774, "##tist" -> 16775, "disastrous" -> 
                    16776, "wee" -> 16777, "##oured" -> 16778, "##nti" -> 
                    16779, "wwf" -> 16780, "nope" -> 16781, "##piration" -> 
                    16782, "##asa" -> 16783, "expresses" -> 16784, "thumbs" -> 
                    16785, "167" -> 16786, "##nza" -> 16787, "coca" -> 16788, 
                    "1781" -> 16789, "cheating" -> 16790, "##ption" -> 16791, 
                    "skipped" -> 16792, "sensory" -> 16793, "heidelberg" -> 
                    16794, "spies" -> 16795, "satan" -> 16796, "dangers" -> 
                    16797, "semifinal" -> 16798, "202" -> 16799, "bohemia" -> 
                    16800, "whitish" -> 16801, "confusing" -> 16802, 
                    "shipbuilding" -> 16803, "relies" -> 16804, "surgeons" -> 
                    16805, "landings" -> 16806, "ravi" -> 16807, "baku" -> 
                    16808, "moor" -> 16809, "suffix" -> 16810, "alejandro" -> 
                    16811, "##yana" -> 16812, "litre" -> 16813, "upheld" -> 
                    16814, "##unk" -> 16815, "rajasthan" -> 16816, "##rek" -> 
                    16817, "coaster" -> 16818, "insists" -> 16819, "posture" -> 
                    16820, "scenarios" -> 16821, "etienne" -> 16822, 
                    "favoured" -> 16823, "appoint" -> 16824, "transgender" -> 
                    16825, "elephants" -> 16826, "poked" -> 16827, 
                    "greenwood" -> 16828, "defences" -> 16829, "fulfilled" -> 
                    16830, "militant" -> 16831, "somali" -> 16832, "1758" -> 
                    16833, "chalk" -> 16834, "potent" -> 16835, "##ucci" -> 
                    16836, "migrants" -> 16837, "wink" -> 16838, "assistants" -> 
                    16839, "nos" -> 16840, "restriction" -> 16841, "activism" -> 
                    16842, "niger" -> 16843, "##ario" -> 16844, "colon" -> 
                    16845, "shaun" -> 16846, "##sat" -> 16847, "daphne" -> 
                    16848, "##erated" -> 16849, "swam" -> 16850, 
                    "congregations" -> 16851, "reprise" -> 16852, 
                    "considerations" -> 16853, "magnet" -> 16854, "playable" -> 
                    16855, "xvi" -> 16856, "##\:0440" -> 16857, "overthrow" -> 
                    16858, "tobias" -> 16859, "knob" -> 16860, "chavez" -> 
                    16861, "coding" -> 16862, "##mers" -> 16863, "propped" -> 
                    16864, "katrina" -> 16865, "orient" -> 16866, "newcomer" -> 
                    16867, "##suke" -> 16868, "temperate" -> 16869, "##pool" -> 
                    16870, "farmhouse" -> 16871, "interrogation" -> 16872, 
                    "##vd" -> 16873, "committing" -> 16874, "##vert" -> 16875,
                     "forthcoming" -> 16876, "strawberry" -> 16877, "joaquin" -> 
                    16878, "macau" -> 16879, "ponds" -> 16880, "shocking" -> 
                    16881, "siberia" -> 16882, "##cellular" -> 16883, "chant" -> 
                    16884, "contributors" -> 16885, "##nant" -> 16886, 
                    "##ologists" -> 16887, "sped" -> 16888, "absorb" -> 16889,
                     "hail" -> 16890, "1782" -> 16891, "spared" -> 16892, 
                    "##hore" -> 16893, "barbados" -> 16894, "karate" -> 16895,
                     "opus" -> 16896, "originates" -> 16897, "saul" -> 16898, 
                    "##xie" -> 16899, "evergreen" -> 16900, "leaped" -> 16901,
                     "##rock" -> 16902, "correlation" -> 16903, "exaggerated" -> 
                    16904, "weekday" -> 16905, "unification" -> 16906, "bump" -> 
                    16907, "tracing" -> 16908, "brig" -> 16909, "afb" -> 
                    16910, "pathways" -> 16911, "utilizing" -> 16912, 
                    "##ners" -> 16913, "mod" -> 16914, "mb" -> 16915, 
                    "disturbance" -> 16916, "kneeling" -> 16917, "##stad" -> 
                    16918, "##guchi" -> 16919, "100th" -> 16920, "pune" -> 
                    16921, "##thy" -> 16922, "decreasing" -> 16923, "168" -> 
                    16924, "manipulation" -> 16925, "miriam" -> 16926, 
                    "academia" -> 16927, "ecosystem" -> 16928, "occupational" -> 
                    16929, "rbi" -> 16930, "##lem" -> 16931, "rift" -> 16932, 
                    "##14" -> 16933, "rotary" -> 16934, "stacked" -> 16935, 
                    "incorporation" -> 16936, "awakening" -> 16937, 
                    "generators" -> 16938, "guerrero" -> 16939, "racist" -> 
                    16940, "##omy" -> 16941, "cyber" -> 16942, "derivatives" -> 
                    16943, "culminated" -> 16944, "allie" -> 16945, "annals" -> 
                    16946, "panzer" -> 16947, "sainte" -> 16948, "wikipedia" -> 
                    16949, "pops" -> 16950, "zu" -> 16951, "austro" -> 16952, 
                    "##vate" -> 16953, "algerian" -> 16954, "politely" -> 
                    16955, "nicholson" -> 16956, "mornings" -> 16957, 
                    "educate" -> 16958, "tastes" -> 16959, "thrill" -> 16960, 
                    "dartmouth" -> 16961, "##gating" -> 16962, "db" -> 16963, 
                    "##jee" -> 16964, "regan" -> 16965, "differing" -> 16966, 
                    "concentrating" -> 16967, "choreography" -> 16968, 
                    "divinity" -> 16969, "##media" -> 16970, "pledged" -> 
                    16971, "alexandre" -> 16972, "routing" -> 16973, "gregor" -> 
                    16974, "madeline" -> 16975, "##idal" -> 16976, 
                    "apocalypse" -> 16977, "##hora" -> 16978, "gunfire" -> 
                    16979, "culminating" -> 16980, "elves" -> 16981, "fined" -> 
                    16982, "liang" -> 16983, "lam" -> 16984, "programmed" -> 
                    16985, "tar" -> 16986, "guessing" -> 16987, 
                    "transparency" -> 16988, "gabrielle" -> 16989, "##gna" -> 
                    16990, "cancellation" -> 16991, "flexibility" -> 16992, 
                    "##lining" -> 16993, "accession" -> 16994, "shea" -> 
                    16995, "stronghold" -> 16996, "nets" -> 16997, 
                    "specializes" -> 16998, "##rgan" -> 16999, "abused" -> 
                    17000, "hasan" -> 17001, "sgt" -> 17002, "ling" -> 17003, 
                    "exceeding" -> 17004, "##\:2084" -> 17005, "admiration" -> 
                    17006, "supermarket" -> 17007, "##ark" -> 17008, 
                    "photographers" -> 17009, "specialised" -> 17010, "tilt" -> 
                    17011, "resonance" -> 17012, "hmm" -> 17013, "perfume" -> 
                    17014, "380" -> 17015, "sami" -> 17016, "threatens" -> 
                    17017, "garland" -> 17018, "botany" -> 17019, "guarding" -> 
                    17020, "boiled" -> 17021, "greet" -> 17022, "puppy" -> 
                    17023, "russo" -> 17024, "supplier" -> 17025, 
                    "wilmington" -> 17026, "vibrant" -> 17027, "vijay" -> 
                    17028, "##bius" -> 17029, "paralympic" -> 17030, 
                    "grumbled" -> 17031, "paige" -> 17032, "faa" -> 17033, 
                    "licking" -> 17034, "margins" -> 17035, "hurricanes" -> 
                    17036, "##gong" -> 17037, "fest" -> 17038, "grenade" -> 
                    17039, "ripping" -> 17040, "##uz" -> 17041, "counseling" -> 
                    17042, "weigh" -> 17043, "##sian" -> 17044, "needles" -> 
                    17045, "wiltshire" -> 17046, "edison" -> 17047, "costly" -> 
                    17048, "##not" -> 17049, "fulton" -> 17050, "tramway" -> 
                    17051, "redesigned" -> 17052, "staffordshire" -> 17053, 
                    "cache" -> 17054, "gasping" -> 17055, "watkins" -> 17056, 
                    "sleepy" -> 17057, "candidacy" -> 17058, "##group" -> 
                    17059, "monkeys" -> 17060, "timeline" -> 17061, 
                    "throbbing" -> 17062, "##bid" -> 17063, "##sos" -> 17064, 
                    "berth" -> 17065, "uzbekistan" -> 17066, "vanderbilt" -> 
                    17067, "bothering" -> 17068, "overturned" -> 17069, 
                    "ballots" -> 17070, "gem" -> 17071, "##iger" -> 17072, 
                    "sunglasses" -> 17073, "subscribers" -> 17074, "hooker" -> 
                    17075, "compelling" -> 17076, "ang" -> 17077, 
                    "exceptionally" -> 17078, "saloon" -> 17079, "stab" -> 
                    17080, "##rdi" -> 17081, "carla" -> 17082, "terrifying" -> 
                    17083, "rom" -> 17084, "##vision" -> 17085, "coil" -> 
                    17086, "##oids" -> 17087, "satisfying" -> 17088, 
                    "vendors" -> 17089, "31st" -> 17090, "mackay" -> 17091, 
                    "deities" -> 17092, "overlooked" -> 17093, "ambient" -> 
                    17094, "bahamas" -> 17095, "felipe" -> 17096, "olympia" -> 
                    17097, "whirled" -> 17098, "botanist" -> 17099, 
                    "advertised" -> 17100, "tugging" -> 17101, "##dden" -> 
                    17102, "disciples" -> 17103, "morales" -> 17104, 
                    "unionist" -> 17105, "rites" -> 17106, "foley" -> 17107, 
                    "morse" -> 17108, "motives" -> 17109, "creepy" -> 17110, 
                    "##\:2080" -> 17111, "soo" -> 17112, "##sz" -> 17113, 
                    "bargain" -> 17114, "highness" -> 17115, "frightening" -> 
                    17116, "turnpike" -> 17117, "tory" -> 17118, 
                    "reorganization" -> 17119, "##cer" -> 17120, "depict" -> 
                    17121, "biographer" -> 17122, "##walk" -> 17123, 
                    "unopposed" -> 17124, "manifesto" -> 17125, "##gles" -> 
                    17126, "institut" -> 17127, "emile" -> 17128, 
                    "accidental" -> 17129, "kapoor" -> 17130, "##dam" -> 
                    17131, "kilkenny" -> 17132, "cortex" -> 17133, "lively" -> 
                    17134, "##13" -> 17135, "romanesque" -> 17136, "jain" -> 
                    17137, "shan" -> 17138, "cannons" -> 17139, "##ood" -> 
                    17140, "##ske" -> 17141, "petrol" -> 17142, "echoing" -> 
                    17143, "amalgamated" -> 17144, "disappears" -> 17145, 
                    "cautious" -> 17146, "proposes" -> 17147, "sanctions" -> 
                    17148, "trenton" -> 17149, "##\:0631" -> 17150, 
                    "flotilla" -> 17151, "aus" -> 17152, "contempt" -> 17153, 
                    "tor" -> 17154, "canary" -> 17155, "cote" -> 17156, 
                    "theirs" -> 17157, "##hun" -> 17158, "conceptual" -> 
                    17159, "deleted" -> 17160, "fascinating" -> 17161, "paso" -> 
                    17162, "blazing" -> 17163, "elf" -> 17164, "honourable" -> 
                    17165, "hutchinson" -> 17166, "##eiro" -> 17167, "##outh" -> 
                    17168, "##zin" -> 17169, "surveyor" -> 17170, "tee" -> 
                    17171, "amidst" -> 17172, "wooded" -> 17173, "reissue" -> 
                    17174, "intro" -> 17175, "##ono" -> 17176, "cobb" -> 
                    17177, "shelters" -> 17178, "newsletter" -> 17179, 
                    "hanson" -> 17180, "brace" -> 17181, "encoding" -> 17182, 
                    "confiscated" -> 17183, "dem" -> 17184, "caravan" -> 
                    17185, "marino" -> 17186, "scroll" -> 17187, "melodic" -> 
                    17188, "cows" -> 17189, "imam" -> 17190, "##adi" -> 17191,
                     "##aneous" -> 17192, "northward" -> 17193, "searches" -> 
                    17194, "biodiversity" -> 17195, "cora" -> 17196, "310" -> 
                    17197, "roaring" -> 17198, "##bers" -> 17199, "connell" -> 
                    17200, "theologian" -> 17201, "halo" -> 17202, "compose" -> 
                    17203, "pathetic" -> 17204, "unmarried" -> 17205, 
                    "dynamo" -> 17206, "##oot" -> 17207, "az" -> 17208, 
                    "calculation" -> 17209, "toulouse" -> 17210, "deserves" -> 
                    17211, "humour" -> 17212, "nr" -> 17213, "forgiveness" -> 
                    17214, "tam" -> 17215, "undergone" -> 17216, "martyr" -> 
                    17217, "pamela" -> 17218, "myths" -> 17219, "whore" -> 
                    17220, "counselor" -> 17221, "hicks" -> 17222, "290" -> 
                    17223, "heavens" -> 17224, "battleship" -> 17225, 
                    "electromagnetic" -> 17226, "##bbs" -> 17227, "stellar" -> 
                    17228, "establishments" -> 17229, "presley" -> 17230, 
                    "hopped" -> 17231, "##chin" -> 17232, "temptation" -> 
                    17233, "90s" -> 17234, "wills" -> 17235, "nas" -> 17236, 
                    "##yuan" -> 17237, "nhs" -> 17238, "##nya" -> 17239, 
                    "seminars" -> 17240, "##yev" -> 17241, "adaptations" -> 
                    17242, "gong" -> 17243, "asher" -> 17244, "lex" -> 17245, 
                    "indicator" -> 17246, "sikh" -> 17247, "tobago" -> 17248, 
                    "cites" -> 17249, "goin" -> 17250, "##yte" -> 17251, 
                    "satirical" -> 17252, "##gies" -> 17253, "characterised" -> 
                    17254, "correspond" -> 17255, "bubbles" -> 17256, "lure" -> 
                    17257, "participates" -> 17258, "##vid" -> 17259, 
                    "eruption" -> 17260, "skate" -> 17261, "therapeutic" -> 
                    17262, "1785" -> 17263, "canals" -> 17264, "wholesale" -> 
                    17265, "defaulted" -> 17266, "sac" -> 17267, "460" -> 
                    17268, "petit" -> 17269, "##zzled" -> 17270, "virgil" -> 
                    17271, "leak" -> 17272, "ravens" -> 17273, "256" -> 17274,
                     "portraying" -> 17275, "##yx" -> 17276, "ghetto" -> 
                    17277, "creators" -> 17278, "dams" -> 17279, "portray" -> 
                    17280, "vicente" -> 17281, "##rington" -> 17282, "fae" -> 
                    17283, "namesake" -> 17284, "bounty" -> 17285, "##arium" -> 
                    17286, "joachim" -> 17287, "##ota" -> 17288, "##iser" -> 
                    17289, "aforementioned" -> 17290, "axle" -> 17291, 
                    "snout" -> 17292, "depended" -> 17293, "dismantled" -> 
                    17294, "reuben" -> 17295, "480" -> 17296, "##ibly" -> 
                    17297, "gallagher" -> 17298, "##lau" -> 17299, "##pd" -> 
                    17300, "earnest" -> 17301, "##ieu" -> 17302, "##iary" -> 
                    17303, "inflicted" -> 17304, "objections" -> 17305, 
                    "##llar" -> 17306, "asa" -> 17307, "gritted" -> 17308, 
                    "##athy" -> 17309, "jericho" -> 17310, "##sea" -> 17311, 
                    "##was" -> 17312, "flick" -> 17313, "underside" -> 17314, 
                    "ceramics" -> 17315, "undead" -> 17316, "substituted" -> 
                    17317, "195" -> 17318, "eastward" -> 17319, "undoubtedly" -> 
                    17320, "wheeled" -> 17321, "chimney" -> 17322, "##iche" -> 
                    17323, "guinness" -> 17324, "cb" -> 17325, "##ager" -> 
                    17326, "siding" -> 17327, "##bell" -> 17328, "traitor" -> 
                    17329, "baptiste" -> 17330, "disguised" -> 17331, 
                    "inauguration" -> 17332, "149" -> 17333, "tipperary" -> 
                    17334, "choreographer" -> 17335, "perched" -> 17336, 
                    "warmed" -> 17337, "stationary" -> 17338, "eco" -> 17339, 
                    "##ike" -> 17340, "##ntes" -> 17341, "bacterial" -> 17342,
                     "##aurus" -> 17343, "flores" -> 17344, "phosphate" -> 
                    17345, "##core" -> 17346, "attacker" -> 17347, "invaders" -> 
                    17348, "alvin" -> 17349, "intersects" -> 17350, "a1" -> 
                    17351, "indirectly" -> 17352, "immigrated" -> 17353, 
                    "businessmen" -> 17354, "cornelius" -> 17355, "valves" -> 
                    17356, "narrated" -> 17357, "pill" -> 17358, "sober" -> 
                    17359, "ul" -> 17360, "nationale" -> 17361, "monastic" -> 
                    17362, "applicants" -> 17363, "scenery" -> 17364, 
                    "##jack" -> 17365, "161" -> 17366, "motifs" -> 17367, 
                    "constitutes" -> 17368, "cpu" -> 17369, "##osh" -> 17370, 
                    "jurisdictions" -> 17371, "sd" -> 17372, "tuning" -> 
                    17373, "irritation" -> 17374, "woven" -> 17375, "##uddin" -> 
                    17376, "fertility" -> 17377, "gao" -> 17378, "##erie" -> 
                    17379, "antagonist" -> 17380, "impatient" -> 17381, 
                    "glacial" -> 17382, "hides" -> 17383, "boarded" -> 17384, 
                    "denominations" -> 17385, "interception" -> 17386, 
                    "##jas" -> 17387, "cookie" -> 17388, "nicola" -> 17389, 
                    "##tee" -> 17390, "algebraic" -> 17391, "marquess" -> 
                    17392, "bahn" -> 17393, "parole" -> 17394, "buyers" -> 
                    17395, "bait" -> 17396, "turbines" -> 17397, "paperwork" -> 
                    17398, "bestowed" -> 17399, "natasha" -> 17400, "renee" -> 
                    17401, "oceans" -> 17402, "purchases" -> 17403, "157" -> 
                    17404, "vaccine" -> 17405, "215" -> 17406, "##tock" -> 
                    17407, "fixtures" -> 17408, "playhouse" -> 17409, 
                    "integrate" -> 17410, "jai" -> 17411, "oswald" -> 17412, 
                    "intellectuals" -> 17413, "##cky" -> 17414, "booked" -> 
                    17415, "nests" -> 17416, "mortimer" -> 17417, "##isi" -> 
                    17418, "obsession" -> 17419, "sept" -> 17420, "##gler" -> 
                    17421, "##sum" -> 17422, "440" -> 17423, "scrutiny" -> 
                    17424, "simultaneous" -> 17425, "squinted" -> 17426, 
                    "##shin" -> 17427, "collects" -> 17428, "oven" -> 17429, 
                    "shankar" -> 17430, "penned" -> 17431, "remarkably" -> 
                    17432, "##\:044f" -> 17433, "slips" -> 17434, "luggage" -> 
                    17435, "spectral" -> 17436, "1786" -> 17437, 
                    "collaborations" -> 17438, "louie" -> 17439, 
                    "consolidation" -> 17440, "##ailed" -> 17441, "##ivating" -> 
                    17442, "420" -> 17443, "hoover" -> 17444, "blackpool" -> 
                    17445, "harness" -> 17446, "ignition" -> 17447, "vest" -> 
                    17448, "tails" -> 17449, "belmont" -> 17450, "mongol" -> 
                    17451, "skinner" -> 17452, "##nae" -> 17453, "visually" -> 
                    17454, "mage" -> 17455, "derry" -> 17456, "##tism" -> 
                    17457, "##unce" -> 17458, "stevie" -> 17459, 
                    "transitional" -> 17460, "##rdy" -> 17461, "redskins" -> 
                    17462, "drying" -> 17463, "prep" -> 17464, "prospective" -> 
                    17465, "##21" -> 17466, "annoyance" -> 17467, "oversee" -> 
                    17468, "##loaded" -> 17469, "fills" -> 17470, "##books" -> 
                    17471, "##iki" -> 17472, "announces" -> 17473, "fda" -> 
                    17474, "scowled" -> 17475, "respects" -> 17476, "prasad" -> 
                    17477, "mystic" -> 17478, "tucson" -> 17479, "##vale" -> 
                    17480, "revue" -> 17481, "springer" -> 17482, "bankrupt" -> 
                    17483, "1772" -> 17484, "aristotle" -> 17485, "salvatore" -> 
                    17486, "habsburg" -> 17487, "##geny" -> 17488, "dal" -> 
                    17489, "natal" -> 17490, "nut" -> 17491, "pod" -> 17492, 
                    "chewing" -> 17493, "darts" -> 17494, "moroccan" -> 17495,
                     "walkover" -> 17496, "rosario" -> 17497, "lenin" -> 
                    17498, "punjabi" -> 17499, "##\[SZ]e" -> 17500, "grossed" -> 
                    17501, "scattering" -> 17502, "wired" -> 17503, 
                    "invasive" -> 17504, "hui" -> 17505, "polynomial" -> 
                    17506, "corridors" -> 17507, "wakes" -> 17508, "gina" -> 
                    17509, "portrays" -> 17510, "##cratic" -> 17511, "arid" -> 
                    17512, "retreating" -> 17513, "erich" -> 17514, "irwin" -> 
                    17515, "sniper" -> 17516, "##dha" -> 17517, "linen" -> 
                    17518, "lindsey" -> 17519, "maneuver" -> 17520, "butch" -> 
                    17521, "shutting" -> 17522, "socio" -> 17523, "bounce" -> 
                    17524, "commemorative" -> 17525, "postseason" -> 17526, 
                    "jeremiah" -> 17527, "pines" -> 17528, "275" -> 17529, 
                    "mystical" -> 17530, "beads" -> 17531, "bp" -> 17532, 
                    "abbas" -> 17533, "furnace" -> 17534, "bidding" -> 17535, 
                    "consulted" -> 17536, "assaulted" -> 17537, "empirical" -> 
                    17538, "rubble" -> 17539, "enclosure" -> 17540, "sob" -> 
                    17541, "weakly" -> 17542, "cancel" -> 17543, "polly" -> 
                    17544, "yielded" -> 17545, "##emann" -> 17546, "curly" -> 
                    17547, "prediction" -> 17548, "battered" -> 17549, "70s" -> 
                    17550, "vhs" -> 17551, "jacqueline" -> 17552, "render" -> 
                    17553, "sails" -> 17554, "barked" -> 17555, "detailing" -> 
                    17556, "grayson" -> 17557, "riga" -> 17558, "sloane" -> 
                    17559, "raging" -> 17560, "##yah" -> 17561, "herbs" -> 
                    17562, "bravo" -> 17563, "##athlon" -> 17564, "alloy" -> 
                    17565, "giggle" -> 17566, "imminent" -> 17567, "suffers" -> 
                    17568, "assumptions" -> 17569, "waltz" -> 17570, 
                    "##itate" -> 17571, "accomplishments" -> 17572, "##ited" -> 
                    17573, "bathing" -> 17574, "remixed" -> 17575, 
                    "deception" -> 17576, "prefix" -> 17577, "##emia" -> 
                    17578, "deepest" -> 17579, "##tier" -> 17580, "##eis" -> 
                    17581, "balkan" -> 17582, "frogs" -> 17583, "##rong" -> 
                    17584, "slab" -> 17585, "##pate" -> 17586, "philosophers" -> 
                    17587, "peterborough" -> 17588, "grains" -> 17589, 
                    "imports" -> 17590, "dickinson" -> 17591, "rwanda" -> 
                    17592, "##atics" -> 17593, "1774" -> 17594, "dirk" -> 
                    17595, "lan" -> 17596, "tablets" -> 17597, "##rove" -> 
                    17598, "clone" -> 17599, "##rice" -> 17600, "caretaker" -> 
                    17601, "hostilities" -> 17602, "mclean" -> 17603, "##gre" -> 
                    17604, "regimental" -> 17605, "treasures" -> 17606, 
                    "norms" -> 17607, "impose" -> 17608, "tsar" -> 17609, 
                    "tango" -> 17610, "diplomacy" -> 17611, "variously" -> 
                    17612, "complain" -> 17613, "192" -> 17614, "recognise" -> 
                    17615, "arrests" -> 17616, "1779" -> 17617, "celestial" -> 
                    17618, "pulitzer" -> 17619, "##dus" -> 17620, "bing" -> 
                    17621, "libretto" -> 17622, "##moor" -> 17623, "adele" -> 
                    17624, "splash" -> 17625, "##rite" -> 17626, 
                    "expectation" -> 17627, "lds" -> 17628, "confronts" -> 
                    17629, "##izer" -> 17630, "spontaneous" -> 17631, 
                    "harmful" -> 17632, "wedge" -> 17633, "entrepreneurs" -> 
                    17634, "buyer" -> 17635, "##ope" -> 17636, "bilingual" -> 
                    17637, "translate" -> 17638, "rugged" -> 17639, "conner" -> 
                    17640, "circulated" -> 17641, "uae" -> 17642, "eaton" -> 
                    17643, "##gra" -> 17644, "##zzle" -> 17645, "lingered" -> 
                    17646, "lockheed" -> 17647, "vishnu" -> 17648, 
                    "reelection" -> 17649, "alonso" -> 17650, "##oom" -> 
                    17651, "joints" -> 17652, "yankee" -> 17653, "headline" -> 
                    17654, "cooperate" -> 17655, "heinz" -> 17656, "laureate" -> 
                    17657, "invading" -> 17658, "##sford" -> 17659, "echoes" -> 
                    17660, "scandinavian" -> 17661, "##dham" -> 17662, 
                    "hugging" -> 17663, "vitamin" -> 17664, "salute" -> 17665,
                     "micah" -> 17666, "hind" -> 17667, "trader" -> 17668, 
                    "##sper" -> 17669, "radioactive" -> 17670, "##ndra" -> 
                    17671, "militants" -> 17672, "poisoned" -> 17673, 
                    "ratified" -> 17674, "remark" -> 17675, "campeonato" -> 
                    17676, "deprived" -> 17677, "wander" -> 17678, "prop" -> 
                    17679, "##dong" -> 17680, "outlook" -> 17681, "##tani" -> 
                    17682, "##rix" -> 17683, "##eye" -> 17684, "chiang" -> 
                    17685, "darcy" -> 17686, "##oping" -> 17687, "mandolin" -> 
                    17688, "spice" -> 17689, "statesman" -> 17690, "babylon" -> 
                    17691, "182" -> 17692, "walled" -> 17693, "forgetting" -> 
                    17694, "afro" -> 17695, "##cap" -> 17696, "158" -> 17697, 
                    "giorgio" -> 17698, "buffer" -> 17699, "##polis" -> 17700,
                     "planetary" -> 17701, "##gis" -> 17702, "overlap" -> 
                    17703, "terminals" -> 17704, "kinda" -> 17705, 
                    "centenary" -> 17706, "##bir" -> 17707, "arising" -> 
                    17708, "manipulate" -> 17709, "elm" -> 17710, "ke" -> 
                    17711, "1770" -> 17712, "ak" -> 17713, "##tad" -> 17714, 
                    "chrysler" -> 17715, "mapped" -> 17716, "moose" -> 17717, 
                    "pomeranian" -> 17718, "quad" -> 17719, "macarthur" -> 
                    17720, "assemblies" -> 17721, "shoreline" -> 17722, 
                    "recalls" -> 17723, "stratford" -> 17724, "##rted" -> 
                    17725, "noticeable" -> 17726, "##evic" -> 17727, "imp" -> 
                    17728, "##rita" -> 17729, "##sque" -> 17730, "accustomed" -> 
                    17731, "supplying" -> 17732, "tents" -> 17733, 
                    "disgusted" -> 17734, "vogue" -> 17735, "sipped" -> 17736,
                     "filters" -> 17737, "khz" -> 17738, "reno" -> 17739, 
                    "selecting" -> 17740, "luftwaffe" -> 17741, "mcmahon" -> 
                    17742, "tyne" -> 17743, "masterpiece" -> 17744, 
                    "carriages" -> 17745, "collided" -> 17746, "dunes" -> 
                    17747, "exercised" -> 17748, "flare" -> 17749, 
                    "remembers" -> 17750, "muzzle" -> 17751, "##mobile" -> 
                    17752, "heck" -> 17753, "##rson" -> 17754, "burgess" -> 
                    17755, "lunged" -> 17756, "middleton" -> 17757, "boycott" -> 
                    17758, "bilateral" -> 17759, "##sity" -> 17760, 
                    "hazardous" -> 17761, "lumpur" -> 17762, "multiplayer" -> 
                    17763, "spotlight" -> 17764, "jackets" -> 17765, 
                    "goldman" -> 17766, "liege" -> 17767, "porcelain" -> 
                    17768, "rag" -> 17769, "waterford" -> 17770, "benz" -> 
                    17771, "attracts" -> 17772, "hopeful" -> 17773, 
                    "battling" -> 17774, "ottomans" -> 17775, "kensington" -> 
                    17776, "baked" -> 17777, "hymns" -> 17778, "cheyenne" -> 
                    17779, "lattice" -> 17780, "levine" -> 17781, "borrow" -> 
                    17782, "polymer" -> 17783, "clashes" -> 17784, "michaels" -> 
                    17785, "monitored" -> 17786, "commitments" -> 17787, 
                    "denounced" -> 17788, "##25" -> 17789, "##von" -> 17790, 
                    "cavity" -> 17791, "##oney" -> 17792, "hobby" -> 17793, 
                    "akin" -> 17794, "##holders" -> 17795, "futures" -> 17796,
                     "intricate" -> 17797, "cornish" -> 17798, "patty" -> 
                    17799, "##oned" -> 17800, "illegally" -> 17801, "dolphin" -> 
                    17802, "##lag" -> 17803, "barlow" -> 17804, "yellowish" -> 
                    17805, "maddie" -> 17806, "apologized" -> 17807, "luton" -> 
                    17808, "plagued" -> 17809, "##puram" -> 17810, "nana" -> 
                    17811, "##rds" -> 17812, "sway" -> 17813, "fanny" -> 
                    17814, "\[LSlash]odz" -> 17815, "##rino" -> 17816, "psi" -> 
                    17817, "suspicions" -> 17818, "hanged" -> 17819, 
                    "##eding" -> 17820, "initiate" -> 17821, "charlton" -> 
                    17822, "##por" -> 17823, "nak" -> 17824, "competent" -> 
                    17825, "235" -> 17826, "analytical" -> 17827, "annex" -> 
                    17828, "wardrobe" -> 17829, "reservations" -> 17830, 
                    "##rma" -> 17831, "sect" -> 17832, "162" -> 17833, 
                    "fairfax" -> 17834, "hedge" -> 17835, "piled" -> 17836, 
                    "buckingham" -> 17837, "uneven" -> 17838, "bauer" -> 
                    17839, "simplicity" -> 17840, "snyder" -> 17841, 
                    "interpret" -> 17842, "accountability" -> 17843, "donors" -> 
                    17844, "moderately" -> 17845, "byrd" -> 17846, 
                    "continents" -> 17847, "##cite" -> 17848, "##max" -> 
                    17849, "disciple" -> 17850, "hr" -> 17851, "jamaican" -> 
                    17852, "ping" -> 17853, "nominees" -> 17854, "##uss" -> 
                    17855, "mongolian" -> 17856, "diver" -> 17857, 
                    "attackers" -> 17858, "eagerly" -> 17859, "ideological" -> 
                    17860, "pillows" -> 17861, "miracles" -> 17862, 
                    "apartheid" -> 17863, "revolver" -> 17864, "sulfur" -> 
                    17865, "clinics" -> 17866, "moran" -> 17867, "163" -> 
                    17868, "##enko" -> 17869, "ile" -> 17870, "katy" -> 17871,
                     "rhetoric" -> 17872, "##icated" -> 17873, "chronology" -> 
                    17874, "recycling" -> 17875, "##hrer" -> 17876, 
                    "elongated" -> 17877, "mughal" -> 17878, "pascal" -> 
                    17879, "profiles" -> 17880, "vibration" -> 17881, 
                    "databases" -> 17882, "domination" -> 17883, "##fare" -> 
                    17884, "##rant" -> 17885, "matthias" -> 17886, "digest" -> 
                    17887, "rehearsal" -> 17888, "polling" -> 17889, "weiss" -> 
                    17890, "initiation" -> 17891, "reeves" -> 17892, 
                    "clinging" -> 17893, "flourished" -> 17894, "impress" -> 
                    17895, "ngo" -> 17896, "##hoff" -> 17897, "##ume" -> 
                    17898, "buckley" -> 17899, "symposium" -> 17900, 
                    "rhythms" -> 17901, "weed" -> 17902, "emphasize" -> 17903,
                     "transforming" -> 17904, "##taking" -> 17905, "##gence" -> 
                    17906, "##yman" -> 17907, "accountant" -> 17908, 
                    "analyze" -> 17909, "flicker" -> 17910, "foil" -> 17911, 
                    "priesthood" -> 17912, "voluntarily" -> 17913, 
                    "decreases" -> 17914, "##80" -> 17915, "##hya" -> 17916, 
                    "slater" -> 17917, "sv" -> 17918, "charting" -> 17919, 
                    "mcgill" -> 17920, "##lde" -> 17921, "moreno" -> 17922, 
                    "##iu" -> 17923, "besieged" -> 17924, "zur" -> 17925, 
                    "robes" -> 17926, "##phic" -> 17927, "admitting" -> 17928,
                     "api" -> 17929, "deported" -> 17930, "turmoil" -> 17931, 
                    "peyton" -> 17932, "earthquakes" -> 17933, "##ares" -> 
                    17934, "nationalists" -> 17935, "beau" -> 17936, "clair" -> 
                    17937, "brethren" -> 17938, "interrupt" -> 17939, "welch" -> 
                    17940, "curated" -> 17941, "galerie" -> 17942, 
                    "requesting" -> 17943, "164" -> 17944, "##ested" -> 17945,
                     "impending" -> 17946, "steward" -> 17947, "viper" -> 
                    17948, "##vina" -> 17949, "complaining" -> 17950, 
                    "beautifully" -> 17951, "brandy" -> 17952, "foam" -> 
                    17953, "nl" -> 17954, "1660" -> 17955, "##cake" -> 17956, 
                    "alessandro" -> 17957, "punches" -> 17958, "laced" -> 
                    17959, "explanations" -> 17960, "##lim" -> 17961, 
                    "attribute" -> 17962, "clit" -> 17963, "reggie" -> 17964, 
                    "discomfort" -> 17965, "##cards" -> 17966, "smoothed" -> 
                    17967, "whales" -> 17968, "##cene" -> 17969, "adler" -> 
                    17970, "countered" -> 17971, "duffy" -> 17972, 
                    "disciplinary" -> 17973, "widening" -> 17974, "recipe" -> 
                    17975, "reliance" -> 17976, "conducts" -> 17977, "goats" -> 
                    17978, "gradient" -> 17979, "preaching" -> 17980, 
                    "##shaw" -> 17981, "matilda" -> 17982, "quasi" -> 17983, 
                    "striped" -> 17984, "meridian" -> 17985, "cannabis" -> 
                    17986, "cordoba" -> 17987, "certificates" -> 17988, 
                    "##agh" -> 17989, "##tering" -> 17990, "graffiti" -> 
                    17991, "hangs" -> 17992, "pilgrims" -> 17993, "repeats" -> 
                    17994, "##ych" -> 17995, "revive" -> 17996, "urine" -> 
                    17997, "etat" -> 17998, "##hawk" -> 17999, "fueled" -> 
                    18000, "belts" -> 18001, "fuzzy" -> 18002, "susceptible" -> 
                    18003, "##hang" -> 18004, "mauritius" -> 18005, "salle" -> 
                    18006, "sincere" -> 18007, "beers" -> 18008, "hooks" -> 
                    18009, "##cki" -> 18010, "arbitration" -> 18011, 
                    "entrusted" -> 18012, "advise" -> 18013, "sniffed" -> 
                    18014, "seminar" -> 18015, "junk" -> 18016, "donnell" -> 
                    18017, "processors" -> 18018, "principality" -> 18019, 
                    "strapped" -> 18020, "celia" -> 18021, "mendoza" -> 18022,
                     "everton" -> 18023, "fortunes" -> 18024, "prejudice" -> 
                    18025, "starving" -> 18026, "reassigned" -> 18027, 
                    "steamer" -> 18028, "##lund" -> 18029, "tuck" -> 18030, 
                    "evenly" -> 18031, "foreman" -> 18032, "##ffen" -> 18033, 
                    "dans" -> 18034, "375" -> 18035, "envisioned" -> 18036, 
                    "slit" -> 18037, "##xy" -> 18038, "baseman" -> 18039, 
                    "liberia" -> 18040, "rosemary" -> 18041, "##weed" -> 
                    18042, "electrified" -> 18043, "periodically" -> 18044, 
                    "potassium" -> 18045, "stride" -> 18046, "contexts" -> 
                    18047, "sperm" -> 18048, "slade" -> 18049, "mariners" -> 
                    18050, "influx" -> 18051, "bianca" -> 18052, 
                    "subcommittee" -> 18053, "##rane" -> 18054, "spilling" -> 
                    18055, "icao" -> 18056, "estuary" -> 18057, "##nock" -> 
                    18058, "delivers" -> 18059, "iphone" -> 18060, "##ulata" -> 
                    18061, "isa" -> 18062, "mira" -> 18063, "bohemian" -> 
                    18064, "dessert" -> 18065, "##sbury" -> 18066, 
                    "welcoming" -> 18067, "proudly" -> 18068, "slowing" -> 
                    18069, "##chs" -> 18070, "musee" -> 18071, "ascension" -> 
                    18072, "russ" -> 18073, "##vian" -> 18074, "waits" -> 
                    18075, "##psy" -> 18076, "africans" -> 18077, "exploit" -> 
                    18078, "##morphic" -> 18079, "gov" -> 18080, "eccentric" -> 
                    18081, "crab" -> 18082, "peck" -> 18083, "##ull" -> 18084,
                     "entrances" -> 18085, "formidable" -> 18086, 
                    "marketplace" -> 18087, "groom" -> 18088, "bolted" -> 
                    18089, "metabolism" -> 18090, "patton" -> 18091, 
                    "robbins" -> 18092, "courier" -> 18093, "payload" -> 
                    18094, "endure" -> 18095, "##ifier" -> 18096, "andes" -> 
                    18097, "refrigerator" -> 18098, "##pr" -> 18099, "ornate" -> 
                    18100, "##uca" -> 18101, "ruthless" -> 18102, 
                    "illegitimate" -> 18103, "masonry" -> 18104, "strasbourg" -> 
                    18105, "bikes" -> 18106, "adobe" -> 18107, "##\.b3" -> 
                    18108, "apples" -> 18109, "quintet" -> 18110, "willingly" -> 
                    18111, "niche" -> 18112, "bakery" -> 18113, "corpses" -> 
                    18114, "energetic" -> 18115, "##cliffe" -> 18116, 
                    "##sser" -> 18117, "##ards" -> 18118, "177" -> 18119, 
                    "centimeters" -> 18120, "centro" -> 18121, "fuscous" -> 
                    18122, "cretaceous" -> 18123, "rancho" -> 18124, "##yde" -> 
                    18125, "andrei" -> 18126, "telecom" -> 18127, "tottenham" -> 
                    18128, "oasis" -> 18129, "ordination" -> 18130, 
                    "vulnerability" -> 18131, "presiding" -> 18132, "corey" -> 
                    18133, "cp" -> 18134, "penguins" -> 18135, "sims" -> 
                    18136, "##pis" -> 18137, "malawi" -> 18138, "piss" -> 
                    18139, "##48" -> 18140, "correction" -> 18141, "##cked" -> 
                    18142, "##ffle" -> 18143, "##ryn" -> 18144, "countdown" -> 
                    18145, "detectives" -> 18146, "psychiatrist" -> 18147, 
                    "psychedelic" -> 18148, "dinosaurs" -> 18149, "blouse" -> 
                    18150, "##get" -> 18151, "choi" -> 18152, "vowed" -> 
                    18153, "##oz" -> 18154, "randomly" -> 18155, "##pol" -> 
                    18156, "49ers" -> 18157, "scrub" -> 18158, "blanche" -> 
                    18159, "bruins" -> 18160, "dusseldorf" -> 18161, 
                    "##using" -> 18162, "unwanted" -> 18163, "##ums" -> 18164,
                     "212" -> 18165, "dominique" -> 18166, "elevations" -> 
                    18167, "headlights" -> 18168, "om" -> 18169, "laguna" -> 
                    18170, "##oga" -> 18171, "1750" -> 18172, "famously" -> 
                    18173, "ignorance" -> 18174, "shrewsbury" -> 18175, 
                    "##aine" -> 18176, "ajax" -> 18177, "breuning" -> 18178, 
                    "che" -> 18179, "confederacy" -> 18180, "greco" -> 18181, 
                    "overhaul" -> 18182, "##screen" -> 18183, "paz" -> 18184, 
                    "skirts" -> 18185, "disagreement" -> 18186, "cruelty" -> 
                    18187, "jagged" -> 18188, "phoebe" -> 18189, "shifter" -> 
                    18190, "hovered" -> 18191, "viruses" -> 18192, "##wes" -> 
                    18193, "mandy" -> 18194, "##lined" -> 18195, "##gc" -> 
                    18196, "landlord" -> 18197, "squirrel" -> 18198, "dashed" -> 
                    18199, "##\[Iota]" -> 18200, "ornamental" -> 18201, "gag" -> 
                    18202, "wally" -> 18203, "grange" -> 18204, "literal" -> 
                    18205, "spurs" -> 18206, "undisclosed" -> 18207, 
                    "proceeding" -> 18208, "yin" -> 18209, "##text" -> 18210, 
                    "billie" -> 18211, "orphan" -> 18212, "spanned" -> 18213, 
                    "humidity" -> 18214, "indy" -> 18215, "weighted" -> 18216,
                     "presentations" -> 18217, "explosions" -> 18218, 
                    "lucian" -> 18219, "##tary" -> 18220, "vaughn" -> 18221, 
                    "hindus" -> 18222, "##anga" -> 18223, "##hell" -> 18224, 
                    "psycho" -> 18225, "171" -> 18226, "daytona" -> 18227, 
                    "protects" -> 18228, "efficiently" -> 18229, "rematch" -> 
                    18230, "sly" -> 18231, "tandem" -> 18232, "##oya" -> 
                    18233, "rebranded" -> 18234, "impaired" -> 18235, "hee" -> 
                    18236, "metropolis" -> 18237, "peach" -> 18238, "godfrey" -> 
                    18239, "diaspora" -> 18240, "ethnicity" -> 18241, 
                    "prosperous" -> 18242, "gleaming" -> 18243, "dar" -> 
                    18244, "grossing" -> 18245, "playback" -> 18246, "##rden" -> 
                    18247, "stripe" -> 18248, "pistols" -> 18249, "##tain" -> 
                    18250, "births" -> 18251, "labelled" -> 18252, "##cating" -> 
                    18253, "172" -> 18254, "rudy" -> 18255, "alba" -> 18256, 
                    "##onne" -> 18257, "aquarium" -> 18258, "hostility" -> 
                    18259, "##gb" -> 18260, "##tase" -> 18261, "shudder" -> 
                    18262, "sumatra" -> 18263, "hardest" -> 18264, "lakers" -> 
                    18265, "consonant" -> 18266, "creeping" -> 18267, "demos" -> 
                    18268, "homicide" -> 18269, "capsule" -> 18270, "zeke" -> 
                    18271, "liberties" -> 18272, "expulsion" -> 18273, 
                    "pueblo" -> 18274, "##comb" -> 18275, "trait" -> 18276, 
                    "transporting" -> 18277, "##ddin" -> 18278, "##neck" -> 
                    18279, "##yna" -> 18280, "depart" -> 18281, "gregg" -> 
                    18282, "mold" -> 18283, "ledge" -> 18284, "hangar" -> 
                    18285, "oldham" -> 18286, "playboy" -> 18287, 
                    "termination" -> 18288, "analysts" -> 18289, "gmbh" -> 
                    18290, "romero" -> 18291, "##itic" -> 18292, "insist" -> 
                    18293, "cradle" -> 18294, "filthy" -> 18295, "brightness" -> 
                    18296, "slash" -> 18297, "shootout" -> 18298, "deposed" -> 
                    18299, "bordering" -> 18300, "##truct" -> 18301, "isis" -> 
                    18302, "microwave" -> 18303, "tumbled" -> 18304, 
                    "sheltered" -> 18305, "cathy" -> 18306, "werewolves" -> 
                    18307, "messy" -> 18308, "andersen" -> 18309, "convex" -> 
                    18310, "clapped" -> 18311, "clinched" -> 18312, "satire" -> 
                    18313, "wasting" -> 18314, "edo" -> 18315, "vc" -> 18316, 
                    "rufus" -> 18317, "##jak" -> 18318, "mont" -> 18319, 
                    "##etti" -> 18320, "poznan" -> 18321, "##keeping" -> 
                    18322, "restructuring" -> 18323, "transverse" -> 18324, 
                    "##rland" -> 18325, "azerbaijani" -> 18326, "slovene" -> 
                    18327, "gestures" -> 18328, "roommate" -> 18329, 
                    "choking" -> 18330, "shear" -> 18331, "##quist" -> 18332, 
                    "vanguard" -> 18333, "oblivious" -> 18334, "##hiro" -> 
                    18335, "disagreed" -> 18336, "baptism" -> 18337, "##lich" -> 
                    18338, "coliseum" -> 18339, "##aceae" -> 18340, "salvage" -> 
                    18341, "societe" -> 18342, "cory" -> 18343, "locke" -> 
                    18344, "relocation" -> 18345, "relying" -> 18346, 
                    "versailles" -> 18347, "ahl" -> 18348, "swelling" -> 
                    18349, "##elo" -> 18350, "cheerful" -> 18351, "##word" -> 
                    18352, "##edes" -> 18353, "gin" -> 18354, "sarajevo" -> 
                    18355, "obstacle" -> 18356, "diverted" -> 18357, "##nac" -> 
                    18358, "messed" -> 18359, "thoroughbred" -> 18360, 
                    "fluttered" -> 18361, "utrecht" -> 18362, "chewed" -> 
                    18363, "acquaintance" -> 18364, "assassins" -> 18365, 
                    "dispatch" -> 18366, "mirza" -> 18367, "##wart" -> 18368, 
                    "nike" -> 18369, "salzburg" -> 18370, "swell" -> 18371, 
                    "yen" -> 18372, "##gee" -> 18373, "idle" -> 18374, 
                    "ligue" -> 18375, "samson" -> 18376, "##nds" -> 18377, 
                    "##igh" -> 18378, "playful" -> 18379, "spawned" -> 18380, 
                    "##cise" -> 18381, "tease" -> 18382, "##case" -> 18383, 
                    "burgundy" -> 18384, "##bot" -> 18385, "stirring" -> 
                    18386, "skeptical" -> 18387, "interceptions" -> 18388, 
                    "marathi" -> 18389, "##dies" -> 18390, "bedrooms" -> 
                    18391, "aroused" -> 18392, "pinch" -> 18393, "##lik" -> 
                    18394, "preferences" -> 18395, "tattoos" -> 18396, 
                    "buster" -> 18397, "digitally" -> 18398, "projecting" -> 
                    18399, "rust" -> 18400, "##ital" -> 18401, "kitten" -> 
                    18402, "priorities" -> 18403, "addison" -> 18404, 
                    "pseudo" -> 18405, "##guard" -> 18406, "dusk" -> 18407, 
                    "icons" -> 18408, "sermon" -> 18409, "##psis" -> 18410, 
                    "##iba" -> 18411, "bt" -> 18412, "##lift" -> 18413, 
                    "##xt" -> 18414, "ju" -> 18415, "truce" -> 18416, "rink" -> 
                    18417, "##dah" -> 18418, "##wy" -> 18419, "defects" -> 
                    18420, "psychiatry" -> 18421, "offences" -> 18422, 
                    "calculate" -> 18423, "glucose" -> 18424, "##iful" -> 
                    18425, "##rized" -> 18426, "##unda" -> 18427, "francaise" -> 
                    18428, "##hari" -> 18429, "richest" -> 18430, 
                    "warwickshire" -> 18431, "carly" -> 18432, "1763" -> 
                    18433, "purity" -> 18434, "redemption" -> 18435, 
                    "lending" -> 18436, "##cious" -> 18437, "muse" -> 18438, 
                    "bruises" -> 18439, "cerebral" -> 18440, "aero" -> 18441, 
                    "carving" -> 18442, "##name" -> 18443, "preface" -> 18444,
                     "terminology" -> 18445, "invade" -> 18446, "monty" -> 
                    18447, "##int" -> 18448, "anarchist" -> 18449, "blurred" -> 
                    18450, "##iled" -> 18451, "rossi" -> 18452, "treats" -> 
                    18453, "guts" -> 18454, "shu" -> 18455, "foothills" -> 
                    18456, "ballads" -> 18457, "undertaking" -> 18458, 
                    "premise" -> 18459, "cecilia" -> 18460, "affiliates" -> 
                    18461, "blasted" -> 18462, "conditional" -> 18463, 
                    "wilder" -> 18464, "minors" -> 18465, "drone" -> 18466, 
                    "rudolph" -> 18467, "buffy" -> 18468, "swallowing" -> 
                    18469, "horton" -> 18470, "attested" -> 18471, "##hop" -> 
                    18472, "rutherford" -> 18473, "howell" -> 18474, 
                    "primetime" -> 18475, "livery" -> 18476, "penal" -> 18477,
                     "##bis" -> 18478, "minimize" -> 18479, "hydro" -> 18480, 
                    "wrecked" -> 18481, "wrought" -> 18482, "palazzo" -> 
                    18483, "##gling" -> 18484, "cans" -> 18485, "vernacular" -> 
                    18486, "friedman" -> 18487, "nobleman" -> 18488, "shale" -> 
                    18489, "walnut" -> 18490, "danielle" -> 18491, "##ection" -> 
                    18492, "##tley" -> 18493, "sears" -> 18494, "##kumar" -> 
                    18495, "chords" -> 18496, "lend" -> 18497, "flipping" -> 
                    18498, "streamed" -> 18499, "por" -> 18500, "dracula" -> 
                    18501, "gallons" -> 18502, "sacrifices" -> 18503, 
                    "gamble" -> 18504, "orphanage" -> 18505, "##iman" -> 
                    18506, "mckenzie" -> 18507, "##gible" -> 18508, "boxers" -> 
                    18509, "daly" -> 18510, "##balls" -> 18511, 
                    "##\:0627\:0646" -> 18512, "208" -> 18513, "##ific" -> 
                    18514, "##rative" -> 18515, "##iq" -> 18516, "exploited" -> 
                    18517, "slated" -> 18518, "##uity" -> 18519, "circling" -> 
                    18520, "hillary" -> 18521, "pinched" -> 18522, "goldberg" -> 
                    18523, "provost" -> 18524, "campaigning" -> 18525, "lim" -> 
                    18526, "piles" -> 18527, "ironically" -> 18528, "jong" -> 
                    18529, "mohan" -> 18530, "successors" -> 18531, "usaf" -> 
                    18532, "##tem" -> 18533, "##ught" -> 18534, 
                    "autobiographical" -> 18535, "haute" -> 18536, 
                    "preserves" -> 18537, "##ending" -> 18538, "acquitted" -> 
                    18539, "comparisons" -> 18540, "203" -> 18541, 
                    "hydroelectric" -> 18542, "gangs" -> 18543, "cypriot" -> 
                    18544, "torpedoes" -> 18545, "rushes" -> 18546, "chrome" -> 
                    18547, "derive" -> 18548, "bumps" -> 18549, "instability" -> 
                    18550, "fiat" -> 18551, "pets" -> 18552, "##mbe" -> 18553,
                     "silas" -> 18554, "dye" -> 18555, "reckless" -> 18556, 
                    "settler" -> 18557, "##itation" -> 18558, "info" -> 18559,
                     "heats" -> 18560, "##writing" -> 18561, "176" -> 18562, 
                    "canonical" -> 18563, "maltese" -> 18564, "fins" -> 18565,
                     "mushroom" -> 18566, "stacy" -> 18567, "aspen" -> 18568, 
                    "avid" -> 18569, "##kur" -> 18570, "##loading" -> 18571, 
                    "vickers" -> 18572, "gaston" -> 18573, "hillside" -> 
                    18574, "statutes" -> 18575, "wilde" -> 18576, "gail" -> 
                    18577, "kung" -> 18578, "sabine" -> 18579, "comfortably" -> 
                    18580, "motorcycles" -> 18581, "##rgo" -> 18582, "169" -> 
                    18583, "pneumonia" -> 18584, "fetch" -> 18585, "##sonic" -> 
                    18586, "axel" -> 18587, "faintly" -> 18588, "parallels" -> 
                    18589, "##oop" -> 18590, "mclaren" -> 18591, "spouse" -> 
                    18592, "compton" -> 18593, "interdisciplinary" -> 18594, 
                    "miner" -> 18595, "##eni" -> 18596, "181" -> 18597, 
                    "clamped" -> 18598, "##chal" -> 18599, "##llah" -> 18600, 
                    "separates" -> 18601, "versa" -> 18602, "##mler" -> 18603,
                     "scarborough" -> 18604, "labrador" -> 18605, "##lity" -> 
                    18606, "##osing" -> 18607, "rutgers" -> 18608, "hurdles" -> 
                    18609, "como" -> 18610, "166" -> 18611, "burt" -> 18612, 
                    "divers" -> 18613, "##100" -> 18614, "wichita" -> 18615, 
                    "cade" -> 18616, "coincided" -> 18617, "##erson" -> 18618,
                     "bruised" -> 18619, "mla" -> 18620, "##pper" -> 18621, 
                    "vineyard" -> 18622, "##ili" -> 18623, "##brush" -> 18624,
                     "notch" -> 18625, "mentioning" -> 18626, "jase" -> 18627,
                     "hearted" -> 18628, "kits" -> 18629, "doe" -> 18630, 
                    "##acle" -> 18631, "pomerania" -> 18632, "##ady" -> 18633,
                     "ronan" -> 18634, "seizure" -> 18635, "pavel" -> 18636, 
                    "problematic" -> 18637, "##zaki" -> 18638, "domenico" -> 
                    18639, "##ulin" -> 18640, "catering" -> 18641, "penelope" -> 
                    18642, "dependence" -> 18643, "parental" -> 18644, 
                    "emilio" -> 18645, "ministerial" -> 18646, "atkinson" -> 
                    18647, "##bolic" -> 18648, "clarkson" -> 18649, 
                    "chargers" -> 18650, "colby" -> 18651, "grill" -> 18652, 
                    "peeked" -> 18653, "arises" -> 18654, "summon" -> 18655, 
                    "##aged" -> 18656, "fools" -> 18657, "##grapher" -> 18658,
                     "faculties" -> 18659, "qaeda" -> 18660, "##vial" -> 
                    18661, "garner" -> 18662, "refurbished" -> 18663, "##hwa" -> 
                    18664, "geelong" -> 18665, "disasters" -> 18666, "nudged" -> 
                    18667, "bs" -> 18668, "shareholder" -> 18669, "lori" -> 
                    18670, "algae" -> 18671, "reinstated" -> 18672, "rot" -> 
                    18673, "##ades" -> 18674, "##nous" -> 18675, "invites" -> 
                    18676, "stainless" -> 18677, "183" -> 18678, "inclusive" -> 
                    18679, "##itude" -> 18680, "diocesan" -> 18681, "til" -> 
                    18682, "##icz" -> 18683, "denomination" -> 18684, "##xa" -> 
                    18685, "benton" -> 18686, "floral" -> 18687, "registers" -> 
                    18688, "##ider" -> 18689, "##erman" -> 18690, "##kell" -> 
                    18691, "absurd" -> 18692, "brunei" -> 18693, "guangzhou" -> 
                    18694, "hitter" -> 18695, "retaliation" -> 18696, 
                    "##uled" -> 18697, "##eve" -> 18698, "blanc" -> 18699, 
                    "nh" -> 18700, "consistency" -> 18701, "contamination" -> 
                    18702, "##eres" -> 18703, "##rner" -> 18704, "dire" -> 
                    18705, "palermo" -> 18706, "broadcasters" -> 18707, 
                    "diaries" -> 18708, "inspire" -> 18709, "vols" -> 18710, 
                    "brewer" -> 18711, "tightening" -> 18712, "ky" -> 18713, 
                    "mixtape" -> 18714, "hormone" -> 18715, "##tok" -> 18716, 
                    "stokes" -> 18717, "##color" -> 18718, "##dly" -> 18719, 
                    "##ssi" -> 18720, "pg" -> 18721, "##ometer" -> 18722, 
                    "##lington" -> 18723, "sanitation" -> 18724, "##tility" -> 
                    18725, "intercontinental" -> 18726, "apps" -> 18727, 
                    "##adt" -> 18728, "\.b9\:2044\:2082" -> 18729, 
                    "cylinders" -> 18730, "economies" -> 18731, "favourable" -> 
                    18732, "unison" -> 18733, "croix" -> 18734, "gertrude" -> 
                    18735, "odyssey" -> 18736, "vanity" -> 18737, "dangling" -> 
                    18738, "##logists" -> 18739, "upgrades" -> 18740, "dice" -> 
                    18741, "middleweight" -> 18742, "practitioner" -> 18743, 
                    "##ight" -> 18744, "206" -> 18745, "henrik" -> 18746, 
                    "parlor" -> 18747, "orion" -> 18748, "angered" -> 18749, 
                    "lac" -> 18750, "python" -> 18751, "blurted" -> 18752, 
                    "##rri" -> 18753, "sensual" -> 18754, "intends" -> 18755, 
                    "swings" -> 18756, "angled" -> 18757, "##phs" -> 18758, 
                    "husky" -> 18759, "attain" -> 18760, "peerage" -> 18761, 
                    "precinct" -> 18762, "textiles" -> 18763, "cheltenham" -> 
                    18764, "shuffled" -> 18765, "dai" -> 18766, "confess" -> 
                    18767, "tasting" -> 18768, "bhutan" -> 18769, "##riation" -> 
                    18770, "tyrone" -> 18771, "segregation" -> 18772, 
                    "abrupt" -> 18773, "ruiz" -> 18774, "##rish" -> 18775, 
                    "smirked" -> 18776, "blackwell" -> 18777, "confidential" -> 
                    18778, "browning" -> 18779, "amounted" -> 18780, "##put" -> 
                    18781, "vase" -> 18782, "scarce" -> 18783, "fabulous" -> 
                    18784, "raided" -> 18785, "staple" -> 18786, "guyana" -> 
                    18787, "unemployed" -> 18788, "glider" -> 18789, "shay" -> 
                    18790, "##tow" -> 18791, "carmine" -> 18792, "troll" -> 
                    18793, "intervene" -> 18794, "squash" -> 18795, 
                    "superstar" -> 18796, "##uce" -> 18797, "cylindrical" -> 
                    18798, "len" -> 18799, "roadway" -> 18800, "researched" -> 
                    18801, "handy" -> 18802, "##rium" -> 18803, "##jana" -> 
                    18804, "meta" -> 18805, "lao" -> 18806, "declares" -> 
                    18807, "##rring" -> 18808, "##tadt" -> 18809, "##elin" -> 
                    18810, "##kova" -> 18811, "willem" -> 18812, "shrubs" -> 
                    18813, "napoleonic" -> 18814, "realms" -> 18815, "skater" -> 
                    18816, "qi" -> 18817, "volkswagen" -> 18818, 
                    "##\[LSlash]" -> 18819, "tad" -> 18820, "hara" -> 18821, 
                    "archaeologist" -> 18822, "awkwardly" -> 18823, "eerie" -> 
                    18824, "##kind" -> 18825, "wiley" -> 18826, "##heimer" -> 
                    18827, "##24" -> 18828, "titus" -> 18829, "organizers" -> 
                    18830, "cfl" -> 18831, "crusaders" -> 18832, "lama" -> 
                    18833, "usb" -> 18834, "vent" -> 18835, "enraged" -> 
                    18836, "thankful" -> 18837, "occupants" -> 18838, 
                    "maximilian" -> 18839, "##gaard" -> 18840, "possessing" -> 
                    18841, "textbooks" -> 18842, "##oran" -> 18843, 
                    "collaborator" -> 18844, "quaker" -> 18845, "##ulo" -> 
                    18846, "avalanche" -> 18847, "mono" -> 18848, "silky" -> 
                    18849, "straits" -> 18850, "isaiah" -> 18851, "mustang" -> 
                    18852, "surged" -> 18853, "resolutions" -> 18854, 
                    "potomac" -> 18855, "descend" -> 18856, "cl" -> 18857, 
                    "kilograms" -> 18858, "plato" -> 18859, "strains" -> 
                    18860, "saturdays" -> 18861, "##olin" -> 18862, 
                    "bernstein" -> 18863, "##ype" -> 18864, "holstein" -> 
                    18865, "ponytail" -> 18866, "##watch" -> 18867, "belize" -> 
                    18868, "conversely" -> 18869, "heroine" -> 18870, 
                    "perpetual" -> 18871, "##ylus" -> 18872, "charcoal" -> 
                    18873, "piedmont" -> 18874, "glee" -> 18875, 
                    "negotiating" -> 18876, "backdrop" -> 18877, "prologue" -> 
                    18878, "##jah" -> 18879, "##mmy" -> 18880, "pasadena" -> 
                    18881, "climbs" -> 18882, "ramos" -> 18883, "sunni" -> 
                    18884, "##holm" -> 18885, "##tner" -> 18886, "##tri" -> 
                    18887, "anand" -> 18888, "deficiency" -> 18889, 
                    "hertfordshire" -> 18890, "stout" -> 18891, "##avi" -> 
                    18892, "aperture" -> 18893, "orioles" -> 18894, "##irs" -> 
                    18895, "doncaster" -> 18896, "intrigued" -> 18897, 
                    "bombed" -> 18898, "coating" -> 18899, "otis" -> 18900, 
                    "##mat" -> 18901, "cocktail" -> 18902, "##jit" -> 18903, 
                    "##eto" -> 18904, "amir" -> 18905, "arousal" -> 18906, 
                    "sar" -> 18907, "##proof" -> 18908, "##act" -> 18909, 
                    "##ories" -> 18910, "dixie" -> 18911, "pots" -> 18912, 
                    "##bow" -> 18913, "whereabouts" -> 18914, "159" -> 18915, 
                    "##fted" -> 18916, "drains" -> 18917, "bullying" -> 18918,
                     "cottages" -> 18919, "scripture" -> 18920, "coherent" -> 
                    18921, "fore" -> 18922, "poe" -> 18923, "appetite" -> 
                    18924, "##uration" -> 18925, "sampled" -> 18926, 
                    "##ators" -> 18927, "##dp" -> 18928, "derrick" -> 18929, 
                    "rotor" -> 18930, "jays" -> 18931, "peacock" -> 18932, 
                    "installment" -> 18933, "##rro" -> 18934, "advisors" -> 
                    18935, "##coming" -> 18936, "rodeo" -> 18937, "scotch" -> 
                    18938, "##mot" -> 18939, "##db" -> 18940, "##fen" -> 
                    18941, "##vant" -> 18942, "ensued" -> 18943, "rodrigo" -> 
                    18944, "dictatorship" -> 18945, "martyrs" -> 18946, 
                    "twenties" -> 18947, "##\:043d" -> 18948, "towed" -> 
                    18949, "incidence" -> 18950, "marta" -> 18951, 
                    "rainforest" -> 18952, "sai" -> 18953, "scaled" -> 18954, 
                    "##cles" -> 18955, "oceanic" -> 18956, "qualifiers" -> 
                    18957, "symphonic" -> 18958, "mcbride" -> 18959, 
                    "dislike" -> 18960, "generalized" -> 18961, "aubrey" -> 
                    18962, "colonization" -> 18963, "##iation" -> 18964, 
                    "##lion" -> 18965, "##ssing" -> 18966, "disliked" -> 
                    18967, "lublin" -> 18968, "salesman" -> 18969, "##ulates" -> 
                    18970, "spherical" -> 18971, "whatsoever" -> 18972, 
                    "sweating" -> 18973, "avalon" -> 18974, "contention" -> 
                    18975, "punt" -> 18976, "severity" -> 18977, "alderman" -> 
                    18978, "atari" -> 18979, "##dina" -> 18980, "##grant" -> 
                    18981, "##rop" -> 18982, "scarf" -> 18983, "seville" -> 
                    18984, "vertices" -> 18985, "annexation" -> 18986, 
                    "fairfield" -> 18987, "fascination" -> 18988, "inspiring" -> 
                    18989, "launches" -> 18990, "palatinate" -> 18991, 
                    "regretted" -> 18992, "##rca" -> 18993, "feral" -> 18994, 
                    "##iom" -> 18995, "elk" -> 18996, "nap" -> 18997, "olsen" -> 
                    18998, "reddy" -> 18999, "yong" -> 19000, "##leader" -> 
                    19001, "##iae" -> 19002, "garment" -> 19003, "transports" -> 
                    19004, "feng" -> 19005, "gracie" -> 19006, "outrage" -> 
                    19007, "viceroy" -> 19008, "insides" -> 19009, "##esis" -> 
                    19010, "breakup" -> 19011, "grady" -> 19012, "organizer" -> 
                    19013, "softer" -> 19014, "grimaced" -> 19015, "222" -> 
                    19016, "murals" -> 19017, "galicia" -> 19018, "arranging" -> 
                    19019, "vectors" -> 19020, "##rsten" -> 19021, "bas" -> 
                    19022, "##sb" -> 19023, "##cens" -> 19024, "sloan" -> 
                    19025, "##eka" -> 19026, "bitten" -> 19027, "ara" -> 
                    19028, "fender" -> 19029, "nausea" -> 19030, "bumped" -> 
                    19031, "kris" -> 19032, "banquet" -> 19033, "comrades" -> 
                    19034, "detector" -> 19035, "persisted" -> 19036, 
                    "##llan" -> 19037, "adjustment" -> 19038, "endowed" -> 
                    19039, "cinemas" -> 19040, "##shot" -> 19041, "sellers" -> 
                    19042, "##uman" -> 19043, "peek" -> 19044, "epa" -> 19045,
                     "kindly" -> 19046, "neglect" -> 19047, "simpsons" -> 
                    19048, "talon" -> 19049, "mausoleum" -> 19050, "runaway" -> 
                    19051, "hangul" -> 19052, "lookout" -> 19053, "##cic" -> 
                    19054, "rewards" -> 19055, "coughed" -> 19056, 
                    "acquainted" -> 19057, "chloride" -> 19058, "##ald" -> 
                    19059, "quicker" -> 19060, "accordion" -> 19061, 
                    "neolithic" -> 19062, "##qa" -> 19063, "artemis" -> 19064,
                     "coefficient" -> 19065, "lenny" -> 19066, "pandora" -> 
                    19067, "tx" -> 19068, "##xed" -> 19069, "ecstasy" -> 
                    19070, "litter" -> 19071, "segunda" -> 19072, 
                    "chairperson" -> 19073, "gemma" -> 19074, "hiss" -> 19075,
                     "rumor" -> 19076, "vow" -> 19077, "nasal" -> 19078, 
                    "antioch" -> 19079, "compensate" -> 19080, "patiently" -> 
                    19081, "transformers" -> 19082, "##eded" -> 19083, "judo" -> 
                    19084, "morrow" -> 19085, "penis" -> 19086, "posthumous" -> 
                    19087, "philips" -> 19088, "bandits" -> 19089, "husbands" -> 
                    19090, "denote" -> 19091, "flaming" -> 19092, "##any" -> 
                    19093, "##phones" -> 19094, "langley" -> 19095, "yorker" -> 
                    19096, "1760" -> 19097, "walters" -> 19098, "##uo" -> 
                    19099, "##kle" -> 19100, "gubernatorial" -> 19101, 
                    "fatty" -> 19102, "samsung" -> 19103, "leroy" -> 19104, 
                    "outlaw" -> 19105, "##nine" -> 19106, "unpublished" -> 
                    19107, "poole" -> 19108, "jakob" -> 19109, "##\:1d62" -> 
                    19110, "##\:2099" -> 19111, "crete" -> 19112, "distorted" -> 
                    19113, "superiority" -> 19114, "##dhi" -> 19115, 
                    "intercept" -> 19116, "crust" -> 19117, "mig" -> 19118, 
                    "claus" -> 19119, "crashes" -> 19120, "positioning" -> 
                    19121, "188" -> 19122, "stallion" -> 19123, "301" -> 
                    19124, "frontal" -> 19125, "armistice" -> 19126, 
                    "##estinal" -> 19127, "elton" -> 19128, "aj" -> 19129, 
                    "encompassing" -> 19130, "camel" -> 19131, "commemorated" -> 
                    19132, "malaria" -> 19133, "woodward" -> 19134, "calf" -> 
                    19135, "cigar" -> 19136, "penetrate" -> 19137, "##oso" -> 
                    19138, "willard" -> 19139, "##rno" -> 19140, "##uche" -> 
                    19141, "illustrate" -> 19142, "amusing" -> 19143, 
                    "convergence" -> 19144, "noteworthy" -> 19145, "##lma" -> 
                    19146, "##rva" -> 19147, "journeys" -> 19148, "realise" -> 
                    19149, "manfred" -> 19150, "##sable" -> 19151, "410" -> 
                    19152, "##vocation" -> 19153, "hearings" -> 19154, 
                    "fiance" -> 19155, "##posed" -> 19156, "educators" -> 
                    19157, "provoked" -> 19158, "adjusting" -> 19159, 
                    "##cturing" -> 19160, "modular" -> 19161, "stockton" -> 
                    19162, "paterson" -> 19163, "vlad" -> 19164, "rejects" -> 
                    19165, "electors" -> 19166, "selena" -> 19167, "maureen" -> 
                    19168, "##tres" -> 19169, "uber" -> 19170, "##rce" -> 
                    19171, "swirled" -> 19172, "##num" -> 19173, 
                    "proportions" -> 19174, "nanny" -> 19175, "pawn" -> 19176,
                     "naturalist" -> 19177, "parma" -> 19178, "apostles" -> 
                    19179, "awoke" -> 19180, "ethel" -> 19181, "wen" -> 19182,
                     "##bey" -> 19183, "monsoon" -> 19184, "overview" -> 
                    19185, "##inating" -> 19186, "mccain" -> 19187, 
                    "rendition" -> 19188, "risky" -> 19189, "adorned" -> 
                    19190, "##ih" -> 19191, "equestrian" -> 19192, "germain" -> 
                    19193, "nj" -> 19194, "conspicuous" -> 19195, 
                    "confirming" -> 19196, "##yoshi" -> 19197, "shivering" -> 
                    19198, "##imeter" -> 19199, "milestone" -> 19200, 
                    "rumours" -> 19201, "flinched" -> 19202, "bounds" -> 
                    19203, "smacked" -> 19204, "token" -> 19205, "##bei" -> 
                    19206, "lectured" -> 19207, "automobiles" -> 19208, 
                    "##shore" -> 19209, "impacted" -> 19210, "##iable" -> 
                    19211, "nouns" -> 19212, "nero" -> 19213, "##leaf" -> 
                    19214, "ismail" -> 19215, "prostitute" -> 19216, "trams" -> 
                    19217, "##lace" -> 19218, "bridget" -> 19219, "sud" -> 
                    19220, "stimulus" -> 19221, "impressions" -> 19222, 
                    "reins" -> 19223, "revolves" -> 19224, "##oud" -> 19225, 
                    "##gned" -> 19226, "giro" -> 19227, "honeymoon" -> 19228, 
                    "##swell" -> 19229, "criterion" -> 19230, "##sms" -> 
                    19231, "##uil" -> 19232, "libyan" -> 19233, "prefers" -> 
                    19234, "##osition" -> 19235, "211" -> 19236, "preview" -> 
                    19237, "sucks" -> 19238, "accusation" -> 19239, "bursts" -> 
                    19240, "metaphor" -> 19241, "diffusion" -> 19242, 
                    "tolerate" -> 19243, "faye" -> 19244, "betting" -> 19245, 
                    "cinematographer" -> 19246, "liturgical" -> 19247, 
                    "specials" -> 19248, "bitterly" -> 19249, "humboldt" -> 
                    19250, "##ckle" -> 19251, "flux" -> 19252, "rattled" -> 
                    19253, "##itzer" -> 19254, "archaeologists" -> 19255, 
                    "odor" -> 19256, "authorised" -> 19257, "marshes" -> 
                    19258, "discretion" -> 19259, "##\:043e\:0432" -> 19260, 
                    "alarmed" -> 19261, "archaic" -> 19262, "inverse" -> 
                    19263, "##leton" -> 19264, "explorers" -> 19265, "##pine" -> 
                    19266, "drummond" -> 19267, "tsunami" -> 19268, 
                    "woodlands" -> 19269, "##minate" -> 19270, "##tland" -> 
                    19271, "booklet" -> 19272, "insanity" -> 19273, "owning" -> 
                    19274, "insert" -> 19275, "crafted" -> 19276, "calculus" -> 
                    19277, "##tore" -> 19278, "receivers" -> 19279, "##bt" -> 
                    19280, "stung" -> 19281, "##eca" -> 19282, "##nched" -> 
                    19283, "prevailing" -> 19284, "travellers" -> 19285, 
                    "eyeing" -> 19286, "lila" -> 19287, "graphs" -> 19288, 
                    "##borne" -> 19289, "178" -> 19290, "julien" -> 19291, 
                    "##won" -> 19292, "morale" -> 19293, "adaptive" -> 19294, 
                    "therapist" -> 19295, "erica" -> 19296, "cw" -> 19297, 
                    "libertarian" -> 19298, "bowman" -> 19299, "pitches" -> 
                    19300, "vita" -> 19301, "##ional" -> 19302, "crook" -> 
                    19303, "##ads" -> 19304, "##entation" -> 19305, 
                    "caledonia" -> 19306, "mutiny" -> 19307, "##sible" -> 
                    19308, "1840s" -> 19309, "automation" -> 19310, "##\[SZ]" -> 
                    19311, "flock" -> 19312, "##pia" -> 19313, "ironic" -> 
                    19314, "pathology" -> 19315, "##imus" -> 19316, 
                    "remarried" -> 19317, "##22" -> 19318, "joker" -> 19319, 
                    "withstand" -> 19320, "energies" -> 19321, "##att" -> 
                    19322, "shropshire" -> 19323, "hostages" -> 19324, 
                    "madeleine" -> 19325, "tentatively" -> 19326, 
                    "conflicting" -> 19327, "mateo" -> 19328, "recipes" -> 
                    19329, "euros" -> 19330, "ol" -> 19331, "mercenaries" -> 
                    19332, "nico" -> 19333, "##ndon" -> 19334, "albuquerque" -> 
                    19335, "augmented" -> 19336, "mythical" -> 19337, "bel" -> 
                    19338, "freud" -> 19339, "##child" -> 19340, "cough" -> 
                    19341, "##lica" -> 19342, "365" -> 19343, "freddy" -> 
                    19344, "lillian" -> 19345, "genetically" -> 19346, 
                    "nuremberg" -> 19347, "calder" -> 19348, "209" -> 19349, 
                    "bonn" -> 19350, "outdoors" -> 19351, "paste" -> 19352, 
                    "suns" -> 19353, "urgency" -> 19354, "vin" -> 19355, 
                    "restraint" -> 19356, "tyson" -> 19357, "##cera" -> 19358,
                     "##selle" -> 19359, "barrage" -> 19360, "bethlehem" -> 
                    19361, "kahn" -> 19362, "##par" -> 19363, "mounts" -> 
                    19364, "nippon" -> 19365, "barony" -> 19366, "happier" -> 
                    19367, "ryu" -> 19368, "makeshift" -> 19369, "sheldon" -> 
                    19370, "blushed" -> 19371, "castillo" -> 19372, "barking" -> 
                    19373, "listener" -> 19374, "taped" -> 19375, "bethel" -> 
                    19376, "fluent" -> 19377, "headlines" -> 19378, 
                    "pornography" -> 19379, "rum" -> 19380, "disclosure" -> 
                    19381, "sighing" -> 19382, "mace" -> 19383, "doubling" -> 
                    19384, "gunther" -> 19385, "manly" -> 19386, "##plex" -> 
                    19387, "rt" -> 19388, "interventions" -> 19389, 
                    "physiological" -> 19390, "forwards" -> 19391, "emerges" -> 
                    19392, "##tooth" -> 19393, "##gny" -> 19394, "compliment" -> 
                    19395, "rib" -> 19396, "recession" -> 19397, "visibly" -> 
                    19398, "barge" -> 19399, "faults" -> 19400, "connector" -> 
                    19401, "exquisite" -> 19402, "prefect" -> 19403, "##rlin" -> 
                    19404, "patio" -> 19405, "##cured" -> 19406, "elevators" -> 
                    19407, "brandt" -> 19408, "italics" -> 19409, "pena" -> 
                    19410, "173" -> 19411, "wasp" -> 19412, "satin" -> 19413, 
                    "ea" -> 19414, "botswana" -> 19415, "graceful" -> 19416, 
                    "respectable" -> 19417, "##jima" -> 19418, "##rter" -> 
                    19419, "##oic" -> 19420, "franciscan" -> 19421, 
                    "generates" -> 19422, "##dl" -> 19423, "alfredo" -> 19424,
                     "disgusting" -> 19425, "##olate" -> 19426, "##iously" -> 
                    19427, "sherwood" -> 19428, "warns" -> 19429, "cod" -> 
                    19430, "promo" -> 19431, "cheryl" -> 19432, "sino" -> 
                    19433, "##\:0629" -> 19434, "##escu" -> 19435, "twitch" -> 
                    19436, "##zhi" -> 19437, "brownish" -> 19438, "thom" -> 
                    19439, "ortiz" -> 19440, "##dron" -> 19441, "densely" -> 
                    19442, "##beat" -> 19443, "carmel" -> 19444, "reinforce" -> 
                    19445, "##bana" -> 19446, "187" -> 19447, "anastasia" -> 
                    19448, "downhill" -> 19449, "vertex" -> 19450, 
                    "contaminated" -> 19451, "remembrance" -> 19452, 
                    "harmonic" -> 19453, "homework" -> 19454, "##sol" -> 
                    19455, "fiancee" -> 19456, "gears" -> 19457, "olds" -> 
                    19458, "angelica" -> 19459, "loft" -> 19460, "ramsay" -> 
                    19461, "quiz" -> 19462, "colliery" -> 19463, "sevens" -> 
                    19464, "##cape" -> 19465, "autism" -> 19466, "##hil" -> 
                    19467, "walkway" -> 19468, "##boats" -> 19469, "ruben" -> 
                    19470, "abnormal" -> 19471, "ounce" -> 19472, "khmer" -> 
                    19473, "##bbe" -> 19474, "zachary" -> 19475, "bedside" -> 
                    19476, "morphology" -> 19477, "punching" -> 19478, 
                    "##olar" -> 19479, "sparrow" -> 19480, "convinces" -> 
                    19481, "##35" -> 19482, "hewitt" -> 19483, "queer" -> 
                    19484, "remastered" -> 19485, "rods" -> 19486, "mabel" -> 
                    19487, "solemn" -> 19488, "notified" -> 19489, "lyricist" -> 
                    19490, "symmetric" -> 19491, "##xide" -> 19492, "174" -> 
                    19493, "encore" -> 19494, "passports" -> 19495, 
                    "wildcats" -> 19496, "##uni" -> 19497, "baja" -> 19498, 
                    "##pac" -> 19499, "mildly" -> 19500, "##ease" -> 19501, 
                    "bleed" -> 19502, "commodity" -> 19503, "mounds" -> 19504,
                     "glossy" -> 19505, "orchestras" -> 19506, "##omo" -> 
                    19507, "damian" -> 19508, "prelude" -> 19509, "ambitions" -> 
                    19510, "##vet" -> 19511, "awhile" -> 19512, "remotely" -> 
                    19513, "##aud" -> 19514, "asserts" -> 19515, "imply" -> 
                    19516, "##iques" -> 19517, "distinctly" -> 19518, 
                    "modelling" -> 19519, "remedy" -> 19520, "##dded" -> 
                    19521, "windshield" -> 19522, "dani" -> 19523, "xiao" -> 
                    19524, "##endra" -> 19525, "audible" -> 19526, 
                    "powerplant" -> 19527, "1300" -> 19528, "invalid" -> 
                    19529, "elemental" -> 19530, "acquisitions" -> 19531, 
                    "##hala" -> 19532, "immaculate" -> 19533, "libby" -> 
                    19534, "plata" -> 19535, "smuggling" -> 19536, 
                    "ventilation" -> 19537, "denoted" -> 19538, "minh" -> 
                    19539, "##morphism" -> 19540, "430" -> 19541, "differed" -> 
                    19542, "dion" -> 19543, "kelley" -> 19544, "lore" -> 
                    19545, "mocking" -> 19546, "sabbath" -> 19547, "spikes" -> 
                    19548, "hygiene" -> 19549, "drown" -> 19550, "runoff" -> 
                    19551, "stylized" -> 19552, "tally" -> 19553, "liberated" -> 
                    19554, "aux" -> 19555, "interpreter" -> 19556, 
                    "righteous" -> 19557, "aba" -> 19558, "siren" -> 19559, 
                    "reaper" -> 19560, "pearce" -> 19561, "millie" -> 19562, 
                    "##cier" -> 19563, "##yra" -> 19564, "gaius" -> 19565, 
                    "##iso" -> 19566, "captures" -> 19567, "##ttering" -> 
                    19568, "dorm" -> 19569, "claudio" -> 19570, "##sic" -> 
                    19571, "benches" -> 19572, "knighted" -> 19573, 
                    "blackness" -> 19574, "##ored" -> 19575, "discount" -> 
                    19576, "fumble" -> 19577, "oxidation" -> 19578, "routed" -> 
                    19579, "##\[FinalSigma]" -> 19580, "novak" -> 19581, 
                    "perpendicular" -> 19582, "spoiled" -> 19583, "fracture" -> 
                    19584, "splits" -> 19585, "##urt" -> 19586, "pads" -> 
                    19587, "topology" -> 19588, "##cats" -> 19589, "axes" -> 
                    19590, "fortunate" -> 19591, "offenders" -> 19592, 
                    "protestants" -> 19593, "esteem" -> 19594, "221" -> 19595,
                     "broadband" -> 19596, "convened" -> 19597, "frankly" -> 
                    19598, "hound" -> 19599, "prototypes" -> 19600, "isil" -> 
                    19601, "facilitated" -> 19602, "keel" -> 19603, "##sher" -> 
                    19604, "sahara" -> 19605, "awaited" -> 19606, "bubba" -> 
                    19607, "orb" -> 19608, "prosecutors" -> 19609, "186" -> 
                    19610, "hem" -> 19611, "520" -> 19612, "##xing" -> 19613, 
                    "relaxing" -> 19614, "remnant" -> 19615, "romney" -> 
                    19616, "sorted" -> 19617, "slalom" -> 19618, "stefano" -> 
                    19619, "ulrich" -> 19620, "##active" -> 19621, 
                    "exemption" -> 19622, "folder" -> 19623, "pauses" -> 
                    19624, "foliage" -> 19625, "hitchcock" -> 19626, 
                    "epithet" -> 19627, "204" -> 19628, "criticisms" -> 19629,
                     "##aca" -> 19630, "ballistic" -> 19631, "brody" -> 19632,
                     "hinduism" -> 19633, "chaotic" -> 19634, "youths" -> 
                    19635, "equals" -> 19636, "##pala" -> 19637, "pts" -> 
                    19638, "thicker" -> 19639, "analogous" -> 19640, 
                    "capitalist" -> 19641, "improvised" -> 19642, 
                    "overseeing" -> 19643, "sinatra" -> 19644, "ascended" -> 
                    19645, "beverage" -> 19646, "##tl" -> 19647, 
                    "straightforward" -> 19648, "##kon" -> 19649, "curran" -> 
                    19650, "##west" -> 19651, "bois" -> 19652, "325" -> 19653,
                     "induce" -> 19654, "surveying" -> 19655, "emperors" -> 
                    19656, "sax" -> 19657, "unpopular" -> 19658, "##kk" -> 
                    19659, "cartoonist" -> 19660, "fused" -> 19661, "##mble" -> 
                    19662, "unto" -> 19663, "##yuki" -> 19664, "localities" -> 
                    19665, "##cko" -> 19666, "##ln" -> 19667, "darlington" -> 
                    19668, "slain" -> 19669, "academie" -> 19670, "lobbying" -> 
                    19671, "sediment" -> 19672, "puzzles" -> 19673, "##grass" -> 
                    19674, "defiance" -> 19675, "dickens" -> 19676, 
                    "manifest" -> 19677, "tongues" -> 19678, "alumnus" -> 
                    19679, "arbor" -> 19680, "coincide" -> 19681, "184" -> 
                    19682, "appalachian" -> 19683, "mustafa" -> 19684, 
                    "examiner" -> 19685, "cabaret" -> 19686, "traumatic" -> 
                    19687, "yves" -> 19688, "bracelet" -> 19689, "draining" -> 
                    19690, "heroin" -> 19691, "magnum" -> 19692, "baths" -> 
                    19693, "odessa" -> 19694, "consonants" -> 19695, 
                    "mitsubishi" -> 19696, "##gua" -> 19697, "kellan" -> 
                    19698, "vaudeville" -> 19699, "##fr" -> 19700, "joked" -> 
                    19701, "null" -> 19702, "straps" -> 19703, "probation" -> 
                    19704, "##\[LSlash]aw" -> 19705, "ceded" -> 19706, 
                    "interfaces" -> 19707, "##pas" -> 19708, "##zawa" -> 
                    19709, "blinding" -> 19710, "viet" -> 19711, "224" -> 
                    19712, "rothschild" -> 19713, "museo" -> 19714, "640" -> 
                    19715, "huddersfield" -> 19716, "##vr" -> 19717, "tactic" -> 
                    19718, "##storm" -> 19719, "brackets" -> 19720, "dazed" -> 
                    19721, "incorrectly" -> 19722, "##vu" -> 19723, "reg" -> 
                    19724, "glazed" -> 19725, "fearful" -> 19726, "manifold" -> 
                    19727, "benefited" -> 19728, "irony" -> 19729, "##sun" -> 
                    19730, "stumbling" -> 19731, "##rte" -> 19732, 
                    "willingness" -> 19733, "balkans" -> 19734, "mei" -> 
                    19735, "wraps" -> 19736, "##aba" -> 19737, "injected" -> 
                    19738, "##lea" -> 19739, "gu" -> 19740, "syed" -> 19741, 
                    "harmless" -> 19742, "##hammer" -> 19743, "bray" -> 19744,
                     "takeoff" -> 19745, "poppy" -> 19746, "timor" -> 19747, 
                    "cardboard" -> 19748, "astronaut" -> 19749, "purdue" -> 
                    19750, "weeping" -> 19751, "southbound" -> 19752, 
                    "cursing" -> 19753, "stalls" -> 19754, "diagonal" -> 
                    19755, "##neer" -> 19756, "lamar" -> 19757, "bryce" -> 
                    19758, "comte" -> 19759, "weekdays" -> 19760, 
                    "harrington" -> 19761, "##uba" -> 19762, "negatively" -> 
                    19763, "##see" -> 19764, "lays" -> 19765, "grouping" -> 
                    19766, "##cken" -> 19767, "##henko" -> 19768, "affirmed" -> 
                    19769, "halle" -> 19770, "modernist" -> 19771, "##lai" -> 
                    19772, "hodges" -> 19773, "smelling" -> 19774, 
                    "aristocratic" -> 19775, "baptized" -> 19776, "dismiss" -> 
                    19777, "justification" -> 19778, "oilers" -> 19779, 
                    "##now" -> 19780, "coupling" -> 19781, "qin" -> 19782, 
                    "snack" -> 19783, "healer" -> 19784, "##qing" -> 19785, 
                    "gardener" -> 19786, "layla" -> 19787, "battled" -> 19788,
                     "formulated" -> 19789, "stephenson" -> 19790, 
                    "gravitational" -> 19791, "##gill" -> 19792, "##jun" -> 
                    19793, "1768" -> 19794, "granny" -> 19795, "coordinating" -> 
                    19796, "suites" -> 19797, "##cd" -> 19798, "##ioned" -> 
                    19799, "monarchs" -> 19800, "##cote" -> 19801, "##hips" -> 
                    19802, "sep" -> 19803, "blended" -> 19804, "apr" -> 19805,
                     "barrister" -> 19806, "deposition" -> 19807, "fia" -> 
                    19808, "mina" -> 19809, "policemen" -> 19810, "paranoid" -> 
                    19811, "##pressed" -> 19812, "churchyard" -> 19813, 
                    "covert" -> 19814, "crumpled" -> 19815, "creep" -> 19816, 
                    "abandoning" -> 19817, "tr" -> 19818, "transmit" -> 19819,
                     "conceal" -> 19820, "barr" -> 19821, "understands" -> 
                    19822, "readiness" -> 19823, "spire" -> 19824, "##cology" -> 
                    19825, "##enia" -> 19826, "##erry" -> 19827, "610" -> 
                    19828, "startling" -> 19829, "unlock" -> 19830, "vida" -> 
                    19831, "bowled" -> 19832, "slots" -> 19833, "##nat" -> 
                    19834, "##islav" -> 19835, "spaced" -> 19836, "trusting" -> 
                    19837, "admire" -> 19838, "rig" -> 19839, "##ink" -> 
                    19840, "slack" -> 19841, "##70" -> 19842, "mv" -> 19843, 
                    "207" -> 19844, "casualty" -> 19845, "##wei" -> 19846, 
                    "classmates" -> 19847, "##odes" -> 19848, "##rar" -> 
                    19849, "##rked" -> 19850, "amherst" -> 19851, "furnished" -> 
                    19852, "evolve" -> 19853, "foundry" -> 19854, "menace" -> 
                    19855, "mead" -> 19856, "##lein" -> 19857, "flu" -> 19858,
                     "wesleyan" -> 19859, "##kled" -> 19860, "monterey" -> 
                    19861, "webber" -> 19862, "##vos" -> 19863, "wil" -> 
                    19864, "##mith" -> 19865, "##\:043d\:0430" -> 19866, 
                    "bartholomew" -> 19867, "justices" -> 19868, "restrained" -> 
                    19869, "##cke" -> 19870, "amenities" -> 19871, "191" -> 
                    19872, "mediated" -> 19873, "sewage" -> 19874, "trenches" -> 
                    19875, "ml" -> 19876, "mainz" -> 19877, "##thus" -> 19878,
                     "1800s" -> 19879, "##cula" -> 19880, "##inski" -> 19881, 
                    "caine" -> 19882, "bonding" -> 19883, "213" -> 19884, 
                    "converts" -> 19885, "spheres" -> 19886, "superseded" -> 
                    19887, "marianne" -> 19888, "crypt" -> 19889, "sweaty" -> 
                    19890, "ensign" -> 19891, "historia" -> 19892, "##br" -> 
                    19893, "spruce" -> 19894, "##post" -> 19895, "##ask" -> 
                    19896, "forks" -> 19897, "thoughtfully" -> 19898, "yukon" -> 
                    19899, "pamphlet" -> 19900, "ames" -> 19901, "##uter" -> 
                    19902, "karma" -> 19903, "##yya" -> 19904, "bryn" -> 
                    19905, "negotiation" -> 19906, "sighs" -> 19907, 
                    "incapable" -> 19908, "##mbre" -> 19909, "##ntial" -> 
                    19910, "actresses" -> 19911, "taft" -> 19912, "##mill" -> 
                    19913, "luce" -> 19914, "prevailed" -> 19915, "##amine" -> 
                    19916, "1773" -> 19917, "motionless" -> 19918, "envoy" -> 
                    19919, "testify" -> 19920, "investing" -> 19921, 
                    "sculpted" -> 19922, "instructors" -> 19923, "provence" -> 
                    19924, "kali" -> 19925, "cullen" -> 19926, "horseback" -> 
                    19927, "##while" -> 19928, "goodwin" -> 19929, "##jos" -> 
                    19930, "gaa" -> 19931, "norte" -> 19932, "##ldon" -> 
                    19933, "modify" -> 19934, "wavelength" -> 19935, "abd" -> 
                    19936, "214" -> 19937, "skinned" -> 19938, "sprinter" -> 
                    19939, "forecast" -> 19940, "scheduling" -> 19941, 
                    "marries" -> 19942, "squared" -> 19943, "tentative" -> 
                    19944, "##chman" -> 19945, "boer" -> 19946, "##isch" -> 
                    19947, "bolts" -> 19948, "swap" -> 19949, "fisherman" -> 
                    19950, "assyrian" -> 19951, "impatiently" -> 19952, 
                    "guthrie" -> 19953, "martins" -> 19954, "murdoch" -> 
                    19955, "194" -> 19956, "tanya" -> 19957, "nicely" -> 
                    19958, "dolly" -> 19959, "lacy" -> 19960, "med" -> 19961, 
                    "##45" -> 19962, "syn" -> 19963, "decks" -> 19964, 
                    "fashionable" -> 19965, "millionaire" -> 19966, "##ust" -> 
                    19967, "surfing" -> 19968, "##ml" -> 19969, "##ision" -> 
                    19970, "heaved" -> 19971, "tammy" -> 19972, "consulate" -> 
                    19973, "attendees" -> 19974, "routinely" -> 19975, "197" -> 
                    19976, "fuse" -> 19977, "saxophonist" -> 19978, 
                    "backseat" -> 19979, "malaya" -> 19980, "##lord" -> 19981,
                     "scowl" -> 19982, "tau" -> 19983, "##ishly" -> 19984, 
                    "193" -> 19985, "sighted" -> 19986, "steaming" -> 19987, 
                    "##rks" -> 19988, "303" -> 19989, "911" -> 19990, 
                    "##holes" -> 19991, "##hong" -> 19992, "ching" -> 19993, 
                    "##wife" -> 19994, "bless" -> 19995, "conserved" -> 19996,
                     "jurassic" -> 19997, "stacey" -> 19998, "unix" -> 19999, 
                    "zion" -> 20000, "chunk" -> 20001, "rigorous" -> 20002, 
                    "blaine" -> 20003, "198" -> 20004, "peabody" -> 20005, 
                    "slayer" -> 20006, "dismay" -> 20007, "brewers" -> 20008, 
                    "nz" -> 20009, "##jer" -> 20010, "det" -> 20011, "##glia" -> 
                    20012, "glover" -> 20013, "postwar" -> 20014, "int" -> 
                    20015, "penetration" -> 20016, "sylvester" -> 20017, 
                    "imitation" -> 20018, "vertically" -> 20019, "airlift" -> 
                    20020, "heiress" -> 20021, "knoxville" -> 20022, "viva" -> 
                    20023, "##uin" -> 20024, "390" -> 20025, "macon" -> 20026,
                     "##rim" -> 20027, "##fighter" -> 20028, "##gonal" -> 
                    20029, "janice" -> 20030, "##orescence" -> 20031, 
                    "##wari" -> 20032, "marius" -> 20033, "belongings" -> 
                    20034, "leicestershire" -> 20035, "196" -> 20036, 
                    "blanco" -> 20037, "inverted" -> 20038, "preseason" -> 
                    20039, "sanity" -> 20040, "sobbing" -> 20041, "##due" -> 
                    20042, "##elt" -> 20043, "##dled" -> 20044, "collingwood" -> 
                    20045, "regeneration" -> 20046, "flickering" -> 20047, 
                    "shortest" -> 20048, "##mount" -> 20049, "##osi" -> 20050,
                     "feminism" -> 20051, "##lat" -> 20052, "sherlock" -> 
                    20053, "cabinets" -> 20054, "fumbled" -> 20055, 
                    "northbound" -> 20056, "precedent" -> 20057, "snaps" -> 
                    20058, "##mme" -> 20059, "researching" -> 20060, "##akes" -> 
                    20061, "guillaume" -> 20062, "insights" -> 20063, 
                    "manipulated" -> 20064, "vapor" -> 20065, "neighbour" -> 
                    20066, "sap" -> 20067, "gangster" -> 20068, "frey" -> 
                    20069, "f1" -> 20070, "stalking" -> 20071, "scarcely" -> 
                    20072, "callie" -> 20073, "barnett" -> 20074, 
                    "tendencies" -> 20075, "audi" -> 20076, "doomed" -> 20077,
                     "assessing" -> 20078, "slung" -> 20079, "panchayat" -> 
                    20080, "ambiguous" -> 20081, "bartlett" -> 20082, 
                    "##etto" -> 20083, "distributing" -> 20084, "violating" -> 
                    20085, "wolverhampton" -> 20086, "##hetic" -> 20087, 
                    "swami" -> 20088, "histoire" -> 20089, "##urus" -> 20090, 
                    "liable" -> 20091, "pounder" -> 20092, "groin" -> 20093, 
                    "hussain" -> 20094, "larsen" -> 20095, "popping" -> 20096,
                     "surprises" -> 20097, "##atter" -> 20098, "vie" -> 20099,
                     "curt" -> 20100, "##station" -> 20101, "mute" -> 20102, 
                    "relocate" -> 20103, "musicals" -> 20104, "authorization" -> 
                    20105, "richter" -> 20106, "##sef" -> 20107, 
                    "immortality" -> 20108, "tna" -> 20109, "bombings" -> 
                    20110, "##press" -> 20111, "deteriorated" -> 20112, 
                    "yiddish" -> 20113, "##acious" -> 20114, "robbed" -> 
                    20115, "colchester" -> 20116, "cs" -> 20117, "pmid" -> 
                    20118, "ao" -> 20119, "verified" -> 20120, "balancing" -> 
                    20121, "apostle" -> 20122, "swayed" -> 20123, 
                    "recognizable" -> 20124, "oxfordshire" -> 20125, 
                    "retention" -> 20126, "nottinghamshire" -> 20127, 
                    "contender" -> 20128, "judd" -> 20129, "invitational" -> 
                    20130, "shrimp" -> 20131, "uhf" -> 20132, "##icient" -> 
                    20133, "cleaner" -> 20134, "longitudinal" -> 20135, 
                    "tanker" -> 20136, "##mur" -> 20137, "acronym" -> 20138, 
                    "broker" -> 20139, "koppen" -> 20140, "sundance" -> 20141,
                     "suppliers" -> 20142, "##gil" -> 20143, "4000" -> 20144, 
                    "clipped" -> 20145, "fuels" -> 20146, "petite" -> 20147, 
                    "##anne" -> 20148, "landslide" -> 20149, "helene" -> 
                    20150, "diversion" -> 20151, "populous" -> 20152, 
                    "landowners" -> 20153, "auspices" -> 20154, "melville" -> 
                    20155, "quantitative" -> 20156, "##xes" -> 20157, 
                    "ferries" -> 20158, "nicky" -> 20159, "##llus" -> 20160, 
                    "doo" -> 20161, "haunting" -> 20162, "roche" -> 20163, 
                    "carver" -> 20164, "downed" -> 20165, "unavailable" -> 
                    20166, "##pathy" -> 20167, "approximation" -> 20168, 
                    "hiroshima" -> 20169, "##hue" -> 20170, "garfield" -> 
                    20171, "valle" -> 20172, "comparatively" -> 20173, 
                    "keyboardist" -> 20174, "traveler" -> 20175, "##eit" -> 
                    20176, "congestion" -> 20177, "calculating" -> 20178, 
                    "subsidiaries" -> 20179, "##bate" -> 20180, "serb" -> 
                    20181, "modernization" -> 20182, "fairies" -> 20183, 
                    "deepened" -> 20184, "ville" -> 20185, "averages" -> 
                    20186, "##lore" -> 20187, "inflammatory" -> 20188, 
                    "tonga" -> 20189, "##itch" -> 20190, "co\:2082" -> 20191, 
                    "squads" -> 20192, "##hea" -> 20193, "gigantic" -> 20194, 
                    "serum" -> 20195, "enjoyment" -> 20196, "retailer" -> 
                    20197, "verona" -> 20198, "35th" -> 20199, "cis" -> 20200,
                     "##phobic" -> 20201, "magna" -> 20202, "technicians" -> 
                    20203, "##vati" -> 20204, "arithmetic" -> 20205, 
                    "##sport" -> 20206, "levin" -> 20207, "##dation" -> 20208,
                     "amtrak" -> 20209, "chow" -> 20210, "sienna" -> 20211, 
                    "##eyer" -> 20212, "backstage" -> 20213, 
                    "entrepreneurship" -> 20214, "##otic" -> 20215, "learnt" -> 
                    20216, "tao" -> 20217, "##udy" -> 20218, "worcestershire" -> 
                    20219, "formulation" -> 20220, "baggage" -> 20221, 
                    "hesitant" -> 20222, "bali" -> 20223, "sabotage" -> 20224,
                     "##kari" -> 20225, "barren" -> 20226, "enhancing" -> 
                    20227, "murmur" -> 20228, "pl" -> 20229, "freshly" -> 
                    20230, "putnam" -> 20231, "syntax" -> 20232, "aces" -> 
                    20233, "medicines" -> 20234, "resentment" -> 20235, 
                    "bandwidth" -> 20236, "##sier" -> 20237, "grins" -> 20238,
                     "chili" -> 20239, "guido" -> 20240, "##sei" -> 20241, 
                    "framing" -> 20242, "implying" -> 20243, "gareth" -> 
                    20244, "lissa" -> 20245, "genevieve" -> 20246, 
                    "pertaining" -> 20247, "admissions" -> 20248, "geo" -> 
                    20249, "thorpe" -> 20250, "proliferation" -> 20251, 
                    "sato" -> 20252, "bela" -> 20253, "analyzing" -> 20254, 
                    "parting" -> 20255, "##gor" -> 20256, "awakened" -> 20257,
                     "##isman" -> 20258, "huddled" -> 20259, "secrecy" -> 
                    20260, "##kling" -> 20261, "hush" -> 20262, "gentry" -> 
                    20263, "540" -> 20264, "dungeons" -> 20265, "##ego" -> 
                    20266, "coasts" -> 20267, "##utz" -> 20268, "sacrificed" -> 
                    20269, "##chule" -> 20270, "landowner" -> 20271, 
                    "mutually" -> 20272, "prevalence" -> 20273, "programmer" -> 
                    20274, "adolescent" -> 20275, "disrupted" -> 20276, 
                    "seaside" -> 20277, "gee" -> 20278, "trusts" -> 20279, 
                    "vamp" -> 20280, "georgie" -> 20281, "##nesian" -> 20282, 
                    "##iol" -> 20283, "schedules" -> 20284, "sindh" -> 20285, 
                    "##market" -> 20286, "etched" -> 20287, "hm" -> 20288, 
                    "sparse" -> 20289, "bey" -> 20290, "beaux" -> 20291, 
                    "scratching" -> 20292, "gliding" -> 20293, "unidentified" -> 
                    20294, "216" -> 20295, "collaborating" -> 20296, "gems" -> 
                    20297, "jesuits" -> 20298, "oro" -> 20299, "accumulation" -> 
                    20300, "shaping" -> 20301, "mbe" -> 20302, "anal" -> 
                    20303, "##xin" -> 20304, "231" -> 20305, "enthusiasts" -> 
                    20306, "newscast" -> 20307, "##egan" -> 20308, "janata" -> 
                    20309, "dewey" -> 20310, "parkinson" -> 20311, "179" -> 
                    20312, "ankara" -> 20313, "biennial" -> 20314, "towering" -> 
                    20315, "dd" -> 20316, "inconsistent" -> 20317, "950" -> 
                    20318, "##chet" -> 20319, "thriving" -> 20320, 
                    "terminate" -> 20321, "cabins" -> 20322, "furiously" -> 
                    20323, "eats" -> 20324, "advocating" -> 20325, "donkey" -> 
                    20326, "marley" -> 20327, "muster" -> 20328, "phyllis" -> 
                    20329, "leiden" -> 20330, "##user" -> 20331, "grassland" -> 
                    20332, "glittering" -> 20333, "iucn" -> 20334, 
                    "loneliness" -> 20335, "217" -> 20336, "memorandum" -> 
                    20337, "armenians" -> 20338, "##ddle" -> 20339, 
                    "popularized" -> 20340, "rhodesia" -> 20341, "60s" -> 
                    20342, "lame" -> 20343, "##illon" -> 20344, "sans" -> 
                    20345, "bikini" -> 20346, "header" -> 20347, "orbits" -> 
                    20348, "##xx" -> 20349, "##finger" -> 20350, "##ulator" -> 
                    20351, "sharif" -> 20352, "spines" -> 20353, 
                    "biotechnology" -> 20354, "strolled" -> 20355, "naughty" -> 
                    20356, "yates" -> 20357, "##wire" -> 20358, "fremantle" -> 
                    20359, "milo" -> 20360, "##mour" -> 20361, "abducted" -> 
                    20362, "removes" -> 20363, "##atin" -> 20364, "humming" -> 
                    20365, "wonderland" -> 20366, "##chrome" -> 20367, 
                    "##ester" -> 20368, "hume" -> 20369, "pivotal" -> 20370, 
                    "##rates" -> 20371, "armand" -> 20372, "grams" -> 20373, 
                    "believers" -> 20374, "elector" -> 20375, "rte" -> 20376, 
                    "apron" -> 20377, "bis" -> 20378, "scraped" -> 20379, 
                    "##yria" -> 20380, "endorsement" -> 20381, "initials" -> 
                    20382, "##llation" -> 20383, "eps" -> 20384, "dotted" -> 
                    20385, "hints" -> 20386, "buzzing" -> 20387, "emigration" -> 
                    20388, "nearer" -> 20389, "##tom" -> 20390, "indicators" -> 
                    20391, "##ulu" -> 20392, "coarse" -> 20393, "neutron" -> 
                    20394, "protectorate" -> 20395, "##uze" -> 20396, 
                    "directional" -> 20397, "exploits" -> 20398, "pains" -> 
                    20399, "loire" -> 20400, "1830s" -> 20401, "proponents" -> 
                    20402, "guggenheim" -> 20403, "rabbits" -> 20404, 
                    "ritchie" -> 20405, "305" -> 20406, "hectare" -> 20407, 
                    "inputs" -> 20408, "hutton" -> 20409, "##raz" -> 20410, 
                    "verify" -> 20411, "##ako" -> 20412, "boilers" -> 20413, 
                    "longitude" -> 20414, "##lev" -> 20415, "skeletal" -> 
                    20416, "yer" -> 20417, "emilia" -> 20418, "citrus" -> 
                    20419, "compromised" -> 20420, "##gau" -> 20421, 
                    "pokemon" -> 20422, "prescription" -> 20423, "paragraph" -> 
                    20424, "eduard" -> 20425, "cadillac" -> 20426, "attire" -> 
                    20427, "categorized" -> 20428, "kenyan" -> 20429, 
                    "weddings" -> 20430, "charley" -> 20431, "##bourg" -> 
                    20432, "entertain" -> 20433, "monmouth" -> 20434, 
                    "##lles" -> 20435, "nutrients" -> 20436, "davey" -> 20437,
                     "mesh" -> 20438, "incentive" -> 20439, "practised" -> 
                    20440, "ecosystems" -> 20441, "kemp" -> 20442, "subdued" -> 
                    20443, "overheard" -> 20444, "##rya" -> 20445, "bodily" -> 
                    20446, "maxim" -> 20447, "##nius" -> 20448, 
                    "apprenticeship" -> 20449, "ursula" -> 20450, "##fight" -> 
                    20451, "lodged" -> 20452, "rug" -> 20453, "silesian" -> 
                    20454, "unconstitutional" -> 20455, "patel" -> 20456, 
                    "inspected" -> 20457, "coyote" -> 20458, "unbeaten" -> 
                    20459, "##hak" -> 20460, "34th" -> 20461, "disruption" -> 
                    20462, "convict" -> 20463, "parcel" -> 20464, "##cl" -> 
                    20465, "##nham" -> 20466, "collier" -> 20467, 
                    "implicated" -> 20468, "mallory" -> 20469, "##iac" -> 
                    20470, "##lab" -> 20471, "susannah" -> 20472, "winkler" -> 
                    20473, "##rber" -> 20474, "shia" -> 20475, "phelps" -> 
                    20476, "sediments" -> 20477, "graphical" -> 20478, 
                    "robotic" -> 20479, "##sner" -> 20480, "adulthood" -> 
                    20481, "mart" -> 20482, "smoked" -> 20483, "##isto" -> 
                    20484, "kathryn" -> 20485, "clarified" -> 20486, "##aran" -> 
                    20487, "divides" -> 20488, "convictions" -> 20489, 
                    "oppression" -> 20490, "pausing" -> 20491, "burying" -> 
                    20492, "##mt" -> 20493, "federico" -> 20494, "mathias" -> 
                    20495, "eileen" -> 20496, "##tana" -> 20497, "kite" -> 
                    20498, "hunched" -> 20499, "##acies" -> 20500, "189" -> 
                    20501, "##atz" -> 20502, "disadvantage" -> 20503, "liza" -> 
                    20504, "kinetic" -> 20505, "greedy" -> 20506, "paradox" -> 
                    20507, "yokohama" -> 20508, "dowager" -> 20509, "trunks" -> 
                    20510, "ventured" -> 20511, "##gement" -> 20512, "gupta" -> 
                    20513, "vilnius" -> 20514, "olaf" -> 20515, "##thest" -> 
                    20516, "crimean" -> 20517, "hopper" -> 20518, "##ej" -> 
                    20519, "progressively" -> 20520, "arturo" -> 20521, 
                    "mouthed" -> 20522, "arrondissement" -> 20523, "##fusion" -> 
                    20524, "rubin" -> 20525, "simulcast" -> 20526, "oceania" -> 
                    20527, "##orum" -> 20528, "##stra" -> 20529, "##rred" -> 
                    20530, "busiest" -> 20531, "intensely" -> 20532, 
                    "navigator" -> 20533, "cary" -> 20534, "##vine" -> 20535, 
                    "##hini" -> 20536, "##bies" -> 20537, "fife" -> 20538, 
                    "rowe" -> 20539, "rowland" -> 20540, "posing" -> 20541, 
                    "insurgents" -> 20542, "shafts" -> 20543, "lawsuits" -> 
                    20544, "activate" -> 20545, "conor" -> 20546, "inward" -> 
                    20547, "culturally" -> 20548, "garlic" -> 20549, "265" -> 
                    20550, "##eering" -> 20551, "eclectic" -> 20552, "##hui" -> 
                    20553, "##kee" -> 20554, "##nl" -> 20555, "furrowed" -> 
                    20556, "vargas" -> 20557, "meteorological" -> 20558, 
                    "rendezvous" -> 20559, "##aus" -> 20560, "culinary" -> 
                    20561, "commencement" -> 20562, "##dition" -> 20563, 
                    "quota" -> 20564, "##notes" -> 20565, "mommy" -> 20566, 
                    "salaries" -> 20567, "overlapping" -> 20568, "mule" -> 
                    20569, "##iology" -> 20570, "##mology" -> 20571, "sums" -> 
                    20572, "wentworth" -> 20573, "##isk" -> 20574, "##zione" -> 
                    20575, "mainline" -> 20576, "subgroup" -> 20577, "##illy" -> 
                    20578, "hack" -> 20579, "plaintiff" -> 20580, "verdi" -> 
                    20581, "bulb" -> 20582, "differentiation" -> 20583, 
                    "engagements" -> 20584, "multinational" -> 20585, 
                    "supplemented" -> 20586, "bertrand" -> 20587, "caller" -> 
                    20588, "regis" -> 20589, "##naire" -> 20590, "##sler" -> 
                    20591, "##arts" -> 20592, "##imated" -> 20593, "blossom" -> 
                    20594, "propagation" -> 20595, "kilometer" -> 20596, 
                    "viaduct" -> 20597, "vineyards" -> 20598, "##uate" -> 
                    20599, "beckett" -> 20600, "optimization" -> 20601, 
                    "golfer" -> 20602, "songwriters" -> 20603, "seminal" -> 
                    20604, "semitic" -> 20605, "thud" -> 20606, "volatile" -> 
                    20607, "evolving" -> 20608, "ridley" -> 20609, "##wley" -> 
                    20610, "trivial" -> 20611, "distributions" -> 20612, 
                    "scandinavia" -> 20613, "jiang" -> 20614, "##ject" -> 
                    20615, "wrestled" -> 20616, "insistence" -> 20617, 
                    "##dio" -> 20618, "emphasizes" -> 20619, "napkin" -> 
                    20620, "##ods" -> 20621, "adjunct" -> 20622, "rhyme" -> 
                    20623, "##ricted" -> 20624, "##eti" -> 20625, "hopeless" -> 
                    20626, "surrounds" -> 20627, "tremble" -> 20628, "32nd" -> 
                    20629, "smoky" -> 20630, "##ntly" -> 20631, "oils" -> 
                    20632, "medicinal" -> 20633, "padded" -> 20634, "steer" -> 
                    20635, "wilkes" -> 20636, "219" -> 20637, "255" -> 20638, 
                    "concessions" -> 20639, "hue" -> 20640, "uniquely" -> 
                    20641, "blinded" -> 20642, "landon" -> 20643, "yahoo" -> 
                    20644, "##lane" -> 20645, "hendrix" -> 20646, 
                    "commemorating" -> 20647, "dex" -> 20648, "specify" -> 
                    20649, "chicks" -> 20650, "##ggio" -> 20651, "intercity" -> 
                    20652, "1400" -> 20653, "morley" -> 20654, "##torm" -> 
                    20655, "highlighting" -> 20656, "##oting" -> 20657, 
                    "pang" -> 20658, "oblique" -> 20659, "stalled" -> 20660, 
                    "##liner" -> 20661, "flirting" -> 20662, "newborn" -> 
                    20663, "1769" -> 20664, "bishopric" -> 20665, "shaved" -> 
                    20666, "232" -> 20667, "currie" -> 20668, "##ush" -> 
                    20669, "dharma" -> 20670, "spartan" -> 20671, "##ooped" -> 
                    20672, "favorites" -> 20673, "smug" -> 20674, "novella" -> 
                    20675, "sirens" -> 20676, "abusive" -> 20677, "creations" -> 
                    20678, "espana" -> 20679, "##lage" -> 20680, "paradigm" -> 
                    20681, "semiconductor" -> 20682, "sheen" -> 20683, 
                    "##rdo" -> 20684, "##yen" -> 20685, "##zak" -> 20686, 
                    "nrl" -> 20687, "renew" -> 20688, "##pose" -> 20689, 
                    "##tur" -> 20690, "adjutant" -> 20691, "marches" -> 20692,
                     "norma" -> 20693, "##enity" -> 20694, "ineffective" -> 
                    20695, "weimar" -> 20696, "grunt" -> 20697, "##gat" -> 
                    20698, "lordship" -> 20699, "plotting" -> 20700, 
                    "expenditure" -> 20701, "infringement" -> 20702, "lbs" -> 
                    20703, "refrain" -> 20704, "av" -> 20705, "mimi" -> 20706,
                     "mistakenly" -> 20707, "postmaster" -> 20708, "1771" -> 
                    20709, "##bara" -> 20710, "ras" -> 20711, "motorsports" -> 
                    20712, "tito" -> 20713, "199" -> 20714, "subjective" -> 
                    20715, "##zza" -> 20716, "bully" -> 20717, "stew" -> 
                    20718, "##kaya" -> 20719, "prescott" -> 20720, "1a" -> 
                    20721, "##raphic" -> 20722, "##zam" -> 20723, "bids" -> 
                    20724, "styling" -> 20725, "paranormal" -> 20726, "reeve" -> 
                    20727, "sneaking" -> 20728, "exploding" -> 20729, "katz" -> 
                    20730, "akbar" -> 20731, "migrant" -> 20732, "syllables" -> 
                    20733, "indefinitely" -> 20734, "##ogical" -> 20735, 
                    "destroys" -> 20736, "replaces" -> 20737, "applause" -> 
                    20738, "##phine" -> 20739, "pest" -> 20740, "##fide" -> 
                    20741, "218" -> 20742, "articulated" -> 20743, "bertie" -> 
                    20744, "##thing" -> 20745, "##cars" -> 20746, "##ptic" -> 
                    20747, "courtroom" -> 20748, "crowley" -> 20749, 
                    "aesthetics" -> 20750, "cummings" -> 20751, "tehsil" -> 
                    20752, "hormones" -> 20753, "titanic" -> 20754, 
                    "dangerously" -> 20755, "##ibe" -> 20756, "stadion" -> 
                    20757, "jaenelle" -> 20758, "auguste" -> 20759, "ciudad" -> 
                    20760, "##chu" -> 20761, "mysore" -> 20762, "partisans" -> 
                    20763, "##sio" -> 20764, "lucan" -> 20765, "philipp" -> 
                    20766, "##aly" -> 20767, "debating" -> 20768, "henley" -> 
                    20769, "interiors" -> 20770, "##rano" -> 20771, "##tious" -> 
                    20772, "homecoming" -> 20773, "beyonce" -> 20774, "usher" -> 
                    20775, "henrietta" -> 20776, "prepares" -> 20777, "weeds" -> 
                    20778, "##oman" -> 20779, "ely" -> 20780, "plucked" -> 
                    20781, "##pire" -> 20782, "##dable" -> 20783, "luxurious" -> 
                    20784, "##aq" -> 20785, "artifact" -> 20786, "password" -> 
                    20787, "pasture" -> 20788, "juno" -> 20789, "maddy" -> 
                    20790, "minsk" -> 20791, "##dder" -> 20792, "##ologies" -> 
                    20793, "##rone" -> 20794, "assessments" -> 20795, 
                    "martian" -> 20796, "royalist" -> 20797, "1765" -> 20798, 
                    "examines" -> 20799, "##mani" -> 20800, "##rge" -> 20801, 
                    "nino" -> 20802, "223" -> 20803, "parry" -> 20804, 
                    "scooped" -> 20805, "relativity" -> 20806, "##eli" -> 
                    20807, "##uting" -> 20808, "##cao" -> 20809, 
                    "congregational" -> 20810, "noisy" -> 20811, "traverse" -> 
                    20812, "##agawa" -> 20813, "strikeouts" -> 20814, 
                    "nickelodeon" -> 20815, "obituary" -> 20816, 
                    "transylvania" -> 20817, "binds" -> 20818, "depictions" -> 
                    20819, "polk" -> 20820, "trolley" -> 20821, "##yed" -> 
                    20822, "##lard" -> 20823, "breeders" -> 20824, "##under" -> 
                    20825, "dryly" -> 20826, "hokkaido" -> 20827, "1762" -> 
                    20828, "strengths" -> 20829, "stacks" -> 20830, 
                    "bonaparte" -> 20831, "connectivity" -> 20832, "neared" -> 
                    20833, "prostitutes" -> 20834, "stamped" -> 20835, 
                    "anaheim" -> 20836, "gutierrez" -> 20837, "sinai" -> 
                    20838, "##zzling" -> 20839, "bram" -> 20840, "fresno" -> 
                    20841, "madhya" -> 20842, "##86" -> 20843, "proton" -> 
                    20844, "##lena" -> 20845, "##llum" -> 20846, "##phon" -> 
                    20847, "reelected" -> 20848, "wanda" -> 20849, "##anus" -> 
                    20850, "##lb" -> 20851, "ample" -> 20852, 
                    "distinguishing" -> 20853, "##yler" -> 20854, "grasping" -> 
                    20855, "sermons" -> 20856, "tomato" -> 20857, "bland" -> 
                    20858, "stimulation" -> 20859, "avenues" -> 20860, 
                    "##eux" -> 20861, "spreads" -> 20862, "scarlett" -> 20863,
                     "fern" -> 20864, "pentagon" -> 20865, "assert" -> 20866, 
                    "baird" -> 20867, "chesapeake" -> 20868, "ir" -> 20869, 
                    "calmed" -> 20870, "distortion" -> 20871, "fatalities" -> 
                    20872, "##olis" -> 20873, "correctional" -> 20874, 
                    "pricing" -> 20875, "##astic" -> 20876, "##gina" -> 20877,
                     "prom" -> 20878, "dammit" -> 20879, "ying" -> 20880, 
                    "collaborate" -> 20881, "##chia" -> 20882, "welterweight" -> 
                    20883, "33rd" -> 20884, "pointer" -> 20885, 
                    "substitution" -> 20886, "bonded" -> 20887, "umpire" -> 
                    20888, "communicating" -> 20889, "multitude" -> 20890, 
                    "paddle" -> 20891, "##obe" -> 20892, "federally" -> 20893,
                     "intimacy" -> 20894, "##insky" -> 20895, "betray" -> 
                    20896, "ssr" -> 20897, "##lett" -> 20898, "##lean" -> 
                    20899, "##lves" -> 20900, "##therapy" -> 20901, "airbus" -> 
                    20902, "##tery" -> 20903, "functioned" -> 20904, "ud" -> 
                    20905, "bearer" -> 20906, "biomedical" -> 20907, 
                    "netflix" -> 20908, "##hire" -> 20909, "##nca" -> 20910, 
                    "condom" -> 20911, "brink" -> 20912, "ik" -> 20913, 
                    "##nical" -> 20914, "macy" -> 20915, "##bet" -> 20916, 
                    "flap" -> 20917, "gma" -> 20918, "experimented" -> 20919, 
                    "jelly" -> 20920, "lavender" -> 20921, "##icles" -> 20922,
                     "##ulia" -> 20923, "munro" -> 20924, "##mian" -> 20925, 
                    "##tial" -> 20926, "rye" -> 20927, "##rle" -> 20928, 
                    "60th" -> 20929, "gigs" -> 20930, "hottest" -> 20931, 
                    "rotated" -> 20932, "predictions" -> 20933, "fuji" -> 
                    20934, "bu" -> 20935, "##erence" -> 20936, "##omi" -> 
                    20937, "barangay" -> 20938, "##fulness" -> 20939, "##sas" -> 
                    20940, "clocks" -> 20941, "##rwood" -> 20942, "##liness" -> 
                    20943, "cereal" -> 20944, "roe" -> 20945, "wight" -> 
                    20946, "decker" -> 20947, "uttered" -> 20948, "babu" -> 
                    20949, "onion" -> 20950, "xml" -> 20951, "forcibly" -> 
                    20952, "##df" -> 20953, "petra" -> 20954, "sarcasm" -> 
                    20955, "hartley" -> 20956, "peeled" -> 20957, 
                    "storytelling" -> 20958, "##42" -> 20959, "##xley" -> 
                    20960, "##ysis" -> 20961, "##ffa" -> 20962, "fibre" -> 
                    20963, "kiel" -> 20964, "auditor" -> 20965, "fig" -> 
                    20966, "harald" -> 20967, "greenville" -> 20968, 
                    "##berries" -> 20969, "geographically" -> 20970, "nell" -> 
                    20971, "quartz" -> 20972, "##athic" -> 20973, 
                    "cemeteries" -> 20974, "##lr" -> 20975, "crossings" -> 
                    20976, "nah" -> 20977, "holloway" -> 20978, "reptiles" -> 
                    20979, "chun" -> 20980, "sichuan" -> 20981, "snowy" -> 
                    20982, "660" -> 20983, "corrections" -> 20984, "##ivo" -> 
                    20985, "zheng" -> 20986, "ambassadors" -> 20987, 
                    "blacksmith" -> 20988, "fielded" -> 20989, "fluids" -> 
                    20990, "hardcover" -> 20991, "turnover" -> 20992, 
                    "medications" -> 20993, "melvin" -> 20994, "academies" -> 
                    20995, "##erton" -> 20996, "ro" -> 20997, "roach" -> 
                    20998, "absorbing" -> 20999, "spaniards" -> 21000, 
                    "colton" -> 21001, "##founded" -> 21002, "outsider" -> 
                    21003, "espionage" -> 21004, "kelsey" -> 21005, "245" -> 
                    21006, "edible" -> 21007, "##ulf" -> 21008, "dora" -> 
                    21009, "establishes" -> 21010, "##sham" -> 21011, 
                    "##tries" -> 21012, "contracting" -> 21013, "##tania" -> 
                    21014, "cinematic" -> 21015, "costello" -> 21016, 
                    "nesting" -> 21017, "##uron" -> 21018, "connolly" -> 
                    21019, "duff" -> 21020, "##nology" -> 21021, "mma" -> 
                    21022, "##mata" -> 21023, "fergus" -> 21024, "sexes" -> 
                    21025, "gi" -> 21026, "optics" -> 21027, "spectator" -> 
                    21028, "woodstock" -> 21029, "banning" -> 21030, "##hee" -> 
                    21031, "##fle" -> 21032, "differentiate" -> 21033, 
                    "outfielder" -> 21034, "refinery" -> 21035, "226" -> 
                    21036, "312" -> 21037, "gerhard" -> 21038, "horde" -> 
                    21039, "lair" -> 21040, "drastically" -> 21041, "##udi" -> 
                    21042, "landfall" -> 21043, "##cheng" -> 21044, 
                    "motorsport" -> 21045, "odi" -> 21046, "##achi" -> 21047, 
                    "predominant" -> 21048, "quay" -> 21049, "skins" -> 21050,
                     "##ental" -> 21051, "edna" -> 21052, "harshly" -> 21053, 
                    "complementary" -> 21054, "murdering" -> 21055, "##aves" -> 
                    21056, "wreckage" -> 21057, "##90" -> 21058, "ono" -> 
                    21059, "outstretched" -> 21060, "lennox" -> 21061, 
                    "munitions" -> 21062, "galen" -> 21063, "reconcile" -> 
                    21064, "470" -> 21065, "scalp" -> 21066, "bicycles" -> 
                    21067, "gillespie" -> 21068, "questionable" -> 21069, 
                    "rosenberg" -> 21070, "guillermo" -> 21071, "hostel" -> 
                    21072, "jarvis" -> 21073, "kabul" -> 21074, "volvo" -> 
                    21075, "opium" -> 21076, "yd" -> 21077, "##twined" -> 
                    21078, "abuses" -> 21079, "decca" -> 21080, "outpost" -> 
                    21081, "##cino" -> 21082, "sensible" -> 21083, 
                    "neutrality" -> 21084, "##64" -> 21085, "ponce" -> 21086, 
                    "anchorage" -> 21087, "atkins" -> 21088, "turrets" -> 
                    21089, "inadvertently" -> 21090, "disagree" -> 21091, 
                    "libre" -> 21092, "vodka" -> 21093, "reassuring" -> 21094,
                     "weighs" -> 21095, "##yal" -> 21096, "glide" -> 21097, 
                    "jumper" -> 21098, "ceilings" -> 21099, "repertory" -> 
                    21100, "outs" -> 21101, "stain" -> 21102, "##bial" -> 
                    21103, "envy" -> 21104, "##ucible" -> 21105, "smashing" -> 
                    21106, "heightened" -> 21107, "policing" -> 21108, "hyun" -> 
                    21109, "mixes" -> 21110, "lai" -> 21111, "prima" -> 21112,
                     "##ples" -> 21113, "celeste" -> 21114, "##bina" -> 21115,
                     "lucrative" -> 21116, "intervened" -> 21117, "kc" -> 
                    21118, "manually" -> 21119, "##rned" -> 21120, "stature" -> 
                    21121, "staffed" -> 21122, "bun" -> 21123, "bastards" -> 
                    21124, "nairobi" -> 21125, "priced" -> 21126, "##auer" -> 
                    21127, "thatcher" -> 21128, "##kia" -> 21129, "tripped" -> 
                    21130, "comune" -> 21131, "##ogan" -> 21132, "##pled" -> 
                    21133, "brasil" -> 21134, "incentives" -> 21135, 
                    "emanuel" -> 21136, "hereford" -> 21137, "musica" -> 
                    21138, "##kim" -> 21139, "benedictine" -> 21140, 
                    "biennale" -> 21141, "##lani" -> 21142, "eureka" -> 21143,
                     "gardiner" -> 21144, "rb" -> 21145, "knocks" -> 21146, 
                    "sha" -> 21147, "##ael" -> 21148, "##elled" -> 21149, 
                    "##onate" -> 21150, "efficacy" -> 21151, "ventura" -> 
                    21152, "masonic" -> 21153, "sanford" -> 21154, "maize" -> 
                    21155, "leverage" -> 21156, "##feit" -> 21157, 
                    "capacities" -> 21158, "santana" -> 21159, "##aur" -> 
                    21160, "novelty" -> 21161, "vanilla" -> 21162, "##cter" -> 
                    21163, "##tour" -> 21164, "benin" -> 21165, "##oir" -> 
                    21166, "##rain" -> 21167, "neptune" -> 21168, "drafting" -> 
                    21169, "tallinn" -> 21170, "##cable" -> 21171, 
                    "humiliation" -> 21172, "##boarding" -> 21173, 
                    "schleswig" -> 21174, "fabian" -> 21175, "bernardo" -> 
                    21176, "liturgy" -> 21177, "spectacle" -> 21178, 
                    "sweeney" -> 21179, "pont" -> 21180, "routledge" -> 21181,
                     "##tment" -> 21182, "cosmos" -> 21183, "ut" -> 21184, 
                    "hilt" -> 21185, "sleek" -> 21186, "universally" -> 21187,
                     "##eville" -> 21188, "##gawa" -> 21189, "typed" -> 21190,
                     "##dry" -> 21191, "favors" -> 21192, "allegheny" -> 
                    21193, "glaciers" -> 21194, "##rly" -> 21195, "recalling" -> 
                    21196, "aziz" -> 21197, "##log" -> 21198, "parasite" -> 
                    21199, "requiem" -> 21200, "auf" -> 21201, "##berto" -> 
                    21202, "##llin" -> 21203, "illumination" -> 21204, 
                    "##breaker" -> 21205, "##issa" -> 21206, "festivities" -> 
                    21207, "bows" -> 21208, "govern" -> 21209, "vibe" -> 
                    21210, "vp" -> 21211, "333" -> 21212, "sprawled" -> 21213,
                     "larson" -> 21214, "pilgrim" -> 21215, "bwf" -> 21216, 
                    "leaping" -> 21217, "##rts" -> 21218, "##ssel" -> 21219, 
                    "alexei" -> 21220, "greyhound" -> 21221, "hoarse" -> 
                    21222, "##dler" -> 21223, "##oration" -> 21224, "seneca" -> 
                    21225, "##cule" -> 21226, "gaping" -> 21227, "##ulously" -> 
                    21228, "##pura" -> 21229, "cinnamon" -> 21230, "##gens" -> 
                    21231, "##rricular" -> 21232, "craven" -> 21233, 
                    "fantasies" -> 21234, "houghton" -> 21235, "engined" -> 
                    21236, "reigned" -> 21237, "dictator" -> 21238, 
                    "supervising" -> 21239, "##oris" -> 21240, "bogota" -> 
                    21241, "commentaries" -> 21242, "unnatural" -> 21243, 
                    "fingernails" -> 21244, "spirituality" -> 21245, 
                    "tighten" -> 21246, "##tm" -> 21247, "canadiens" -> 21248,
                     "protesting" -> 21249, "intentional" -> 21250, "cheers" -> 
                    21251, "sparta" -> 21252, "##ytic" -> 21253, "##iere" -> 
                    21254, "##zine" -> 21255, "widen" -> 21256, "belgarath" -> 
                    21257, "controllers" -> 21258, "dodd" -> 21259, "iaaf" -> 
                    21260, "navarre" -> 21261, "##ication" -> 21262, "defect" -> 
                    21263, "squire" -> 21264, "steiner" -> 21265, "whisky" -> 
                    21266, "##mins" -> 21267, "560" -> 21268, "inevitably" -> 
                    21269, "tome" -> 21270, "##gold" -> 21271, "chew" -> 
                    21272, "##uid" -> 21273, "##lid" -> 21274, "elastic" -> 
                    21275, "##aby" -> 21276, "streaked" -> 21277, "alliances" -> 
                    21278, "jailed" -> 21279, "regal" -> 21280, "##ined" -> 
                    21281, "##phy" -> 21282, "czechoslovak" -> 21283, 
                    "narration" -> 21284, "absently" -> 21285, "##uld" -> 
                    21286, "bluegrass" -> 21287, "guangdong" -> 21288, 
                    "quran" -> 21289, "criticizing" -> 21290, "hose" -> 21291,
                     "hari" -> 21292, "##liest" -> 21293, "##owa" -> 21294, 
                    "skier" -> 21295, "streaks" -> 21296, "deploy" -> 21297, 
                    "##lom" -> 21298, "raft" -> 21299, "bose" -> 21300, 
                    "dialed" -> 21301, "huff" -> 21302, "##eira" -> 21303, 
                    "haifa" -> 21304, "simplest" -> 21305, "bursting" -> 
                    21306, "endings" -> 21307, "ib" -> 21308, "sultanate" -> 
                    21309, "##titled" -> 21310, "franks" -> 21311, "whitman" -> 
                    21312, "ensures" -> 21313, "sven" -> 21314, "##ggs" -> 
                    21315, "collaborators" -> 21316, "forster" -> 21317, 
                    "organising" -> 21318, "ui" -> 21319, "banished" -> 21320,
                     "napier" -> 21321, "injustice" -> 21322, "teller" -> 
                    21323, "layered" -> 21324, "thump" -> 21325, "##otti" -> 
                    21326, "roc" -> 21327, "battleships" -> 21328, 
                    "evidenced" -> 21329, "fugitive" -> 21330, "sadie" -> 
                    21331, "robotics" -> 21332, "##roud" -> 21333, 
                    "equatorial" -> 21334, "geologist" -> 21335, "##iza" -> 
                    21336, "yielding" -> 21337, "##bron" -> 21338, "##sr" -> 
                    21339, "internationale" -> 21340, "mecca" -> 21341, 
                    "##diment" -> 21342, "sbs" -> 21343, "skyline" -> 21344, 
                    "toad" -> 21345, "uploaded" -> 21346, "reflective" -> 
                    21347, "undrafted" -> 21348, "lal" -> 21349, "leafs" -> 
                    21350, "bayern" -> 21351, "##dai" -> 21352, "lakshmi" -> 
                    21353, "shortlisted" -> 21354, "##stick" -> 21355, 
                    "##wicz" -> 21356, "camouflage" -> 21357, "donate" -> 
                    21358, "af" -> 21359, "christi" -> 21360, "lau" -> 21361, 
                    "##acio" -> 21362, "disclosed" -> 21363, "nemesis" -> 
                    21364, "1761" -> 21365, "assemble" -> 21366, "straining" -> 
                    21367, "northamptonshire" -> 21368, "tal" -> 21369, 
                    "##asi" -> 21370, "bernardino" -> 21371, "premature" -> 
                    21372, "heidi" -> 21373, "42nd" -> 21374, "coefficients" -> 
                    21375, "galactic" -> 21376, "reproduce" -> 21377, 
                    "buzzed" -> 21378, "sensations" -> 21379, "zionist" -> 
                    21380, "monsieur" -> 21381, "myrtle" -> 21382, "##eme" -> 
                    21383, "archery" -> 21384, "strangled" -> 21385, 
                    "musically" -> 21386, "viewpoint" -> 21387, "antiquities" -> 
                    21388, "bei" -> 21389, "trailers" -> 21390, "seahawks" -> 
                    21391, "cured" -> 21392, "pee" -> 21393, "preferring" -> 
                    21394, "tasmanian" -> 21395, "lange" -> 21396, "sul" -> 
                    21397, "##mail" -> 21398, "##working" -> 21399, "colder" -> 
                    21400, "overland" -> 21401, "lucivar" -> 21402, "massey" -> 
                    21403, "gatherings" -> 21404, "haitian" -> 21405, 
                    "##smith" -> 21406, "disapproval" -> 21407, "flaws" -> 
                    21408, "##cco" -> 21409, "##enbach" -> 21410, "1766" -> 
                    21411, "npr" -> 21412, "##icular" -> 21413, "boroughs" -> 
                    21414, "creole" -> 21415, "forums" -> 21416, "techno" -> 
                    21417, "1755" -> 21418, "dent" -> 21419, "abdominal" -> 
                    21420, "streetcar" -> 21421, "##eson" -> 21422, 
                    "##stream" -> 21423, "procurement" -> 21424, "gemini" -> 
                    21425, "predictable" -> 21426, "##tya" -> 21427, 
                    "acheron" -> 21428, "christoph" -> 21429, "feeder" -> 
                    21430, "fronts" -> 21431, "vendor" -> 21432, "bernhard" -> 
                    21433, "jammu" -> 21434, "tumors" -> 21435, "slang" -> 
                    21436, "##uber" -> 21437, "goaltender" -> 21438, "twists" -> 
                    21439, "curving" -> 21440, "manson" -> 21441, "vuelta" -> 
                    21442, "mer" -> 21443, "peanut" -> 21444, "confessions" -> 
                    21445, "pouch" -> 21446, "unpredictable" -> 21447, 
                    "allowance" -> 21448, "theodor" -> 21449, "vascular" -> 
                    21450, "##factory" -> 21451, "bala" -> 21452, 
                    "authenticity" -> 21453, "metabolic" -> 21454, "coughing" -> 
                    21455, "nanjing" -> 21456, "##cea" -> 21457, "pembroke" -> 
                    21458, "##bard" -> 21459, "splendid" -> 21460, "36th" -> 
                    21461, "ff" -> 21462, "hourly" -> 21463, "##ahu" -> 21464,
                     "elmer" -> 21465, "handel" -> 21466, "##ivate" -> 21467, 
                    "awarding" -> 21468, "thrusting" -> 21469, "dl" -> 21470, 
                    "experimentation" -> 21471, "##hesion" -> 21472, "##46" -> 
                    21473, "caressed" -> 21474, "entertained" -> 21475, 
                    "steak" -> 21476, "##rangle" -> 21477, "biologist" -> 
                    21478, "orphans" -> 21479, "baroness" -> 21480, "oyster" -> 
                    21481, "stepfather" -> 21482, "##dridge" -> 21483, 
                    "mirage" -> 21484, "reefs" -> 21485, "speeding" -> 21486, 
                    "##31" -> 21487, "barons" -> 21488, "1764" -> 21489, 
                    "227" -> 21490, "inhabit" -> 21491, "preached" -> 21492, 
                    "repealed" -> 21493, "##tral" -> 21494, "honoring" -> 
                    21495, "boogie" -> 21496, "captives" -> 21497, 
                    "administer" -> 21498, "johanna" -> 21499, "##imate" -> 
                    21500, "gel" -> 21501, "suspiciously" -> 21502, "1767" -> 
                    21503, "sobs" -> 21504, "##dington" -> 21505, "backbone" -> 
                    21506, "hayward" -> 21507, "garry" -> 21508, "##folding" -> 
                    21509, "##nesia" -> 21510, "maxi" -> 21511, "##oof" -> 
                    21512, "##ppe" -> 21513, "ellison" -> 21514, "galileo" -> 
                    21515, "##stand" -> 21516, "crimea" -> 21517, "frenzy" -> 
                    21518, "amour" -> 21519, "bumper" -> 21520, "matrices" -> 
                    21521, "natalia" -> 21522, "baking" -> 21523, "garth" -> 
                    21524, "palestinians" -> 21525, "##grove" -> 21526, 
                    "smack" -> 21527, "conveyed" -> 21528, "ensembles" -> 
                    21529, "gardening" -> 21530, "##manship" -> 21531, 
                    "##rup" -> 21532, "##stituting" -> 21533, "1640" -> 21534,
                     "harvesting" -> 21535, "topography" -> 21536, "jing" -> 
                    21537, "shifters" -> 21538, "dormitory" -> 21539, 
                    "##carriage" -> 21540, "##lston" -> 21541, "ist" -> 21542,
                     "skulls" -> 21543, "##stadt" -> 21544, "dolores" -> 
                    21545, "jewellery" -> 21546, "sarawak" -> 21547, "##wai" -> 
                    21548, "##zier" -> 21549, "fences" -> 21550, "christy" -> 
                    21551, "confinement" -> 21552, "tumbling" -> 21553, 
                    "credibility" -> 21554, "fir" -> 21555, "stench" -> 21556,
                     "##bria" -> 21557, "##plication" -> 21558, "##nged" -> 
                    21559, "##sam" -> 21560, "virtues" -> 21561, "##belt" -> 
                    21562, "marjorie" -> 21563, "pba" -> 21564, "##eem" -> 
                    21565, "##made" -> 21566, "celebrates" -> 21567, 
                    "schooner" -> 21568, "agitated" -> 21569, "barley" -> 
                    21570, "fulfilling" -> 21571, "anthropologist" -> 21572, 
                    "##pro" -> 21573, "restrict" -> 21574, "novi" -> 21575, 
                    "regulating" -> 21576, "##nent" -> 21577, "padres" -> 
                    21578, "##rani" -> 21579, "##hesive" -> 21580, "loyola" -> 
                    21581, "tabitha" -> 21582, "milky" -> 21583, "olson" -> 
                    21584, "proprietor" -> 21585, "crambidae" -> 21586, 
                    "guarantees" -> 21587, "intercollegiate" -> 21588, 
                    "ljubljana" -> 21589, "hilda" -> 21590, "##sko" -> 21591, 
                    "ignorant" -> 21592, "hooded" -> 21593, "##lts" -> 21594, 
                    "sardinia" -> 21595, "##lidae" -> 21596, "##vation" -> 
                    21597, "frontman" -> 21598, "privileged" -> 21599, 
                    "witchcraft" -> 21600, "##gp" -> 21601, "jammed" -> 21602,
                     "laude" -> 21603, "poking" -> 21604, "##than" -> 21605, 
                    "bracket" -> 21606, "amazement" -> 21607, "yunnan" -> 
                    21608, "##erus" -> 21609, "maharaja" -> 21610, "linnaeus" -> 
                    21611, "264" -> 21612, "commissioning" -> 21613, "milano" -> 
                    21614, "peacefully" -> 21615, "##logies" -> 21616, 
                    "akira" -> 21617, "rani" -> 21618, "regulator" -> 21619, 
                    "##36" -> 21620, "grasses" -> 21621, "##rance" -> 21622, 
                    "luzon" -> 21623, "crows" -> 21624, "compiler" -> 21625, 
                    "gretchen" -> 21626, "seaman" -> 21627, "edouard" -> 
                    21628, "tab" -> 21629, "buccaneers" -> 21630, "ellington" -> 
                    21631, "hamlets" -> 21632, "whig" -> 21633, "socialists" -> 
                    21634, "##anto" -> 21635, "directorial" -> 21636, 
                    "easton" -> 21637, "mythological" -> 21638, "##kr" -> 
                    21639, "##vary" -> 21640, "rhineland" -> 21641, 
                    "semantic" -> 21642, "taut" -> 21643, "dune" -> 21644, 
                    "inventions" -> 21645, "succeeds" -> 21646, "##iter" -> 
                    21647, "replication" -> 21648, "branched" -> 21649, 
                    "##pired" -> 21650, "jul" -> 21651, "prosecuted" -> 21652,
                     "kangaroo" -> 21653, "penetrated" -> 21654, "##avian" -> 
                    21655, "middlesbrough" -> 21656, "doses" -> 21657, 
                    "bleak" -> 21658, "madam" -> 21659, "predatory" -> 21660, 
                    "relentless" -> 21661, "##vili" -> 21662, "reluctance" -> 
                    21663, "##vir" -> 21664, "hailey" -> 21665, "crore" -> 
                    21666, "silvery" -> 21667, "1759" -> 21668, "monstrous" -> 
                    21669, "swimmers" -> 21670, "transmissions" -> 21671, 
                    "hawthorn" -> 21672, "informing" -> 21673, "##eral" -> 
                    21674, "toilets" -> 21675, "caracas" -> 21676, "crouch" -> 
                    21677, "kb" -> 21678, "##sett" -> 21679, "295" -> 21680, 
                    "cartel" -> 21681, "hadley" -> 21682, "##aling" -> 21683, 
                    "alexia" -> 21684, "yvonne" -> 21685, "##biology" -> 
                    21686, "cinderella" -> 21687, "eton" -> 21688, "superb" -> 
                    21689, "blizzard" -> 21690, "stabbing" -> 21691, 
                    "industrialist" -> 21692, "maximus" -> 21693, "##gm" -> 
                    21694, "##orus" -> 21695, "groves" -> 21696, "maud" -> 
                    21697, "clade" -> 21698, "oversized" -> 21699, "comedic" -> 
                    21700, "##bella" -> 21701, "rosen" -> 21702, "nomadic" -> 
                    21703, "fulham" -> 21704, "montane" -> 21705, "beverages" -> 
                    21706, "galaxies" -> 21707, "redundant" -> 21708, "swarm" -> 
                    21709, "##rot" -> 21710, "##folia" -> 21711, "##llis" -> 
                    21712, "buckinghamshire" -> 21713, "fen" -> 21714, 
                    "bearings" -> 21715, "bahadur" -> 21716, "##rom" -> 21717,
                     "gilles" -> 21718, "phased" -> 21719, "dynamite" -> 
                    21720, "faber" -> 21721, "benoit" -> 21722, "vip" -> 
                    21723, "##ount" -> 21724, "##wd" -> 21725, "booking" -> 
                    21726, "fractured" -> 21727, "tailored" -> 21728, "anya" -> 
                    21729, "spices" -> 21730, "westwood" -> 21731, "cairns" -> 
                    21732, "auditions" -> 21733, "inflammation" -> 21734, 
                    "steamed" -> 21735, "##rocity" -> 21736, "##acion" -> 
                    21737, "##urne" -> 21738, "skyla" -> 21739, "thereof" -> 
                    21740, "watford" -> 21741, "torment" -> 21742, 
                    "archdeacon" -> 21743, "transforms" -> 21744, "lulu" -> 
                    21745, "demeanor" -> 21746, "fucked" -> 21747, "serge" -> 
                    21748, "##sor" -> 21749, "mckenna" -> 21750, "minas" -> 
                    21751, "entertainer" -> 21752, "##icide" -> 21753, 
                    "caress" -> 21754, "originate" -> 21755, "residue" -> 
                    21756, "##sty" -> 21757, "1740" -> 21758, "##ilised" -> 
                    21759, "##org" -> 21760, "beech" -> 21761, "##wana" -> 
                    21762, "subsidies" -> 21763, "##ghton" -> 21764, 
                    "emptied" -> 21765, "gladstone" -> 21766, "ru" -> 21767, 
                    "firefighters" -> 21768, "voodoo" -> 21769, "##rcle" -> 
                    21770, "het" -> 21771, "nightingale" -> 21772, "tamara" -> 
                    21773, "edmond" -> 21774, "ingredient" -> 21775, 
                    "weaknesses" -> 21776, "silhouette" -> 21777, "285" -> 
                    21778, "compatibility" -> 21779, "withdrawing" -> 21780, 
                    "hampson" -> 21781, "##mona" -> 21782, "anguish" -> 21783,
                     "giggling" -> 21784, "##mber" -> 21785, "bookstore" -> 
                    21786, "##jiang" -> 21787, "southernmost" -> 21788, 
                    "tilting" -> 21789, "##vance" -> 21790, "bai" -> 21791, 
                    "economical" -> 21792, "rf" -> 21793, "briefcase" -> 
                    21794, "dreadful" -> 21795, "hinted" -> 21796, 
                    "projections" -> 21797, "shattering" -> 21798, "totaling" -> 
                    21799, "##rogate" -> 21800, "analogue" -> 21801, 
                    "indicted" -> 21802, "periodical" -> 21803, "fullback" -> 
                    21804, "##dman" -> 21805, "haynes" -> 21806, "##tenberg" -> 
                    21807, "##ffs" -> 21808, "##ishment" -> 21809, "1745" -> 
                    21810, "thirst" -> 21811, "stumble" -> 21812, "penang" -> 
                    21813, "vigorous" -> 21814, "##ddling" -> 21815, "##kor" -> 
                    21816, "##lium" -> 21817, "octave" -> 21818, "##ove" -> 
                    21819, "##enstein" -> 21820, "##inen" -> 21821, "##ones" -> 
                    21822, "siberian" -> 21823, "##uti" -> 21824, "cbn" -> 
                    21825, "repeal" -> 21826, "swaying" -> 21827, "##vington" -> 
                    21828, "khalid" -> 21829, "tanaka" -> 21830, "unicorn" -> 
                    21831, "otago" -> 21832, "plastered" -> 21833, "lobe" -> 
                    21834, "riddle" -> 21835, "##rella" -> 21836, "perch" -> 
                    21837, "##ishing" -> 21838, "croydon" -> 21839, 
                    "filtered" -> 21840, "graeme" -> 21841, "tripoli" -> 
                    21842, "##ossa" -> 21843, "crocodile" -> 21844, "##chers" -> 
                    21845, "sufi" -> 21846, "mined" -> 21847, "##tung" -> 
                    21848, "inferno" -> 21849, "lsu" -> 21850, "##phi" -> 
                    21851, "swelled" -> 21852, "utilizes" -> 21853, 
                    "\[Sterling]2" -> 21854, "cale" -> 21855, "periodicals" -> 
                    21856, "styx" -> 21857, "hike" -> 21858, "informally" -> 
                    21859, "coop" -> 21860, "lund" -> 21861, "##tidae" -> 
                    21862, "ala" -> 21863, "hen" -> 21864, "qui" -> 21865, 
                    "transformations" -> 21866, "disposed" -> 21867, "sheath" -> 
                    21868, "chickens" -> 21869, "##cade" -> 21870, "fitzroy" -> 
                    21871, "sas" -> 21872, "silesia" -> 21873, "unacceptable" -> 
                    21874, "odisha" -> 21875, "1650" -> 21876, "sabrina" -> 
                    21877, "pe" -> 21878, "spokane" -> 21879, "ratios" -> 
                    21880, "athena" -> 21881, "massage" -> 21882, "shen" -> 
                    21883, "dilemma" -> 21884, "##drum" -> 21885, "##riz" -> 
                    21886, "##hul" -> 21887, "corona" -> 21888, "doubtful" -> 
                    21889, "niall" -> 21890, "##pha" -> 21891, "##bino" -> 
                    21892, "fines" -> 21893, "cite" -> 21894, "acknowledging" -> 
                    21895, "bangor" -> 21896, "ballard" -> 21897, "bathurst" -> 
                    21898, "##resh" -> 21899, "huron" -> 21900, "mustered" -> 
                    21901, "alzheimer" -> 21902, "garments" -> 21903, 
                    "kinase" -> 21904, "tyre" -> 21905, "warship" -> 21906, 
                    "##cp" -> 21907, "flashback" -> 21908, "pulmonary" -> 
                    21909, "braun" -> 21910, "cheat" -> 21911, "kamal" -> 
                    21912, "cyclists" -> 21913, "constructions" -> 21914, 
                    "grenades" -> 21915, "ndp" -> 21916, "traveller" -> 21917,
                     "excuses" -> 21918, "stomped" -> 21919, "signalling" -> 
                    21920, "trimmed" -> 21921, "futsal" -> 21922, "mosques" -> 
                    21923, "relevance" -> 21924, "##wine" -> 21925, "wta" -> 
                    21926, "##23" -> 21927, "##vah" -> 21928, "##lter" -> 
                    21929, "hoc" -> 21930, "##riding" -> 21931, "optimistic" -> 
                    21932, "##\.b4s" -> 21933, "deco" -> 21934, "sim" -> 
                    21935, "interacting" -> 21936, "rejecting" -> 21937, 
                    "moniker" -> 21938, "waterways" -> 21939, "##ieri" -> 
                    21940, "##oku" -> 21941, "mayors" -> 21942, "gdansk" -> 
                    21943, "outnumbered" -> 21944, "pearls" -> 21945, 
                    "##ended" -> 21946, "##hampton" -> 21947, "fairs" -> 
                    21948, "totals" -> 21949, "dominating" -> 21950, "262" -> 
                    21951, "notions" -> 21952, "stairway" -> 21953, 
                    "compiling" -> 21954, "pursed" -> 21955, "commodities" -> 
                    21956, "grease" -> 21957, "yeast" -> 21958, "##jong" -> 
                    21959, "carthage" -> 21960, "griffiths" -> 21961, 
                    "residual" -> 21962, "amc" -> 21963, "contraction" -> 
                    21964, "laird" -> 21965, "sapphire" -> 21966, "##marine" -> 
                    21967, "##ivated" -> 21968, "amalgamation" -> 21969, 
                    "dissolve" -> 21970, "inclination" -> 21971, "lyle" -> 
                    21972, "packaged" -> 21973, "altitudes" -> 21974, "suez" -> 
                    21975, "canons" -> 21976, "graded" -> 21977, "lurched" -> 
                    21978, "narrowing" -> 21979, "boasts" -> 21980, "guise" -> 
                    21981, "wed" -> 21982, "enrico" -> 21983, "##ovsky" -> 
                    21984, "rower" -> 21985, "scarred" -> 21986, "bree" -> 
                    21987, "cub" -> 21988, "iberian" -> 21989, "protagonists" -> 
                    21990, "bargaining" -> 21991, "proposing" -> 21992, 
                    "trainers" -> 21993, "voyages" -> 21994, "vans" -> 21995, 
                    "fishes" -> 21996, "##aea" -> 21997, "##ivist" -> 21998, 
                    "##verance" -> 21999, "encryption" -> 22000, "artworks" -> 
                    22001, "kazan" -> 22002, "sabre" -> 22003, "cleopatra" -> 
                    22004, "hepburn" -> 22005, "rotting" -> 22006, 
                    "supremacy" -> 22007, "mecklenburg" -> 22008, "##brate" -> 
                    22009, "burrows" -> 22010, "hazards" -> 22011, "outgoing" -> 
                    22012, "flair" -> 22013, "organizes" -> 22014, "##ctions" -> 
                    22015, "scorpion" -> 22016, "##usions" -> 22017, "boo" -> 
                    22018, "234" -> 22019, "chevalier" -> 22020, "dunedin" -> 
                    22021, "slapping" -> 22022, "##34" -> 22023, "ineligible" -> 
                    22024, "pensions" -> 22025, "##38" -> 22026, "##omic" -> 
                    22027, "manufactures" -> 22028, "emails" -> 22029, 
                    "bismarck" -> 22030, "238" -> 22031, "weakening" -> 22032,
                     "blackish" -> 22033, "ding" -> 22034, "mcgee" -> 22035, 
                    "quo" -> 22036, "##rling" -> 22037, "northernmost" -> 
                    22038, "xx" -> 22039, "manpower" -> 22040, "greed" -> 
                    22041, "sampson" -> 22042, "clicking" -> 22043, "##ange" -> 
                    22044, "##horpe" -> 22045, "##inations" -> 22046, 
                    "##roving" -> 22047, "torre" -> 22048, "##eptive" -> 
                    22049, "##moral" -> 22050, "symbolism" -> 22051, "38th" -> 
                    22052, "asshole" -> 22053, "meritorious" -> 22054, 
                    "outfits" -> 22055, "splashed" -> 22056, "biographies" -> 
                    22057, "sprung" -> 22058, "astros" -> 22059, "##tale" -> 
                    22060, "302" -> 22061, "737" -> 22062, "filly" -> 22063, 
                    "raoul" -> 22064, "nw" -> 22065, "tokugawa" -> 22066, 
                    "linden" -> 22067, "clubhouse" -> 22068, "##apa" -> 22069,
                     "tracts" -> 22070, "romano" -> 22071, "##pio" -> 22072, 
                    "putin" -> 22073, "tags" -> 22074, "##note" -> 22075, 
                    "chained" -> 22076, "dickson" -> 22077, "gunshot" -> 
                    22078, "moe" -> 22079, "gunn" -> 22080, "rashid" -> 22081,
                     "##tails" -> 22082, "zipper" -> 22083, "##bas" -> 22084, 
                    "##nea" -> 22085, "contrasted" -> 22086, "##ply" -> 22087,
                     "##udes" -> 22088, "plum" -> 22089, "pharaoh" -> 22090, 
                    "##pile" -> 22091, "aw" -> 22092, "comedies" -> 22093, 
                    "ingrid" -> 22094, "sandwiches" -> 22095, "subdivisions" -> 
                    22096, "1100" -> 22097, "mariana" -> 22098, "nokia" -> 
                    22099, "kamen" -> 22100, "hz" -> 22101, "delaney" -> 
                    22102, "veto" -> 22103, "herring" -> 22104, "##words" -> 
                    22105, "possessive" -> 22106, "outlines" -> 22107, 
                    "##roup" -> 22108, "siemens" -> 22109, "stairwell" -> 
                    22110, "rc" -> 22111, "gallantry" -> 22112, "messiah" -> 
                    22113, "palais" -> 22114, "yells" -> 22115, "233" -> 
                    22116, "zeppelin" -> 22117, "##dm" -> 22118, "bolivar" -> 
                    22119, "##cede" -> 22120, "smackdown" -> 22121, 
                    "mckinley" -> 22122, "##mora" -> 22123, "##yt" -> 22124, 
                    "muted" -> 22125, "geologic" -> 22126, "finely" -> 22127, 
                    "unitary" -> 22128, "avatar" -> 22129, "hamas" -> 22130, 
                    "maynard" -> 22131, "rees" -> 22132, "bog" -> 22133, 
                    "contrasting" -> 22134, "##rut" -> 22135, "liv" -> 22136, 
                    "chico" -> 22137, "disposition" -> 22138, "pixel" -> 
                    22139, "##erate" -> 22140, "becca" -> 22141, "dmitry" -> 
                    22142, "yeshiva" -> 22143, "narratives" -> 22144, "##lva" -> 
                    22145, "##ulton" -> 22146, "mercenary" -> 22147, "sharpe" -> 
                    22148, "tempered" -> 22149, "navigate" -> 22150, 
                    "stealth" -> 22151, "amassed" -> 22152, "keynes" -> 22153,
                     "##lini" -> 22154, "untouched" -> 22155, "##rrie" -> 
                    22156, "havoc" -> 22157, "lithium" -> 22158, "##fighting" -> 
                    22159, "abyss" -> 22160, "graf" -> 22161, "southward" -> 
                    22162, "wolverine" -> 22163, "balloons" -> 22164, 
                    "implements" -> 22165, "ngos" -> 22166, "transitions" -> 
                    22167, "##icum" -> 22168, "ambushed" -> 22169, "concacaf" -> 
                    22170, "dormant" -> 22171, "economists" -> 22172, "##dim" -> 
                    22173, "costing" -> 22174, "csi" -> 22175, "rana" -> 
                    22176, "universite" -> 22177, "boulders" -> 22178, 
                    "verity" -> 22179, "##llon" -> 22180, "collin" -> 22181, 
                    "mellon" -> 22182, "misses" -> 22183, "cypress" -> 22184, 
                    "fluorescent" -> 22185, "lifeless" -> 22186, "spence" -> 
                    22187, "##ulla" -> 22188, "crewe" -> 22189, "shepard" -> 
                    22190, "pak" -> 22191, "revelations" -> 22192, "##\:0645" -> 
                    22193, "jolly" -> 22194, "gibbons" -> 22195, "paw" -> 
                    22196, "##dro" -> 22197, "##quel" -> 22198, "freeing" -> 
                    22199, "##test" -> 22200, "shack" -> 22201, "fries" -> 
                    22202, "palatine" -> 22203, "##51" -> 22204, "##hiko" -> 
                    22205, "accompaniment" -> 22206, "cruising" -> 22207, 
                    "recycled" -> 22208, "##aver" -> 22209, "erwin" -> 22210, 
                    "sorting" -> 22211, "synthesizers" -> 22212, "dyke" -> 
                    22213, "realities" -> 22214, "sg" -> 22215, "strides" -> 
                    22216, "enslaved" -> 22217, "wetland" -> 22218, "##ghan" -> 
                    22219, "competence" -> 22220, "gunpowder" -> 22221, 
                    "grassy" -> 22222, "maroon" -> 22223, "reactors" -> 22224,
                     "objection" -> 22225, "##oms" -> 22226, "carlson" -> 
                    22227, "gearbox" -> 22228, "macintosh" -> 22229, "radios" -> 
                    22230, "shelton" -> 22231, "##sho" -> 22232, "clergyman" -> 
                    22233, "prakash" -> 22234, "254" -> 22235, "mongols" -> 
                    22236, "trophies" -> 22237, "oricon" -> 22238, "228" -> 
                    22239, "stimuli" -> 22240, "twenty20" -> 22241, 
                    "cantonese" -> 22242, "cortes" -> 22243, "mirrored" -> 
                    22244, "##saurus" -> 22245, "bhp" -> 22246, "cristina" -> 
                    22247, "melancholy" -> 22248, "##lating" -> 22249, 
                    "enjoyable" -> 22250, "nuevo" -> 22251, "##wny" -> 22252, 
                    "downfall" -> 22253, "schumacher" -> 22254, "##ind" -> 
                    22255, "banging" -> 22256, "lausanne" -> 22257, "rumbled" -> 
                    22258, "paramilitary" -> 22259, "reflex" -> 22260, "ax" -> 
                    22261, "amplitude" -> 22262, "migratory" -> 22263, 
                    "##gall" -> 22264, "##ups" -> 22265, "midi" -> 22266, 
                    "barnard" -> 22267, "lastly" -> 22268, "sherry" -> 22269, 
                    "##hp" -> 22270, "##nall" -> 22271, "keystone" -> 22272, 
                    "##kra" -> 22273, "carleton" -> 22274, "slippery" -> 
                    22275, "##53" -> 22276, "coloring" -> 22277, "foe" -> 
                    22278, "socket" -> 22279, "otter" -> 22280, "##rgos" -> 
                    22281, "mats" -> 22282, "##tose" -> 22283, "consultants" -> 
                    22284, "bafta" -> 22285, "bison" -> 22286, "topping" -> 
                    22287, "##km" -> 22288, "490" -> 22289, "primal" -> 22290,
                     "abandonment" -> 22291, "transplant" -> 22292, "atoll" -> 
                    22293, "hideous" -> 22294, "mort" -> 22295, "pained" -> 
                    22296, "reproduced" -> 22297, "tae" -> 22298, "howling" -> 
                    22299, "##turn" -> 22300, "unlawful" -> 22301, 
                    "billionaire" -> 22302, "hotter" -> 22303, "poised" -> 
                    22304, "lansing" -> 22305, "##chang" -> 22306, "dinamo" -> 
                    22307, "retro" -> 22308, "messing" -> 22309, "nfc" -> 
                    22310, "domesday" -> 22311, "##mina" -> 22312, "blitz" -> 
                    22313, "timed" -> 22314, "##athing" -> 22315, "##kley" -> 
                    22316, "ascending" -> 22317, "gesturing" -> 22318, 
                    "##izations" -> 22319, "signaled" -> 22320, "tis" -> 
                    22321, "chinatown" -> 22322, "mermaid" -> 22323, 
                    "savanna" -> 22324, "jameson" -> 22325, "##aint" -> 22326,
                     "catalina" -> 22327, "##pet" -> 22328, "##hers" -> 22329,
                     "cochrane" -> 22330, "cy" -> 22331, "chatting" -> 22332, 
                    "##kus" -> 22333, "alerted" -> 22334, "computation" -> 
                    22335, "mused" -> 22336, "noelle" -> 22337, "majestic" -> 
                    22338, "mohawk" -> 22339, "campo" -> 22340, "octagonal" -> 
                    22341, "##sant" -> 22342, "##hend" -> 22343, "241" -> 
                    22344, "aspiring" -> 22345, "##mart" -> 22346, 
                    "comprehend" -> 22347, "iona" -> 22348, "paralyzed" -> 
                    22349, "shimmering" -> 22350, "swindon" -> 22351, "rhone" -> 
                    22352, "##eley" -> 22353, "reputed" -> 22354, 
                    "configurations" -> 22355, "pitchfork" -> 22356, 
                    "agitation" -> 22357, "francais" -> 22358, "gillian" -> 
                    22359, "lipstick" -> 22360, "##ilo" -> 22361, "outsiders" -> 
                    22362, "pontifical" -> 22363, "resisting" -> 22364, 
                    "bitterness" -> 22365, "sewer" -> 22366, "rockies" -> 
                    22367, "##edd" -> 22368, "##ucher" -> 22369, "misleading" -> 
                    22370, "1756" -> 22371, "exiting" -> 22372, "galloway" -> 
                    22373, "##nging" -> 22374, "risked" -> 22375, "##heart" -> 
                    22376, "246" -> 22377, "commemoration" -> 22378, 
                    "schultz" -> 22379, "##rka" -> 22380, "integrating" -> 
                    22381, "##rsa" -> 22382, "poses" -> 22383, "shrieked" -> 
                    22384, "##weiler" -> 22385, "guineas" -> 22386, "gladys" -> 
                    22387, "jerking" -> 22388, "owls" -> 22389, "goldsmith" -> 
                    22390, "nightly" -> 22391, "penetrating" -> 22392, 
                    "##unced" -> 22393, "lia" -> 22394, "##33" -> 22395, 
                    "ignited" -> 22396, "betsy" -> 22397, "##aring" -> 22398, 
                    "##thorpe" -> 22399, "follower" -> 22400, "vigorously" -> 
                    22401, "##rave" -> 22402, "coded" -> 22403, "kiran" -> 
                    22404, "knit" -> 22405, "zoology" -> 22406, "tbilisi" -> 
                    22407, "##28" -> 22408, "##bered" -> 22409, "repository" -> 
                    22410, "govt" -> 22411, "deciduous" -> 22412, "dino" -> 
                    22413, "growling" -> 22414, "##bba" -> 22415, 
                    "enhancement" -> 22416, "unleashed" -> 22417, "chanting" -> 
                    22418, "pussy" -> 22419, "biochemistry" -> 22420, 
                    "##eric" -> 22421, "kettle" -> 22422, "repression" -> 
                    22423, "toxicity" -> 22424, "nrhp" -> 22425, "##arth" -> 
                    22426, "##kko" -> 22427, "##bush" -> 22428, "ernesto" -> 
                    22429, "commended" -> 22430, "outspoken" -> 22431, "242" -> 
                    22432, "mca" -> 22433, "parchment" -> 22434, "sms" -> 
                    22435, "kristen" -> 22436, "##aton" -> 22437, "bisexual" -> 
                    22438, "raked" -> 22439, "glamour" -> 22440, "navajo" -> 
                    22441, "a2" -> 22442, "conditioned" -> 22443, "showcased" -> 
                    22444, "##hma" -> 22445, "spacious" -> 22446, "youthful" -> 
                    22447, "##esa" -> 22448, "usl" -> 22449, "appliances" -> 
                    22450, "junta" -> 22451, "brest" -> 22452, "layne" -> 
                    22453, "conglomerate" -> 22454, "enchanted" -> 22455, 
                    "chao" -> 22456, "loosened" -> 22457, "picasso" -> 22458, 
                    "circulating" -> 22459, "inspect" -> 22460, "montevideo" -> 
                    22461, "##centric" -> 22462, "##kti" -> 22463, "piazza" -> 
                    22464, "spurred" -> 22465, "##aith" -> 22466, "bari" -> 
                    22467, "freedoms" -> 22468, "poultry" -> 22469, 
                    "stamford" -> 22470, "lieu" -> 22471, "##ect" -> 22472, 
                    "indigo" -> 22473, "sarcastic" -> 22474, "bahia" -> 22475,
                     "stump" -> 22476, "attach" -> 22477, "dvds" -> 22478, 
                    "frankenstein" -> 22479, "lille" -> 22480, "approx" -> 
                    22481, "scriptures" -> 22482, "pollen" -> 22483, 
                    "##script" -> 22484, "nmi" -> 22485, "overseen" -> 22486, 
                    "##ivism" -> 22487, "tides" -> 22488, "proponent" -> 
                    22489, "newmarket" -> 22490, "inherit" -> 22491, 
                    "milling" -> 22492, "##erland" -> 22493, "centralized" -> 
                    22494, "##rou" -> 22495, "distributors" -> 22496, 
                    "credentials" -> 22497, "drawers" -> 22498, 
                    "abbreviation" -> 22499, "##lco" -> 22500, "##xon" -> 
                    22501, "downing" -> 22502, "uncomfortably" -> 22503, 
                    "ripe" -> 22504, "##oes" -> 22505, "erase" -> 22506, 
                    "franchises" -> 22507, "##ever" -> 22508, "populace" -> 
                    22509, "##bery" -> 22510, "##khar" -> 22511, 
                    "decomposition" -> 22512, "pleas" -> 22513, "##tet" -> 
                    22514, "daryl" -> 22515, "sabah" -> 22516, "##stle" -> 
                    22517, "##wide" -> 22518, "fearless" -> 22519, "genie" -> 
                    22520, "lesions" -> 22521, "annette" -> 22522, "##ogist" -> 
                    22523, "oboe" -> 22524, "appendix" -> 22525, "nair" -> 
                    22526, "dripped" -> 22527, "petitioned" -> 22528, 
                    "maclean" -> 22529, "mosquito" -> 22530, "parrot" -> 
                    22531, "rpg" -> 22532, "hampered" -> 22533, "1648" -> 
                    22534, "operatic" -> 22535, "reservoirs" -> 22536, 
                    "##tham" -> 22537, "irrelevant" -> 22538, "jolt" -> 22539,
                     "summarized" -> 22540, "##fp" -> 22541, "medallion" -> 
                    22542, "##taff" -> 22543, "##\[Minus]" -> 22544, "clawed" -> 
                    22545, "harlow" -> 22546, "narrower" -> 22547, "goddard" -> 
                    22548, "marcia" -> 22549, "bodied" -> 22550, "fremont" -> 
                    22551, "suarez" -> 22552, "altering" -> 22553, "tempest" -> 
                    22554, "mussolini" -> 22555, "porn" -> 22556, "##isms" -> 
                    22557, "sweetly" -> 22558, "oversees" -> 22559, "walkers" -> 
                    22560, "solitude" -> 22561, "grimly" -> 22562, "shrines" -> 
                    22563, "hk" -> 22564, "ich" -> 22565, "supervisors" -> 
                    22566, "hostess" -> 22567, "dietrich" -> 22568, 
                    "legitimacy" -> 22569, "brushes" -> 22570, "expressive" -> 
                    22571, "##yp" -> 22572, "dissipated" -> 22573, "##rse" -> 
                    22574, "localized" -> 22575, "systemic" -> 22576, 
                    "##nikov" -> 22577, "gettysburg" -> 22578, "##js" -> 
                    22579, "##uaries" -> 22580, "dialogues" -> 22581, 
                    "muttering" -> 22582, "251" -> 22583, "housekeeper" -> 
                    22584, "sicilian" -> 22585, "discouraged" -> 22586, 
                    "##frey" -> 22587, "beamed" -> 22588, "kaladin" -> 22589, 
                    "halftime" -> 22590, "kidnap" -> 22591, "##amo" -> 22592, 
                    "##llet" -> 22593, "1754" -> 22594, "synonymous" -> 22595,
                     "depleted" -> 22596, "instituto" -> 22597, "insulin" -> 
                    22598, "reprised" -> 22599, "##opsis" -> 22600, "clashed" -> 
                    22601, "##ctric" -> 22602, "interrupting" -> 22603, 
                    "radcliffe" -> 22604, "insisting" -> 22605, "medici" -> 
                    22606, "1715" -> 22607, "ejected" -> 22608, "playfully" -> 
                    22609, "turbulent" -> 22610, "##47" -> 22611, 
                    "starvation" -> 22612, "##rini" -> 22613, "shipment" -> 
                    22614, "rebellious" -> 22615, "petersen" -> 22616, 
                    "verification" -> 22617, "merits" -> 22618, "##rified" -> 
                    22619, "cakes" -> 22620, "##charged" -> 22621, "1757" -> 
                    22622, "milford" -> 22623, "shortages" -> 22624, "spying" -> 
                    22625, "fidelity" -> 22626, "##aker" -> 22627, "emitted" -> 
                    22628, "storylines" -> 22629, "harvested" -> 22630, 
                    "seismic" -> 22631, "##iform" -> 22632, "cheung" -> 22633,
                     "kilda" -> 22634, "theoretically" -> 22635, "barbie" -> 
                    22636, "lynx" -> 22637, "##rgy" -> 22638, "##tius" -> 
                    22639, "goblin" -> 22640, "mata" -> 22641, "poisonous" -> 
                    22642, "##nburg" -> 22643, "reactive" -> 22644, 
                    "residues" -> 22645, "obedience" -> 22646, 
                    "##\:0435\:0432\:0438\:0447" -> 22647, "conjecture" -> 
                    22648, "##rac" -> 22649, "401" -> 22650, "hating" -> 
                    22651, "sixties" -> 22652, "kicker" -> 22653, "moaning" -> 
                    22654, "motown" -> 22655, "##bha" -> 22656, 
                    "emancipation" -> 22657, "neoclassical" -> 22658, 
                    "##hering" -> 22659, "consoles" -> 22660, "ebert" -> 
                    22661, "professorship" -> 22662, "##tures" -> 22663, 
                    "sustaining" -> 22664, "assaults" -> 22665, "obeyed" -> 
                    22666, "affluent" -> 22667, "incurred" -> 22668, 
                    "tornadoes" -> 22669, "##eber" -> 22670, "##zow" -> 22671,
                     "emphasizing" -> 22672, "highlanders" -> 22673, 
                    "cheated" -> 22674, "helmets" -> 22675, "##ctus" -> 22676,
                     "internship" -> 22677, "terence" -> 22678, "bony" -> 
                    22679, "executions" -> 22680, "legislators" -> 22681, 
                    "berries" -> 22682, "peninsular" -> 22683, "tinged" -> 
                    22684, "##aco" -> 22685, "1689" -> 22686, "amplifier" -> 
                    22687, "corvette" -> 22688, "ribbons" -> 22689, "lavish" -> 
                    22690, "pennant" -> 22691, "##lander" -> 22692, 
                    "worthless" -> 22693, "##chfield" -> 22694, "##forms" -> 
                    22695, "mariano" -> 22696, "pyrenees" -> 22697, 
                    "expenditures" -> 22698, "##icides" -> 22699, 
                    "chesterfield" -> 22700, "mandir" -> 22701, "tailor" -> 
                    22702, "39th" -> 22703, "sergey" -> 22704, "nestled" -> 
                    22705, "willed" -> 22706, "aristocracy" -> 22707, 
                    "devotees" -> 22708, "goodnight" -> 22709, "raaf" -> 
                    22710, "rumored" -> 22711, "weaponry" -> 22712, "remy" -> 
                    22713, "appropriations" -> 22714, "harcourt" -> 22715, 
                    "burr" -> 22716, "riaa" -> 22717, "##lence" -> 22718, 
                    "limitation" -> 22719, "unnoticed" -> 22720, "guo" -> 
                    22721, "soaking" -> 22722, "swamps" -> 22723, "##tica" -> 
                    22724, "collapsing" -> 22725, "tatiana" -> 22726, 
                    "descriptive" -> 22727, "brigham" -> 22728, "psalm" -> 
                    22729, "##chment" -> 22730, "maddox" -> 22731, 
                    "##lization" -> 22732, "patti" -> 22733, "caliph" -> 
                    22734, "##aja" -> 22735, "akron" -> 22736, "injuring" -> 
                    22737, "serra" -> 22738, "##ganj" -> 22739, "basins" -> 
                    22740, "##sari" -> 22741, "astonished" -> 22742, 
                    "launcher" -> 22743, "##church" -> 22744, "hilary" -> 
                    22745, "wilkins" -> 22746, "sewing" -> 22747, "##sf" -> 
                    22748, "stinging" -> 22749, "##fia" -> 22750, "##ncia" -> 
                    22751, "underwood" -> 22752, "startup" -> 22753, 
                    "##ition" -> 22754, "compilations" -> 22755, "vibrations" -> 
                    22756, "embankment" -> 22757, "jurist" -> 22758, "##nity" -> 
                    22759, "bard" -> 22760, "juventus" -> 22761, 
                    "groundwater" -> 22762, "kern" -> 22763, "palaces" -> 
                    22764, "helium" -> 22765, "boca" -> 22766, "cramped" -> 
                    22767, "marissa" -> 22768, "soto" -> 22769, "##worm" -> 
                    22770, "jae" -> 22771, "princely" -> 22772, "##ggy" -> 
                    22773, "faso" -> 22774, "bazaar" -> 22775, "warmly" -> 
                    22776, "##voking" -> 22777, "229" -> 22778, "pairing" -> 
                    22779, "##lite" -> 22780, "##grate" -> 22781, "##nets" -> 
                    22782, "wien" -> 22783, "freaked" -> 22784, "ulysses" -> 
                    22785, "rebirth" -> 22786, "##alia" -> 22787, "##rent" -> 
                    22788, "mummy" -> 22789, "guzman" -> 22790, "jimenez" -> 
                    22791, "stilled" -> 22792, "##nitz" -> 22793, 
                    "trajectory" -> 22794, "tha" -> 22795, "woken" -> 22796, 
                    "archival" -> 22797, "professions" -> 22798, "##pts" -> 
                    22799, "##pta" -> 22800, "hilly" -> 22801, "shadowy" -> 
                    22802, "shrink" -> 22803, "##bolt" -> 22804, "norwood" -> 
                    22805, "glued" -> 22806, "migrate" -> 22807, 
                    "stereotypes" -> 22808, "devoid" -> 22809, "##pheus" -> 
                    22810, "625" -> 22811, "evacuate" -> 22812, "horrors" -> 
                    22813, "infancy" -> 22814, "gotham" -> 22815, "knowles" -> 
                    22816, "optic" -> 22817, "downloaded" -> 22818, "sachs" -> 
                    22819, "kingsley" -> 22820, "parramatta" -> 22821, 
                    "darryl" -> 22822, "mor" -> 22823, "##onale" -> 22824, 
                    "shady" -> 22825, "commence" -> 22826, "confesses" -> 
                    22827, "kan" -> 22828, "##meter" -> 22829, "##placed" -> 
                    22830, "marlborough" -> 22831, "roundabout" -> 22832, 
                    "regents" -> 22833, "frigates" -> 22834, "io" -> 22835, 
                    "##imating" -> 22836, "gothenburg" -> 22837, "revoked" -> 
                    22838, "carvings" -> 22839, "clockwise" -> 22840, 
                    "convertible" -> 22841, "intruder" -> 22842, "##sche" -> 
                    22843, "banged" -> 22844, "##ogo" -> 22845, "vicky" -> 
                    22846, "bourgeois" -> 22847, "##mony" -> 22848, "dupont" -> 
                    22849, "footing" -> 22850, "##gum" -> 22851, "pd" -> 
                    22852, "##real" -> 22853, "buckle" -> 22854, "yun" -> 
                    22855, "penthouse" -> 22856, "sane" -> 22857, "720" -> 
                    22858, "serviced" -> 22859, "stakeholders" -> 22860, 
                    "neumann" -> 22861, "bb" -> 22862, "##eers" -> 22863, 
                    "comb" -> 22864, "##gam" -> 22865, "catchment" -> 22866, 
                    "pinning" -> 22867, "rallies" -> 22868, "typing" -> 22869,
                     "##elles" -> 22870, "forefront" -> 22871, "freiburg" -> 
                    22872, "sweetie" -> 22873, "giacomo" -> 22874, "widowed" -> 
                    22875, "goodwill" -> 22876, "worshipped" -> 22877, 
                    "aspirations" -> 22878, "midday" -> 22879, "##vat" -> 
                    22880, "fishery" -> 22881, "##trick" -> 22882, 
                    "bournemouth" -> 22883, "turk" -> 22884, "243" -> 22885, 
                    "hearth" -> 22886, "ethanol" -> 22887, "guadalajara" -> 
                    22888, "murmurs" -> 22889, "sl" -> 22890, "##uge" -> 
                    22891, "afforded" -> 22892, "scripted" -> 22893, "##hta" -> 
                    22894, "wah" -> 22895, "##jn" -> 22896, "coroner" -> 
                    22897, "translucent" -> 22898, "252" -> 22899, 
                    "memorials" -> 22900, "puck" -> 22901, "progresses" -> 
                    22902, "clumsy" -> 22903, "##race" -> 22904, "315" -> 
                    22905, "candace" -> 22906, "recounted" -> 22907, "##27" -> 
                    22908, "##slin" -> 22909, "##uve" -> 22910, "filtering" -> 
                    22911, "##mac" -> 22912, "howl" -> 22913, "strata" -> 
                    22914, "heron" -> 22915, "leveled" -> 22916, "##ays" -> 
                    22917, "dubious" -> 22918, "##oja" -> 22919, "##\:0442" -> 
                    22920, "##wheel" -> 22921, "citations" -> 22922, 
                    "exhibiting" -> 22923, "##laya" -> 22924, "##mics" -> 
                    22925, "##pods" -> 22926, "turkic" -> 22927, "##lberg" -> 
                    22928, "injunction" -> 22929, "##ennial" -> 22930, 
                    "##mit" -> 22931, "antibodies" -> 22932, "##44" -> 22933, 
                    "organise" -> 22934, "##rigues" -> 22935, 
                    "cardiovascular" -> 22936, "cushion" -> 22937, 
                    "inverness" -> 22938, "##zquez" -> 22939, "dia" -> 22940, 
                    "cocoa" -> 22941, "sibling" -> 22942, "##tman" -> 22943, 
                    "##roid" -> 22944, "expanse" -> 22945, "feasible" -> 
                    22946, "tunisian" -> 22947, "algiers" -> 22948, "##relli" -> 
                    22949, "rus" -> 22950, "bloomberg" -> 22951, "dso" -> 
                    22952, "westphalia" -> 22953, "bro" -> 22954, "tacoma" -> 
                    22955, "281" -> 22956, "downloads" -> 22957, "##ours" -> 
                    22958, "konrad" -> 22959, "duran" -> 22960, "##hdi" -> 
                    22961, "continuum" -> 22962, "jett" -> 22963, "compares" -> 
                    22964, "legislator" -> 22965, "secession" -> 22966, 
                    "##nable" -> 22967, "##gues" -> 22968, "##zuka" -> 22969, 
                    "translating" -> 22970, "reacher" -> 22971, "##gley" -> 
                    22972, "##\[LSlash]a" -> 22973, "aleppo" -> 22974, 
                    "##agi" -> 22975, "tc" -> 22976, "orchards" -> 22977, 
                    "trapping" -> 22978, "linguist" -> 22979, "versatile" -> 
                    22980, "drumming" -> 22981, "postage" -> 22982, "calhoun" -> 
                    22983, "superiors" -> 22984, "##mx" -> 22985, "barefoot" -> 
                    22986, "leary" -> 22987, "##cis" -> 22988, "ignacio" -> 
                    22989, "alfa" -> 22990, "kaplan" -> 22991, "##rogen" -> 
                    22992, "bratislava" -> 22993, "mori" -> 22994, "##vot" -> 
                    22995, "disturb" -> 22996, "haas" -> 22997, "313" -> 
                    22998, "cartridges" -> 22999, "gilmore" -> 23000, 
                    "radiated" -> 23001, "salford" -> 23002, "tunic" -> 23003,
                     "hades" -> 23004, "##ulsive" -> 23005, "archeological" -> 
                    23006, "delilah" -> 23007, "magistrates" -> 23008, 
                    "auditioned" -> 23009, "brewster" -> 23010, "charters" -> 
                    23011, "empowerment" -> 23012, "blogs" -> 23013, 
                    "cappella" -> 23014, "dynasties" -> 23015, "iroquois" -> 
                    23016, "whipping" -> 23017, "##krishna" -> 23018, 
                    "raceway" -> 23019, "truths" -> 23020, "myra" -> 23021, 
                    "weaken" -> 23022, "judah" -> 23023, "mcgregor" -> 23024, 
                    "##horse" -> 23025, "mic" -> 23026, "refueling" -> 23027, 
                    "37th" -> 23028, "burnley" -> 23029, "bosses" -> 23030, 
                    "markus" -> 23031, "premio" -> 23032, "query" -> 23033, 
                    "##gga" -> 23034, "dunbar" -> 23035, "##economic" -> 
                    23036, "darkest" -> 23037, "lyndon" -> 23038, "sealing" -> 
                    23039, "commendation" -> 23040, "reappeared" -> 23041, 
                    "##mun" -> 23042, "addicted" -> 23043, "ezio" -> 23044, 
                    "slaughtered" -> 23045, "satisfactory" -> 23046, 
                    "shuffle" -> 23047, "##eves" -> 23048, "##thic" -> 23049, 
                    "##uj" -> 23050, "fortification" -> 23051, "warrington" -> 
                    23052, "##otto" -> 23053, "resurrected" -> 23054, "fargo" -> 
                    23055, "mane" -> 23056, "##utable" -> 23057, "##lei" -> 
                    23058, "##space" -> 23059, "foreword" -> 23060, "ox" -> 
                    23061, "##aris" -> 23062, "##vern" -> 23063, "abrams" -> 
                    23064, "hua" -> 23065, "##mento" -> 23066, "sakura" -> 
                    23067, "##alo" -> 23068, "uv" -> 23069, "sentimental" -> 
                    23070, "##skaya" -> 23071, "midfield" -> 23072, "##eses" -> 
                    23073, "sturdy" -> 23074, "scrolls" -> 23075, "macleod" -> 
                    23076, "##kyu" -> 23077, "entropy" -> 23078, "##lance" -> 
                    23079, "mitochondrial" -> 23080, "cicero" -> 23081, 
                    "excelled" -> 23082, "thinner" -> 23083, "convoys" -> 
                    23084, "perceive" -> 23085, "##oslav" -> 23086, 
                    "##urable" -> 23087, "systematically" -> 23088, "grind" -> 
                    23089, "burkina" -> 23090, "287" -> 23091, "##tagram" -> 
                    23092, "ops" -> 23093, "##aman" -> 23094, "guantanamo" -> 
                    23095, "##cloth" -> 23096, "##tite" -> 23097, 
                    "forcefully" -> 23098, "wavy" -> 23099, "##jou" -> 23100, 
                    "pointless" -> 23101, "##linger" -> 23102, "##tze" -> 
                    23103, "layton" -> 23104, "portico" -> 23105, 
                    "superficial" -> 23106, "clerical" -> 23107, "outlaws" -> 
                    23108, "##hism" -> 23109, "burials" -> 23110, "muir" -> 
                    23111, "##inn" -> 23112, "creditors" -> 23113, "hauling" -> 
                    23114, "rattle" -> 23115, "##leg" -> 23116, "calais" -> 
                    23117, "monde" -> 23118, "archers" -> 23119, "reclaimed" -> 
                    23120, "dwell" -> 23121, "wexford" -> 23122, "hellenic" -> 
                    23123, "falsely" -> 23124, "remorse" -> 23125, "##tek" -> 
                    23126, "dough" -> 23127, "furnishings" -> 23128, 
                    "##uttered" -> 23129, "gabon" -> 23130, "neurological" -> 
                    23131, "novice" -> 23132, "##igraphy" -> 23133, 
                    "contemplated" -> 23134, "pulpit" -> 23135, "nightstand" -> 
                    23136, "saratoga" -> 23137, "##istan" -> 23138, 
                    "documenting" -> 23139, "pulsing" -> 23140, "taluk" -> 
                    23141, "##firmed" -> 23142, "busted" -> 23143, "marital" -> 
                    23144, "##rien" -> 23145, "disagreements" -> 23146, 
                    "wasps" -> 23147, "##yes" -> 23148, "hodge" -> 23149, 
                    "mcdonnell" -> 23150, "mimic" -> 23151, "fran" -> 23152, 
                    "pendant" -> 23153, "dhabi" -> 23154, "musa" -> 23155, 
                    "##nington" -> 23156, "congratulations" -> 23157, 
                    "argent" -> 23158, "darrell" -> 23159, "concussion" -> 
                    23160, "losers" -> 23161, "regrets" -> 23162, 
                    "thessaloniki" -> 23163, "reversal" -> 23164, "donaldson" -> 
                    23165, "hardwood" -> 23166, "thence" -> 23167, "achilles" -> 
                    23168, "ritter" -> 23169, "##eran" -> 23170, "demonic" -> 
                    23171, "jurgen" -> 23172, "prophets" -> 23173, "goethe" -> 
                    23174, "eki" -> 23175, "classmate" -> 23176, "buff" -> 
                    23177, "##cking" -> 23178, "yank" -> 23179, "irrational" -> 
                    23180, "##inging" -> 23181, "perished" -> 23182, 
                    "seductive" -> 23183, "qur" -> 23184, "sourced" -> 23185, 
                    "##crat" -> 23186, "##typic" -> 23187, "mustard" -> 23188,
                     "ravine" -> 23189, "barre" -> 23190, "horizontally" -> 
                    23191, "characterization" -> 23192, "phylogenetic" -> 
                    23193, "boise" -> 23194, "##dit" -> 23195, "##runner" -> 
                    23196, "##tower" -> 23197, "brutally" -> 23198, 
                    "intercourse" -> 23199, "seduce" -> 23200, "##bbing" -> 
                    23201, "fay" -> 23202, "ferris" -> 23203, "ogden" -> 
                    23204, "amar" -> 23205, "nik" -> 23206, "unarmed" -> 
                    23207, "##inator" -> 23208, "evaluating" -> 23209, 
                    "kyrgyzstan" -> 23210, "sweetness" -> 23211, "##lford" -> 
                    23212, "##oki" -> 23213, "mccormick" -> 23214, "meiji" -> 
                    23215, "notoriety" -> 23216, "stimulate" -> 23217, 
                    "disrupt" -> 23218, "figuring" -> 23219, "instructional" -> 
                    23220, "mcgrath" -> 23221, "##zoo" -> 23222, 
                    "groundbreaking" -> 23223, "##lto" -> 23224, "flinch" -> 
                    23225, "khorasan" -> 23226, "agrarian" -> 23227, 
                    "bengals" -> 23228, "mixer" -> 23229, "radiating" -> 
                    23230, "##sov" -> 23231, "ingram" -> 23232, "pitchers" -> 
                    23233, "nad" -> 23234, "tariff" -> 23235, "##cript" -> 
                    23236, "tata" -> 23237, "##codes" -> 23238, "##emi" -> 
                    23239, "##ungen" -> 23240, "appellate" -> 23241, "lehigh" -> 
                    23242, "##bled" -> 23243, "##giri" -> 23244, "brawl" -> 
                    23245, "duct" -> 23246, "texans" -> 23247, "##ciation" -> 
                    23248, "##ropolis" -> 23249, "skipper" -> 23250, 
                    "speculative" -> 23251, "vomit" -> 23252, "doctrines" -> 
                    23253, "stresses" -> 23254, "253" -> 23255, "davy" -> 
                    23256, "graders" -> 23257, "whitehead" -> 23258, "jozef" -> 
                    23259, "timely" -> 23260, "cumulative" -> 23261, 
                    "haryana" -> 23262, "paints" -> 23263, "appropriately" -> 
                    23264, "boon" -> 23265, "cactus" -> 23266, "##ales" -> 
                    23267, "##pid" -> 23268, "dow" -> 23269, "legions" -> 
                    23270, "##pit" -> 23271, "perceptions" -> 23272, "1730" -> 
                    23273, "picturesque" -> 23274, "##yse" -> 23275, 
                    "periphery" -> 23276, "rune" -> 23277, "wr" -> 23278, 
                    "##aha" -> 23279, "celtics" -> 23280, "sentencing" -> 
                    23281, "whoa" -> 23282, "##erin" -> 23283, "confirms" -> 
                    23284, "variance" -> 23285, "425" -> 23286, "moines" -> 
                    23287, "mathews" -> 23288, "spade" -> 23289, "rave" -> 
                    23290, "m1" -> 23291, "fronted" -> 23292, "fx" -> 23293, 
                    "blending" -> 23294, "alleging" -> 23295, "reared" -> 
                    23296, "##gl" -> 23297, "237" -> 23298, "##paper" -> 
                    23299, "grassroots" -> 23300, "eroded" -> 23301, "##free" -> 
                    23302, "##physical" -> 23303, "directs" -> 23304, 
                    "ordeal" -> 23305, "##s\[LSlash]aw" -> 23306, 
                    "accelerate" -> 23307, "hacker" -> 23308, "rooftop" -> 
                    23309, "##inia" -> 23310, "lev" -> 23311, "buys" -> 23312,
                     "cebu" -> 23313, "devote" -> 23314, "##lce" -> 23315, 
                    "specialising" -> 23316, "##ulsion" -> 23317, 
                    "choreographed" -> 23318, "repetition" -> 23319, 
                    "warehouses" -> 23320, "##ryl" -> 23321, "paisley" -> 
                    23322, "tuscany" -> 23323, "analogy" -> 23324, "sorcerer" -> 
                    23325, "hash" -> 23326, "huts" -> 23327, "shards" -> 
                    23328, "descends" -> 23329, "exclude" -> 23330, "nix" -> 
                    23331, "chaplin" -> 23332, "gaga" -> 23333, "ito" -> 
                    23334, "vane" -> 23335, "##drich" -> 23336, "causeway" -> 
                    23337, "misconduct" -> 23338, "limo" -> 23339, 
                    "orchestrated" -> 23340, "glands" -> 23341, "jana" -> 
                    23342, "##kot" -> 23343, "u2" -> 23344, "##mple" -> 23345,
                     "##sons" -> 23346, "branching" -> 23347, "contrasts" -> 
                    23348, "scoop" -> 23349, "longed" -> 23350, "##virus" -> 
                    23351, "chattanooga" -> 23352, "##75" -> 23353, "syrup" -> 
                    23354, "cornerstone" -> 23355, "##tized" -> 23356, 
                    "##mind" -> 23357, "##iaceae" -> 23358, "careless" -> 
                    23359, "precedence" -> 23360, "frescoes" -> 23361, 
                    "##uet" -> 23362, "chilled" -> 23363, "consult" -> 23364, 
                    "modelled" -> 23365, "snatch" -> 23366, "peat" -> 23367, 
                    "##thermal" -> 23368, "caucasian" -> 23369, "humane" -> 
                    23370, "relaxation" -> 23371, "spins" -> 23372, 
                    "temperance" -> 23373, "##lbert" -> 23374, "occupations" -> 
                    23375, "lambda" -> 23376, "hybrids" -> 23377, "moons" -> 
                    23378, "mp3" -> 23379, "##oese" -> 23380, "247" -> 23381, 
                    "rolf" -> 23382, "societal" -> 23383, "yerevan" -> 23384, 
                    "ness" -> 23385, "##ssler" -> 23386, "befriended" -> 
                    23387, "mechanized" -> 23388, "nominate" -> 23389, 
                    "trough" -> 23390, "boasted" -> 23391, "cues" -> 23392, 
                    "seater" -> 23393, "##hom" -> 23394, "bends" -> 23395, 
                    "##tangle" -> 23396, "conductors" -> 23397, "emptiness" -> 
                    23398, "##lmer" -> 23399, "eurasian" -> 23400, "adriatic" -> 
                    23401, "tian" -> 23402, "##cie" -> 23403, "anxiously" -> 
                    23404, "lark" -> 23405, "propellers" -> 23406, 
                    "chichester" -> 23407, "jock" -> 23408, "ev" -> 23409, 
                    "2a" -> 23410, "##holding" -> 23411, "credible" -> 23412, 
                    "recounts" -> 23413, "tori" -> 23414, "loyalist" -> 23415,
                     "abduction" -> 23416, "##hoot" -> 23417, "##redo" -> 
                    23418, "nepali" -> 23419, "##mite" -> 23420, "ventral" -> 
                    23421, "tempting" -> 23422, "##ango" -> 23423, "##crats" -> 
                    23424, "steered" -> 23425, "##wice" -> 23426, "javelin" -> 
                    23427, "dipping" -> 23428, "laborers" -> 23429, 
                    "prentice" -> 23430, "looming" -> 23431, "titanium" -> 
                    23432, "##\:02d0" -> 23433, "badges" -> 23434, "emir" -> 
                    23435, "tensor" -> 23436, "##ntation" -> 23437, 
                    "egyptians" -> 23438, "rash" -> 23439, "denies" -> 23440, 
                    "hawthorne" -> 23441, "lombard" -> 23442, "showers" -> 
                    23443, "wehrmacht" -> 23444, "dietary" -> 23445, "trojan" -> 
                    23446, "##reus" -> 23447, "welles" -> 23448, "executing" -> 
                    23449, "horseshoe" -> 23450, "lifeboat" -> 23451, "##lak" -> 
                    23452, "elsa" -> 23453, "infirmary" -> 23454, "nearing" -> 
                    23455, "roberta" -> 23456, "boyer" -> 23457, "mutter" -> 
                    23458, "trillion" -> 23459, "joanne" -> 23460, "##fine" -> 
                    23461, "##oked" -> 23462, "sinks" -> 23463, "vortex" -> 
                    23464, "uruguayan" -> 23465, "clasp" -> 23466, "sirius" -> 
                    23467, "##block" -> 23468, "accelerator" -> 23469, 
                    "prohibit" -> 23470, "sunken" -> 23471, "byu" -> 23472, 
                    "chronological" -> 23473, "diplomats" -> 23474, 
                    "ochreous" -> 23475, "510" -> 23476, "symmetrical" -> 
                    23477, "1644" -> 23478, "maia" -> 23479, "##tology" -> 
                    23480, "salts" -> 23481, "reigns" -> 23482, "atrocities" -> 
                    23483, "##\:0438\:044f" -> 23484, "hess" -> 23485, 
                    "bared" -> 23486, "issn" -> 23487, "##vyn" -> 23488, 
                    "cater" -> 23489, "saturated" -> 23490, "##cycle" -> 
                    23491, "##isse" -> 23492, "sable" -> 23493, "voyager" -> 
                    23494, "dyer" -> 23495, "yusuf" -> 23496, "##inge" -> 
                    23497, "fountains" -> 23498, "wolff" -> 23499, "##39" -> 
                    23500, "##nni" -> 23501, "engraving" -> 23502, "rollins" -> 
                    23503, "atheist" -> 23504, "ominous" -> 23505, "##ault" -> 
                    23506, "herr" -> 23507, "chariot" -> 23508, "martina" -> 
                    23509, "strung" -> 23510, "##fell" -> 23511, "##farlane" -> 2\
3512, "horrific" -> 23513, "sahib" -> 23514, "gazes" -> 23515, "saetan" -> 
                    23516, "erased" -> 23517, "ptolemy" -> 23518, "##olic" -> 
                    23519, "flushing" -> 23520, "lauderdale" -> 23521, 
                    "analytic" -> 23522, "##ices" -> 23523, "530" -> 23524, 
                    "navarro" -> 23525, "beak" -> 23526, "gorilla" -> 23527, 
                    "herrera" -> 23528, "broom" -> 23529, "guadalupe" -> 
                    23530, "raiding" -> 23531, "sykes" -> 23532, "311" -> 
                    23533, "bsc" -> 23534, "deliveries" -> 23535, "1720" -> 
                    23536, "invasions" -> 23537, "carmichael" -> 23538, 
                    "tajikistan" -> 23539, "thematic" -> 23540, "ecumenical" -> 
                    23541, "sentiments" -> 23542, "onstage" -> 23543, 
                    "##rians" -> 23544, "##brand" -> 23545, "##sume" -> 23546,
                     "catastrophic" -> 23547, "flanks" -> 23548, "molten" -> 
                    23549, "##arns" -> 23550, "waller" -> 23551, "aimee" -> 
                    23552, "terminating" -> 23553, "##icing" -> 23554, 
                    "alternately" -> 23555, "##oche" -> 23556, "nehru" -> 
                    23557, "printers" -> 23558, "outraged" -> 23559, 
                    "##eving" -> 23560, "empires" -> 23561, "template" -> 
                    23562, "banners" -> 23563, "repetitive" -> 23564, "za" -> 
                    23565, "##oise" -> 23566, "vegetarian" -> 23567, "##tell" -> 
                    23568, "guiana" -> 23569, "opt" -> 23570, "cavendish" -> 
                    23571, "lucknow" -> 23572, "synthesized" -> 23573, 
                    "##hani" -> 23574, "##mada" -> 23575, "finalized" -> 
                    23576, "##ctable" -> 23577, "fictitious" -> 23578, 
                    "mayoral" -> 23579, "unreliable" -> 23580, "##enham" -> 
                    23581, "embracing" -> 23582, "peppers" -> 23583, "rbis" -> 
                    23584, "##chio" -> 23585, "##neo" -> 23586, "inhibition" -> 
                    23587, "slashed" -> 23588, "togo" -> 23589, "orderly" -> 
                    23590, "embroidered" -> 23591, "safari" -> 23592, "salty" -> 
                    23593, "236" -> 23594, "barron" -> 23595, "benito" -> 
                    23596, "totaled" -> 23597, "##dak" -> 23598, "pubs" -> 
                    23599, "simulated" -> 23600, "caden" -> 23601, "devin" -> 
                    23602, "tolkien" -> 23603, "momma" -> 23604, "welding" -> 
                    23605, "sesame" -> 23606, "##ept" -> 23607, "gottingen" -> 
                    23608, "hardness" -> 23609, "630" -> 23610, "shaman" -> 
                    23611, "temeraire" -> 23612, "620" -> 23613, "adequately" -> 
                    23614, "pediatric" -> 23615, "##kit" -> 23616, "ck" -> 
                    23617, "assertion" -> 23618, "radicals" -> 23619, 
                    "composure" -> 23620, "cadence" -> 23621, "seafood" -> 
                    23622, "beaufort" -> 23623, "lazarus" -> 23624, "mani" -> 
                    23625, "warily" -> 23626, "cunning" -> 23627, "kurdistan" -> 
                    23628, "249" -> 23629, "cantata" -> 23630, "##kir" -> 
                    23631, "ares" -> 23632, "##41" -> 23633, "##clusive" -> 
                    23634, "nape" -> 23635, "townland" -> 23636, "geared" -> 
                    23637, "insulted" -> 23638, "flutter" -> 23639, "boating" -> 
                    23640, "violate" -> 23641, "draper" -> 23642, "dumping" -> 
                    23643, "malmo" -> 23644, "##hh" -> 23645, "##romatic" -> 
                    23646, "firearm" -> 23647, "alta" -> 23648, "bono" -> 
                    23649, "obscured" -> 23650, "##clave" -> 23651, "exceeds" -> 
                    23652, "panorama" -> 23653, "unbelievable" -> 23654, 
                    "##train" -> 23655, "preschool" -> 23656, "##essed" -> 
                    23657, "disconnected" -> 23658, "installing" -> 23659, 
                    "rescuing" -> 23660, "secretaries" -> 23661, 
                    "accessibility" -> 23662, "##castle" -> 23663, "##drive" -> 
                    23664, "##ifice" -> 23665, "##film" -> 23666, "bouts" -> 
                    23667, "slug" -> 23668, "waterway" -> 23669, "mindanao" -> 
                    23670, "##buro" -> 23671, "##ratic" -> 23672, "halves" -> 
                    23673, "##\:0644" -> 23674, "calming" -> 23675, "liter" -> 
                    23676, "maternity" -> 23677, "adorable" -> 23678, "bragg" -> 
                    23679, "electrification" -> 23680, "mcc" -> 23681, 
                    "##dote" -> 23682, "roxy" -> 23683, "schizophrenia" -> 
                    23684, "##body" -> 23685, "munoz" -> 23686, "kaye" -> 
                    23687, "whaling" -> 23688, "239" -> 23689, "mil" -> 23690,
                     "tingling" -> 23691, "tolerant" -> 23692, "##ago" -> 
                    23693, "unconventional" -> 23694, "volcanoes" -> 23695, 
                    "##finder" -> 23696, "deportivo" -> 23697, "##llie" -> 
                    23698, "robson" -> 23699, "kaufman" -> 23700, 
                    "neuroscience" -> 23701, "wai" -> 23702, "deportation" -> 
                    23703, "masovian" -> 23704, "scraping" -> 23705, 
                    "converse" -> 23706, "##bh" -> 23707, "hacking" -> 23708, 
                    "bulge" -> 23709, "##oun" -> 23710, "administratively" -> 
                    23711, "yao" -> 23712, "580" -> 23713, "amp" -> 23714, 
                    "mammoth" -> 23715, "booster" -> 23716, "claremont" -> 
                    23717, "hooper" -> 23718, "nomenclature" -> 23719, 
                    "pursuits" -> 23720, "mclaughlin" -> 23721, "melinda" -> 
                    23722, "##sul" -> 23723, "catfish" -> 23724, "barclay" -> 
                    23725, "substrates" -> 23726, "taxa" -> 23727, "zee" -> 
                    23728, "originals" -> 23729, "kimberly" -> 23730, 
                    "packets" -> 23731, "padma" -> 23732, "##ality" -> 23733, 
                    "borrowing" -> 23734, "ostensibly" -> 23735, "solvent" -> 
                    23736, "##bri" -> 23737, "##genesis" -> 23738, "##mist" -> 
                    23739, "lukas" -> 23740, "shreveport" -> 23741, 
                    "veracruz" -> 23742, "##\:044c" -> 23743, "##lou" -> 
                    23744, "##wives" -> 23745, "cheney" -> 23746, "tt" -> 
                    23747, "anatolia" -> 23748, "hobbs" -> 23749, "##zyn" -> 
                    23750, "cyclic" -> 23751, "radiant" -> 23752, "alistair" -> 
                    23753, "greenish" -> 23754, "siena" -> 23755, "dat" -> 
                    23756, "independents" -> 23757, "##bation" -> 23758, 
                    "conform" -> 23759, "pieter" -> 23760, "hyper" -> 23761, 
                    "applicant" -> 23762, "bradshaw" -> 23763, "spores" -> 
                    23764, "telangana" -> 23765, "vinci" -> 23766, 
                    "inexpensive" -> 23767, "nuclei" -> 23768, "322" -> 23769,
                     "jang" -> 23770, "nme" -> 23771, "soho" -> 23772, "spd" -> 
                    23773, "##ign" -> 23774, "cradled" -> 23775, 
                    "receptionist" -> 23776, "pow" -> 23777, "##43" -> 23778, 
                    "##rika" -> 23779, "fascism" -> 23780, "##ifer" -> 23781, 
                    "experimenting" -> 23782, "##ading" -> 23783, "##iec" -> 
                    23784, "##region" -> 23785, "345" -> 23786, "jocelyn" -> 
                    23787, "maris" -> 23788, "stair" -> 23789, "nocturnal" -> 
                    23790, "toro" -> 23791, "constabulary" -> 23792, "elgin" -> 
                    23793, "##kker" -> 23794, "msc" -> 23795, "##giving" -> 
                    23796, "##schen" -> 23797, "##rase" -> 23798, "doherty" -> 
                    23799, "doping" -> 23800, "sarcastically" -> 23801, 
                    "batter" -> 23802, "maneuvers" -> 23803, "##cano" -> 
                    23804, "##apple" -> 23805, "##gai" -> 23806, "##git" -> 
                    23807, "intrinsic" -> 23808, "##nst" -> 23809, "##stor" -> 
                    23810, "1753" -> 23811, "showtime" -> 23812, "cafes" -> 
                    23813, "gasps" -> 23814, "lviv" -> 23815, "ushered" -> 
                    23816, "##thed" -> 23817, "fours" -> 23818, "restart" -> 
                    23819, "astonishment" -> 23820, "transmitting" -> 23821, 
                    "flyer" -> 23822, "shrugs" -> 23823, "##sau" -> 23824, 
                    "intriguing" -> 23825, "cones" -> 23826, "dictated" -> 
                    23827, "mushrooms" -> 23828, "medial" -> 23829, 
                    "##kovsky" -> 23830, "##elman" -> 23831, "escorting" -> 
                    23832, "gaped" -> 23833, "##26" -> 23834, "godfather" -> 
                    23835, "##door" -> 23836, "##sell" -> 23837, "djs" -> 
                    23838, "recaptured" -> 23839, "timetable" -> 23840, 
                    "vila" -> 23841, "1710" -> 23842, "3a" -> 23843, 
                    "aerodrome" -> 23844, "mortals" -> 23845, "scientology" -> 
                    23846, "##orne" -> 23847, "angelina" -> 23848, "mag" -> 
                    23849, "convection" -> 23850, "unpaid" -> 23851, 
                    "insertion" -> 23852, "intermittent" -> 23853, "lego" -> 
                    23854, "##nated" -> 23855, "endeavor" -> 23856, "kota" -> 
                    23857, "pereira" -> 23858, "##lz" -> 23859, "304" -> 
                    23860, "bwv" -> 23861, "glamorgan" -> 23862, "insults" -> 
                    23863, "agatha" -> 23864, "fey" -> 23865, "##cend" -> 
                    23866, "fleetwood" -> 23867, "mahogany" -> 23868, 
                    "protruding" -> 23869, "steamship" -> 23870, "zeta" -> 
                    23871, "##arty" -> 23872, "mcguire" -> 23873, "suspense" -> 
                    23874, "##sphere" -> 23875, "advising" -> 23876, "urges" -> 
                    23877, "##wala" -> 23878, "hurriedly" -> 23879, "meteor" -> 
                    23880, "gilded" -> 23881, "inline" -> 23882, "arroyo" -> 
                    23883, "stalker" -> 23884, "##oge" -> 23885, "excitedly" -> 
                    23886, "revered" -> 23887, "##cure" -> 23888, "earle" -> 
                    23889, "introductory" -> 23890, "##break" -> 23891, 
                    "##ilde" -> 23892, "mutants" -> 23893, "puff" -> 23894, 
                    "pulses" -> 23895, "reinforcement" -> 23896, "##haling" -> 
                    23897, "curses" -> 23898, "lizards" -> 23899, "stalk" -> 
                    23900, "correlated" -> 23901, "##fixed" -> 23902, 
                    "fallout" -> 23903, "macquarie" -> 23904, "##unas" -> 
                    23905, "bearded" -> 23906, "denton" -> 23907, "heaving" -> 
                    23908, "802" -> 23909, "##ocation" -> 23910, "winery" -> 
                    23911, "assign" -> 23912, "dortmund" -> 23913, "##lkirk" -> 
                    23914, "everest" -> 23915, "invariant" -> 23916, 
                    "charismatic" -> 23917, "susie" -> 23918, "##elling" -> 
                    23919, "bled" -> 23920, "lesley" -> 23921, "telegram" -> 
                    23922, "sumner" -> 23923, "bk" -> 23924, "##ogen" -> 
                    23925, "##\:043a" -> 23926, "wilcox" -> 23927, "needy" -> 
                    23928, "colbert" -> 23929, "duval" -> 23930, "##iferous" -> 
                    23931, "##mbled" -> 23932, "allotted" -> 23933, "attends" -> 
                    23934, "imperative" -> 23935, "##hita" -> 23936, 
                    "replacements" -> 23937, "hawker" -> 23938, "##inda" -> 
                    23939, "insurgency" -> 23940, "##zee" -> 23941, "##eke" -> 
                    23942, "casts" -> 23943, "##yla" -> 23944, "680" -> 23945,
                     "ives" -> 23946, "transitioned" -> 23947, "##pack" -> 
                    23948, "##powering" -> 23949, "authoritative" -> 23950, 
                    "baylor" -> 23951, "flex" -> 23952, "cringed" -> 23953, 
                    "plaintiffs" -> 23954, "woodrow" -> 23955, "##skie" -> 
                    23956, "drastic" -> 23957, "ape" -> 23958, "aroma" -> 
                    23959, "unfolded" -> 23960, "commotion" -> 23961, "nt" -> 
                    23962, "preoccupied" -> 23963, "theta" -> 23964, 
                    "routines" -> 23965, "lasers" -> 23966, "privatization" -> 
                    23967, "wand" -> 23968, "domino" -> 23969, "ek" -> 23970, 
                    "clenching" -> 23971, "nsa" -> 23972, "strategically" -> 
                    23973, "showered" -> 23974, "bile" -> 23975, 
                    "handkerchief" -> 23976, "pere" -> 23977, "storing" -> 
                    23978, "christophe" -> 23979, "insulting" -> 23980, "316" -> 
                    23981, "nakamura" -> 23982, "romani" -> 23983, "asiatic" -> 
                    23984, "magdalena" -> 23985, "palma" -> 23986, "cruises" -> 
                    23987, "stripping" -> 23988, "405" -> 23989, "konstantin" -> 
                    23990, "soaring" -> 23991, "##berman" -> 23992, 
                    "colloquially" -> 23993, "forerunner" -> 23994, 
                    "havilland" -> 23995, "incarcerated" -> 23996, 
                    "parasites" -> 23997, "sincerity" -> 23998, "##utus" -> 
                    23999, "disks" -> 24000, "plank" -> 24001, "saigon" -> 
                    24002, "##ining" -> 24003, "corbin" -> 24004, "homo" -> 
                    24005, "ornaments" -> 24006, "powerhouse" -> 24007, 
                    "##tlement" -> 24008, "chong" -> 24009, "fastened" -> 
                    24010, "feasibility" -> 24011, "idf" -> 24012, 
                    "morphological" -> 24013, "usable" -> 24014, "##nish" -> 
                    24015, "##zuki" -> 24016, "aqueduct" -> 24017, "jaguars" -> 
                    24018, "keepers" -> 24019, "##flies" -> 24020, 
                    "aleksandr" -> 24021, "faust" -> 24022, "assigns" -> 
                    24023, "ewing" -> 24024, "bacterium" -> 24025, "hurled" -> 
                    24026, "tricky" -> 24027, "hungarians" -> 24028, 
                    "integers" -> 24029, "wallis" -> 24030, "321" -> 24031, 
                    "yamaha" -> 24032, "##isha" -> 24033, "hushed" -> 24034, 
                    "oblivion" -> 24035, "aviator" -> 24036, "evangelist" -> 
                    24037, "friars" -> 24038, "##eller" -> 24039, "monograph" -> 
                    24040, "ode" -> 24041, "##nary" -> 24042, "airplanes" -> 
                    24043, "labourers" -> 24044, "charms" -> 24045, "##nee" -> 
                    24046, "1661" -> 24047, "hagen" -> 24048, "tnt" -> 24049, 
                    "rudder" -> 24050, "fiesta" -> 24051, "transcript" -> 
                    24052, "dorothea" -> 24053, "ska" -> 24054, "inhibitor" -> 
                    24055, "maccabi" -> 24056, "retorted" -> 24057, "raining" -> 
                    24058, "encompassed" -> 24059, "clauses" -> 24060, 
                    "menacing" -> 24061, "1642" -> 24062, "lineman" -> 24063, 
                    "##gist" -> 24064, "vamps" -> 24065, "##ape" -> 24066, 
                    "##dick" -> 24067, "gloom" -> 24068, "##rera" -> 24069, 
                    "dealings" -> 24070, "easing" -> 24071, "seekers" -> 
                    24072, "##nut" -> 24073, "##pment" -> 24074, "helens" -> 
                    24075, "unmanned" -> 24076, "##anu" -> 24077, "##isson" -> 
                    24078, "basics" -> 24079, "##amy" -> 24080, "##ckman" -> 
                    24081, "adjustments" -> 24082, "1688" -> 24083, 
                    "brutality" -> 24084, "horne" -> 24085, "##zell" -> 24086,
                     "sui" -> 24087, "##55" -> 24088, "##mable" -> 24089, 
                    "aggregator" -> 24090, "##thal" -> 24091, "rhino" -> 
                    24092, "##drick" -> 24093, "##vira" -> 24094, "counters" -> 
                    24095, "zoom" -> 24096, "##01" -> 24097, "##rting" -> 
                    24098, "mn" -> 24099, "montenegrin" -> 24100, "packard" -> 
                    24101, "##unciation" -> 24102, "##\[Flat]" -> 24103, 
                    "##kki" -> 24104, "reclaim" -> 24105, "scholastic" -> 
                    24106, "thugs" -> 24107, "pulsed" -> 24108, "##icia" -> 
                    24109, "syriac" -> 24110, "quan" -> 24111, "saddam" -> 
                    24112, "banda" -> 24113, "kobe" -> 24114, "blaming" -> 
                    24115, "buddies" -> 24116, "dissent" -> 24117, "##lusion" -> 
                    24118, "##usia" -> 24119, "corbett" -> 24120, "jaya" -> 
                    24121, "delle" -> 24122, "erratic" -> 24123, "lexie" -> 
                    24124, "##hesis" -> 24125, "435" -> 24126, "amiga" -> 
                    24127, "hermes" -> 24128, "##pressing" -> 24129, "##leen" -> 
                    24130, "chapels" -> 24131, "gospels" -> 24132, "jamal" -> 
                    24133, "##uating" -> 24134, "compute" -> 24135, 
                    "revolving" -> 24136, "warp" -> 24137, "##sso" -> 24138, 
                    "##thes" -> 24139, "armory" -> 24140, "##eras" -> 24141, 
                    "##gol" -> 24142, "antrim" -> 24143, "loki" -> 24144, 
                    "##kow" -> 24145, "##asian" -> 24146, "##good" -> 24147, 
                    "##zano" -> 24148, "braid" -> 24149, "handwriting" -> 
                    24150, "subdistrict" -> 24151, "funky" -> 24152, 
                    "pantheon" -> 24153, "##iculate" -> 24154, "concurrency" -> 
                    24155, "estimation" -> 24156, "improper" -> 24157, 
                    "juliana" -> 24158, "##his" -> 24159, "newcomers" -> 
                    24160, "johnstone" -> 24161, "staten" -> 24162, 
                    "communicated" -> 24163, "##oco" -> 24164, "##alle" -> 
                    24165, "sausage" -> 24166, "stormy" -> 24167, "##stered" -> 
                    24168, "##tters" -> 24169, "superfamily" -> 24170, 
                    "##grade" -> 24171, "acidic" -> 24172, "collateral" -> 
                    24173, "tabloid" -> 24174, "##oped" -> 24175, "##rza" -> 
                    24176, "bladder" -> 24177, "austen" -> 24178, "##ellant" -> 
                    24179, "mcgraw" -> 24180, "##hay" -> 24181, "hannibal" -> 
                    24182, "mein" -> 24183, "aquino" -> 24184, "lucifer" -> 
                    24185, "wo" -> 24186, "badger" -> 24187, "boar" -> 24188, 
                    "cher" -> 24189, "christensen" -> 24190, "greenberg" -> 
                    24191, "interruption" -> 24192, "##kken" -> 24193, "jem" -> 
                    24194, "244" -> 24195, "mocked" -> 24196, "bottoms" -> 
                    24197, "cambridgeshire" -> 24198, "##lide" -> 24199, 
                    "sprawling" -> 24200, "##bbly" -> 24201, "eastwood" -> 
                    24202, "ghent" -> 24203, "synth" -> 24204, "##buck" -> 
                    24205, "advisers" -> 24206, "##bah" -> 24207, "nominally" -> 
                    24208, "hapoel" -> 24209, "qu" -> 24210, "daggers" -> 
                    24211, "estranged" -> 24212, "fabricated" -> 24213, 
                    "towels" -> 24214, "vinnie" -> 24215, "wcw" -> 24216, 
                    "misunderstanding" -> 24217, "anglia" -> 24218, "nothin" -> 
                    24219, "unmistakable" -> 24220, "##dust" -> 24221, 
                    "##lova" -> 24222, "chilly" -> 24223, "marquette" -> 
                    24224, "truss" -> 24225, "##edge" -> 24226, "##erine" -> 
                    24227, "reece" -> 24228, "##lty" -> 24229, "##chemist" -> 
                    24230, "##connected" -> 24231, "272" -> 24232, "308" -> 
                    24233, "41st" -> 24234, "bash" -> 24235, "raion" -> 24236,
                     "waterfalls" -> 24237, "##ump" -> 24238, "##main" -> 
                    24239, "labyrinth" -> 24240, "queue" -> 24241, "theorist" -> 
                    24242, "##istle" -> 24243, "bharatiya" -> 24244, "flexed" -> 
                    24245, "soundtracks" -> 24246, "rooney" -> 24247, 
                    "leftist" -> 24248, "patrolling" -> 24249, "wharton" -> 
                    24250, "plainly" -> 24251, "alleviate" -> 24252, 
                    "eastman" -> 24253, "schuster" -> 24254, "topographic" -> 
                    24255, "engages" -> 24256, "immensely" -> 24257, 
                    "unbearable" -> 24258, "fairchild" -> 24259, "1620" -> 
                    24260, "dona" -> 24261, "lurking" -> 24262, "parisian" -> 
                    24263, "oliveira" -> 24264, "ia" -> 24265, "indictment" -> 
                    24266, "hahn" -> 24267, "bangladeshi" -> 24268, "##aster" -> 
                    24269, "vivo" -> 24270, "##uming" -> 24271, "##ential" -> 
                    24272, "antonia" -> 24273, "expects" -> 24274, "indoors" -> 
                    24275, "kildare" -> 24276, "harlan" -> 24277, "##logue" -> 
                    24278, "##ogenic" -> 24279, "##sities" -> 24280, 
                    "forgiven" -> 24281, "##wat" -> 24282, "childish" -> 
                    24283, "tavi" -> 24284, "##mide" -> 24285, "##orra" -> 
                    24286, "plausible" -> 24287, "grimm" -> 24288, 
                    "successively" -> 24289, "scooted" -> 24290, "##bola" -> 
                    24291, "##dget" -> 24292, "##rith" -> 24293, "spartans" -> 
                    24294, "emery" -> 24295, "flatly" -> 24296, "azure" -> 
                    24297, "epilogue" -> 24298, "##wark" -> 24299, "flourish" -> 
                    24300, "##iny" -> 24301, "##tracted" -> 24302, "##overs" -> 
                    24303, "##oshi" -> 24304, "bestseller" -> 24305, 
                    "distressed" -> 24306, "receipt" -> 24307, "spitting" -> 
                    24308, "hermit" -> 24309, "topological" -> 24310, "##cot" -> 
                    24311, "drilled" -> 24312, "subunit" -> 24313, "francs" -> 
                    24314, "##layer" -> 24315, "eel" -> 24316, "##fk" -> 
                    24317, "##itas" -> 24318, "octopus" -> 24319, "footprint" -> 
                    24320, "petitions" -> 24321, "ufo" -> 24322, "##say" -> 
                    24323, "##foil" -> 24324, "interfering" -> 24325, 
                    "leaking" -> 24326, "palo" -> 24327, "##metry" -> 24328, 
                    "thistle" -> 24329, "valiant" -> 24330, "##pic" -> 24331, 
                    "narayan" -> 24332, "mcpherson" -> 24333, "##fast" -> 
                    24334, "gonzales" -> 24335, "##ym" -> 24336, "##enne" -> 
                    24337, "dustin" -> 24338, "novgorod" -> 24339, "solos" -> 
                    24340, "##zman" -> 24341, "doin" -> 24342, "##raph" -> 
                    24343, "##patient" -> 24344, "##meyer" -> 24345, 
                    "soluble" -> 24346, "ashland" -> 24347, "cuffs" -> 24348, 
                    "carole" -> 24349, "pendleton" -> 24350, "whistling" -> 
                    24351, "vassal" -> 24352, "##river" -> 24353, "deviation" -> 
                    24354, "revisited" -> 24355, "constituents" -> 24356, 
                    "rallied" -> 24357, "rotate" -> 24358, "loomed" -> 24359, 
                    "##eil" -> 24360, "##nting" -> 24361, "amateurs" -> 24362,
                     "augsburg" -> 24363, "auschwitz" -> 24364, "crowns" -> 
                    24365, "skeletons" -> 24366, "##cona" -> 24367, "bonnet" -> 
                    24368, "257" -> 24369, "dummy" -> 24370, "globalization" -> 
                    24371, "simeon" -> 24372, "sleeper" -> 24373, "mandal" -> 
                    24374, "differentiated" -> 24375, "##crow" -> 24376, 
                    "##mare" -> 24377, "milne" -> 24378, "bundled" -> 24379, 
                    "exasperated" -> 24380, "talmud" -> 24381, "owes" -> 
                    24382, "segregated" -> 24383, "##feng" -> 24384, "##uary" -> 
                    24385, "dentist" -> 24386, "piracy" -> 24387, "props" -> 
                    24388, "##rang" -> 24389, "devlin" -> 24390, "##torium" -> 
                    24391, "malicious" -> 24392, "paws" -> 24393, "##laid" -> 
                    24394, "dependency" -> 24395, "##ergy" -> 24396, "##fers" -> 
                    24397, "##enna" -> 24398, "258" -> 24399, "pistons" -> 
                    24400, "rourke" -> 24401, "jed" -> 24402, "grammatical" -> 
                    24403, "tres" -> 24404, "maha" -> 24405, "wig" -> 24406, 
                    "512" -> 24407, "ghostly" -> 24408, "jayne" -> 24409, 
                    "##achal" -> 24410, "##creen" -> 24411, "##ilis" -> 24412,
                     "##lins" -> 24413, "##rence" -> 24414, "designate" -> 
                    24415, "##with" -> 24416, "arrogance" -> 24417, 
                    "cambodian" -> 24418, "clones" -> 24419, "showdown" -> 
                    24420, "throttle" -> 24421, "twain" -> 24422, "##ception" -> 
                    24423, "lobes" -> 24424, "metz" -> 24425, "nagoya" -> 
                    24426, "335" -> 24427, "braking" -> 24428, "##furt" -> 
                    24429, "385" -> 24430, "roaming" -> 24431, "##minster" -> 
                    24432, "amin" -> 24433, "crippled" -> 24434, "##37" -> 
                    24435, "##llary" -> 24436, "indifferent" -> 24437, 
                    "hoffmann" -> 24438, "idols" -> 24439, "intimidating" -> 
                    24440, "1751" -> 24441, "261" -> 24442, "influenza" -> 
                    24443, "memo" -> 24444, "onions" -> 24445, "1748" -> 
                    24446, "bandage" -> 24447, "consciously" -> 24448, 
                    "##landa" -> 24449, "##rage" -> 24450, "clandestine" -> 
                    24451, "observes" -> 24452, "swiped" -> 24453, "tangle" -> 
                    24454, "##ener" -> 24455, "##jected" -> 24456, "##trum" -> 
                    24457, "##bill" -> 24458, "##lta" -> 24459, "hugs" -> 
                    24460, "congresses" -> 24461, "josiah" -> 24462, 
                    "spirited" -> 24463, "##dek" -> 24464, "humanist" -> 
                    24465, "managerial" -> 24466, "filmmaking" -> 24467, 
                    "inmate" -> 24468, "rhymes" -> 24469, "debuting" -> 24470,
                     "grimsby" -> 24471, "ur" -> 24472, "##laze" -> 24473, 
                    "duplicate" -> 24474, "vigor" -> 24475, "##tf" -> 24476, 
                    "republished" -> 24477, "bolshevik" -> 24478, 
                    "refurbishment" -> 24479, "antibiotics" -> 24480, 
                    "martini" -> 24481, "methane" -> 24482, "newscasts" -> 
                    24483, "royale" -> 24484, "horizons" -> 24485, "levant" -> 
                    24486, "iain" -> 24487, "visas" -> 24488, "##ischen" -> 
                    24489, "paler" -> 24490, "##around" -> 24491, 
                    "manifestation" -> 24492, "snuck" -> 24493, "alf" -> 
                    24494, "chop" -> 24495, "futile" -> 24496, "pedestal" -> 
                    24497, "rehab" -> 24498, "##kat" -> 24499, "bmg" -> 24500,
                     "kerman" -> 24501, "res" -> 24502, "fairbanks" -> 24503, 
                    "jarrett" -> 24504, "abstraction" -> 24505, "saharan" -> 
                    24506, "##zek" -> 24507, "1746" -> 24508, "procedural" -> 
                    24509, "clearer" -> 24510, "kincaid" -> 24511, "sash" -> 
                    24512, "luciano" -> 24513, "##ffey" -> 24514, "crunch" -> 
                    24515, "helmut" -> 24516, "##vara" -> 24517, 
                    "revolutionaries" -> 24518, "##tute" -> 24519, "creamy" -> 
                    24520, "leach" -> 24521, "##mmon" -> 24522, "1747" -> 
                    24523, "permitting" -> 24524, "nes" -> 24525, "plight" -> 
                    24526, "wendell" -> 24527, "##lese" -> 24528, "contra" -> 
                    24529, "ts" -> 24530, "clancy" -> 24531, "ipa" -> 24532, 
                    "mach" -> 24533, "staples" -> 24534, "autopsy" -> 24535, 
                    "disturbances" -> 24536, "nueva" -> 24537, "karin" -> 
                    24538, "pontiac" -> 24539, "##uding" -> 24540, "proxy" -> 
                    24541, "venerable" -> 24542, "haunt" -> 24543, "leto" -> 
                    24544, "bergman" -> 24545, "expands" -> 24546, "##helm" -> 
                    24547, "wal" -> 24548, "##pipe" -> 24549, "canning" -> 
                    24550, "celine" -> 24551, "cords" -> 24552, "obesity" -> 
                    24553, "##enary" -> 24554, "intrusion" -> 24555, 
                    "planner" -> 24556, "##phate" -> 24557, "reasoned" -> 
                    24558, "sequencing" -> 24559, "307" -> 24560, "harrow" -> 
                    24561, "##chon" -> 24562, "##dora" -> 24563, "marred" -> 
                    24564, "mcintyre" -> 24565, "repay" -> 24566, "tarzan" -> 
                    24567, "darting" -> 24568, "248" -> 24569, "harrisburg" -> 
                    24570, "margarita" -> 24571, "repulsed" -> 24572, "##hur" -> 
                    24573, "##lding" -> 24574, "belinda" -> 24575, 
                    "hamburger" -> 24576, "novo" -> 24577, "compliant" -> 
                    24578, "runways" -> 24579, "bingham" -> 24580, 
                    "registrar" -> 24581, "skyscraper" -> 24582, "ic" -> 
                    24583, "cuthbert" -> 24584, "improvisation" -> 24585, 
                    "livelihood" -> 24586, "##corp" -> 24587, "##elial" -> 
                    24588, "admiring" -> 24589, "##dened" -> 24590, 
                    "sporadic" -> 24591, "believer" -> 24592, "casablanca" -> 
                    24593, "popcorn" -> 24594, "##29" -> 24595, "asha" -> 
                    24596, "shovel" -> 24597, "##bek" -> 24598, "##dice" -> 
                    24599, "coiled" -> 24600, "tangible" -> 24601, "##dez" -> 
                    24602, "casper" -> 24603, "elsie" -> 24604, "resin" -> 
                    24605, "tenderness" -> 24606, "rectory" -> 24607, 
                    "##ivision" -> 24608, "avail" -> 24609, "sonar" -> 24610, 
                    "##mori" -> 24611, "boutique" -> 24612, "##dier" -> 24613,
                     "guerre" -> 24614, "bathed" -> 24615, "upbringing" -> 
                    24616, "vaulted" -> 24617, "sandals" -> 24618, 
                    "blessings" -> 24619, "##naut" -> 24620, "##utnant" -> 
                    24621, "1680" -> 24622, "306" -> 24623, "foxes" -> 24624, 
                    "pia" -> 24625, "corrosion" -> 24626, "hesitantly" -> 
                    24627, "confederates" -> 24628, "crystalline" -> 24629, 
                    "footprints" -> 24630, "shapiro" -> 24631, "tirana" -> 
                    24632, "valentin" -> 24633, "drones" -> 24634, "45th" -> 
                    24635, "microscope" -> 24636, "shipments" -> 24637, 
                    "texted" -> 24638, "inquisition" -> 24639, "wry" -> 24640,
                     "guernsey" -> 24641, "unauthorized" -> 24642, 
                    "resigning" -> 24643, "760" -> 24644, "ripple" -> 24645, 
                    "schubert" -> 24646, "stu" -> 24647, "reassure" -> 24648, 
                    "felony" -> 24649, "##ardo" -> 24650, "brittle" -> 24651, 
                    "koreans" -> 24652, "##havan" -> 24653, "##ives" -> 24654,
                     "dun" -> 24655, "implicit" -> 24656, "tyres" -> 24657, 
                    "##aldi" -> 24658, "##lth" -> 24659, "magnolia" -> 24660, 
                    "##ehan" -> 24661, "##puri" -> 24662, "##poulos" -> 24663,
                     "aggressively" -> 24664, "fei" -> 24665, "gr" -> 24666, 
                    "familiarity" -> 24667, "##poo" -> 24668, "indicative" -> 
                    24669, "##trust" -> 24670, "fundamentally" -> 24671, 
                    "jimmie" -> 24672, "overrun" -> 24673, "395" -> 24674, 
                    "anchors" -> 24675, "moans" -> 24676, "##opus" -> 24677, 
                    "britannia" -> 24678, "armagh" -> 24679, "##ggle" -> 
                    24680, "purposely" -> 24681, "seizing" -> 24682, "##vao" -> 
                    24683, "bewildered" -> 24684, "mundane" -> 24685, 
                    "avoidance" -> 24686, "cosmopolitan" -> 24687, 
                    "geometridae" -> 24688, "quartermaster" -> 24689, "caf" -> 
                    24690, "415" -> 24691, "chatter" -> 24692, "engulfed" -> 
                    24693, "gleam" -> 24694, "purge" -> 24695, "##icate" -> 
                    24696, "juliette" -> 24697, "jurisprudence" -> 24698, 
                    "guerra" -> 24699, "revisions" -> 24700, "##bn" -> 24701, 
                    "casimir" -> 24702, "brew" -> 24703, "##jm" -> 24704, 
                    "1749" -> 24705, "clapton" -> 24706, "cloudy" -> 24707, 
                    "conde" -> 24708, "hermitage" -> 24709, "278" -> 24710, 
                    "simulations" -> 24711, "torches" -> 24712, "vincenzo" -> 
                    24713, "matteo" -> 24714, "##rill" -> 24715, "hidalgo" -> 
                    24716, "booming" -> 24717, "westbound" -> 24718, 
                    "accomplishment" -> 24719, "tentacles" -> 24720, 
                    "unaffected" -> 24721, "##sius" -> 24722, "annabelle" -> 
                    24723, "flopped" -> 24724, "sloping" -> 24725, "##litz" -> 
                    24726, "dreamer" -> 24727, "interceptor" -> 24728, "vu" -> 
                    24729, "##loh" -> 24730, "consecration" -> 24731, 
                    "copying" -> 24732, "messaging" -> 24733, "breaker" -> 
                    24734, "climates" -> 24735, "hospitalized" -> 24736, 
                    "1752" -> 24737, "torino" -> 24738, "afternoons" -> 24739,
                     "winfield" -> 24740, "witnessing" -> 24741, "##teacher" -> 
                    24742, "breakers" -> 24743, "choirs" -> 24744, "sawmill" -> 
                    24745, "coldly" -> 24746, "##ege" -> 24747, "sipping" -> 
                    24748, "haste" -> 24749, "uninhabited" -> 24750, 
                    "conical" -> 24751, "bibliography" -> 24752, "pamphlets" -> 
                    24753, "severn" -> 24754, "edict" -> 24755, "##oca" -> 
                    24756, "deux" -> 24757, "illnesses" -> 24758, "grips" -> 
                    24759, "##pl" -> 24760, "rehearsals" -> 24761, "sis" -> 
                    24762, "thinkers" -> 24763, "tame" -> 24764, "##keepers" -> 
                    24765, "1690" -> 24766, "acacia" -> 24767, "reformer" -> 
                    24768, "##osed" -> 24769, "##rys" -> 24770, "shuffling" -> 
                    24771, "##iring" -> 24772, "##shima" -> 24773, 
                    "eastbound" -> 24774, "ionic" -> 24775, "rhea" -> 24776, 
                    "flees" -> 24777, "littered" -> 24778, "##oum" -> 24779, 
                    "rocker" -> 24780, "vomiting" -> 24781, "groaning" -> 
                    24782, "champ" -> 24783, "overwhelmingly" -> 24784, 
                    "civilizations" -> 24785, "paces" -> 24786, "sloop" -> 
                    24787, "adoptive" -> 24788, "##tish" -> 24789, "skaters" -> 
                    24790, "##vres" -> 24791, "aiding" -> 24792, "mango" -> 
                    24793, "##joy" -> 24794, "nikola" -> 24795, "shriek" -> 
                    24796, "##ignon" -> 24797, "pharmaceuticals" -> 24798, 
                    "##mg" -> 24799, "tuna" -> 24800, "calvert" -> 24801, 
                    "gustavo" -> 24802, "stocked" -> 24803, "yearbook" -> 
                    24804, "##urai" -> 24805, "##mana" -> 24806, "computed" -> 
                    24807, "subsp" -> 24808, "riff" -> 24809, "hanoi" -> 
                    24810, "kelvin" -> 24811, "hamid" -> 24812, "moors" -> 
                    24813, "pastures" -> 24814, "summons" -> 24815, "jihad" -> 
                    24816, "nectar" -> 24817, "##ctors" -> 24818, "bayou" -> 
                    24819, "untitled" -> 24820, "pleasing" -> 24821, "vastly" -> 
                    24822, "republics" -> 24823, "intellect" -> 24824, 
                    "##\[Eta]" -> 24825, "##ulio" -> 24826, "##tou" -> 24827, 
                    "crumbling" -> 24828, "stylistic" -> 24829, "sb" -> 24830,
                     "##\:06cc" -> 24831, "consolation" -> 24832, 
                    "frequented" -> 24833, "h\:2082o" -> 24834, "walden" -> 
                    24835, "widows" -> 24836, "##iens" -> 24837, "404" -> 
                    24838, "##ignment" -> 24839, "chunks" -> 24840, 
                    "improves" -> 24841, "288" -> 24842, "grit" -> 24843, 
                    "recited" -> 24844, "##dev" -> 24845, "snarl" -> 24846, 
                    "sociological" -> 24847, "##arte" -> 24848, "##gul" -> 
                    24849, "inquired" -> 24850, "##held" -> 24851, "bruise" -> 
                    24852, "clube" -> 24853, "consultancy" -> 24854, 
                    "homogeneous" -> 24855, "hornets" -> 24856, 
                    "multiplication" -> 24857, "pasta" -> 24858, "prick" -> 
                    24859, "savior" -> 24860, "##grin" -> 24861, "##kou" -> 
                    24862, "##phile" -> 24863, "yoon" -> 24864, "##gara" -> 
                    24865, "grimes" -> 24866, "vanishing" -> 24867, 
                    "cheering" -> 24868, "reacting" -> 24869, "bn" -> 24870, 
                    "distillery" -> 24871, "##quisite" -> 24872, "##vity" -> 
                    24873, "coe" -> 24874, "dockyard" -> 24875, "massif" -> 
                    24876, "##jord" -> 24877, "escorts" -> 24878, "voss" -> 
                    24879, "##valent" -> 24880, "byte" -> 24881, "chopped" -> 
                    24882, "hawke" -> 24883, "illusions" -> 24884, "workings" -> 
                    24885, "floats" -> 24886, "##koto" -> 24887, "##vac" -> 
                    24888, "kv" -> 24889, "annapolis" -> 24890, "madden" -> 
                    24891, "##onus" -> 24892, "alvaro" -> 24893, "noctuidae" -> 
                    24894, "##cum" -> 24895, "##scopic" -> 24896, "avenge" -> 
                    24897, "steamboat" -> 24898, "forte" -> 24899, 
                    "illustrates" -> 24900, "erika" -> 24901, "##trip" -> 
                    24902, "570" -> 24903, "dew" -> 24904, "nationalities" -> 
                    24905, "bran" -> 24906, "manifested" -> 24907, "thirsty" -> 
                    24908, "diversified" -> 24909, "muscled" -> 24910, 
                    "reborn" -> 24911, "##standing" -> 24912, "arson" -> 
                    24913, "##lessness" -> 24914, "##dran" -> 24915, 
                    "##logram" -> 24916, "##boys" -> 24917, "##kushima" -> 
                    24918, "##vious" -> 24919, "willoughby" -> 24920, 
                    "##phobia" -> 24921, "286" -> 24922, "alsace" -> 24923, 
                    "dashboard" -> 24924, "yuki" -> 24925, "##chai" -> 24926, 
                    "granville" -> 24927, "myspace" -> 24928, "publicized" -> 
                    24929, "tricked" -> 24930, "##gang" -> 24931, "adjective" -> 
                    24932, "##ater" -> 24933, "relic" -> 24934, 
                    "reorganisation" -> 24935, "enthusiastically" -> 24936, 
                    "indications" -> 24937, "saxe" -> 24938, "##lassified" -> 
                    24939, "consolidate" -> 24940, "iec" -> 24941, "padua" -> 
                    24942, "helplessly" -> 24943, "ramps" -> 24944, 
                    "renaming" -> 24945, "regulars" -> 24946, "pedestrians" -> 
                    24947, "accents" -> 24948, "convicts" -> 24949, 
                    "inaccurate" -> 24950, "lowers" -> 24951, "mana" -> 24952,
                     "##pati" -> 24953, "barrie" -> 24954, "bjp" -> 24955, 
                    "outta" -> 24956, "someplace" -> 24957, "berwick" -> 
                    24958, "flanking" -> 24959, "invoked" -> 24960, "marrow" -> 
                    24961, "sparsely" -> 24962, "excerpts" -> 24963, 
                    "clothed" -> 24964, "rei" -> 24965, "##ginal" -> 24966, 
                    "wept" -> 24967, "##stra\[SZ]e" -> 24968, "##vish" -> 
                    24969, "alexa" -> 24970, "excel" -> 24971, "##ptive" -> 
                    24972, "membranes" -> 24973, "aquitaine" -> 24974, 
                    "creeks" -> 24975, "cutler" -> 24976, "sheppard" -> 24977,
                     "implementations" -> 24978, "ns" -> 24979, "##dur" -> 
                    24980, "fragrance" -> 24981, "budge" -> 24982, 
                    "concordia" -> 24983, "magnesium" -> 24984, "marcelo" -> 
                    24985, "##antes" -> 24986, "gladly" -> 24987, "vibrating" -> 
                    24988, "##rral" -> 24989, "##ggles" -> 24990, "montrose" -> 
                    24991, "##omba" -> 24992, "lew" -> 24993, "seamus" -> 
                    24994, "1630" -> 24995, "cocky" -> 24996, "##ament" -> 
                    24997, "##uen" -> 24998, "bjorn" -> 24999, "##rrick" -> 
                    25000, "fielder" -> 25001, "fluttering" -> 25002, 
                    "##lase" -> 25003, "methyl" -> 25004, "kimberley" -> 
                    25005, "mcdowell" -> 25006, "reductions" -> 25007, 
                    "barbed" -> 25008, "##jic" -> 25009, "##tonic" -> 25010, 
                    "aeronautical" -> 25011, "condensed" -> 25012, 
                    "distracting" -> 25013, "##promising" -> 25014, "huffed" -> 
                    25015, "##cala" -> 25016, "##sle" -> 25017, "claudius" -> 
                    25018, "invincible" -> 25019, "missy" -> 25020, "pious" -> 
                    25021, "balthazar" -> 25022, "ci" -> 25023, "##lang" -> 
                    25024, "butte" -> 25025, "combo" -> 25026, "orson" -> 
                    25027, "##dication" -> 25028, "myriad" -> 25029, "1707" -> 
                    25030, "silenced" -> 25031, "##fed" -> 25032, "##rh" -> 
                    25033, "coco" -> 25034, "netball" -> 25035, "yourselves" -> 
                    25036, "##oza" -> 25037, "clarify" -> 25038, "heller" -> 
                    25039, "peg" -> 25040, "durban" -> 25041, "etudes" -> 
                    25042, "offender" -> 25043, "roast" -> 25044, "blackmail" -> 
                    25045, "curvature" -> 25046, "##woods" -> 25047, "vile" -> 
                    25048, "309" -> 25049, "illicit" -> 25050, "suriname" -> 
                    25051, "##linson" -> 25052, "overture" -> 25053, "1685" -> 
                    25054, "bubbling" -> 25055, "gymnast" -> 25056, "tucking" -> 
                    25057, "##mming" -> 25058, "##ouin" -> 25059, "maldives" -> 
                    25060, "##bala" -> 25061, "gurney" -> 25062, "##dda" -> 
                    25063, "##eased" -> 25064, "##oides" -> 25065, "backside" -> 
                    25066, "pinto" -> 25067, "jars" -> 25068, "racehorse" -> 
                    25069, "tending" -> 25070, "##rdial" -> 25071, 
                    "baronetcy" -> 25072, "wiener" -> 25073, "duly" -> 25074, 
                    "##rke" -> 25075, "barbarian" -> 25076, "cupping" -> 
                    25077, "flawed" -> 25078, "##thesis" -> 25079, "bertha" -> 
                    25080, "pleistocene" -> 25081, "puddle" -> 25082, 
                    "swearing" -> 25083, "##nob" -> 25084, "##tically" -> 
                    25085, "fleeting" -> 25086, "prostate" -> 25087, "amulet" -> 
                    25088, "educating" -> 25089, "##mined" -> 25090, "##iti" -> 
                    25091, "##tler" -> 25092, "75th" -> 25093, "jens" -> 
                    25094, "respondents" -> 25095, "analytics" -> 25096, 
                    "cavaliers" -> 25097, "papacy" -> 25098, "raju" -> 25099, 
                    "##iente" -> 25100, "##ulum" -> 25101, "##tip" -> 25102, 
                    "funnel" -> 25103, "271" -> 25104, "disneyland" -> 25105, 
                    "##lley" -> 25106, "sociologist" -> 25107, "##iam" -> 
                    25108, "2500" -> 25109, "faulkner" -> 25110, "louvre" -> 
                    25111, "menon" -> 25112, "##dson" -> 25113, "276" -> 
                    25114, "##ower" -> 25115, "afterlife" -> 25116, 
                    "mannheim" -> 25117, "peptide" -> 25118, "referees" -> 
                    25119, "comedians" -> 25120, "meaningless" -> 25121, 
                    "##anger" -> 25122, "##laise" -> 25123, "fabrics" -> 
                    25124, "hurley" -> 25125, "renal" -> 25126, "sleeps" -> 
                    25127, "##bour" -> 25128, "##icle" -> 25129, "breakout" -> 
                    25130, "kristin" -> 25131, "roadside" -> 25132, 
                    "animator" -> 25133, "clover" -> 25134, "disdain" -> 
                    25135, "unsafe" -> 25136, "redesign" -> 25137, "##urity" -> 
                    25138, "firth" -> 25139, "barnsley" -> 25140, "portage" -> 
                    25141, "reset" -> 25142, "narrows" -> 25143, "268" -> 
                    25144, "commandos" -> 25145, "expansive" -> 25146, 
                    "speechless" -> 25147, "tubular" -> 25148, "##lux" -> 
                    25149, "essendon" -> 25150, "eyelashes" -> 25151, 
                    "smashwords" -> 25152, "##yad" -> 25153, "##bang" -> 
                    25154, "##claim" -> 25155, "craved" -> 25156, "sprinted" -> 
                    25157, "chet" -> 25158, "somme" -> 25159, "astor" -> 
                    25160, "wroc\[LSlash]aw" -> 25161, "orton" -> 25162, 
                    "266" -> 25163, "bane" -> 25164, "##erving" -> 25165, 
                    "##uing" -> 25166, "mischief" -> 25167, "##amps" -> 25168,
                     "##sund" -> 25169, "scaling" -> 25170, "terre" -> 25171, 
                    "##xious" -> 25172, "impairment" -> 25173, "offenses" -> 
                    25174, "undermine" -> 25175, "moi" -> 25176, "soy" -> 
                    25177, "contiguous" -> 25178, "arcadia" -> 25179, "inuit" -> 
                    25180, "seam" -> 25181, "##tops" -> 25182, "macbeth" -> 
                    25183, "rebelled" -> 25184, "##icative" -> 25185, "##iot" -> 
                    25186, "590" -> 25187, "elaborated" -> 25188, "frs" -> 
                    25189, "uniformed" -> 25190, "##dberg" -> 25191, "259" -> 
                    25192, "powerless" -> 25193, "priscilla" -> 25194, 
                    "stimulated" -> 25195, "980" -> 25196, "qc" -> 25197, 
                    "arboretum" -> 25198, "frustrating" -> 25199, "trieste" -> 
                    25200, "bullock" -> 25201, "##nified" -> 25202, 
                    "enriched" -> 25203, "glistening" -> 25204, "intern" -> 
                    25205, "##adia" -> 25206, "locus" -> 25207, "nouvelle" -> 
                    25208, "ollie" -> 25209, "ike" -> 25210, "lash" -> 25211, 
                    "starboard" -> 25212, "ee" -> 25213, "tapestry" -> 25214, 
                    "headlined" -> 25215, "hove" -> 25216, "rigged" -> 25217, 
                    "##vite" -> 25218, "pollock" -> 25219, "##yme" -> 25220, 
                    "thrive" -> 25221, "clustered" -> 25222, "cas" -> 25223, 
                    "roi" -> 25224, "gleamed" -> 25225, "olympiad" -> 25226, 
                    "##lino" -> 25227, "pressured" -> 25228, "regimes" -> 
                    25229, "##hosis" -> 25230, "##lick" -> 25231, "ripley" -> 
                    25232, "##ophone" -> 25233, "kickoff" -> 25234, "gallon" -> 
                    25235, "rockwell" -> 25236, "##arable" -> 25237, 
                    "crusader" -> 25238, "glue" -> 25239, "revolutions" -> 
                    25240, "scrambling" -> 25241, "1714" -> 25242, "grover" -> 
                    25243, "##jure" -> 25244, "englishman" -> 25245, "aztec" -> 
                    25246, "263" -> 25247, "contemplating" -> 25248, "coven" -> 
                    25249, "ipad" -> 25250, "preach" -> 25251, "triumphant" -> 
                    25252, "tufts" -> 25253, "##esian" -> 25254, "rotational" -> 
                    25255, "##phus" -> 25256, "328" -> 25257, "falkland" -> 
                    25258, "##brates" -> 25259, "strewn" -> 25260, "clarissa" -> 
                    25261, "rejoin" -> 25262, "environmentally" -> 25263, 
                    "glint" -> 25264, "banded" -> 25265, "drenched" -> 25266, 
                    "moat" -> 25267, "albanians" -> 25268, "johor" -> 25269, 
                    "rr" -> 25270, "maestro" -> 25271, "malley" -> 25272, 
                    "nouveau" -> 25273, "shaded" -> 25274, "taxonomy" -> 
                    25275, "v6" -> 25276, "adhere" -> 25277, "bunk" -> 25278, 
                    "airfields" -> 25279, "##ritan" -> 25280, "1741" -> 25281,
                     "encompass" -> 25282, "remington" -> 25283, "tran" -> 
                    25284, "##erative" -> 25285, "amelie" -> 25286, "mazda" -> 
                    25287, "friar" -> 25288, "morals" -> 25289, "passions" -> 
                    25290, "##zai" -> 25291, "breadth" -> 25292, "vis" -> 
                    25293, "##hae" -> 25294, "argus" -> 25295, "burnham" -> 
                    25296, "caressing" -> 25297, "insider" -> 25298, "rudd" -> 
                    25299, "##imov" -> 25300, "##mini" -> 25301, "##rso" -> 
                    25302, "italianate" -> 25303, "murderous" -> 25304, 
                    "textual" -> 25305, "wainwright" -> 25306, "armada" -> 
                    25307, "bam" -> 25308, "weave" -> 25309, "timer" -> 25310,
                     "##taken" -> 25311, "##nh" -> 25312, "fra" -> 25313, 
                    "##crest" -> 25314, "ardent" -> 25315, "salazar" -> 25316,
                     "taps" -> 25317, "tunis" -> 25318, "##ntino" -> 25319, 
                    "allegro" -> 25320, "gland" -> 25321, "philanthropic" -> 
                    25322, "##chester" -> 25323, "implication" -> 25324, 
                    "##optera" -> 25325, "esq" -> 25326, "judas" -> 25327, 
                    "noticeably" -> 25328, "wynn" -> 25329, "##dara" -> 25330,
                     "inched" -> 25331, "indexed" -> 25332, "crises" -> 25333,
                     "villiers" -> 25334, "bandit" -> 25335, "royalties" -> 
                    25336, "patterned" -> 25337, "cupboard" -> 25338, 
                    "interspersed" -> 25339, "accessory" -> 25340, "isla" -> 
                    25341, "kendrick" -> 25342, "entourage" -> 25343, 
                    "stitches" -> 25344, "##esthesia" -> 25345, "headwaters" -> 
                    25346, "##ior" -> 25347, "interlude" -> 25348, 
                    "distraught" -> 25349, "draught" -> 25350, "1727" -> 
                    25351, "##basket" -> 25352, "biased" -> 25353, "sy" -> 
                    25354, "transient" -> 25355, "triad" -> 25356, "subgenus" -> 
                    25357, "adapting" -> 25358, "kidd" -> 25359, "shortstop" -> 
                    25360, "##umatic" -> 25361, "dimly" -> 25362, "spiked" -> 
                    25363, "mcleod" -> 25364, "reprint" -> 25365, "nellie" -> 
                    25366, "pretoria" -> 25367, "windmill" -> 25368, "##cek" -> 
                    25369, "singled" -> 25370, "##mps" -> 25371, "273" -> 
                    25372, "reunite" -> 25373, "##orous" -> 25374, "747" -> 
                    25375, "bankers" -> 25376, "outlying" -> 25377, "##omp" -> 
                    25378, "##ports" -> 25379, "##tream" -> 25380, 
                    "apologies" -> 25381, "cosmetics" -> 25382, "patsy" -> 
                    25383, "##deh" -> 25384, "##ocks" -> 25385, "##yson" -> 
                    25386, "bender" -> 25387, "nantes" -> 25388, "serene" -> 
                    25389, "##nad" -> 25390, "lucha" -> 25391, "mmm" -> 25392,
                     "323" -> 25393, "##cius" -> 25394, "##gli" -> 25395, 
                    "cmll" -> 25396, "coinage" -> 25397, "nestor" -> 25398, 
                    "juarez" -> 25399, "##rook" -> 25400, "smeared" -> 25401, 
                    "sprayed" -> 25402, "twitching" -> 25403, "sterile" -> 
                    25404, "irina" -> 25405, "embodied" -> 25406, "juveniles" -> 
                    25407, "enveloped" -> 25408, "miscellaneous" -> 25409, 
                    "cancers" -> 25410, "dq" -> 25411, "gulped" -> 25412, 
                    "luisa" -> 25413, "crested" -> 25414, "swat" -> 25415, 
                    "donegal" -> 25416, "ref" -> 25417, "##anov" -> 25418, 
                    "##acker" -> 25419, "hearst" -> 25420, "mercantile" -> 
                    25421, "##lika" -> 25422, "doorbell" -> 25423, "ua" -> 
                    25424, "vicki" -> 25425, "##alla" -> 25426, "##som" -> 
                    25427, "bilbao" -> 25428, "psychologists" -> 25429, 
                    "stryker" -> 25430, "sw" -> 25431, "horsemen" -> 25432, 
                    "turkmenistan" -> 25433, "wits" -> 25434, "##national" -> 
                    25435, "anson" -> 25436, "mathew" -> 25437, "screenings" -> 
                    25438, "##umb" -> 25439, "rihanna" -> 25440, "##agne" -> 
                    25441, "##nessy" -> 25442, "aisles" -> 25443, "##iani" -> 
                    25444, "##osphere" -> 25445, "hines" -> 25446, "kenton" -> 
                    25447, "saskatoon" -> 25448, "tasha" -> 25449, 
                    "truncated" -> 25450, "##champ" -> 25451, "##itan" -> 
                    25452, "mildred" -> 25453, "advises" -> 25454, "fredrik" -> 
                    25455, "interpreting" -> 25456, "inhibitors" -> 25457, 
                    "##athi" -> 25458, "spectroscopy" -> 25459, "##hab" -> 
                    25460, "##kong" -> 25461, "karim" -> 25462, "panda" -> 
                    25463, "##oia" -> 25464, "##nail" -> 25465, "##vc" -> 
                    25466, "conqueror" -> 25467, "kgb" -> 25468, "leukemia" -> 
                    25469, "##dity" -> 25470, "arrivals" -> 25471, "cheered" -> 
                    25472, "pisa" -> 25473, "phosphorus" -> 25474, "shielded" -> 
                    25475, "##riated" -> 25476, "mammal" -> 25477, 
                    "unitarian" -> 25478, "urgently" -> 25479, "chopin" -> 
                    25480, "sanitary" -> 25481, "##mission" -> 25482, "spicy" -> 
                    25483, "drugged" -> 25484, "hinges" -> 25485, "##tort" -> 
                    25486, "tipping" -> 25487, "trier" -> 25488, 
                    "impoverished" -> 25489, "westchester" -> 25490, 
                    "##caster" -> 25491, "267" -> 25492, "epoch" -> 25493, 
                    "nonstop" -> 25494, "##gman" -> 25495, "##khov" -> 25496, 
                    "aromatic" -> 25497, "centrally" -> 25498, "cerro" -> 
                    25499, "##tively" -> 25500, "##vio" -> 25501, "billions" -> 
                    25502, "modulation" -> 25503, "sedimentary" -> 25504, 
                    "283" -> 25505, "facilitating" -> 25506, "outrageous" -> 
                    25507, "goldstein" -> 25508, "##eak" -> 25509, "##kt" -> 
                    25510, "ld" -> 25511, "maitland" -> 25512, "penultimate" -> 
                    25513, "pollard" -> 25514, "##dance" -> 25515, "fleets" -> 
                    25516, "spaceship" -> 25517, "vertebrae" -> 25518, 
                    "##nig" -> 25519, "alcoholism" -> 25520, "als" -> 25521, 
                    "recital" -> 25522, "##bham" -> 25523, "##ference" -> 
                    25524, "##omics" -> 25525, "m2" -> 25526, "##bm" -> 25527,
                     "trois" -> 25528, "##tropical" -> 25529, "##\:0432" -> 
                    25530, "commemorates" -> 25531, "##meric" -> 25532, 
                    "marge" -> 25533, "##raction" -> 25534, "1643" -> 25535, 
                    "670" -> 25536, "cosmetic" -> 25537, "ravaged" -> 25538, 
                    "##ige" -> 25539, "catastrophe" -> 25540, "eng" -> 25541, 
                    "##shida" -> 25542, "albrecht" -> 25543, "arterial" -> 
                    25544, "bellamy" -> 25545, "decor" -> 25546, "harmon" -> 
                    25547, "##rde" -> 25548, "bulbs" -> 25549, "synchronized" -> 
                    25550, "vito" -> 25551, "easiest" -> 25552, "shetland" -> 
                    25553, "shielding" -> 25554, "wnba" -> 25555, "##glers" -> 
                    25556, "##ssar" -> 25557, "##riam" -> 25558, "brianna" -> 
                    25559, "cumbria" -> 25560, "##aceous" -> 25561, "##rard" -> 
                    25562, "cores" -> 25563, "thayer" -> 25564, "##nsk" -> 
                    25565, "brood" -> 25566, "hilltop" -> 25567, "luminous" -> 
                    25568, "carts" -> 25569, "keynote" -> 25570, "larkin" -> 
                    25571, "logos" -> 25572, "##cta" -> 25573, "##\:0627" -> 
                    25574, "##mund" -> 25575, "##quay" -> 25576, "lilith" -> 
                    25577, "tinted" -> 25578, "277" -> 25579, "wrestle" -> 
                    25580, "mobilization" -> 25581, "##uses" -> 25582, 
                    "sequential" -> 25583, "siam" -> 25584, "bloomfield" -> 
                    25585, "takahashi" -> 25586, "274" -> 25587, "##ieving" -> 
                    25588, "presenters" -> 25589, "ringo" -> 25590, "blazed" -> 
                    25591, "witty" -> 25592, "##oven" -> 25593, "##ignant" -> 
                    25594, "devastation" -> 25595, "haydn" -> 25596, "harmed" -> 
                    25597, "newt" -> 25598, "therese" -> 25599, "##peed" -> 
                    25600, "gershwin" -> 25601, "molina" -> 25602, "rabbis" -> 
                    25603, "sudanese" -> 25604, "001" -> 25605, "innate" -> 
                    25606, "restarted" -> 25607, "##sack" -> 25608, "##fus" -> 
                    25609, "slices" -> 25610, "wb" -> 25611, "##shah" -> 
                    25612, "enroll" -> 25613, "hypothetical" -> 25614, 
                    "hysterical" -> 25615, "1743" -> 25616, "fabio" -> 25617, 
                    "indefinite" -> 25618, "warped" -> 25619, "##hg" -> 25620,
                     "exchanging" -> 25621, "525" -> 25622, "unsuitable" -> 
                    25623, "##sboro" -> 25624, "gallo" -> 25625, "1603" -> 
                    25626, "bret" -> 25627, "cobalt" -> 25628, "homemade" -> 
                    25629, "##hunter" -> 25630, "mx" -> 25631, "operatives" -> 
                    25632, "##dhar" -> 25633, "terraces" -> 25634, "durable" -> 
                    25635, "latch" -> 25636, "pens" -> 25637, "whorls" -> 
                    25638, "##ctuated" -> 25639, "##eaux" -> 25640, "billing" -> 
                    25641, "ligament" -> 25642, "succumbed" -> 25643, "##gly" -> 
                    25644, "regulators" -> 25645, "spawn" -> 25646, "##brick" -> 
                    25647, "##stead" -> 25648, "filmfare" -> 25649, 
                    "rochelle" -> 25650, "##nzo" -> 25651, "1725" -> 25652, 
                    "circumstance" -> 25653, "saber" -> 25654, "supplements" -> 
                    25655, "##nsky" -> 25656, "##tson" -> 25657, "crowe" -> 
                    25658, "wellesley" -> 25659, "carrot" -> 25660, "##9th" -> 
                    25661, "##movable" -> 25662, "primate" -> 25663, "drury" -> 
                    25664, "sincerely" -> 25665, "topical" -> 25666, "##mad" -> 
                    25667, "##rao" -> 25668, "callahan" -> 25669, "kyiv" -> 
                    25670, "smarter" -> 25671, "tits" -> 25672, "undo" -> 
                    25673, "##yeh" -> 25674, "announcements" -> 25675, 
                    "anthologies" -> 25676, "barrio" -> 25677, "nebula" -> 
                    25678, "##islaus" -> 25679, "##shaft" -> 25680, "##tyn" -> 
                    25681, "bodyguards" -> 25682, "2021" -> 25683, 
                    "assassinate" -> 25684, "barns" -> 25685, "emmett" -> 
                    25686, "scully" -> 25687, "##mah" -> 25688, "##yd" -> 
                    25689, "##eland" -> 25690, "##tino" -> 25691, "##itarian" -> 
                    25692, "demoted" -> 25693, "gorman" -> 25694, "lashed" -> 
                    25695, "prized" -> 25696, "adventist" -> 25697, "writ" -> 
                    25698, "##gui" -> 25699, "alla" -> 25700, "invertebrates" -> 
                    25701, "##ausen" -> 25702, "1641" -> 25703, "amman" -> 
                    25704, "1742" -> 25705, "align" -> 25706, "healy" -> 
                    25707, "redistribution" -> 25708, "##gf" -> 25709, 
                    "##rize" -> 25710, "insulation" -> 25711, "##drop" -> 
                    25712, "adherents" -> 25713, "hezbollah" -> 25714, 
                    "vitro" -> 25715, "ferns" -> 25716, "yanking" -> 25717, 
                    "269" -> 25718, "php" -> 25719, "registering" -> 25720, 
                    "uppsala" -> 25721, "cheerleading" -> 25722, "confines" -> 
                    25723, "mischievous" -> 25724, "tully" -> 25725, "##ross" -> 
                    25726, "49th" -> 25727, "docked" -> 25728, "roam" -> 
                    25729, "stipulated" -> 25730, "pumpkin" -> 25731, "##bry" -> 
                    25732, "prompt" -> 25733, "##ezer" -> 25734, "blindly" -> 
                    25735, "shuddering" -> 25736, "craftsmen" -> 25737, 
                    "frail" -> 25738, "scented" -> 25739, "katharine" -> 
                    25740, "scramble" -> 25741, "shaggy" -> 25742, "sponge" -> 
                    25743, "helix" -> 25744, "zaragoza" -> 25745, "279" -> 
                    25746, "##52" -> 25747, "43rd" -> 25748, "backlash" -> 
                    25749, "fontaine" -> 25750, "seizures" -> 25751, "posse" -> 
                    25752, "cowan" -> 25753, "nonfiction" -> 25754, 
                    "telenovela" -> 25755, "wwii" -> 25756, "hammered" -> 
                    25757, "undone" -> 25758, "##gpur" -> 25759, "encircled" -> 
                    25760, "irs" -> 25761, "##ivation" -> 25762, "artefacts" -> 
                    25763, "oneself" -> 25764, "searing" -> 25765, "smallpox" -> 
                    25766, "##belle" -> 25767, "##osaurus" -> 25768, 
                    "shandong" -> 25769, "breached" -> 25770, "upland" -> 
                    25771, "blushing" -> 25772, "rankin" -> 25773, 
                    "infinitely" -> 25774, "psyche" -> 25775, "tolerated" -> 
                    25776, "docking" -> 25777, "evicted" -> 25778, "##col" -> 
                    25779, "unmarked" -> 25780, "##lving" -> 25781, "gnome" -> 
                    25782, "lettering" -> 25783, "litres" -> 25784, "musique" -> 
                    25785, "##oint" -> 25786, "benevolent" -> 25787, "##jal" -> 
                    25788, "blackened" -> 25789, "##anna" -> 25790, "mccall" -> 
                    25791, "racers" -> 25792, "tingle" -> 25793, "##ocene" -> 
                    25794, "##orestation" -> 25795, "introductions" -> 25796, 
                    "radically" -> 25797, "292" -> 25798, "##hiff" -> 25799, 
                    "##\:0628\:0627\:062f" -> 25800, "1610" -> 25801, "1739" -> 
                    25802, "munchen" -> 25803, "plead" -> 25804, "##nka" -> 
                    25805, "condo" -> 25806, "scissors" -> 25807, "##sight" -> 
                    25808, "##tens" -> 25809, "apprehension" -> 25810, 
                    "##cey" -> 25811, "##yin" -> 25812, "hallmark" -> 25813, 
                    "watering" -> 25814, "formulas" -> 25815, "sequels" -> 
                    25816, "##llas" -> 25817, "aggravated" -> 25818, "bae" -> 
                    25819, "commencing" -> 25820, "##building" -> 25821, 
                    "enfield" -> 25822, "prohibits" -> 25823, "marne" -> 
                    25824, "vedic" -> 25825, "civilized" -> 25826, 
                    "euclidean" -> 25827, "jagger" -> 25828, "beforehand" -> 
                    25829, "blasts" -> 25830, "dumont" -> 25831, "##arney" -> 
                    25832, "##nem" -> 25833, "740" -> 25834, "conversions" -> 
                    25835, "hierarchical" -> 25836, "rios" -> 25837, 
                    "simulator" -> 25838, "##dya" -> 25839, "##lellan" -> 
                    25840, "hedges" -> 25841, "oleg" -> 25842, "thrusts" -> 
                    25843, "shadowed" -> 25844, "darby" -> 25845, "maximize" -> 
                    25846, "1744" -> 25847, "gregorian" -> 25848, "##nded" -> 
                    25849, "##routed" -> 25850, "sham" -> 25851, 
                    "unspecified" -> 25852, "##hog" -> 25853, "emory" -> 
                    25854, "factual" -> 25855, "##smo" -> 25856, "##tp" -> 
                    25857, "fooled" -> 25858, "##rger" -> 25859, "ortega" -> 
                    25860, "wellness" -> 25861, "marlon" -> 25862, "##oton" -> 
                    25863, "##urance" -> 25864, "casket" -> 25865, "keating" -> 
                    25866, "ley" -> 25867, "enclave" -> 25868, "##ayan" -> 
                    25869, "char" -> 25870, "influencing" -> 25871, "jia" -> 
                    25872, "##chenko" -> 25873, "412" -> 25874, "ammonia" -> 
                    25875, "erebidae" -> 25876, "incompatible" -> 25877, 
                    "violins" -> 25878, "cornered" -> 25879, "##arat" -> 
                    25880, "grooves" -> 25881, "astronauts" -> 25882, 
                    "columbian" -> 25883, "rampant" -> 25884, "fabrication" -> 
                    25885, "kyushu" -> 25886, "mahmud" -> 25887, "vanish" -> 
                    25888, "##dern" -> 25889, "mesopotamia" -> 25890, 
                    "##lete" -> 25891, "ict" -> 25892, "##rgen" -> 25893, 
                    "caspian" -> 25894, "kenji" -> 25895, "pitted" -> 25896, 
                    "##vered" -> 25897, "999" -> 25898, "grimace" -> 25899, 
                    "roanoke" -> 25900, "tchaikovsky" -> 25901, "twinned" -> 
                    25902, "##analysis" -> 25903, "##awan" -> 25904, 
                    "xinjiang" -> 25905, "arias" -> 25906, "clemson" -> 25907,
                     "kazakh" -> 25908, "sizable" -> 25909, "1662" -> 25910, 
                    "##khand" -> 25911, "##vard" -> 25912, "plunge" -> 25913, 
                    "tatum" -> 25914, "vittorio" -> 25915, "##nden" -> 25916, 
                    "cholera" -> 25917, "##dana" -> 25918, "##oper" -> 25919, 
                    "bracing" -> 25920, "indifference" -> 25921, "projectile" -> 
                    25922, "superliga" -> 25923, "##chee" -> 25924, 
                    "realises" -> 25925, "upgrading" -> 25926, "299" -> 25927,
                     "porte" -> 25928, "retribution" -> 25929, "##vies" -> 
                    25930, "nk" -> 25931, "stil" -> 25932, "##resses" -> 
                    25933, "ama" -> 25934, "bureaucracy" -> 25935, 
                    "blackberry" -> 25936, "bosch" -> 25937, "testosterone" -> 
                    25938, "collapses" -> 25939, "greer" -> 25940, "##pathic" -> 
                    25941, "ioc" -> 25942, "fifties" -> 25943, "malls" -> 
                    25944, "##erved" -> 25945, "bao" -> 25946, "baskets" -> 
                    25947, "adolescents" -> 25948, "siegfried" -> 25949, 
                    "##osity" -> 25950, "##tosis" -> 25951, "mantra" -> 25952,
                     "detecting" -> 25953, "existent" -> 25954, "fledgling" -> 
                    25955, "##cchi" -> 25956, "dissatisfied" -> 25957, "gan" -> 
                    25958, "telecommunication" -> 25959, "mingled" -> 25960, 
                    "sobbed" -> 25961, "6000" -> 25962, "controversies" -> 
                    25963, "outdated" -> 25964, "taxis" -> 25965, "##raus" -> 
                    25966, "fright" -> 25967, "slams" -> 25968, "##lham" -> 
                    25969, "##fect" -> 25970, "##tten" -> 25971, "detectors" -> 
                    25972, "fetal" -> 25973, "tanned" -> 25974, "##uw" -> 
                    25975, "fray" -> 25976, "goth" -> 25977, "olympian" -> 
                    25978, "skipping" -> 25979, "mandates" -> 25980, 
                    "scratches" -> 25981, "sheng" -> 25982, "unspoken" -> 
                    25983, "hyundai" -> 25984, "tracey" -> 25985, "hotspur" -> 
                    25986, "restrictive" -> 25987, "##buch" -> 25988, 
                    "americana" -> 25989, "mundo" -> 25990, "##bari" -> 25991,
                     "burroughs" -> 25992, "diva" -> 25993, "vulcan" -> 25994,
                     "##6th" -> 25995, "distinctions" -> 25996, "thumping" -> 
                    25997, "##ngen" -> 25998, "mikey" -> 25999, "sheds" -> 
                    26000, "fide" -> 26001, "rescues" -> 26002, "springsteen" -> 
                    26003, "vested" -> 26004, "valuation" -> 26005, "##ece" -> 
                    26006, "##ely" -> 26007, "pinnacle" -> 26008, "rake" -> 
                    26009, "sylvie" -> 26010, "##edo" -> 26011, "almond" -> 
                    26012, "quivering" -> 26013, "##irus" -> 26014, 
                    "alteration" -> 26015, "faltered" -> 26016, "##wad" -> 
                    26017, "51st" -> 26018, "hydra" -> 26019, "ticked" -> 
                    26020, "##kato" -> 26021, "recommends" -> 26022, 
                    "##dicated" -> 26023, "antigua" -> 26024, "arjun" -> 
                    26025, "stagecoach" -> 26026, "wilfred" -> 26027, 
                    "trickle" -> 26028, "pronouns" -> 26029, "##pon" -> 26030,
                     "aryan" -> 26031, "nighttime" -> 26032, "##anian" -> 
                    26033, "gall" -> 26034, "pea" -> 26035, "stitch" -> 26036,
                     "##hei" -> 26037, "leung" -> 26038, "milos" -> 26039, 
                    "##dini" -> 26040, "eritrea" -> 26041, "nexus" -> 26042, 
                    "starved" -> 26043, "snowfall" -> 26044, "kant" -> 26045, 
                    "parasitic" -> 26046, "cot" -> 26047, "discus" -> 26048, 
                    "hana" -> 26049, "strikers" -> 26050, "appleton" -> 26051,
                     "kitchens" -> 26052, "##erina" -> 26053, "##partisan" -> 
                    26054, "##itha" -> 26055, "##vius" -> 26056, "disclose" -> 
                    26057, "metis" -> 26058, "##channel" -> 26059, "1701" -> 
                    26060, "tesla" -> 26061, "##vera" -> 26062, "fitch" -> 
                    26063, "1735" -> 26064, "blooded" -> 26065, "##tila" -> 
                    26066, "decimal" -> 26067, "##tang" -> 26068, "##bai" -> 
                    26069, "cyclones" -> 26070, "eun" -> 26071, "bottled" -> 
                    26072, "peas" -> 26073, "pensacola" -> 26074, "basha" -> 
                    26075, "bolivian" -> 26076, "crabs" -> 26077, "boil" -> 
                    26078, "lanterns" -> 26079, "partridge" -> 26080, 
                    "roofed" -> 26081, "1645" -> 26082, "necks" -> 26083, 
                    "##phila" -> 26084, "opined" -> 26085, "patting" -> 26086,
                     "##kla" -> 26087, "##lland" -> 26088, "chuckles" -> 
                    26089, "volta" -> 26090, "whereupon" -> 26091, "##nche" -> 
                    26092, "devout" -> 26093, "euroleague" -> 26094, 
                    "suicidal" -> 26095, "##dee" -> 26096, "inherently" -> 
                    26097, "involuntary" -> 26098, "knitting" -> 26099, 
                    "nasser" -> 26100, "##hide" -> 26101, "puppets" -> 26102, 
                    "colourful" -> 26103, "courageous" -> 26104, "southend" -> 
                    26105, "stills" -> 26106, "miraculous" -> 26107, 
                    "hodgson" -> 26108, "richer" -> 26109, "rochdale" -> 
                    26110, "ethernet" -> 26111, "greta" -> 26112, "uniting" -> 
                    26113, "prism" -> 26114, "umm" -> 26115, "##haya" -> 
                    26116, "##itical" -> 26117, "##utation" -> 26118, 
                    "deterioration" -> 26119, "pointe" -> 26120, "prowess" -> 
                    26121, "##ropriation" -> 26122, "lids" -> 26123, 
                    "scranton" -> 26124, "billings" -> 26125, "subcontinent" -> 
                    26126, "##koff" -> 26127, "##scope" -> 26128, "brute" -> 
                    26129, "kellogg" -> 26130, "psalms" -> 26131, "degraded" -> 
                    26132, "##vez" -> 26133, "stanis\[LSlash]aw" -> 26134, 
                    "##ructured" -> 26135, "ferreira" -> 26136, "pun" -> 
                    26137, "astonishing" -> 26138, "gunnar" -> 26139, "##yat" -> 
                    26140, "arya" -> 26141, "prc" -> 26142, "gottfried" -> 
                    26143, "##tight" -> 26144, "excursion" -> 26145, 
                    "##ographer" -> 26146, "dina" -> 26147, "##quil" -> 26148,
                     "##nare" -> 26149, "huffington" -> 26150, "illustrious" -> 
                    26151, "wilbur" -> 26152, "gundam" -> 26153, "verandah" -> 
                    26154, "##zard" -> 26155, "naacp" -> 26156, "##odle" -> 
                    26157, "constructive" -> 26158, "fjord" -> 26159, "kade" -> 
                    26160, "##naud" -> 26161, "generosity" -> 26162, 
                    "thrilling" -> 26163, "baseline" -> 26164, "cayman" -> 
                    26165, "frankish" -> 26166, "plastics" -> 26167, 
                    "accommodations" -> 26168, "zoological" -> 26169, 
                    "##fting" -> 26170, "cedric" -> 26171, "qb" -> 26172, 
                    "motorized" -> 26173, "##dome" -> 26174, "##otted" -> 
                    26175, "squealed" -> 26176, "tackled" -> 26177, "canucks" -> 
                    26178, "budgets" -> 26179, "situ" -> 26180, "asthma" -> 
                    26181, "dail" -> 26182, "gabled" -> 26183, "grasslands" -> 
                    26184, "whimpered" -> 26185, "writhing" -> 26186, 
                    "judgments" -> 26187, "##65" -> 26188, "minnie" -> 26189, 
                    "pv" -> 26190, "##carbon" -> 26191, "bananas" -> 26192, 
                    "grille" -> 26193, "domes" -> 26194, "monique" -> 26195, 
                    "odin" -> 26196, "maguire" -> 26197, "markham" -> 26198, 
                    "tierney" -> 26199, "##estra" -> 26200, "##chua" -> 26201,
                     "libel" -> 26202, "poke" -> 26203, "speedy" -> 26204, 
                    "atrium" -> 26205, "laval" -> 26206, "notwithstanding" -> 
                    26207, "##edly" -> 26208, "fai" -> 26209, "kala" -> 26210,
                     "##sur" -> 26211, "robb" -> 26212, "##sma" -> 26213, 
                    "listings" -> 26214, "luz" -> 26215, "supplementary" -> 
                    26216, "tianjin" -> 26217, "##acing" -> 26218, "enzo" -> 
                    26219, "jd" -> 26220, "ric" -> 26221, "scanner" -> 26222, 
                    "croats" -> 26223, "transcribed" -> 26224, "##49" -> 
                    26225, "arden" -> 26226, "cv" -> 26227, "##hair" -> 26228,
                     "##raphy" -> 26229, "##lver" -> 26230, "##uy" -> 26231, 
                    "357" -> 26232, "seventies" -> 26233, "staggering" -> 
                    26234, "alam" -> 26235, "horticultural" -> 26236, "hs" -> 
                    26237, "regression" -> 26238, "timbers" -> 26239, 
                    "blasting" -> 26240, "##ounded" -> 26241, "montagu" -> 
                    26242, "manipulating" -> 26243, "##cit" -> 26244, 
                    "catalytic" -> 26245, "1550" -> 26246, "troopers" -> 
                    26247, "##meo" -> 26248, "condemnation" -> 26249, 
                    "fitzpatrick" -> 26250, "##oire" -> 26251, "##roved" -> 
                    26252, "inexperienced" -> 26253, "1670" -> 26254, 
                    "castes" -> 26255, "##lative" -> 26256, "outing" -> 26257,
                     "314" -> 26258, "dubois" -> 26259, "flicking" -> 26260, 
                    "quarrel" -> 26261, "ste" -> 26262, "learners" -> 26263, 
                    "1625" -> 26264, "iq" -> 26265, "whistled" -> 26266, 
                    "##class" -> 26267, "282" -> 26268, "classify" -> 26269, 
                    "tariffs" -> 26270, "temperament" -> 26271, "355" -> 
                    26272, "folly" -> 26273, "liszt" -> 26274, "##yles" -> 
                    26275, "immersed" -> 26276, "jordanian" -> 26277, 
                    "ceasefire" -> 26278, "apparel" -> 26279, "extras" -> 
                    26280, "maru" -> 26281, "fished" -> 26282, "##bio" -> 
                    26283, "harta" -> 26284, "stockport" -> 26285, 
                    "assortment" -> 26286, "craftsman" -> 26287, "paralysis" -> 
                    26288, "transmitters" -> 26289, "##cola" -> 26290, 
                    "blindness" -> 26291, "##wk" -> 26292, "fatally" -> 26293,
                     "proficiency" -> 26294, "solemnly" -> 26295, "##orno" -> 
                    26296, "repairing" -> 26297, "amore" -> 26298, 
                    "groceries" -> 26299, "ultraviolet" -> 26300, "##chase" -> 
                    26301, "schoolhouse" -> 26302, "##tua" -> 26303, 
                    "resurgence" -> 26304, "nailed" -> 26305, "##otype" -> 
                    26306, "##\[Times]" -> 26307, "ruse" -> 26308, "saliva" -> 
                    26309, "diagrams" -> 26310, "##tructing" -> 26311, 
                    "albans" -> 26312, "rann" -> 26313, "thirties" -> 26314, 
                    "1b" -> 26315, "antennas" -> 26316, "hilarious" -> 26317, 
                    "cougars" -> 26318, "paddington" -> 26319, "stats" -> 
                    26320, "##eger" -> 26321, "breakaway" -> 26322, "ipod" -> 
                    26323, "reza" -> 26324, "authorship" -> 26325, 
                    "prohibiting" -> 26326, "scoffed" -> 26327, "##etz" -> 
                    26328, "##ttle" -> 26329, "conscription" -> 26330, 
                    "defected" -> 26331, "trondheim" -> 26332, "##fires" -> 
                    26333, "ivanov" -> 26334, "keenan" -> 26335, "##adan" -> 
                    26336, "##ciful" -> 26337, "##fb" -> 26338, "##slow" -> 
                    26339, "locating" -> 26340, "##ials" -> 26341, "##tford" -> 
                    26342, "cadiz" -> 26343, "basalt" -> 26344, "blankly" -> 
                    26345, "interned" -> 26346, "rags" -> 26347, "rattling" -> 
                    26348, "##tick" -> 26349, "carpathian" -> 26350, 
                    "reassured" -> 26351, "sync" -> 26352, "bum" -> 26353, 
                    "guildford" -> 26354, "iss" -> 26355, "staunch" -> 26356, 
                    "##onga" -> 26357, "astronomers" -> 26358, "sera" -> 
                    26359, "sofie" -> 26360, "emergencies" -> 26361, 
                    "susquehanna" -> 26362, "##heard" -> 26363, "duc" -> 
                    26364, "mastery" -> 26365, "vh1" -> 26366, "williamsburg" -> 
                    26367, "bayer" -> 26368, "buckled" -> 26369, "craving" -> 
                    26370, "##khan" -> 26371, "##rdes" -> 26372, 
                    "bloomington" -> 26373, "##write" -> 26374, "alton" -> 
                    26375, "barbecue" -> 26376, "##bians" -> 26377, "justine" -> 
                    26378, "##hri" -> 26379, "##ndt" -> 26380, "delightful" -> 
                    26381, "smartphone" -> 26382, "newtown" -> 26383, 
                    "photon" -> 26384, "retrieval" -> 26385, "peugeot" -> 
                    26386, "hissing" -> 26387, "##monium" -> 26388, 
                    "##orough" -> 26389, "flavors" -> 26390, "lighted" -> 
                    26391, "relaunched" -> 26392, "tainted" -> 26393, 
                    "##games" -> 26394, "##lysis" -> 26395, "anarchy" -> 
                    26396, "microscopic" -> 26397, "hopping" -> 26398, 
                    "adept" -> 26399, "evade" -> 26400, "evie" -> 26401, 
                    "##beau" -> 26402, "inhibit" -> 26403, "sinn" -> 26404, 
                    "adjustable" -> 26405, "hurst" -> 26406, "intuition" -> 
                    26407, "wilton" -> 26408, "cisco" -> 26409, "44th" -> 
                    26410, "lawful" -> 26411, "lowlands" -> 26412, 
                    "stockings" -> 26413, "thierry" -> 26414, "##dalen" -> 
                    26415, "##hila" -> 26416, "##nai" -> 26417, "fates" -> 
                    26418, "prank" -> 26419, "tb" -> 26420, "maison" -> 26421,
                     "lobbied" -> 26422, "provocative" -> 26423, "1724" -> 
                    26424, "4a" -> 26425, "utopia" -> 26426, "##qual" -> 
                    26427, "carbonate" -> 26428, "gujarati" -> 26429, 
                    "purcell" -> 26430, "##rford" -> 26431, "curtiss" -> 
                    26432, "##mei" -> 26433, "overgrown" -> 26434, "arenas" -> 
                    26435, "mediation" -> 26436, "swallows" -> 26437, 
                    "##rnik" -> 26438, "respectful" -> 26439, "turnbull" -> 
                    26440, "##hedron" -> 26441, "##hope" -> 26442, "alyssa" -> 
                    26443, "ozone" -> 26444, "##\:02bbi" -> 26445, "ami" -> 
                    26446, "gestapo" -> 26447, "johansson" -> 26448, 
                    "snooker" -> 26449, "canteen" -> 26450, "cuff" -> 26451, 
                    "declines" -> 26452, "empathy" -> 26453, "stigma" -> 
                    26454, "##ags" -> 26455, "##iner" -> 26456, "##raine" -> 
                    26457, "taxpayers" -> 26458, "gui" -> 26459, "volga" -> 
                    26460, "##wright" -> 26461, "##copic" -> 26462, 
                    "lifespan" -> 26463, "overcame" -> 26464, "tattooed" -> 
                    26465, "enactment" -> 26466, "giggles" -> 26467, "##ador" -> 
                    26468, "##camp" -> 26469, "barrington" -> 26470, "bribe" -> 
                    26471, "obligatory" -> 26472, "orbiting" -> 26473, "peng" -> 
                    26474, "##enas" -> 26475, "elusive" -> 26476, "sucker" -> 
                    26477, "##vating" -> 26478, "cong" -> 26479, "hardship" -> 
                    26480, "empowered" -> 26481, "anticipating" -> 26482, 
                    "estrada" -> 26483, "cryptic" -> 26484, "greasy" -> 26485,
                     "detainees" -> 26486, "planck" -> 26487, "sudbury" -> 
                    26488, "plaid" -> 26489, "dod" -> 26490, "marriott" -> 
                    26491, "kayla" -> 26492, "##ears" -> 26493, "##vb" -> 
                    26494, "##zd" -> 26495, "mortally" -> 26496, "##hein" -> 
                    26497, "cognition" -> 26498, "radha" -> 26499, "319" -> 
                    26500, "liechtenstein" -> 26501, "meade" -> 26502, 
                    "richly" -> 26503, "argyle" -> 26504, "harpsichord" -> 
                    26505, "liberalism" -> 26506, "trumpets" -> 26507, 
                    "lauded" -> 26508, "tyrant" -> 26509, "salsa" -> 26510, 
                    "tiled" -> 26511, "lear" -> 26512, "promoters" -> 26513, 
                    "reused" -> 26514, "slicing" -> 26515, "trident" -> 26516,
                     "##chuk" -> 26517, "##gami" -> 26518, "##lka" -> 26519, 
                    "cantor" -> 26520, "checkpoint" -> 26521, "##points" -> 
                    26522, "gaul" -> 26523, "leger" -> 26524, "mammalian" -> 
                    26525, "##tov" -> 26526, "##aar" -> 26527, "##schaft" -> 
                    26528, "doha" -> 26529, "frenchman" -> 26530, "nirvana" -> 
                    26531, "##vino" -> 26532, "delgado" -> 26533, 
                    "headlining" -> 26534, "##eron" -> 26535, "##iography" -> 
                    26536, "jug" -> 26537, "tko" -> 26538, "1649" -> 26539, 
                    "naga" -> 26540, "intersections" -> 26541, "##jia" -> 
                    26542, "benfica" -> 26543, "nawab" -> 26544, "##suka" -> 
                    26545, "ashford" -> 26546, "gulp" -> 26547, "##deck" -> 
                    26548, "##vill" -> 26549, "##rug" -> 26550, "brentford" -> 
                    26551, "frazier" -> 26552, "pleasures" -> 26553, "dunne" -> 
                    26554, "potsdam" -> 26555, "shenzhen" -> 26556, 
                    "dentistry" -> 26557, "##tec" -> 26558, "flanagan" -> 
                    26559, "##dorff" -> 26560, "##hear" -> 26561, "chorale" -> 
                    26562, "dinah" -> 26563, "prem" -> 26564, "quezon" -> 
                    26565, "##rogated" -> 26566, "relinquished" -> 26567, 
                    "sutra" -> 26568, "terri" -> 26569, "##pani" -> 26570, 
                    "flaps" -> 26571, "##rissa" -> 26572, "poly" -> 26573, 
                    "##rnet" -> 26574, "homme" -> 26575, "aback" -> 26576, 
                    "##eki" -> 26577, "linger" -> 26578, "womb" -> 26579, 
                    "##kson" -> 26580, "##lewood" -> 26581, "doorstep" -> 
                    26582, "orthodoxy" -> 26583, "threaded" -> 26584, 
                    "westfield" -> 26585, "##rval" -> 26586, "dioceses" -> 
                    26587, "fridays" -> 26588, "subsided" -> 26589, "##gata" -> 
                    26590, "loyalists" -> 26591, "##biotic" -> 26592, 
                    "##ettes" -> 26593, "letterman" -> 26594, "lunatic" -> 
                    26595, "prelate" -> 26596, "tenderly" -> 26597, 
                    "invariably" -> 26598, "souza" -> 26599, "thug" -> 26600, 
                    "winslow" -> 26601, "##otide" -> 26602, "furlongs" -> 
                    26603, "gogh" -> 26604, "jeopardy" -> 26605, "##runa" -> 
                    26606, "pegasus" -> 26607, "##umble" -> 26608, 
                    "humiliated" -> 26609, "standalone" -> 26610, "tagged" -> 
                    26611, "##roller" -> 26612, "freshmen" -> 26613, "klan" -> 
                    26614, "##bright" -> 26615, "attaining" -> 26616, 
                    "initiating" -> 26617, "transatlantic" -> 26618, "logged" -> 
                    26619, "viz" -> 26620, "##uance" -> 26621, "1723" -> 
                    26622, "combatants" -> 26623, "intervening" -> 26624, 
                    "stephane" -> 26625, "chieftain" -> 26626, "despised" -> 
                    26627, "grazed" -> 26628, "317" -> 26629, "cdc" -> 26630, 
                    "galveston" -> 26631, "godzilla" -> 26632, "macro" -> 
                    26633, "simulate" -> 26634, "##planes" -> 26635, 
                    "parades" -> 26636, "##esses" -> 26637, "960" -> 26638, 
                    "##ductive" -> 26639, "##unes" -> 26640, "equator" -> 
                    26641, "overdose" -> 26642, "##cans" -> 26643, "##hosh" -> 
                    26644, "##lifting" -> 26645, "joshi" -> 26646, "epstein" -> 
                    26647, "sonora" -> 26648, "treacherous" -> 26649, 
                    "aquatics" -> 26650, "manchu" -> 26651, "responsive" -> 
                    26652, "##sation" -> 26653, "supervisory" -> 26654, 
                    "##christ" -> 26655, "##llins" -> 26656, "##ibar" -> 
                    26657, "##balance" -> 26658, "##uso" -> 26659, "kimball" -> 
                    26660, "karlsruhe" -> 26661, "mab" -> 26662, "##emy" -> 
                    26663, "ignores" -> 26664, "phonetic" -> 26665, "reuters" -> 
                    26666, "spaghetti" -> 26667, "820" -> 26668, "almighty" -> 
                    26669, "danzig" -> 26670, "rumbling" -> 26671, 
                    "tombstone" -> 26672, "designations" -> 26673, "lured" -> 
                    26674, "outset" -> 26675, "##felt" -> 26676, 
                    "supermarkets" -> 26677, "##wt" -> 26678, "grupo" -> 
                    26679, "kei" -> 26680, "kraft" -> 26681, "susanna" -> 
                    26682, "##blood" -> 26683, "comprehension" -> 26684, 
                    "genealogy" -> 26685, "##aghan" -> 26686, "##verted" -> 
                    26687, "redding" -> 26688, "##ythe" -> 26689, "1722" -> 
                    26690, "bowing" -> 26691, "##pore" -> 26692, "##roi" -> 
                    26693, "lest" -> 26694, "sharpened" -> 26695, "fulbright" -> 
                    26696, "valkyrie" -> 26697, "sikhs" -> 26698, "##unds" -> 
                    26699, "swans" -> 26700, "bouquet" -> 26701, "merritt" -> 
                    26702, "##tage" -> 26703, "##venting" -> 26704, 
                    "commuted" -> 26705, "redhead" -> 26706, "clerks" -> 
                    26707, "leasing" -> 26708, "cesare" -> 26709, "dea" -> 
                    26710, "hazy" -> 26711, "##vances" -> 26712, "fledged" -> 
                    26713, "greenfield" -> 26714, "servicemen" -> 26715, 
                    "##gical" -> 26716, "armando" -> 26717, "blackout" -> 
                    26718, "dt" -> 26719, "sagged" -> 26720, "downloadable" -> 
                    26721, "intra" -> 26722, "potion" -> 26723, "pods" -> 
                    26724, "##4th" -> 26725, "##mism" -> 26726, "xp" -> 26727,
                     "attendants" -> 26728, "gambia" -> 26729, "stale" -> 
                    26730, "##ntine" -> 26731, "plump" -> 26732, "asteroids" -> 
                    26733, "rediscovered" -> 26734, "buds" -> 26735, "flea" -> 
                    26736, "hive" -> 26737, "##neas" -> 26738, "1737" -> 
                    26739, "classifications" -> 26740, "debuts" -> 26741, 
                    "##eles" -> 26742, "olympus" -> 26743, "scala" -> 26744, 
                    "##eurs" -> 26745, "##gno" -> 26746, "##mute" -> 26747, 
                    "hummed" -> 26748, "sigismund" -> 26749, "visuals" -> 
                    26750, "wiggled" -> 26751, "await" -> 26752, "pilasters" -> 
                    26753, "clench" -> 26754, "sulfate" -> 26755, "##ances" -> 
                    26756, "bellevue" -> 26757, "enigma" -> 26758, "trainee" -> 
                    26759, "snort" -> 26760, "##sw" -> 26761, "clouded" -> 
                    26762, "denim" -> 26763, "##rank" -> 26764, "##rder" -> 
                    26765, "churning" -> 26766, "hartman" -> 26767, "lodges" -> 
                    26768, "riches" -> 26769, "sima" -> 26770, "##missible" -> 
                    26771, "accountable" -> 26772, "socrates" -> 26773, 
                    "regulates" -> 26774, "mueller" -> 26775, "##cr" -> 26776,
                     "1702" -> 26777, "avoids" -> 26778, "solids" -> 26779, 
                    "himalayas" -> 26780, "nutrient" -> 26781, "pup" -> 26782,
                     "##jevic" -> 26783, "squat" -> 26784, "fades" -> 26785, 
                    "nec" -> 26786, "##lates" -> 26787, "##pina" -> 26788, 
                    "##rona" -> 26789, "##\[Omicron]\[Upsilon]" -> 26790, 
                    "privateer" -> 26791, "tequila" -> 26792, "##gative" -> 
                    26793, "##mpton" -> 26794, "apt" -> 26795, "hornet" -> 
                    26796, "immortals" -> 26797, "##dou" -> 26798, "asturias" -> 
                    26799, "cleansing" -> 26800, "dario" -> 26801, "##rries" -> 
                    26802, "##anta" -> 26803, "etymology" -> 26804, 
                    "servicing" -> 26805, "zhejiang" -> 26806, "##venor" -> 
                    26807, "##nx" -> 26808, "horned" -> 26809, "erasmus" -> 
                    26810, "rayon" -> 26811, "relocating" -> 26812, 
                    "\[Sterling]10" -> 26813, "##bags" -> 26814, "escalated" -> 
                    26815, "promenade" -> 26816, "stubble" -> 26817, "2010s" -> 
                    26818, "artisans" -> 26819, "axial" -> 26820, "liquids" -> 
                    26821, "mora" -> 26822, "sho" -> 26823, "yoo" -> 26824, 
                    "##tsky" -> 26825, "bundles" -> 26826, "oldies" -> 26827, 
                    "##nally" -> 26828, "notification" -> 26829, "bastion" -> 
                    26830, "##ths" -> 26831, "sparkle" -> 26832, "##lved" -> 
                    26833, "1728" -> 26834, "leash" -> 26835, "pathogen" -> 
                    26836, "highs" -> 26837, "##hmi" -> 26838, "immature" -> 
                    26839, "880" -> 26840, "gonzaga" -> 26841, "ignatius" -> 
                    26842, "mansions" -> 26843, "monterrey" -> 26844, 
                    "sweets" -> 26845, "bryson" -> 26846, "##loe" -> 26847, 
                    "polled" -> 26848, "regatta" -> 26849, "brightest" -> 
                    26850, "pei" -> 26851, "rosy" -> 26852, "squid" -> 26853, 
                    "hatfield" -> 26854, "payroll" -> 26855, "addict" -> 
                    26856, "meath" -> 26857, "cornerback" -> 26858, 
                    "heaviest" -> 26859, "lodging" -> 26860, "##mage" -> 
                    26861, "capcom" -> 26862, "rippled" -> 26863, "##sily" -> 
                    26864, "barnet" -> 26865, "mayhem" -> 26866, "ymca" -> 
                    26867, "snuggled" -> 26868, "rousseau" -> 26869, "##cute" -> 
                    26870, "blanchard" -> 26871, "284" -> 26872, "fragmented" -> 
                    26873, "leighton" -> 26874, "chromosomes" -> 26875, 
                    "risking" -> 26876, "##md" -> 26877, "##strel" -> 26878, 
                    "##utter" -> 26879, "corinne" -> 26880, "coyotes" -> 
                    26881, "cynical" -> 26882, "hiroshi" -> 26883, "yeomanry" -> 
                    26884, "##ractive" -> 26885, "ebook" -> 26886, "grading" -> 
                    26887, "mandela" -> 26888, "plume" -> 26889, "agustin" -> 
                    26890, "magdalene" -> 26891, "##rkin" -> 26892, "bea" -> 
                    26893, "femme" -> 26894, "trafford" -> 26895, "##coll" -> 
                    26896, "##lun" -> 26897, "##tance" -> 26898, "52nd" -> 
                    26899, "fourier" -> 26900, "upton" -> 26901, "##mental" -> 
                    26902, "camilla" -> 26903, "gust" -> 26904, "iihf" -> 
                    26905, "islamabad" -> 26906, "longevity" -> 26907, 
                    "##kala" -> 26908, "feldman" -> 26909, "netting" -> 26910,
                     "##rization" -> 26911, "endeavour" -> 26912, "foraging" -> 
                    26913, "mfa" -> 26914, "orr" -> 26915, "##open" -> 26916, 
                    "greyish" -> 26917, "contradiction" -> 26918, "graz" -> 
                    26919, "##ruff" -> 26920, "handicapped" -> 26921, 
                    "marlene" -> 26922, "tweed" -> 26923, "oaxaca" -> 26924, 
                    "spp" -> 26925, "campos" -> 26926, "miocene" -> 26927, 
                    "pri" -> 26928, "configured" -> 26929, "cooks" -> 26930, 
                    "pluto" -> 26931, "cozy" -> 26932, "pornographic" -> 
                    26933, "##entes" -> 26934, "70th" -> 26935, "fairness" -> 
                    26936, "glided" -> 26937, "jonny" -> 26938, "lynne" -> 
                    26939, "rounding" -> 26940, "sired" -> 26941, "##emon" -> 
                    26942, "##nist" -> 26943, "remade" -> 26944, "uncover" -> 
                    26945, "##mack" -> 26946, "complied" -> 26947, "lei" -> 
                    26948, "newsweek" -> 26949, "##jured" -> 26950, "##parts" -> 
                    26951, "##enting" -> 26952, "##pg" -> 26953, "293" -> 
                    26954, "finer" -> 26955, "guerrillas" -> 26956, 
                    "athenian" -> 26957, "deng" -> 26958, "disused" -> 26959, 
                    "stepmother" -> 26960, "accuse" -> 26961, "gingerly" -> 
                    26962, "seduction" -> 26963, "521" -> 26964, 
                    "confronting" -> 26965, "##walker" -> 26966, "##going" -> 
                    26967, "gora" -> 26968, "nostalgia" -> 26969, "sabres" -> 
                    26970, "virginity" -> 26971, "wrenched" -> 26972, 
                    "##minated" -> 26973, "syndication" -> 26974, "wielding" -> 
                    26975, "eyre" -> 26976, "##56" -> 26977, "##gnon" -> 
                    26978, "##igny" -> 26979, "behaved" -> 26980, "taxpayer" -> 
                    26981, "sweeps" -> 26982, "##growth" -> 26983, 
                    "childless" -> 26984, "gallant" -> 26985, "##ywood" -> 
                    26986, "amplified" -> 26987, "geraldine" -> 26988, 
                    "scrape" -> 26989, "##ffi" -> 26990, "babylonian" -> 
                    26991, "fresco" -> 26992, "##rdan" -> 26993, "##kney" -> 
                    26994, "##position" -> 26995, "1718" -> 26996, 
                    "restricting" -> 26997, "tack" -> 26998, "fukuoka" -> 
                    26999, "osborn" -> 27000, "selector" -> 27001, 
                    "partnering" -> 27002, "##dlow" -> 27003, "318" -> 27004, 
                    "gnu" -> 27005, "kia" -> 27006, "tak" -> 27007, "whitley" -> 
                    27008, "gables" -> 27009, "##54" -> 27010, "##mania" -> 
                    27011, "mri" -> 27012, "softness" -> 27013, "immersion" -> 
                    27014, "##bots" -> 27015, "##evsky" -> 27016, "1713" -> 
                    27017, "chilling" -> 27018, "insignificant" -> 27019, 
                    "pcs" -> 27020, "##uis" -> 27021, "elites" -> 27022, 
                    "lina" -> 27023, "purported" -> 27024, "supplemental" -> 
                    27025, "teaming" -> 27026, "##americana" -> 27027, 
                    "##dding" -> 27028, "##inton" -> 27029, "proficient" -> 
                    27030, "rouen" -> 27031, "##nage" -> 27032, "##rret" -> 
                    27033, "niccolo" -> 27034, "selects" -> 27035, "##bread" -> 
                    27036, "fluffy" -> 27037, "1621" -> 27038, "gruff" -> 
                    27039, "knotted" -> 27040, "mukherjee" -> 27041, 
                    "polgara" -> 27042, "thrash" -> 27043, "nicholls" -> 
                    27044, "secluded" -> 27045, "smoothing" -> 27046, "thru" -> 
                    27047, "corsica" -> 27048, "loaf" -> 27049, "whitaker" -> 
                    27050, "inquiries" -> 27051, "##rrier" -> 27052, "##kam" -> 
                    27053, "indochina" -> 27054, "289" -> 27055, "marlins" -> 
                    27056, "myles" -> 27057, "peking" -> 27058, "##tea" -> 
                    27059, "extracts" -> 27060, "pastry" -> 27061, 
                    "superhuman" -> 27062, "connacht" -> 27063, "vogel" -> 
                    27064, "##ditional" -> 27065, "##het" -> 27066, "##udged" -> 
                    27067, "##lash" -> 27068, "gloss" -> 27069, "quarries" -> 
                    27070, "refit" -> 27071, "teaser" -> 27072, "##alic" -> 
                    27073, "##gaon" -> 27074, "20s" -> 27075, "materialized" -> 
                    27076, "sling" -> 27077, "camped" -> 27078, "pickering" -> 
                    27079, "tung" -> 27080, "tracker" -> 27081, "pursuant" -> 
                    27082, "##cide" -> 27083, "cranes" -> 27084, "soc" -> 
                    27085, "##cini" -> 27086, "##typical" -> 27087, "##viere" -> 
                    27088, "anhalt" -> 27089, "overboard" -> 27090, "workout" -> 
                    27091, "chores" -> 27092, "fares" -> 27093, "orphaned" -> 
                    27094, "stains" -> 27095, "##logie" -> 27096, "fenton" -> 
                    27097, "surpassing" -> 27098, "joyah" -> 27099, 
                    "triggers" -> 27100, "##itte" -> 27101, "grandmaster" -> 
                    27102, "##lass" -> 27103, "##lists" -> 27104, "clapping" -> 
                    27105, "fraudulent" -> 27106, "ledger" -> 27107, 
                    "nagasaki" -> 27108, "##cor" -> 27109, "##nosis" -> 27110,
                     "##tsa" -> 27111, "eucalyptus" -> 27112, "tun" -> 27113, 
                    "##icio" -> 27114, "##rney" -> 27115, "##tara" -> 27116, 
                    "dax" -> 27117, "heroism" -> 27118, "ina" -> 27119, 
                    "wrexham" -> 27120, "onboard" -> 27121, "unsigned" -> 
                    27122, "##dates" -> 27123, "moshe" -> 27124, "galley" -> 
                    27125, "winnie" -> 27126, "droplets" -> 27127, "exiles" -> 
                    27128, "praises" -> 27129, "watered" -> 27130, "noodles" -> 
                    27131, "##aia" -> 27132, "fein" -> 27133, "adi" -> 27134, 
                    "leland" -> 27135, "multicultural" -> 27136, "stink" -> 
                    27137, "bingo" -> 27138, "comets" -> 27139, "erskine" -> 
                    27140, "modernized" -> 27141, "canned" -> 27142, 
                    "constraint" -> 27143, "domestically" -> 27144, 
                    "chemotherapy" -> 27145, "featherweight" -> 27146, 
                    "stifled" -> 27147, "##mum" -> 27148, "darkly" -> 27149, 
                    "irresistible" -> 27150, "refreshing" -> 27151, "hasty" -> 
                    27152, "isolate" -> 27153, "##oys" -> 27154, "kitchener" -> 
                    27155, "planners" -> 27156, "##wehr" -> 27157, "cages" -> 
                    27158, "yarn" -> 27159, "implant" -> 27160, "toulon" -> 
                    27161, "elects" -> 27162, "childbirth" -> 27163, "yue" -> 
                    27164, "##lind" -> 27165, "##lone" -> 27166, "cn" -> 
                    27167, "rightful" -> 27168, "sportsman" -> 27169, 
                    "junctions" -> 27170, "remodeled" -> 27171, "specifies" -> 
                    27172, "##rgh" -> 27173, "291" -> 27174, "##oons" -> 
                    27175, "complimented" -> 27176, "##urgent" -> 27177, 
                    "lister" -> 27178, "ot" -> 27179, "##logic" -> 27180, 
                    "bequeathed" -> 27181, "cheekbones" -> 27182, "fontana" -> 
                    27183, "gabby" -> 27184, "##dial" -> 27185, "amadeus" -> 
                    27186, "corrugated" -> 27187, "maverick" -> 27188, 
                    "resented" -> 27189, "triangles" -> 27190, "##hered" -> 
                    27191, "##usly" -> 27192, "nazareth" -> 27193, "tyrol" -> 
                    27194, "1675" -> 27195, "assent" -> 27196, "poorer" -> 
                    27197, "sectional" -> 27198, "aegean" -> 27199, "##cous" -> 
                    27200, "296" -> 27201, "nylon" -> 27202, "ghanaian" -> 
                    27203, "##egorical" -> 27204, "##weig" -> 27205, 
                    "cushions" -> 27206, "forbid" -> 27207, "fusiliers" -> 
                    27208, "obstruction" -> 27209, "somerville" -> 27210, 
                    "##scia" -> 27211, "dime" -> 27212, "earrings" -> 27213, 
                    "elliptical" -> 27214, "leyte" -> 27215, "oder" -> 27216, 
                    "polymers" -> 27217, "timmy" -> 27218, "atm" -> 27219, 
                    "midtown" -> 27220, "piloted" -> 27221, "settles" -> 
                    27222, "continual" -> 27223, "externally" -> 27224, 
                    "mayfield" -> 27225, "##uh" -> 27226, "enrichment" -> 
                    27227, "henson" -> 27228, "keane" -> 27229, "persians" -> 
                    27230, "1733" -> 27231, "benji" -> 27232, "braden" -> 
                    27233, "pep" -> 27234, "324" -> 27235, "##efe" -> 27236, 
                    "contenders" -> 27237, "pepsi" -> 27238, "valet" -> 27239,
                     "##isches" -> 27240, "298" -> 27241, "##asse" -> 27242, 
                    "##earing" -> 27243, "goofy" -> 27244, "stroll" -> 27245, 
                    "##amen" -> 27246, "authoritarian" -> 27247, 
                    "occurrences" -> 27248, "adversary" -> 27249, "ahmedabad" -> 
                    27250, "tangent" -> 27251, "toppled" -> 27252, 
                    "dorchester" -> 27253, "1672" -> 27254, "modernism" -> 
                    27255, "marxism" -> 27256, "islamist" -> 27257, 
                    "charlemagne" -> 27258, "exponential" -> 27259, "racks" -> 
                    27260, "unicode" -> 27261, "brunette" -> 27262, "mbc" -> 
                    27263, "pic" -> 27264, "skirmish" -> 27265, "##bund" -> 
                    27266, "##lad" -> 27267, "##powered" -> 27268, "##yst" -> 
                    27269, "hoisted" -> 27270, "messina" -> 27271, "shatter" -> 
                    27272, "##ctum" -> 27273, "jedi" -> 27274, "vantage" -> 
                    27275, "##music" -> 27276, "##neil" -> 27277, "clemens" -> 
                    27278, "mahmoud" -> 27279, "corrupted" -> 27280, 
                    "authentication" -> 27281, "lowry" -> 27282, "nils" -> 
                    27283, "##washed" -> 27284, "omnibus" -> 27285, 
                    "wounding" -> 27286, "jillian" -> 27287, "##itors" -> 
                    27288, "##opped" -> 27289, "serialized" -> 27290, 
                    "narcotics" -> 27291, "handheld" -> 27292, "##arm" -> 
                    27293, "##plicity" -> 27294, "intersecting" -> 27295, 
                    "stimulating" -> 27296, "##onis" -> 27297, "crate" -> 
                    27298, "fellowships" -> 27299, "hemingway" -> 27300, 
                    "casinos" -> 27301, "climatic" -> 27302, "fordham" -> 
                    27303, "copeland" -> 27304, "drip" -> 27305, "beatty" -> 
                    27306, "leaflets" -> 27307, "robber" -> 27308, "brothel" -> 
                    27309, "madeira" -> 27310, "##hedral" -> 27311, "sphinx" -> 
                    27312, "ultrasound" -> 27313, "##vana" -> 27314, "valor" -> 
                    27315, "forbade" -> 27316, "leonid" -> 27317, "villas" -> 
                    27318, "##aldo" -> 27319, "duane" -> 27320, "marquez" -> 
                    27321, "##cytes" -> 27322, "disadvantaged" -> 27323, 
                    "forearms" -> 27324, "kawasaki" -> 27325, "reacts" -> 
                    27326, "consular" -> 27327, "lax" -> 27328, "uncles" -> 
                    27329, "uphold" -> 27330, "##hopper" -> 27331, 
                    "concepcion" -> 27332, "dorsey" -> 27333, "lass" -> 27334,
                     "##izan" -> 27335, "arching" -> 27336, "passageway" -> 
                    27337, "1708" -> 27338, "researches" -> 27339, "tia" -> 
                    27340, "internationals" -> 27341, "##graphs" -> 27342, 
                    "##opers" -> 27343, "distinguishes" -> 27344, "javanese" -> 
                    27345, "divert" -> 27346, "##uven" -> 27347, "plotted" -> 
                    27348, "##listic" -> 27349, "##rwin" -> 27350, "##erik" -> 
                    27351, "##tify" -> 27352, "affirmative" -> 27353, 
                    "signifies" -> 27354, "validation" -> 27355, "##bson" -> 
                    27356, "kari" -> 27357, "felicity" -> 27358, "georgina" -> 
                    27359, "zulu" -> 27360, "##eros" -> 27361, "##rained" -> 
                    27362, "##rath" -> 27363, "overcoming" -> 27364, "##dot" -> 
                    27365, "argyll" -> 27366, "##rbin" -> 27367, "1734" -> 
                    27368, "chiba" -> 27369, "ratification" -> 27370, "windy" -> 
                    27371, "earls" -> 27372, "parapet" -> 27373, "##marks" -> 
                    27374, "hunan" -> 27375, "pristine" -> 27376, "astrid" -> 
                    27377, "punta" -> 27378, "##gart" -> 27379, "brodie" -> 
                    27380, "##kota" -> 27381, "##oder" -> 27382, "malaga" -> 
                    27383, "minerva" -> 27384, "rouse" -> 27385, "##phonic" -> 
                    27386, "bellowed" -> 27387, "pagoda" -> 27388, "portals" -> 
                    27389, "reclamation" -> 27390, "##gur" -> 27391, 
                    "##odies" -> 27392, "##\:2044\:2084" -> 27393, 
                    "parentheses" -> 27394, "quoting" -> 27395, "allergic" -> 
                    27396, "palette" -> 27397, "showcases" -> 27398, 
                    "benefactor" -> 27399, "heartland" -> 27400, "nonlinear" -> 
                    27401, "##tness" -> 27402, "bladed" -> 27403, 
                    "cheerfully" -> 27404, "scans" -> 27405, "##ety" -> 27406,
                     "##hone" -> 27407, "1666" -> 27408, "girlfriends" -> 
                    27409, "pedersen" -> 27410, "hiram" -> 27411, "sous" -> 
                    27412, "##liche" -> 27413, "##nator" -> 27414, "1683" -> 
                    27415, "##nery" -> 27416, "##orio" -> 27417, "##umen" -> 
                    27418, "bobo" -> 27419, "primaries" -> 27420, "smiley" -> 
                    27421, "##cb" -> 27422, "unearthed" -> 27423, "uniformly" -> 
                    27424, "fis" -> 27425, "metadata" -> 27426, "1635" -> 
                    27427, "ind" -> 27428, "##oted" -> 27429, "recoil" -> 
                    27430, "##titles" -> 27431, "##tura" -> 27432, 
                    "##\[Iota]\[Alpha]" -> 27433, "406" -> 27434, "hilbert" -> 
                    27435, "jamestown" -> 27436, "mcmillan" -> 27437, 
                    "tulane" -> 27438, "seychelles" -> 27439, "##frid" -> 
                    27440, "antics" -> 27441, "coli" -> 27442, "fated" -> 
                    27443, "stucco" -> 27444, "##grants" -> 27445, "1654" -> 
                    27446, "bulky" -> 27447, "accolades" -> 27448, "arrays" -> 
                    27449, "caledonian" -> 27450, "carnage" -> 27451, 
                    "optimism" -> 27452, "puebla" -> 27453, "##tative" -> 
                    27454, "##cave" -> 27455, "enforcing" -> 27456, 
                    "rotherham" -> 27457, "seo" -> 27458, "dunlop" -> 27459, 
                    "aeronautics" -> 27460, "chimed" -> 27461, "incline" -> 
                    27462, "zoning" -> 27463, "archduke" -> 27464, 
                    "hellenistic" -> 27465, "##oses" -> 27466, "##sions" -> 
                    27467, "candi" -> 27468, "thong" -> 27469, "##ople" -> 
                    27470, "magnate" -> 27471, "rustic" -> 27472, "##rsk" -> 
                    27473, "projective" -> 27474, "slant" -> 27475, "##offs" -> 
                    27476, "danes" -> 27477, "hollis" -> 27478, "vocalists" -> 
                    27479, "##ammed" -> 27480, "congenital" -> 27481, 
                    "contend" -> 27482, "gesellschaft" -> 27483, "##ocating" -> 
                    27484, "##pressive" -> 27485, "douglass" -> 27486, 
                    "quieter" -> 27487, "##cm" -> 27488, "##kshi" -> 27489, 
                    "howled" -> 27490, "salim" -> 27491, "spontaneously" -> 
                    27492, "townsville" -> 27493, "buena" -> 27494, 
                    "southport" -> 27495, "##bold" -> 27496, "kato" -> 27497, 
                    "1638" -> 27498, "faerie" -> 27499, "stiffly" -> 27500, 
                    "##vus" -> 27501, "##rled" -> 27502, "297" -> 27503, 
                    "flawless" -> 27504, "realising" -> 27505, "taboo" -> 
                    27506, "##7th" -> 27507, "bytes" -> 27508, 
                    "straightening" -> 27509, "356" -> 27510, "jena" -> 27511,
                     "##hid" -> 27512, "##rmin" -> 27513, "cartwright" -> 
                    27514, "berber" -> 27515, "bertram" -> 27516, "soloists" -> 
                    27517, "411" -> 27518, "noses" -> 27519, "417" -> 27520, 
                    "coping" -> 27521, "fission" -> 27522, "hardin" -> 27523, 
                    "inca" -> 27524, "##cen" -> 27525, "1717" -> 27526, 
                    "mobilized" -> 27527, "vhf" -> 27528, "##raf" -> 27529, 
                    "biscuits" -> 27530, "curate" -> 27531, "##85" -> 27532, 
                    "##anial" -> 27533, "331" -> 27534, "gaunt" -> 27535, 
                    "neighbourhoods" -> 27536, "1540" -> 27537, "##abas" -> 
                    27538, "blanca" -> 27539, "bypassed" -> 27540, "sockets" -> 
                    27541, "behold" -> 27542, "coincidentally" -> 27543, 
                    "##bane" -> 27544, "nara" -> 27545, "shave" -> 27546, 
                    "splinter" -> 27547, "terrific" -> 27548, "##arion" -> 
                    27549, "##erian" -> 27550, "commonplace" -> 27551, 
                    "juris" -> 27552, "redwood" -> 27553, "waistband" -> 
                    27554, "boxed" -> 27555, "caitlin" -> 27556, 
                    "fingerprints" -> 27557, "jennie" -> 27558, "naturalized" -> 
                    27559, "##ired" -> 27560, "balfour" -> 27561, "craters" -> 
                    27562, "jody" -> 27563, "bungalow" -> 27564, "hugely" -> 
                    27565, "quilt" -> 27566, "glitter" -> 27567, "pigeons" -> 
                    27568, "undertaker" -> 27569, "bulging" -> 27570, 
                    "constrained" -> 27571, "goo" -> 27572, "##sil" -> 27573, 
                    "##akh" -> 27574, "assimilation" -> 27575, "reworked" -> 
                    27576, "##person" -> 27577, "persuasion" -> 27578, 
                    "##pants" -> 27579, "felicia" -> 27580, "##cliff" -> 
                    27581, "##ulent" -> 27582, "1732" -> 27583, "explodes" -> 
                    27584, "##dun" -> 27585, "##inium" -> 27586, "##zic" -> 
                    27587, "lyman" -> 27588, "vulture" -> 27589, "hog" -> 
                    27590, "overlook" -> 27591, "begs" -> 27592, "northwards" -> 
                    27593, "ow" -> 27594, "spoil" -> 27595, "##urer" -> 27596,
                     "fatima" -> 27597, "favorably" -> 27598, "accumulate" -> 
                    27599, "sargent" -> 27600, "sorority" -> 27601, 
                    "corresponded" -> 27602, "dispersal" -> 27603, "kochi" -> 
                    27604, "toned" -> 27605, "##imi" -> 27606, "##lita" -> 
                    27607, "internacional" -> 27608, "newfound" -> 27609, 
                    "##agger" -> 27610, "##lynn" -> 27611, "##rigue" -> 27612,
                     "booths" -> 27613, "peanuts" -> 27614, "##eborg" -> 
                    27615, "medicare" -> 27616, "muriel" -> 27617, "nur" -> 
                    27618, "##uram" -> 27619, "crates" -> 27620, "millennia" -> 
                    27621, "pajamas" -> 27622, "worsened" -> 27623, 
                    "##breakers" -> 27624, "jimi" -> 27625, "vanuatu" -> 
                    27626, "yawned" -> 27627, "##udeau" -> 27628, "carousel" -> 
                    27629, "##hony" -> 27630, "hurdle" -> 27631, "##ccus" -> 
                    27632, "##mounted" -> 27633, "##pod" -> 27634, "rv" -> 
                    27635, "##eche" -> 27636, "airship" -> 27637, "ambiguity" -> 
                    27638, "compulsion" -> 27639, "recapture" -> 27640, 
                    "##claiming" -> 27641, "arthritis" -> 27642, "##osomal" -> 
                    27643, "1667" -> 27644, "asserting" -> 27645, "ngc" -> 
                    27646, "sniffing" -> 27647, "dade" -> 27648, "discontent" -> 
                    27649, "glendale" -> 27650, "ported" -> 27651, "##amina" -> 
                    27652, "defamation" -> 27653, "rammed" -> 27654, 
                    "##scent" -> 27655, "fling" -> 27656, "livingstone" -> 
                    27657, "##fleet" -> 27658, "875" -> 27659, "##ppy" -> 
                    27660, "apocalyptic" -> 27661, "comrade" -> 27662, "lcd" -> 
                    27663, "##lowe" -> 27664, "cessna" -> 27665, "eine" -> 
                    27666, "persecuted" -> 27667, "subsistence" -> 27668, 
                    "demi" -> 27669, "hoop" -> 27670, "reliefs" -> 27671, 
                    "710" -> 27672, "coptic" -> 27673, "progressing" -> 27674,
                     "stemmed" -> 27675, "perpetrators" -> 27676, "1665" -> 
                    27677, "priestess" -> 27678, "##nio" -> 27679, "dobson" -> 
                    27680, "ebony" -> 27681, "rooster" -> 27682, "itf" -> 
                    27683, "tortricidae" -> 27684, "##bbon" -> 27685, 
                    "##jian" -> 27686, "cleanup" -> 27687, "##jean" -> 27688, 
                    "##\[OSlash]y" -> 27689, "1721" -> 27690, "eighties" -> 
                    27691, "taxonomic" -> 27692, "holiness" -> 27693, 
                    "##hearted" -> 27694, "##spar" -> 27695, "antilles" -> 
                    27696, "showcasing" -> 27697, "stabilized" -> 27698, 
                    "##nb" -> 27699, "gia" -> 27700, "mascara" -> 27701, 
                    "michelangelo" -> 27702, "dawned" -> 27703, "##uria" -> 
                    27704, "##vinsky" -> 27705, "extinguished" -> 27706, 
                    "fitz" -> 27707, "grotesque" -> 27708, "\[Sterling]100" -> 
                    27709, "##fera" -> 27710, "##loid" -> 27711, "##mous" -> 
                    27712, "barges" -> 27713, "neue" -> 27714, "throbbed" -> 
                    27715, "cipher" -> 27716, "johnnie" -> 27717, "##a1" -> 
                    27718, "##mpt" -> 27719, "outburst" -> 27720, "##swick" -> 
                    27721, "spearheaded" -> 27722, "administrations" -> 27723,
                     "c1" -> 27724, "heartbreak" -> 27725, "pixels" -> 27726, 
                    "pleasantly" -> 27727, "##enay" -> 27728, "lombardy" -> 
                    27729, "plush" -> 27730, "##nsed" -> 27731, "bobbie" -> 
                    27732, "##hly" -> 27733, "reapers" -> 27734, "tremor" -> 
                    27735, "xiang" -> 27736, "minogue" -> 27737, 
                    "substantive" -> 27738, "hitch" -> 27739, "barak" -> 
                    27740, "##wyl" -> 27741, "kwan" -> 27742, "##encia" -> 
                    27743, "910" -> 27744, "obscene" -> 27745, "elegance" -> 
                    27746, "indus" -> 27747, "surfer" -> 27748, "bribery" -> 
                    27749, "conserve" -> 27750, "##hyllum" -> 27751, 
                    "##masters" -> 27752, "horatio" -> 27753, "##fat" -> 
                    27754, "apes" -> 27755, "rebound" -> 27756, "psychotic" -> 
                    27757, "##pour" -> 27758, "iteration" -> 27759, "##mium" -> 
                    27760, "##vani" -> 27761, "botanic" -> 27762, "horribly" -> 
                    27763, "antiques" -> 27764, "dispose" -> 27765, "paxton" -> 
                    27766, "##hli" -> 27767, "##wg" -> 27768, "timeless" -> 
                    27769, "1704" -> 27770, "disregard" -> 27771, "engraver" -> 
                    27772, "hounds" -> 27773, "##bau" -> 27774, "##version" -> 
                    27775, "looted" -> 27776, "uno" -> 27777, "facilitates" -> 
                    27778, "groans" -> 27779, "masjid" -> 27780, "rutland" -> 
                    27781, "antibody" -> 27782, "disqualification" -> 27783, 
                    "decatur" -> 27784, "footballers" -> 27785, "quake" -> 
                    27786, "slacks" -> 27787, "48th" -> 27788, "rein" -> 
                    27789, "scribe" -> 27790, "stabilize" -> 27791, "commits" -> 
                    27792, "exemplary" -> 27793, "tho" -> 27794, "##hort" -> 
                    27795, "##chison" -> 27796, "pantry" -> 27797, 
                    "traversed" -> 27798, "##hiti" -> 27799, "disrepair" -> 
                    27800, "identifiable" -> 27801, "vibrated" -> 27802, 
                    "baccalaureate" -> 27803, "##nnis" -> 27804, "csa" -> 
                    27805, "interviewing" -> 27806, "##iensis" -> 27807, 
                    "##ra\[SZ]e" -> 27808, "greaves" -> 27809, "wealthiest" -> 
                    27810, "343" -> 27811, "classed" -> 27812, "jogged" -> 
                    27813, "\[Sterling]5" -> 27814, "##58" -> 27815, "##atal" -> 
                    27816, "illuminating" -> 27817, "knicks" -> 27818, 
                    "respecting" -> 27819, "##uno" -> 27820, "scrubbed" -> 
                    27821, "##iji" -> 27822, "##dles" -> 27823, "kruger" -> 
                    27824, "moods" -> 27825, "growls" -> 27826, "raider" -> 
                    27827, "silvia" -> 27828, "chefs" -> 27829, "kam" -> 
                    27830, "vr" -> 27831, "cree" -> 27832, "percival" -> 
                    27833, "##terol" -> 27834, "gunter" -> 27835, 
                    "counterattack" -> 27836, "defiant" -> 27837, "henan" -> 
                    27838, "ze" -> 27839, "##rasia" -> 27840, "##riety" -> 
                    27841, "equivalence" -> 27842, "submissions" -> 27843, 
                    "##fra" -> 27844, "##thor" -> 27845, "bautista" -> 27846, 
                    "mechanically" -> 27847, "##heater" -> 27848, "cornice" -> 
                    27849, "herbal" -> 27850, "templar" -> 27851, "##mering" -> 
                    27852, "outputs" -> 27853, "ruining" -> 27854, "ligand" -> 
                    27855, "renumbered" -> 27856, "extravagant" -> 27857, 
                    "mika" -> 27858, "blockbuster" -> 27859, "eta" -> 27860, 
                    "insurrection" -> 27861, "##ilia" -> 27862, "darkening" -> 
                    27863, "ferocious" -> 27864, "pianos" -> 27865, "strife" -> 
                    27866, "kinship" -> 27867, "##aer" -> 27868, "melee" -> 
                    27869, "##anor" -> 27870, "##iste" -> 27871, "##may" -> 
                    27872, "##oue" -> 27873, "decidedly" -> 27874, "weep" -> 
                    27875, "##jad" -> 27876, "##missive" -> 27877, "##ppel" -> 
                    27878, "354" -> 27879, "puget" -> 27880, "unease" -> 
                    27881, "##gnant" -> 27882, "1629" -> 27883, "hammering" -> 
                    27884, "kassel" -> 27885, "ob" -> 27886, "wessex" -> 
                    27887, "##lga" -> 27888, "bromwich" -> 27889, "egan" -> 
                    27890, "paranoia" -> 27891, "utilization" -> 27892, 
                    "##atable" -> 27893, "##idad" -> 27894, "contradictory" -> 
                    27895, "provoke" -> 27896, "##ols" -> 27897, "##ouring" -> 
                    27898, "##tangled" -> 27899, "knesset" -> 27900, "##very" -> 
                    27901, "##lette" -> 27902, "plumbing" -> 27903, "##sden" -> 
                    27904, "##\.b9" -> 27905, "greensboro" -> 27906, "occult" -> 
                    27907, "sniff" -> 27908, "338" -> 27909, "zev" -> 27910, 
                    "beaming" -> 27911, "gamer" -> 27912, "haggard" -> 27913, 
                    "mahal" -> 27914, "##olt" -> 27915, "##pins" -> 27916, 
                    "mendes" -> 27917, "utmost" -> 27918, "briefing" -> 27919,
                     "gunnery" -> 27920, "##gut" -> 27921, "##pher" -> 27922, 
                    "##zh" -> 27923, "##rok" -> 27924, "1679" -> 27925, 
                    "khalifa" -> 27926, "sonya" -> 27927, "##boot" -> 27928, 
                    "principals" -> 27929, "urbana" -> 27930, "wiring" -> 
                    27931, "##liffe" -> 27932, "##minating" -> 27933, 
                    "##rrado" -> 27934, "dahl" -> 27935, "nyu" -> 27936, 
                    "skepticism" -> 27937, "np" -> 27938, "townspeople" -> 
                    27939, "ithaca" -> 27940, "lobster" -> 27941, "somethin" -> 
                    27942, "##fur" -> 27943, "##arina" -> 27944, 
                    "##\[Minus]1" -> 27945, "freighter" -> 27946, "zimmerman" -> 
                    27947, "biceps" -> 27948, "contractual" -> 27949, 
                    "##herton" -> 27950, "amend" -> 27951, "hurrying" -> 
                    27952, "subconscious" -> 27953, "##anal" -> 27954, "336" -> 
                    27955, "meng" -> 27956, "clermont" -> 27957, "spawning" -> 
                    27958, "##eia" -> 27959, "##lub" -> 27960, "dignitaries" -> 
                    27961, "impetus" -> 27962, "snacks" -> 27963, "spotting" -> 
                    27964, "twigs" -> 27965, "##bilis" -> 27966, "##cz" -> 
                    27967, "##ouk" -> 27968, "libertadores" -> 27969, "nic" -> 
                    27970, "skylar" -> 27971, "##aina" -> 27972, "##firm" -> 
                    27973, "gustave" -> 27974, "asean" -> 27975, "##anum" -> 
                    27976, "dieter" -> 27977, "legislatures" -> 27978, 
                    "flirt" -> 27979, "bromley" -> 27980, "trolls" -> 27981, 
                    "umar" -> 27982, "##bbies" -> 27983, "##tyle" -> 27984, 
                    "blah" -> 27985, "parc" -> 27986, "bridgeport" -> 27987, 
                    "crank" -> 27988, "negligence" -> 27989, "##nction" -> 
                    27990, "46th" -> 27991, "constantin" -> 27992, "molded" -> 
                    27993, "bandages" -> 27994, "seriousness" -> 27995, 
                    "00pm" -> 27996, "siegel" -> 27997, "carpets" -> 27998, 
                    "compartments" -> 27999, "upbeat" -> 28000, "statehood" -> 
                    28001, "##dner" -> 28002, "##edging" -> 28003, "marko" -> 
                    28004, "730" -> 28005, "platt" -> 28006, "##hane" -> 
                    28007, "paving" -> 28008, "##iy" -> 28009, "1738" -> 
                    28010, "abbess" -> 28011, "impatience" -> 28012, 
                    "limousine" -> 28013, "nbl" -> 28014, "##talk" -> 28015, 
                    "441" -> 28016, "lucille" -> 28017, "mojo" -> 28018, 
                    "nightfall" -> 28019, "robbers" -> 28020, "##nais" -> 
                    28021, "karel" -> 28022, "brisk" -> 28023, "calves" -> 
                    28024, "replicate" -> 28025, "ascribed" -> 28026, 
                    "telescopes" -> 28027, "##olf" -> 28028, "intimidated" -> 
                    28029, "##reen" -> 28030, "ballast" -> 28031, 
                    "specialization" -> 28032, "##sit" -> 28033, 
                    "aerodynamic" -> 28034, "caliphate" -> 28035, "rainer" -> 
                    28036, "visionary" -> 28037, "##arded" -> 28038, 
                    "epsilon" -> 28039, "##aday" -> 28040, "##onte" -> 28041, 
                    "aggregation" -> 28042, "auditory" -> 28043, "boosted" -> 
                    28044, "reunification" -> 28045, "kathmandu" -> 28046, 
                    "loco" -> 28047, "robyn" -> 28048, "402" -> 28049, 
                    "acknowledges" -> 28050, "appointing" -> 28051, 
                    "humanoid" -> 28052, "newell" -> 28053, "redeveloped" -> 
                    28054, "restraints" -> 28055, "##tained" -> 28056, 
                    "barbarians" -> 28057, "chopper" -> 28058, "1609" -> 
                    28059, "italiana" -> 28060, "##lez" -> 28061, "##lho" -> 
                    28062, "investigates" -> 28063, "wrestlemania" -> 28064, 
                    "##anies" -> 28065, "##bib" -> 28066, "690" -> 28067, 
                    "##falls" -> 28068, "creaked" -> 28069, "dragoons" -> 
                    28070, "gravely" -> 28071, "minions" -> 28072, 
                    "stupidity" -> 28073, "volley" -> 28074, "##harat" -> 
                    28075, "##week" -> 28076, "musik" -> 28077, "##eries" -> 
                    28078, "##uously" -> 28079, "fungal" -> 28080, "massimo" -> 
                    28081, "semantics" -> 28082, "malvern" -> 28083, "##ahl" -> 
                    28084, "##pee" -> 28085, "discourage" -> 28086, "embryo" -> 
                    28087, "imperialism" -> 28088, "1910s" -> 28089, 
                    "profoundly" -> 28090, "##ddled" -> 28091, "jiangsu" -> 
                    28092, "sparkled" -> 28093, "stat" -> 28094, "##holz" -> 
                    28095, "sweatshirt" -> 28096, "tobin" -> 28097, 
                    "##iction" -> 28098, "sneered" -> 28099, "##cheon" -> 
                    28100, "##oit" -> 28101, "brit" -> 28102, "causal" -> 
                    28103, "smyth" -> 28104, "##neuve" -> 28105, "diffuse" -> 
                    28106, "perrin" -> 28107, "silvio" -> 28108, "##ipes" -> 
                    28109, "##recht" -> 28110, "detonated" -> 28111, "iqbal" -> 
                    28112, "selma" -> 28113, "##nism" -> 28114, "##zumi" -> 
                    28115, "roasted" -> 28116, "##riders" -> 28117, "tay" -> 
                    28118, "##ados" -> 28119, "##mament" -> 28120, "##mut" -> 
                    28121, "##rud" -> 28122, "840" -> 28123, "completes" -> 
                    28124, "nipples" -> 28125, "cfa" -> 28126, "flavour" -> 
                    28127, "hirsch" -> 28128, "##laus" -> 28129, "calderon" -> 
                    28130, "sneakers" -> 28131, "moravian" -> 28132, "##ksha" -> 
                    28133, "1622" -> 28134, "rq" -> 28135, "294" -> 28136, 
                    "##imeters" -> 28137, "bodo" -> 28138, "##isance" -> 
                    28139, "##pre" -> 28140, "##ronia" -> 28141, "anatomical" -> 
                    28142, "excerpt" -> 28143, "##lke" -> 28144, "dh" -> 
                    28145, "kunst" -> 28146, "##tablished" -> 28147, "##scoe" -> 
                    28148, "biomass" -> 28149, "panted" -> 28150, "unharmed" -> 
                    28151, "gael" -> 28152, "housemates" -> 28153, 
                    "montpellier" -> 28154, "##59" -> 28155, "coa" -> 28156, 
                    "rodents" -> 28157, "tonic" -> 28158, "hickory" -> 28159, 
                    "singleton" -> 28160, "##taro" -> 28161, "451" -> 28162, 
                    "1719" -> 28163, "aldo" -> 28164, "breaststroke" -> 28165,
                     "dempsey" -> 28166, "och" -> 28167, "rocco" -> 28168, 
                    "##cuit" -> 28169, "merton" -> 28170, "dissemination" -> 
                    28171, "midsummer" -> 28172, "serials" -> 28173, "##idi" -> 
                    28174, "haji" -> 28175, "polynomials" -> 28176, "##rdon" -> 
                    28177, "gs" -> 28178, "enoch" -> 28179, "prematurely" -> 
                    28180, "shutter" -> 28181, "taunton" -> 28182, 
                    "\[Sterling]3" -> 28183, "##grating" -> 28184, "##inates" -> 
                    28185, "archangel" -> 28186, "harassed" -> 28187, 
                    "##asco" -> 28188, "326" -> 28189, "archway" -> 28190, 
                    "dazzling" -> 28191, "##ecin" -> 28192, "1736" -> 28193, 
                    "sumo" -> 28194, "wat" -> 28195, "##kovich" -> 28196, 
                    "1086" -> 28197, "honneur" -> 28198, "##ently" -> 28199, 
                    "##nostic" -> 28200, "##ttal" -> 28201, "##idon" -> 28202,
                     "1605" -> 28203, "403" -> 28204, "1716" -> 28205, 
                    "blogger" -> 28206, "rents" -> 28207, "##gnan" -> 28208, 
                    "hires" -> 28209, "##ikh" -> 28210, "##dant" -> 28211, 
                    "howie" -> 28212, "##rons" -> 28213, "handler" -> 28214, 
                    "retracted" -> 28215, "shocks" -> 28216, "1632" -> 28217, 
                    "arun" -> 28218, "duluth" -> 28219, "kepler" -> 28220, 
                    "trumpeter" -> 28221, "##lary" -> 28222, "peeking" -> 
                    28223, "seasoned" -> 28224, "trooper" -> 28225, "##mara" -> 
                    28226, "laszlo" -> 28227, "##iciencies" -> 28228, "##rti" -> 
                    28229, "heterosexual" -> 28230, "##inatory" -> 28231, 
                    "##ssion" -> 28232, "indira" -> 28233, "jogging" -> 28234,
                     "##inga" -> 28235, "##lism" -> 28236, "beit" -> 28237, 
                    "dissatisfaction" -> 28238, "malice" -> 28239, "##ately" -> 
                    28240, "nedra" -> 28241, "peeling" -> 28242, "##rgeon" -> 
                    28243, "47th" -> 28244, "stadiums" -> 28245, "475" -> 
                    28246, "vertigo" -> 28247, "##ains" -> 28248, "iced" -> 
                    28249, "restroom" -> 28250, "##plify" -> 28251, "##tub" -> 
                    28252, "illustrating" -> 28253, "pear" -> 28254, 
                    "##chner" -> 28255, "##sibility" -> 28256, "inorganic" -> 
                    28257, "rappers" -> 28258, "receipts" -> 28259, "watery" -> 
                    28260, "##kura" -> 28261, "lucinda" -> 28262, "##oulos" -> 
                    28263, "reintroduced" -> 28264, "##8th" -> 28265, 
                    "##tched" -> 28266, "gracefully" -> 28267, "saxons" -> 
                    28268, "nutritional" -> 28269, "wastewater" -> 28270, 
                    "rained" -> 28271, "favourites" -> 28272, "bedrock" -> 
                    28273, "fisted" -> 28274, "hallways" -> 28275, "likeness" -> 
                    28276, "upscale" -> 28277, "##lateral" -> 28278, "1580" -> 
                    28279, "blinds" -> 28280, "prequel" -> 28281, "##pps" -> 
                    28282, "##tama" -> 28283, "deter" -> 28284, "humiliating" -> 
                    28285, "restraining" -> 28286, "tn" -> 28287, "vents" -> 
                    28288, "1659" -> 28289, "laundering" -> 28290, "recess" -> 
                    28291, "rosary" -> 28292, "tractors" -> 28293, "coulter" -> 
                    28294, "federer" -> 28295, "##ifiers" -> 28296, "##plin" -> 
                    28297, "persistence" -> 28298, "##quitable" -> 28299, 
                    "geschichte" -> 28300, "pendulum" -> 28301, "quakers" -> 
                    28302, "##beam" -> 28303, "bassett" -> 28304, "pictorial" -> 
                    28305, "buffet" -> 28306, "koln" -> 28307, "##sitor" -> 
                    28308, "drills" -> 28309, "reciprocal" -> 28310, 
                    "shooters" -> 28311, "##57" -> 28312, "##cton" -> 28313, 
                    "##tees" -> 28314, "converge" -> 28315, "pip" -> 28316, 
                    "dmitri" -> 28317, "donnelly" -> 28318, "yamamoto" -> 
                    28319, "aqua" -> 28320, "azores" -> 28321, "demographics" -> 
                    28322, "hypnotic" -> 28323, "spitfire" -> 28324, 
                    "suspend" -> 28325, "wryly" -> 28326, "roderick" -> 28327,
                     "##rran" -> 28328, "sebastien" -> 28329, "##asurable" -> 
                    28330, "mavericks" -> 28331, "##fles" -> 28332, "##200" -> 
                    28333, "himalayan" -> 28334, "prodigy" -> 28335, 
                    "##iance" -> 28336, "transvaal" -> 28337, "demonstrators" -> 
                    28338, "handcuffs" -> 28339, "dodged" -> 28340, 
                    "mcnamara" -> 28341, "sublime" -> 28342, "1726" -> 28343, 
                    "crazed" -> 28344, "##efined" -> 28345, "##till" -> 28346,
                     "ivo" -> 28347, "pondered" -> 28348, "reconciled" -> 
                    28349, "shrill" -> 28350, "sava" -> 28351, "##duk" -> 
                    28352, "bal" -> 28353, "cad" -> 28354, "heresy" -> 28355, 
                    "jaipur" -> 28356, "goran" -> 28357, "##nished" -> 28358, 
                    "341" -> 28359, "lux" -> 28360, "shelly" -> 28361, 
                    "whitehall" -> 28362, "##hre" -> 28363, "israelis" -> 
                    28364, "peacekeeping" -> 28365, "##wled" -> 28366, "1703" -> 
                    28367, "demetrius" -> 28368, "ousted" -> 28369, 
                    "##arians" -> 28370, "##zos" -> 28371, "beale" -> 28372, 
                    "anwar" -> 28373, "backstroke" -> 28374, "raged" -> 28375,
                     "shrinking" -> 28376, "cremated" -> 28377, "##yck" -> 
                    28378, "benign" -> 28379, "towing" -> 28380, "wadi" -> 
                    28381, "darmstadt" -> 28382, "landfill" -> 28383, 
                    "parana" -> 28384, "soothe" -> 28385, "colleen" -> 28386, 
                    "sidewalks" -> 28387, "mayfair" -> 28388, "tumble" -> 
                    28389, "hepatitis" -> 28390, "ferrer" -> 28391, 
                    "superstructure" -> 28392, "##gingly" -> 28393, "##urse" -> 
                    28394, "##wee" -> 28395, "anthropological" -> 28396, 
                    "translators" -> 28397, "##mies" -> 28398, "closeness" -> 
                    28399, "hooves" -> 28400, "##pw" -> 28401, "mondays" -> 
                    28402, "##roll" -> 28403, "##vita" -> 28404, 
                    "landscaping" -> 28405, "##urized" -> 28406, 
                    "purification" -> 28407, "sock" -> 28408, "thorns" -> 
                    28409, "thwarted" -> 28410, "jalan" -> 28411, "tiberius" -> 
                    28412, "##taka" -> 28413, "saline" -> 28414, "##rito" -> 
                    28415, "confidently" -> 28416, "khyber" -> 28417, 
                    "sculptors" -> 28418, "##ij" -> 28419, "brahms" -> 28420, 
                    "hammersmith" -> 28421, "inspectors" -> 28422, "battista" -> 
                    28423, "fivb" -> 28424, "fragmentation" -> 28425, 
                    "hackney" -> 28426, "##uls" -> 28427, "arresting" -> 
                    28428, "exercising" -> 28429, "antoinette" -> 28430, 
                    "bedfordshire" -> 28431, "##zily" -> 28432, "dyed" -> 
                    28433, "##hema" -> 28434, "1656" -> 28435, "racetrack" -> 
                    28436, "variability" -> 28437, "##tique" -> 28438, "1655" -> 
                    28439, "austrians" -> 28440, "deteriorating" -> 28441, 
                    "madman" -> 28442, "theorists" -> 28443, "aix" -> 28444, 
                    "lehman" -> 28445, "weathered" -> 28446, "1731" -> 28447, 
                    "decreed" -> 28448, "eruptions" -> 28449, "1729" -> 28450,
                     "flaw" -> 28451, "quinlan" -> 28452, "sorbonne" -> 28453,
                     "flutes" -> 28454, "nunez" -> 28455, "1711" -> 28456, 
                    "adored" -> 28457, "downwards" -> 28458, "fable" -> 28459,
                     "rasped" -> 28460, "1712" -> 28461, "moritz" -> 28462, 
                    "mouthful" -> 28463, "renegade" -> 28464, "shivers" -> 
                    28465, "stunts" -> 28466, "dysfunction" -> 28467, 
                    "restrain" -> 28468, "translit" -> 28469, "327" -> 28470, 
                    "pancakes" -> 28471, "##avio" -> 28472, "##cision" -> 
                    28473, "##tray" -> 28474, "351" -> 28475, "vial" -> 28476,
                     "##lden" -> 28477, "bain" -> 28478, "##maid" -> 28479, 
                    "##oxide" -> 28480, "chihuahua" -> 28481, "malacca" -> 
                    28482, "vimes" -> 28483, "##rba" -> 28484, "##rnier" -> 
                    28485, "1664" -> 28486, "donnie" -> 28487, "plaques" -> 
                    28488, "##ually" -> 28489, "337" -> 28490, "bangs" -> 
                    28491, "floppy" -> 28492, "huntsville" -> 28493, 
                    "loretta" -> 28494, "nikolay" -> 28495, "##otte" -> 28496,
                     "eater" -> 28497, "handgun" -> 28498, "ubiquitous" -> 
                    28499, "##hett" -> 28500, "eras" -> 28501, "zodiac" -> 
                    28502, "1634" -> 28503, "##omorphic" -> 28504, "1820s" -> 
                    28505, "##zog" -> 28506, "cochran" -> 28507, "##bula" -> 
                    28508, "##lithic" -> 28509, "warring" -> 28510, "##rada" -> 
                    28511, "dalai" -> 28512, "excused" -> 28513, "blazers" -> 
                    28514, "mcconnell" -> 28515, "reeling" -> 28516, "bot" -> 
                    28517, "este" -> 28518, "##abi" -> 28519, "geese" -> 
                    28520, "hoax" -> 28521, "taxon" -> 28522, "##bla" -> 
                    28523, "guitarists" -> 28524, "##icon" -> 28525, 
                    "condemning" -> 28526, "hunts" -> 28527, "inversion" -> 
                    28528, "moffat" -> 28529, "taekwondo" -> 28530, "##lvis" -> 
                    28531, "1624" -> 28532, "stammered" -> 28533, "##rest" -> 
                    28534, "##rzy" -> 28535, "sousa" -> 28536, "fundraiser" -> 
                    28537, "marylebone" -> 28538, "navigable" -> 28539, 
                    "uptown" -> 28540, "cabbage" -> 28541, "daniela" -> 28542,
                     "salman" -> 28543, "shitty" -> 28544, "whimper" -> 28545,
                     "##kian" -> 28546, "##utive" -> 28547, "programmers" -> 
                    28548, "protections" -> 28549, "rm" -> 28550, "##rmi" -> 
                    28551, "##rued" -> 28552, "forceful" -> 28553, "##enes" -> 
                    28554, "fuss" -> 28555, "##tao" -> 28556, "##wash" -> 
                    28557, "brat" -> 28558, "oppressive" -> 28559, 
                    "reykjavik" -> 28560, "spartak" -> 28561, "ticking" -> 
                    28562, "##inkles" -> 28563, "##kiewicz" -> 28564, 
                    "adolph" -> 28565, "horst" -> 28566, "maui" -> 28567, 
                    "protege" -> 28568, "straighten" -> 28569, "cpc" -> 28570,
                     "landau" -> 28571, "concourse" -> 28572, "clements" -> 
                    28573, "resultant" -> 28574, "##ando" -> 28575, 
                    "imaginative" -> 28576, "joo" -> 28577, "reactivated" -> 
                    28578, "##rem" -> 28579, "##ffled" -> 28580, "##uising" -> 
                    28581, "consultative" -> 28582, "##guide" -> 28583, 
                    "flop" -> 28584, "kaitlyn" -> 28585, "mergers" -> 28586, 
                    "parenting" -> 28587, "somber" -> 28588, "##vron" -> 
                    28589, "supervise" -> 28590, "vidhan" -> 28591, "##imum" -> 
                    28592, "courtship" -> 28593, "exemplified" -> 28594, 
                    "harmonies" -> 28595, "medallist" -> 28596, "refining" -> 
                    28597, "##rrow" -> 28598, "##\:043a\:0430" -> 28599, 
                    "amara" -> 28600, "##hum" -> 28601, "780" -> 28602, 
                    "goalscorer" -> 28603, "sited" -> 28604, "overshadowed" -> 
                    28605, "rohan" -> 28606, "displeasure" -> 28607, 
                    "secretive" -> 28608, "multiplied" -> 28609, "osman" -> 
                    28610, "##orth" -> 28611, "engravings" -> 28612, "padre" -> 
                    28613, "##kali" -> 28614, "##veda" -> 28615, "miniatures" -> 
                    28616, "mis" -> 28617, "##yala" -> 28618, "clap" -> 28619,
                     "pali" -> 28620, "rook" -> 28621, "##cana" -> 28622, 
                    "1692" -> 28623, "57th" -> 28624, "antennae" -> 28625, 
                    "astro" -> 28626, "oskar" -> 28627, "1628" -> 28628, 
                    "bulldog" -> 28629, "crotch" -> 28630, "hackett" -> 28631,
                     "yucatan" -> 28632, "##sure" -> 28633, "amplifiers" -> 
                    28634, "brno" -> 28635, "ferrara" -> 28636, "migrating" -> 
                    28637, "##gree" -> 28638, "thanking" -> 28639, "turing" -> 
                    28640, "##eza" -> 28641, "mccann" -> 28642, "ting" -> 
                    28643, "andersson" -> 28644, "onslaught" -> 28645, 
                    "gaines" -> 28646, "ganga" -> 28647, "incense" -> 28648, 
                    "standardization" -> 28649, "##mation" -> 28650, "sentai" -> 
                    28651, "scuba" -> 28652, "stuffing" -> 28653, "turquoise" -> 
                    28654, "waivers" -> 28655, "alloys" -> 28656, "##vitt" -> 
                    28657, "regaining" -> 28658, "vaults" -> 28659, "##clops" -> 
                    28660, "##gizing" -> 28661, "digger" -> 28662, "furry" -> 
                    28663, "memorabilia" -> 28664, "probing" -> 28665, 
                    "##iad" -> 28666, "payton" -> 28667, "rec" -> 28668, 
                    "deutschland" -> 28669, "filippo" -> 28670, "opaque" -> 
                    28671, "seamen" -> 28672, "zenith" -> 28673, "afrikaans" -> 
                    28674, "##filtration" -> 28675, "disciplined" -> 28676, 
                    "inspirational" -> 28677, "##merie" -> 28678, "banco" -> 
                    28679, "confuse" -> 28680, "grafton" -> 28681, "tod" -> 
                    28682, "##dgets" -> 28683, "championed" -> 28684, "simi" -> 
                    28685, "anomaly" -> 28686, "biplane" -> 28687, 
                    "##ceptive" -> 28688, "electrode" -> 28689, "##para" -> 
                    28690, "1697" -> 28691, "cleavage" -> 28692, "crossbow" -> 
                    28693, "swirl" -> 28694, "informant" -> 28695, "##lars" -> 
                    28696, "##osta" -> 28697, "afi" -> 28698, "bonfire" -> 
                    28699, "spec" -> 28700, "##oux" -> 28701, "lakeside" -> 
                    28702, "slump" -> 28703, "##culus" -> 28704, "##lais" -> 
                    28705, "##qvist" -> 28706, "##rrigan" -> 28707, "1016" -> 
                    28708, "facades" -> 28709, "borg" -> 28710, "inwardly" -> 
                    28711, "cervical" -> 28712, "xl" -> 28713, "pointedly" -> 
                    28714, "050" -> 28715, "stabilization" -> 28716, "##odon" -> 
                    28717, "chests" -> 28718, "1699" -> 28719, "hacked" -> 
                    28720, "ctv" -> 28721, "orthogonal" -> 28722, "suzy" -> 
                    28723, "##lastic" -> 28724, "gaulle" -> 28725, "jacobite" -> 
                    28726, "rearview" -> 28727, "##cam" -> 28728, "##erted" -> 
                    28729, "ashby" -> 28730, "##drik" -> 28731, "##igate" -> 
                    28732, "##mise" -> 28733, "##zbek" -> 28734, 
                    "affectionately" -> 28735, "canine" -> 28736, "disperse" -> 
                    28737, "latham" -> 28738, "##istles" -> 28739, "##ivar" -> 
                    28740, "spielberg" -> 28741, "##orin" -> 28742, "##idium" -> 
                    28743, "ezekiel" -> 28744, "cid" -> 28745, "##sg" -> 
                    28746, "durga" -> 28747, "middletown" -> 28748, "##cina" -> 
                    28749, "customized" -> 28750, "frontiers" -> 28751, 
                    "harden" -> 28752, "##etano" -> 28753, "##zzy" -> 28754, 
                    "1604" -> 28755, "bolsheviks" -> 28756, "##66" -> 28757, 
                    "coloration" -> 28758, "yoko" -> 28759, "##bedo" -> 28760,
                     "briefs" -> 28761, "slabs" -> 28762, "debra" -> 28763, 
                    "liquidation" -> 28764, "plumage" -> 28765, "##oin" -> 
                    28766, "blossoms" -> 28767, "dementia" -> 28768, 
                    "subsidy" -> 28769, "1611" -> 28770, "proctor" -> 28771, 
                    "relational" -> 28772, "jerseys" -> 28773, "parochial" -> 
                    28774, "ter" -> 28775, "##ici" -> 28776, "esa" -> 28777, 
                    "peshawar" -> 28778, "cavalier" -> 28779, "loren" -> 
                    28780, "cpi" -> 28781, "idiots" -> 28782, "shamrock" -> 
                    28783, "1646" -> 28784, "dutton" -> 28785, "malabar" -> 
                    28786, "mustache" -> 28787, "##endez" -> 28788, 
                    "##ocytes" -> 28789, "referencing" -> 28790, "terminates" -> 
                    28791, "marche" -> 28792, "yarmouth" -> 28793, "##sop" -> 
                    28794, "acton" -> 28795, "mated" -> 28796, "seton" -> 
                    28797, "subtly" -> 28798, "baptised" -> 28799, "beige" -> 
                    28800, "extremes" -> 28801, "jolted" -> 28802, "kristina" -> 
                    28803, "telecast" -> 28804, "##actic" -> 28805, 
                    "safeguard" -> 28806, "waldo" -> 28807, "##baldi" -> 
                    28808, "##bular" -> 28809, "endeavors" -> 28810, "sloppy" -> 
                    28811, "subterranean" -> 28812, "##ensburg" -> 28813, 
                    "##itung" -> 28814, "delicately" -> 28815, "pigment" -> 
                    28816, "tq" -> 28817, "##scu" -> 28818, "1626" -> 28819, 
                    "##ound" -> 28820, "collisions" -> 28821, "coveted" -> 
                    28822, "herds" -> 28823, "##personal" -> 28824, 
                    "##meister" -> 28825, "##nberger" -> 28826, "chopra" -> 
                    28827, "##ricting" -> 28828, "abnormalities" -> 28829, 
                    "defective" -> 28830, "galician" -> 28831, "lucie" -> 
                    28832, "##dilly" -> 28833, "alligator" -> 28834, 
                    "likened" -> 28835, "##genase" -> 28836, "burundi" -> 
                    28837, "clears" -> 28838, "complexion" -> 28839, 
                    "derelict" -> 28840, "deafening" -> 28841, "diablo" -> 
                    28842, "fingered" -> 28843, "champaign" -> 28844, "dogg" -> 
                    28845, "enlist" -> 28846, "isotope" -> 28847, "labeling" -> 
                    28848, "mrna" -> 28849, "##erre" -> 28850, "brilliance" -> 
                    28851, "marvelous" -> 28852, "##ayo" -> 28853, "1652" -> 
                    28854, "crawley" -> 28855, "ether" -> 28856, "footed" -> 
                    28857, "dwellers" -> 28858, "deserts" -> 28859, "hamish" -> 
                    28860, "rubs" -> 28861, "warlock" -> 28862, "skimmed" -> 
                    28863, "##lizer" -> 28864, "870" -> 28865, "buick" -> 
                    28866, "embark" -> 28867, "heraldic" -> 28868, 
                    "irregularities" -> 28869, "##ajan" -> 28870, "kiara" -> 
                    28871, "##kulam" -> 28872, "##ieg" -> 28873, "antigen" -> 
                    28874, "kowalski" -> 28875, "##lge" -> 28876, "oakley" -> 
                    28877, "visitation" -> 28878, "##mbit" -> 28879, "vt" -> 
                    28880, "##suit" -> 28881, "1570" -> 28882, "murderers" -> 
                    28883, "##miento" -> 28884, "##rites" -> 28885, 
                    "chimneys" -> 28886, "##sling" -> 28887, "condemn" -> 
                    28888, "custer" -> 28889, "exchequer" -> 28890, "havre" -> 
                    28891, "##ghi" -> 28892, "fluctuations" -> 28893, 
                    "##rations" -> 28894, "dfb" -> 28895, "hendricks" -> 
                    28896, "vaccines" -> 28897, "##tarian" -> 28898, 
                    "nietzsche" -> 28899, "biking" -> 28900, "juicy" -> 28901,
                     "##duced" -> 28902, "brooding" -> 28903, "scrolling" -> 
                    28904, "selangor" -> 28905, "##ragan" -> 28906, "352" -> 
                    28907, "annum" -> 28908, "boomed" -> 28909, "seminole" -> 
                    28910, "sugarcane" -> 28911, "##dna" -> 28912, 
                    "departmental" -> 28913, "dismissing" -> 28914, 
                    "innsbruck" -> 28915, "arteries" -> 28916, "ashok" -> 
                    28917, "batavia" -> 28918, "daze" -> 28919, "kun" -> 
                    28920, "overtook" -> 28921, "##rga" -> 28922, "##tlan" -> 
                    28923, "beheaded" -> 28924, "gaddafi" -> 28925, "holm" -> 
                    28926, "electronically" -> 28927, "faulty" -> 28928, 
                    "galilee" -> 28929, "fractures" -> 28930, "kobayashi" -> 
                    28931, "##lized" -> 28932, "gunmen" -> 28933, "magma" -> 
                    28934, "aramaic" -> 28935, "mala" -> 28936, "eastenders" -> 
                    28937, "inference" -> 28938, "messengers" -> 28939, "bf" -> 
                    28940, "##qu" -> 28941, "407" -> 28942, "bathrooms" -> 
                    28943, "##vere" -> 28944, "1658" -> 28945, "flashbacks" -> 
                    28946, "ideally" -> 28947, "misunderstood" -> 28948, 
                    "##jali" -> 28949, "##weather" -> 28950, "mendez" -> 
                    28951, "##grounds" -> 28952, "505" -> 28953, "uncanny" -> 
                    28954, "##iii" -> 28955, "1709" -> 28956, "friendships" -> 
                    28957, "##nbc" -> 28958, "sacrament" -> 28959, 
                    "accommodated" -> 28960, "reiterated" -> 28961, 
                    "logistical" -> 28962, "pebbles" -> 28963, "thumped" -> 
                    28964, "##escence" -> 28965, "administering" -> 28966, 
                    "decrees" -> 28967, "drafts" -> 28968, "##flight" -> 
                    28969, "##cased" -> 28970, "##tula" -> 28971, 
                    "futuristic" -> 28972, "picket" -> 28973, "intimidation" -> 
                    28974, "winthrop" -> 28975, "##fahan" -> 28976, 
                    "interfered" -> 28977, "339" -> 28978, "afar" -> 28979, 
                    "francoise" -> 28980, "morally" -> 28981, "uta" -> 28982, 
                    "cochin" -> 28983, "croft" -> 28984, "dwarfs" -> 28985, 
                    "##bruck" -> 28986, "##dents" -> 28987, "##nami" -> 28988,
                     "biker" -> 28989, "##hner" -> 28990, "##meral" -> 28991, 
                    "nano" -> 28992, "##isen" -> 28993, "##ometric" -> 28994, 
                    "##pres" -> 28995, "##\:0430\:043d" -> 28996, 
                    "brightened" -> 28997, "meek" -> 28998, "parcels" -> 
                    28999, "securely" -> 29000, "gunners" -> 29001, "##jhl" -> 
                    29002, "##zko" -> 29003, "agile" -> 29004, "hysteria" -> 
                    29005, "##lten" -> 29006, "##rcus" -> 29007, "bukit" -> 
                    29008, "champs" -> 29009, "chevy" -> 29010, "cuckoo" -> 
                    29011, "leith" -> 29012, "sadler" -> 29013, "theologians" -> 
                    29014, "welded" -> 29015, "##section" -> 29016, "1663" -> 
                    29017, "jj" -> 29018, "plurality" -> 29019, "xander" -> 
                    29020, "##rooms" -> 29021, "##formed" -> 29022, 
                    "shredded" -> 29023, "temps" -> 29024, "intimately" -> 
                    29025, "pau" -> 29026, "tormented" -> 29027, "##lok" -> 
                    29028, "##stellar" -> 29029, "1618" -> 29030, "charred" -> 
                    29031, "ems" -> 29032, "essen" -> 29033, "##mmel" -> 
                    29034, "alarms" -> 29035, "spraying" -> 29036, "ascot" -> 
                    29037, "blooms" -> 29038, "twinkle" -> 29039, "##abia" -> 
                    29040, "##apes" -> 29041, "internment" -> 29042, 
                    "obsidian" -> 29043, "##chaft" -> 29044, "snoop" -> 29045,
                     "##dav" -> 29046, "##ooping" -> 29047, "malibu" -> 29048,
                     "##tension" -> 29049, "quiver" -> 29050, "##itia" -> 
                    29051, "hays" -> 29052, "mcintosh" -> 29053, "travers" -> 
                    29054, "walsall" -> 29055, "##ffie" -> 29056, "1623" -> 
                    29057, "beverley" -> 29058, "schwarz" -> 29059, 
                    "plunging" -> 29060, "structurally" -> 29061, "m3" -> 
                    29062, "rosenthal" -> 29063, "vikram" -> 29064, "##tsk" -> 
                    29065, "770" -> 29066, "ghz" -> 29067, "##onda" -> 29068, 
                    "##tiv" -> 29069, "chalmers" -> 29070, "groningen" -> 
                    29071, "pew" -> 29072, "reckon" -> 29073, "unicef" -> 
                    29074, "##rvis" -> 29075, "55th" -> 29076, "##gni" -> 
                    29077, "1651" -> 29078, "sulawesi" -> 29079, "avila" -> 
                    29080, "cai" -> 29081, "metaphysical" -> 29082, 
                    "screwing" -> 29083, "turbulence" -> 29084, "##mberg" -> 
                    29085, "augusto" -> 29086, "samba" -> 29087, "56th" -> 
                    29088, "baffled" -> 29089, "momentary" -> 29090, "toxin" -> 
                    29091, "##urian" -> 29092, "##wani" -> 29093, "aachen" -> 
                    29094, "condoms" -> 29095, "dali" -> 29096, "steppe" -> 
                    29097, "##3d" -> 29098, "##app" -> 29099, "##oed" -> 
                    29100, "##year" -> 29101, "adolescence" -> 29102, 
                    "dauphin" -> 29103, "electrically" -> 29104, 
                    "inaccessible" -> 29105, "microscopy" -> 29106, "nikita" -> 
                    29107, "##ega" -> 29108, "atv" -> 29109, "##cel" -> 29110,
                     "##enter" -> 29111, "##oles" -> 29112, "##oteric" -> 
                    29113, "##\:044b" -> 29114, "accountants" -> 29115, 
                    "punishments" -> 29116, "wrongly" -> 29117, "bribes" -> 
                    29118, "adventurous" -> 29119, "clinch" -> 29120, 
                    "flinders" -> 29121, "southland" -> 29122, "##hem" -> 
                    29123, "##kata" -> 29124, "gough" -> 29125, "##ciency" -> 
                    29126, "lads" -> 29127, "soared" -> 29128, "##\:05d4" -> 
                    29129, "undergoes" -> 29130, "deformation" -> 29131, 
                    "outlawed" -> 29132, "rubbish" -> 29133, "##arus" -> 
                    29134, "##mussen" -> 29135, "##nidae" -> 29136, 
                    "##rzburg" -> 29137, "arcs" -> 29138, "##ingdon" -> 29139,
                     "##tituted" -> 29140, "1695" -> 29141, "wheelbase" -> 
                    29142, "wheeling" -> 29143, "bombardier" -> 29144, 
                    "campground" -> 29145, "zebra" -> 29146, "##lices" -> 
                    29147, "##oj" -> 29148, "##bain" -> 29149, "lullaby" -> 
                    29150, "##ecure" -> 29151, "donetsk" -> 29152, "wylie" -> 
                    29153, "grenada" -> 29154, "##arding" -> 29155, 
                    "##\[Eta]\[FinalSigma]" -> 29156, "squinting" -> 29157, 
                    "eireann" -> 29158, "opposes" -> 29159, "##andra" -> 
                    29160, "maximal" -> 29161, "runes" -> 29162, "##broken" -> 
                    29163, "##cuting" -> 29164, "##iface" -> 29165, "##ror" -> 
                    29166, "##rosis" -> 29167, "additive" -> 29168, "britney" -> 
                    29169, "adultery" -> 29170, "triggering" -> 29171, 
                    "##drome" -> 29172, "detrimental" -> 29173, "aarhus" -> 
                    29174, "containment" -> 29175, "jc" -> 29176, "swapped" -> 
                    29177, "vichy" -> 29178, "##ioms" -> 29179, "madly" -> 
                    29180, "##oric" -> 29181, "##rag" -> 29182, "brant" -> 
                    29183, "##ckey" -> 29184, "##trix" -> 29185, "1560" -> 
                    29186, "1612" -> 29187, "broughton" -> 29188, "rustling" -> 
                    29189, "##stems" -> 29190, "##uder" -> 29191, "asbestos" -> 
                    29192, "mentoring" -> 29193, "##nivorous" -> 29194, 
                    "finley" -> 29195, "leaps" -> 29196, "##isan" -> 29197, 
                    "apical" -> 29198, "pry" -> 29199, "slits" -> 29200, 
                    "substitutes" -> 29201, "##dict" -> 29202, "intuitive" -> 
                    29203, "fantasia" -> 29204, "insistent" -> 29205, 
                    "unreasonable" -> 29206, "##igen" -> 29207, "##vna" -> 
                    29208, "domed" -> 29209, "hannover" -> 29210, "margot" -> 
                    29211, "ponder" -> 29212, "##zziness" -> 29213, 
                    "impromptu" -> 29214, "jian" -> 29215, "lc" -> 29216, 
                    "rampage" -> 29217, "stemming" -> 29218, "##eft" -> 29219,
                     "andrey" -> 29220, "gerais" -> 29221, "whichever" -> 
                    29222, "amnesia" -> 29223, "appropriated" -> 29224, 
                    "anzac" -> 29225, "clicks" -> 29226, "modifying" -> 29227,
                     "ultimatum" -> 29228, "cambrian" -> 29229, "maids" -> 
                    29230, "verve" -> 29231, "yellowstone" -> 29232, "##mbs" -> 
                    29233, "conservatoire" -> 29234, "##scribe" -> 29235, 
                    "adherence" -> 29236, "dinners" -> 29237, "spectra" -> 
                    29238, "imperfect" -> 29239, "mysteriously" -> 29240, 
                    "sidekick" -> 29241, "tatar" -> 29242, "tuba" -> 29243, 
                    "##aks" -> 29244, "##ifolia" -> 29245, "distrust" -> 
                    29246, "##athan" -> 29247, "##zle" -> 29248, "c2" -> 
                    29249, "ronin" -> 29250, "zac" -> 29251, "##pse" -> 29252,
                     "celaena" -> 29253, "instrumentalist" -> 29254, "scents" -> 
                    29255, "skopje" -> 29256, "##mbling" -> 29257, "comical" -> 
                    29258, "compensated" -> 29259, "vidal" -> 29260, "condor" -> 
                    29261, "intersect" -> 29262, "jingle" -> 29263, 
                    "wavelengths" -> 29264, "##urrent" -> 29265, "mcqueen" -> 
                    29266, "##izzly" -> 29267, "carp" -> 29268, "weasel" -> 
                    29269, "422" -> 29270, "kanye" -> 29271, "militias" -> 
                    29272, "postdoctoral" -> 29273, "eugen" -> 29274, 
                    "gunslinger" -> 29275, "##\:025b" -> 29276, "faux" -> 
                    29277, "hospice" -> 29278, "##for" -> 29279, "appalled" -> 
                    29280, "derivation" -> 29281, "dwarves" -> 29282, 
                    "##elis" -> 29283, "dilapidated" -> 29284, "##folk" -> 
                    29285, "astoria" -> 29286, "philology" -> 29287, "##lwyn" -> 
                    29288, "##otho" -> 29289, "##saka" -> 29290, "inducing" -> 
                    29291, "philanthropy" -> 29292, "##bf" -> 29293, 
                    "##itative" -> 29294, "geek" -> 29295, "markedly" -> 
                    29296, "sql" -> 29297, "##yce" -> 29298, "bessie" -> 
                    29299, "indices" -> 29300, "rn" -> 29301, "##flict" -> 
                    29302, "495" -> 29303, "frowns" -> 29304, "resolving" -> 
                    29305, "weightlifting" -> 29306, "tugs" -> 29307, 
                    "cleric" -> 29308, "contentious" -> 29309, "1653" -> 
                    29310, "mania" -> 29311, "rms" -> 29312, "##miya" -> 
                    29313, "##reate" -> 29314, "##ruck" -> 29315, "##tucket" -> 
                    29316, "bien" -> 29317, "eels" -> 29318, "marek" -> 29319,
                     "##ayton" -> 29320, "##cence" -> 29321, "discreet" -> 
                    29322, "unofficially" -> 29323, "##ife" -> 29324, "leaks" -> 
                    29325, "##bber" -> 29326, "1705" -> 29327, "332" -> 29328,
                     "dung" -> 29329, "compressor" -> 29330, "hillsborough" -> 
                    29331, "pandit" -> 29332, "shillings" -> 29333, "distal" -> 
                    29334, "##skin" -> 29335, "381" -> 29336, "##tat" -> 
                    29337, "##you" -> 29338, "nosed" -> 29339, "##nir" -> 
                    29340, "mangrove" -> 29341, "undeveloped" -> 29342, 
                    "##idia" -> 29343, "textures" -> 29344, "##inho" -> 29345,
                     "##500" -> 29346, "##rise" -> 29347, "ae" -> 29348, 
                    "irritating" -> 29349, "nay" -> 29350, "amazingly" -> 
                    29351, "bancroft" -> 29352, "apologetic" -> 29353, 
                    "compassionate" -> 29354, "kata" -> 29355, "symphonies" -> 
                    29356, "##lovic" -> 29357, "airspace" -> 29358, "##lch" -> 
                    29359, "930" -> 29360, "gifford" -> 29361, "precautions" -> 
                    29362, "fulfillment" -> 29363, "sevilla" -> 29364, 
                    "vulgar" -> 29365, "martinique" -> 29366, "##urities" -> 
                    29367, "looting" -> 29368, "piccolo" -> 29369, "tidy" -> 
                    29370, "##dermott" -> 29371, "quadrant" -> 29372, 
                    "armchair" -> 29373, "incomes" -> 29374, "mathematicians" -> 
                    29375, "stampede" -> 29376, "nilsson" -> 29377, 
                    "##inking" -> 29378, "##scan" -> 29379, "foo" -> 29380, 
                    "quarterfinal" -> 29381, "##ostal" -> 29382, "shang" -> 
                    29383, "shouldered" -> 29384, "squirrels" -> 29385, 
                    "##owe" -> 29386, "344" -> 29387, "vinegar" -> 29388, 
                    "##bner" -> 29389, "##rchy" -> 29390, "##systems" -> 
                    29391, "delaying" -> 29392, "##trics" -> 29393, "ars" -> 
                    29394, "dwyer" -> 29395, "rhapsody" -> 29396, 
                    "sponsoring" -> 29397, "##gration" -> 29398, "bipolar" -> 
                    29399, "cinder" -> 29400, "starters" -> 29401, "##olio" -> 
                    29402, "##urst" -> 29403, "421" -> 29404, "signage" -> 
                    29405, "##nty" -> 29406, "aground" -> 29407, "figurative" -> 
                    29408, "mons" -> 29409, "acquaintances" -> 29410, "duets" -> 
                    29411, "erroneously" -> 29412, "soyuz" -> 29413, 
                    "elliptic" -> 29414, "recreated" -> 29415, "##cultural" -> 
                    29416, "##quette" -> 29417, "##ssed" -> 29418, "##tma" -> 
                    29419, "##zcz" -> 29420, "moderator" -> 29421, "scares" -> 
                    29422, "##itaire" -> 29423, "##stones" -> 29424, 
                    "##udence" -> 29425, "juniper" -> 29426, "sighting" -> 
                    29427, "##just" -> 29428, "##nsen" -> 29429, "britten" -> 
                    29430, "calabria" -> 29431, "ry" -> 29432, "bop" -> 29433,
                     "cramer" -> 29434, "forsyth" -> 29435, "stillness" -> 
                    29436, "##\:043b" -> 29437, "airmen" -> 29438, "gathers" -> 
                    29439, "unfit" -> 29440, "##umber" -> 29441, "##upt" -> 
                    29442, "taunting" -> 29443, "##rip" -> 29444, "seeker" -> 
                    29445, "streamlined" -> 29446, "##bution" -> 29447, 
                    "holster" -> 29448, "schumann" -> 29449, "tread" -> 29450,
                     "vox" -> 29451, "##gano" -> 29452, "##onzo" -> 29453, 
                    "strive" -> 29454, "dil" -> 29455, "reforming" -> 29456, 
                    "covent" -> 29457, "newbury" -> 29458, "predicting" -> 
                    29459, "##orro" -> 29460, "decorate" -> 29461, "tre" -> 
                    29462, "##puted" -> 29463, "andover" -> 29464, "ie" -> 
                    29465, "asahi" -> 29466, "dept" -> 29467, "dunkirk" -> 
                    29468, "gills" -> 29469, "##tori" -> 29470, "buren" -> 
                    29471, "huskies" -> 29472, "##stis" -> 29473, "##stov" -> 
                    29474, "abstracts" -> 29475, "bets" -> 29476, "loosen" -> 
                    29477, "##opa" -> 29478, "1682" -> 29479, "yearning" -> 
                    29480, "##glio" -> 29481, "##sir" -> 29482, "berman" -> 
                    29483, "effortlessly" -> 29484, "enamel" -> 29485, 
                    "napoli" -> 29486, "persist" -> 29487, "##peration" -> 
                    29488, "##uez" -> 29489, "attache" -> 29490, "elisa" -> 
                    29491, "b1" -> 29492, "invitations" -> 29493, "##kic" -> 
                    29494, "accelerating" -> 29495, "reindeer" -> 29496, 
                    "boardwalk" -> 29497, "clutches" -> 29498, "nelly" -> 
                    29499, "polka" -> 29500, "starbucks" -> 29501, "##kei" -> 
                    29502, "adamant" -> 29503, "huey" -> 29504, "lough" -> 
                    29505, "unbroken" -> 29506, "adventurer" -> 29507, 
                    "embroidery" -> 29508, "inspecting" -> 29509, "stanza" -> 
                    29510, "##ducted" -> 29511, "naia" -> 29512, "taluka" -> 
                    29513, "##pone" -> 29514, "##roids" -> 29515, "chases" -> 
                    29516, "deprivation" -> 29517, "florian" -> 29518, 
                    "##jing" -> 29519, "##ppet" -> 29520, "earthly" -> 29521, 
                    "##lib" -> 29522, "##ssee" -> 29523, "colossal" -> 29524, 
                    "foreigner" -> 29525, "vet" -> 29526, "freaks" -> 29527, 
                    "patrice" -> 29528, "rosewood" -> 29529, "triassic" -> 
                    29530, "upstate" -> 29531, "##pkins" -> 29532, 
                    "dominates" -> 29533, "ata" -> 29534, "chants" -> 29535, 
                    "ks" -> 29536, "vo" -> 29537, "##400" -> 29538, "##bley" -> 
                    29539, "##raya" -> 29540, "##rmed" -> 29541, "555" -> 
                    29542, "agra" -> 29543, "infiltrate" -> 29544, "##ailing" -> 
                    29545, "##ilation" -> 29546, "##tzer" -> 29547, "##uppe" -> 
                    29548, "##werk" -> 29549, "binoculars" -> 29550, 
                    "enthusiast" -> 29551, "fujian" -> 29552, "squeak" -> 
                    29553, "##avs" -> 29554, "abolitionist" -> 29555, 
                    "almeida" -> 29556, "boredom" -> 29557, "hampstead" -> 
                    29558, "marsden" -> 29559, "rations" -> 29560, "##ands" -> 
                    29561, "inflated" -> 29562, "334" -> 29563, "bonuses" -> 
                    29564, "rosalie" -> 29565, "patna" -> 29566, "##rco" -> 
                    29567, "329" -> 29568, "detachments" -> 29569, 
                    "penitentiary" -> 29570, "54th" -> 29571, "flourishing" -> 
                    29572, "woolf" -> 29573, "##dion" -> 29574, "##etched" -> 
                    29575, "papyrus" -> 29576, "##lster" -> 29577, "##nsor" -> 
                    29578, "##toy" -> 29579, "bobbed" -> 29580, "dismounted" -> 
                    29581, "endelle" -> 29582, "inhuman" -> 29583, "motorola" -> 
                    29584, "tbs" -> 29585, "wince" -> 29586, "wreath" -> 
                    29587, "##ticus" -> 29588, "hideout" -> 29589, 
                    "inspections" -> 29590, "sanjay" -> 29591, "disgrace" -> 
                    29592, "infused" -> 29593, "pudding" -> 29594, "stalks" -> 
                    29595, "##urbed" -> 29596, "arsenic" -> 29597, "leases" -> 
                    29598, "##hyl" -> 29599, "##rrard" -> 29600, "collarbone" -> 
                    29601, "##waite" -> 29602, "##wil" -> 29603, "dowry" -> 
                    29604, "##bant" -> 29605, "##edance" -> 29606, 
                    "genealogical" -> 29607, "nitrate" -> 29608, "salamanca" -> 
                    29609, "scandals" -> 29610, "thyroid" -> 29611, 
                    "necessitated" -> 29612, "##!" -> 29613, "##\"" -> 29614, 
                    "###" -> 29615, "##$" -> 29616, "##%" -> 29617, "##&" -> 
                    29618, "##'" -> 29619, "##(" -> 29620, "##)" -> 29621, 
                    "##*" -> 29622, "##+" -> 29623, "##," -> 29624, "##-" -> 
                    29625, "##." -> 29626, "##/" -> 29627, "##:" -> 29628, 
                    "##;" -> 29629, "##<" -> 29630, "##=" -> 29631, "##>" -> 
                    29632, "##?" -> 29633, "##@" -> 29634, "##[" -> 29635, 
                    "##\\" -> 29636, "##]" -> 29637, "##^" -> 29638, "##_" -> 
                    29639, "##`" -> 29640, "##{" -> 29641, "##|" -> 29642, 
                    "##}" -> 29643, "##~" -> 29644, "##\[DownExclamation]" -> 
                    29645, "##\[Cent]" -> 29646, "##\[Sterling]" -> 29647, 
                    "##\[Currency]" -> 29648, "##\[Yen]" -> 29649, "##\.a6" -> 
                    29650, "##\[Section]" -> 29651, "##\[DoubleDot]" -> 29652,
                     "##\[Copyright]" -> 29653, "##\.aa" -> 29654, 
                    "##\[LeftGuillemet]" -> 29655, "##\[Not]" -> 29656, 
                    "##\[RegisteredTrademark]" -> 29657, "##\[PlusMinus]" -> 
                    29658, "##\.b4" -> 29659, "##\[Micro]" -> 29660, 
                    "##\[Paragraph]" -> 29661, "##\[CenterDot]" -> 29662, 
                    "##\.ba" -> 29663, "##\[RightGuillemet]" -> 29664, 
                    "##\.bc" -> 29665, "##\.be" -> 29666, "##\[DownQuestion]" -> 
                    29667, "##\[AE]" -> 29668, "##\[Eth]" -> 29669, 
                    "##\[Divide]" -> 29670, "##\[Thorn]" -> 29671, "##\:0111" -> 
                    29672, "##\:0127" -> 29673, "##\:014b" -> 29674, 
                    "##\[OE]" -> 29675, "##\[Florin]" -> 29676, "##\:0250" -> 
                    29677, "##\:0251" -> 29678, "##\:0252" -> 29679, 
                    "##\:0254" -> 29680, "##\:0255" -> 29681, "##\:0259" -> 
                    29682, "##\:0261" -> 29683, "##\:0263" -> 29684, 
                    "##\:0268" -> 29685, "##\:026a" -> 29686, "##\:026b" -> 
                    29687, "##\:026c" -> 29688, "##\:026f" -> 29689, 
                    "##\:0272" -> 29690, "##\:0274" -> 29691, "##\:0279" -> 
                    29692, "##\:027e" -> 29693, "##\:0280" -> 29694, 
                    "##\:0281" -> 29695, "##\:0282" -> 29696, "##\:0283" -> 
                    29697, "##\:0289" -> 29698, "##\:028a" -> 29699, 
                    "##\:028b" -> 29700, "##\:028c" -> 29701, "##\:028e" -> 
                    29702, "##\:0290" -> 29703, "##\:0291" -> 29704, 
                    "##\:0292" -> 29705, "##\:0294" -> 29706, "##\:02b0" -> 
                    29707, "##\:02b2" -> 29708, "##\:02b3" -> 29709, 
                    "##\:02b7" -> 29710, "##\:02b8" -> 29711, "##\:02bb" -> 
                    29712, "##\:02bc" -> 29713, "##\:02be" -> 29714, 
                    "##\:02bf" -> 29715, "##\:02c8" -> 29716, "##\:02e1" -> 
                    29717, "##\:02e2" -> 29718, "##\:02e3" -> 29719, 
                    "##\:02e4" -> 29720, "##\[Beta]" -> 29721, "##\[Gamma]" -> 
                    29722, "##\[Delta]" -> 29723, "##\[CurlyEpsilon]" -> 
                    29724, "##\[Zeta]" -> 29725, "##\[Theta]" -> 29726, 
                    "##\[Kappa]" -> 29727, "##\[Lambda]" -> 29728, "##\[Mu]" -> 
                    29729, "##\[Xi]" -> 29730, "##\[Omicron]" -> 29731, 
                    "##\[Pi]" -> 29732, "##\[Rho]" -> 29733, "##\[Sigma]" -> 
                    29734, "##\[Tau]" -> 29735, "##\[Upsilon]" -> 29736, 
                    "##\[CurlyPhi]" -> 29737, "##\[Chi]" -> 29738, "##\[Psi]" -> 
                    29739, "##\[Omega]" -> 29740, "##\:0431" -> 29741, 
                    "##\:0433" -> 29742, "##\:0434" -> 29743, "##\:0436" -> 
                    29744, "##\:0437" -> 29745, "##\:043c" -> 29746, 
                    "##\:043f" -> 29747, "##\:0441" -> 29748, "##\:0443" -> 
                    29749, "##\:0444" -> 29750, "##\:0445" -> 29751, 
                    "##\:0446" -> 29752, "##\:0447" -> 29753, "##\:0448" -> 
                    29754, "##\:0449" -> 29755, "##\:044a" -> 29756, 
                    "##\:044d" -> 29757, "##\:044e" -> 29758, "##\:0452" -> 
                    29759, "##\:0454" -> 29760, "##\:0456" -> 29761, 
                    "##\:0458" -> 29762, "##\:0459" -> 29763, "##\:045a" -> 
                    29764, "##\:045b" -> 29765, "##\:04cf" -> 29766, 
                    "##\:0561" -> 29767, "##\:0562" -> 29768, "##\:0563" -> 
                    29769, "##\:0564" -> 29770, "##\:0565" -> 29771, 
                    "##\:0569" -> 29772, "##\:056b" -> 29773, "##\:056c" -> 
                    29774, "##\:056f" -> 29775, "##\:0570" -> 29776, 
                    "##\:0574" -> 29777, "##\:0575" -> 29778, "##\:0576" -> 
                    29779, "##\:0578" -> 29780, "##\:057a" -> 29781, 
                    "##\:057d" -> 29782, "##\:057e" -> 29783, "##\:057f" -> 
                    29784, "##\:0580" -> 29785, "##\:0582" -> 29786, 
                    "##\:0584" -> 29787, "##\:05be" -> 29788, "##\:05d0" -> 
                    29789, "##\:05d1" -> 29790, "##\:05d2" -> 29791, 
                    "##\:05d3" -> 29792, "##\:05d5" -> 29793, "##\:05d6" -> 
                    29794, "##\:05d7" -> 29795, "##\:05d8" -> 29796, 
                    "##\:05d9" -> 29797, "##\:05da" -> 29798, "##\:05db" -> 
                    29799, "##\:05dc" -> 29800, "##\:05dd" -> 29801, 
                    "##\:05de" -> 29802, "##\:05df" -> 29803, "##\:05e0" -> 
                    29804, "##\:05e1" -> 29805, "##\:05e2" -> 29806, 
                    "##\:05e3" -> 29807, "##\:05e4" -> 29808, "##\:05e5" -> 
                    29809, "##\:05e6" -> 29810, "##\:05e7" -> 29811, 
                    "##\:05e8" -> 29812, "##\:05e9" -> 29813, "##\:05ea" -> 
                    29814, "##\:060c" -> 29815, "##\:0621" -> 29816, 
                    "##\:0628" -> 29817, "##\:062a" -> 29818, "##\:062b" -> 
                    29819, "##\:062c" -> 29820, "##\:062d" -> 29821, 
                    "##\:062e" -> 29822, "##\:0630" -> 29823, "##\:0632" -> 
                    29824, "##\:0633" -> 29825, "##\:0634" -> 29826, 
                    "##\:0635" -> 29827, "##\:0636" -> 29828, "##\:0637" -> 
                    29829, "##\:0638" -> 29830, "##\:0639" -> 29831, 
                    "##\:063a" -> 29832, "##\:0640" -> 29833, "##\:0641" -> 
                    29834, "##\:0642" -> 29835, "##\:0643" -> 29836, 
                    "##\:0648" -> 29837, "##\:0649" -> 29838, "##\:0679" -> 
                    29839, "##\:067e" -> 29840, "##\:0686" -> 29841, 
                    "##\:06a9" -> 29842, "##\:06af" -> 29843, "##\:06ba" -> 
                    29844, "##\:06be" -> 29845, "##\:06c1" -> 29846, 
                    "##\:06d2" -> 29847, "##\:0905" -> 29848, "##\:0906" -> 
                    29849, "##\:0909" -> 29850, "##\:090f" -> 29851, 
                    "##\:0915" -> 29852, "##\:0916" -> 29853, "##\:0917" -> 
                    29854, "##\:091a" -> 29855, "##\:091c" -> 29856, 
                    "##\:091f" -> 29857, "##\:0921" -> 29858, "##\:0923" -> 
                    29859, "##\:0924" -> 29860, "##\:0925" -> 29861, 
                    "##\:0926" -> 29862, "##\:0927" -> 29863, "##\:0928" -> 
                    29864, "##\:092a" -> 29865, "##\:092c" -> 29866, 
                    "##\:092d" -> 29867, "##\:092e" -> 29868, "##\:092f" -> 
                    29869, "##\:0930" -> 29870, "##\:0932" -> 29871, 
                    "##\:0935" -> 29872, "##\:0936" -> 29873, "##\:0937" -> 
                    29874, "##\:0938" -> 29875, "##\:0939" -> 29876, 
                    "##\:093e" -> 29877, "##\:093f" -> 29878, "##\:0940" -> 
                    29879, "##\:094b" -> 29880, "##\:0964" -> 29881, 
                    "##\:0965" -> 29882, "##\:0982" -> 29883, "##\:0985" -> 
                    29884, "##\:0986" -> 29885, "##\:0987" -> 29886, 
                    "##\:0989" -> 29887, "##\:098f" -> 29888, "##\:0993" -> 
                    29889, "##\:0995" -> 29890, "##\:0996" -> 29891, 
                    "##\:0997" -> 29892, "##\:099a" -> 29893, "##\:099b" -> 
                    29894, "##\:099c" -> 29895, "##\:099f" -> 29896, 
                    "##\:09a1" -> 29897, "##\:09a3" -> 29898, "##\:09a4" -> 
                    29899, "##\:09a5" -> 29900, "##\:09a6" -> 29901, 
                    "##\:09a7" -> 29902, "##\:09a8" -> 29903, "##\:09aa" -> 
                    29904, "##\:09ac" -> 29905, "##\:09ad" -> 29906, 
                    "##\:09ae" -> 29907, "##\:09af" -> 29908, "##\:09b0" -> 
                    29909, "##\:09b2" -> 29910, "##\:09b6" -> 29911, 
                    "##\:09b7" -> 29912, "##\:09b8" -> 29913, "##\:09b9" -> 
                    29914, "##\:09be" -> 29915, "##\:09bf" -> 29916, 
                    "##\:09c0" -> 29917, "##\:09c7" -> 29918, "##\:0b95" -> 
                    29919, "##\:0b9a" -> 29920, "##\:0b9f" -> 29921, 
                    "##\:0ba4" -> 29922, "##\:0ba8" -> 29923, "##\:0ba9" -> 
                    29924, "##\:0baa" -> 29925, "##\:0bae" -> 29926, 
                    "##\:0baf" -> 29927, "##\:0bb0" -> 29928, "##\:0bb2" -> 
                    29929, "##\:0bb3" -> 29930, "##\:0bb5" -> 29931, 
                    "##\:0bbe" -> 29932, "##\:0bbf" -> 29933, "##\:0bc1" -> 
                    29934, "##\:0bc7" -> 29935, "##\:0bc8" -> 29936, 
                    "##\:0ca8" -> 29937, "##\:0cb0" -> 29938, "##\:0cbe" -> 
                    29939, "##\:0d9a" -> 29940, "##\:0dba" -> 29941, 
                    "##\:0dbb" -> 29942, "##\:0dbd" -> 29943, "##\:0dc0" -> 
                    29944, "##\:0dcf" -> 29945, "##\:0e01" -> 29946, 
                    "##\:0e07" -> 29947, "##\:0e15" -> 29948, "##\:0e17" -> 
                    29949, "##\:0e19" -> 29950, "##\:0e1e" -> 29951, 
                    "##\:0e21" -> 29952, "##\:0e22" -> 29953, "##\:0e23" -> 
                    29954, "##\:0e25" -> 29955, "##\:0e27" -> 29956, 
                    "##\:0e2a" -> 29957, "##\:0e2d" -> 29958, "##\:0e32" -> 
                    29959, "##\:0e40" -> 29960, "##\:0f0b" -> 29961, 
                    "##\:0f0d" -> 29962, "##\:0f42" -> 29963, "##\:0f44" -> 
                    29964, "##\:0f51" -> 29965, "##\:0f53" -> 29966, 
                    "##\:0f54" -> 29967, "##\:0f56" -> 29968, "##\:0f58" -> 
                    29969, "##\:0f60" -> 29970, "##\:0f62" -> 29971, 
                    "##\:0f63" -> 29972, "##\:0f66" -> 29973, "##\:1019" -> 
                    29974, "##\:10d0" -> 29975, "##\:10d1" -> 29976, 
                    "##\:10d2" -> 29977, "##\:10d3" -> 29978, "##\:10d4" -> 
                    29979, "##\:10d5" -> 29980, "##\:10d7" -> 29981, 
                    "##\:10d8" -> 29982, "##\:10d9" -> 29983, "##\:10da" -> 
                    29984, "##\:10db" -> 29985, "##\:10dc" -> 29986, 
                    "##\:10dd" -> 29987, "##\:10e0" -> 29988, "##\:10e1" -> 
                    29989, "##\:10e2" -> 29990, "##\:10e3" -> 29991, 
                    "##\:1100" -> 29992, "##\:1102" -> 29993, "##\:1103" -> 
                    29994, "##\:1105" -> 29995, "##\:1106" -> 29996, 
                    "##\:1107" -> 29997, "##\:1109" -> 29998, "##\:110a" -> 
                    29999, "##\:110b" -> 30000, "##\:110c" -> 30001, 
                    "##\:110e" -> 30002, "##\:110f" -> 30003, "##\:1110" -> 
                    30004, "##\:1111" -> 30005, "##\:1112" -> 30006, 
                    "##\:1161" -> 30007, "##\:1162" -> 30008, "##\:1165" -> 
                    30009, "##\:1166" -> 30010, "##\:1167" -> 30011, 
                    "##\:1169" -> 30012, "##\:116a" -> 30013, "##\:116d" -> 
                    30014, "##\:116e" -> 30015, "##\:116f" -> 30016, 
                    "##\:1172" -> 30017, "##\:1173" -> 30018, "##\:1174" -> 
                    30019, "##\:1175" -> 30020, "##\:11a8" -> 30021, 
                    "##\:11ab" -> 30022, "##\:11af" -> 30023, "##\:11b7" -> 
                    30024, "##\:11b8" -> 30025, "##\:11bc" -> 30026, 
                    "##\:1d2c" -> 30027, "##\:1d2e" -> 30028, "##\:1d30" -> 
                    30029, "##\:1d35" -> 30030, "##\:1d3a" -> 30031, 
                    "##\:1d40" -> 30032, "##\:1d43" -> 30033, "##\:1d47" -> 
                    30034, "##\:1d48" -> 30035, "##\:1d49" -> 30036, 
                    "##\:1d4d" -> 30037, "##\:1d4f" -> 30038, "##\:1d50" -> 
                    30039, "##\:1d52" -> 30040, "##\:1d56" -> 30041, 
                    "##\:1d57" -> 30042, "##\:1d58" -> 30043, "##\:1d63" -> 
                    30044, "##\:1d64" -> 30045, "##\:1d65" -> 30046, 
                    "##\:1d9c" -> 30047, "##\:1da0" -> 30048, "##\[Hyphen]" -> 
                    30049, "##\:2011" -> 30050, "##\:2012" -> 30051, 
                    "##\[Dash]" -> 30052, "##\[LongDash]" -> 30053, 
                    "##\:2015" -> 30054, "##\:2016" -> 30055, 
                    "##\[OpenCurlyQuote]" -> 30056, "##\[CloseCurlyQuote]" -> 
                    30057, "##\:201a" -> 30058, "##\[OpenCurlyDoubleQuote]" -> 
                    30059, "##\[CloseCurlyDoubleQuote]" -> 30060, "##\:201e" -> 
                    30061, "##\[Dagger]" -> 30062, "##\[DoubleDagger]" -> 
                    30063, "##\[Bullet]" -> 30064, "##\[Ellipsis]" -> 30065, 
                    "##\:2030" -> 30066, "##\[Prime]" -> 30067, 
                    "##\[DoublePrime]" -> 30068, "##\:203a" -> 30069, 
                    "##\:203f" -> 30070, "##\:2044" -> 30071, "##\:2070" -> 
                    30072, "##\:2071" -> 30073, "##\:2074" -> 30074, 
                    "##\:2075" -> 30075, "##\:2076" -> 30076, "##\:2077" -> 
                    30077, "##\:2078" -> 30078, "##\:2079" -> 30079, 
                    "##\:207b" -> 30080, "##\:207f" -> 30081, "##\:2085" -> 
                    30082, "##\:2086" -> 30083, "##\:2087" -> 30084, 
                    "##\:2088" -> 30085, "##\:2089" -> 30086, "##\:208a" -> 
                    30087, "##\:208d" -> 30088, "##\:208e" -> 30089, 
                    "##\:2090" -> 30090, "##\:2091" -> 30091, "##\:2092" -> 
                    30092, "##\:2093" -> 30093, "##\:2095" -> 30094, 
                    "##\:2096" -> 30095, "##\:2097" -> 30096, "##\:2098" -> 
                    30097, "##\:209a" -> 30098, "##\:209b" -> 30099, 
                    "##\:209c" -> 30100, "##\:20a4" -> 30101, "##\:20a9" -> 
                    30102, "##\[Euro]" -> 30103, "##\:20b1" -> 30104, 
                    "##\[Rupee]" -> 30105, "##\[ScriptL]" -> 30106, 
                    "##\:2116" -> 30107, "##\:211d" -> 30108, 
                    "##\[Trademark]" -> 30109, "##\:2153" -> 30110, 
                    "##\:2154" -> 30111, "##\[LeftArrow]" -> 30112, 
                    "##\[UpArrow]" -> 30113, "##\[RightArrow]" -> 30114, 
                    "##\[DownArrow]" -> 30115, "##\[LeftRightArrow]" -> 30116,
                     "##\[RightTeeArrow]" -> 30117, 
                    "##\[RightArrowLeftArrow]" -> 30118, "##\[Equilibrium]" -> 
                    30119, "##\[DoubleRightArrow]" -> 30120, "##\[PartialD]" -> 
                    30121, "##\[EmptySet]" -> 30122, "##\[Laplacian]" -> 
                    30123, "##\[Del]" -> 30124, "##\[Element]" -> 30125, 
                    "##\:2217" -> 30126, "##\[SmallCircle]" -> 30127, 
                    "##\[Sqrt]" -> 30128, "##\[Infinity]" -> 30129, 
                    "##\[And]" -> 30130, "##\[Or]" -> 30131, "##\:2229" -> 
                    30132, "##\:222a" -> 30133, "##\[TildeTilde]" -> 30134, 
                    "##\[Congruent]" -> 30135, "##\[LessEqual]" -> 30136, 
                    "##\[GreaterEqual]" -> 30137, "##\[Subset]" -> 30138, 
                    "##\[SubsetEqual]" -> 30139, "##\[CirclePlus]" -> 30140, 
                    "##\[CircleTimes]" -> 30141, "##\:22c5" -> 30142, 
                    "##\[HorizontalLine]" -> 30143, "##\[VerticalLine]" -> 
                    30144, "##\[FilledSquare]" -> 30145, 
                    "##\[FilledVerySmallSquare]" -> 30146, 
                    "##\[FilledCircle]" -> 30147, "##\[FivePointedStar]" -> 
                    30148, "##\:2606" -> 30149, "##\[Sun]" -> 30150, 
                    "##\[SpadeSuit]" -> 30151, "##\[ClubSuit]" -> 30152, 
                    "##\:2665" -> 30153, "##\:2666" -> 30154, "##\[Sharp]" -> 
                    30155, "##\:27e8" -> 30156, "##\:27e9" -> 30157, 
                    "##\:2c7c" -> 30158, "##\:2ea9" -> 30159, "##\:2ebc" -> 
                    30160, "##\:2f65" -> 30161, "##\:3001" -> 30162, 
                    "##\:3002" -> 30163, "##\:3008" -> 30164, "##\:3009" -> 
                    30165, "##\:300a" -> 30166, "##\:300b" -> 30167, 
                    "##\:300c" -> 30168, "##\:300d" -> 30169, "##\:300e" -> 
                    30170, "##\:300f" -> 30171, "##\:301c" -> 30172, 
                    "##\:3042" -> 30173, "##\:3044" -> 30174, "##\:3046" -> 
                    30175, "##\:3048" -> 30176, "##\:304a" -> 30177, 
                    "##\:304b" -> 30178, "##\:304d" -> 30179, "##\:304f" -> 
                    30180, "##\:3051" -> 30181, "##\:3053" -> 30182, 
                    "##\:3055" -> 30183, "##\:3057" -> 30184, "##\:3059" -> 
                    30185, "##\:305b" -> 30186, "##\:305d" -> 30187, 
                    "##\:305f" -> 30188, "##\:3061" -> 30189, "##\:3063" -> 
                    30190, "##\:3064" -> 30191, "##\:3066" -> 30192, 
                    "##\:3068" -> 30193, "##\:306a" -> 30194, "##\:306b" -> 
                    30195, "##\:306c" -> 30196, "##\:306d" -> 30197, 
                    "##\:306e" -> 30198, "##\:306f" -> 30199, "##\:3072" -> 
                    30200, "##\:3075" -> 30201, "##\:3078" -> 30202, 
                    "##\:307b" -> 30203, "##\:307e" -> 30204, "##\:307f" -> 
                    30205, "##\:3080" -> 30206, "##\:3081" -> 30207, 
                    "##\:3082" -> 30208, "##\:3084" -> 30209, "##\:3086" -> 
                    30210, "##\:3088" -> 30211, "##\:3089" -> 30212, 
                    "##\:308a" -> 30213, "##\:308b" -> 30214, "##\:308c" -> 
                    30215, "##\:308d" -> 30216, "##\:3092" -> 30217, 
                    "##\:3093" -> 30218, "##\:30a1" -> 30219, "##\:30a2" -> 
                    30220, "##\:30a3" -> 30221, "##\:30a4" -> 30222, 
                    "##\:30a6" -> 30223, "##\:30a7" -> 30224, "##\:30a8" -> 
                    30225, "##\:30aa" -> 30226, "##\:30ab" -> 30227, 
                    "##\:30ad" -> 30228, "##\:30af" -> 30229, "##\:30b1" -> 
                    30230, "##\:30b3" -> 30231, "##\:30b5" -> 30232, 
                    "##\:30b7" -> 30233, "##\:30b9" -> 30234, "##\:30bb" -> 
                    30235, "##\:30bf" -> 30236, "##\:30c1" -> 30237, 
                    "##\:30c3" -> 30238, "##\:30c4" -> 30239, "##\:30c6" -> 
                    30240, "##\:30c8" -> 30241, "##\:30ca" -> 30242, 
                    "##\:30cb" -> 30243, "##\:30ce" -> 30244, "##\:30cf" -> 
                    30245, "##\:30d2" -> 30246, "##\:30d5" -> 30247, 
                    "##\:30d8" -> 30248, "##\:30db" -> 30249, "##\:30de" -> 
                    30250, "##\:30df" -> 30251, "##\:30e0" -> 30252, 
                    "##\:30e1" -> 30253, "##\:30e2" -> 30254, "##\:30e3" -> 
                    30255, "##\:30e5" -> 30256, "##\:30e7" -> 30257, 
                    "##\:30e9" -> 30258, "##\:30ea" -> 30259, "##\:30eb" -> 
                    30260, "##\:30ec" -> 30261, "##\:30ed" -> 30262, 
                    "##\:30ef" -> 30263, "##\:30f3" -> 30264, "##\:30fb" -> 
                    30265, "##\:30fc" -> 30266, "##\:4e00" -> 30267, 
                    "##\:4e09" -> 30268, "##\:4e0a" -> 30269, "##\:4e0b" -> 
                    30270, "##\:4e0d" -> 30271, "##\:4e16" -> 30272, 
                    "##\:4e2d" -> 30273, "##\:4e3b" -> 30274, "##\:4e45" -> 
                    30275, "##\:4e4b" -> 30276, "##\:4e5f" -> 30277, 
                    "##\:4e8b" -> 30278, "##\:4e8c" -> 30279, "##\:4e94" -> 
                    30280, "##\:4e95" -> 30281, "##\:4eac" -> 30282, 
                    "##\:4eba" -> 30283, "##\:4ebb" -> 30284, "##\:4ec1" -> 
                    30285, "##\:4ecb" -> 30286, "##\:4ee3" -> 30287, 
                    "##\:4eee" -> 30288, "##\:4f0a" -> 30289, "##\:4f1a" -> 
                    30290, "##\:4f50" -> 30291, "##\:4f8d" -> 30292, 
                    "##\:4fdd" -> 30293, "##\:4fe1" -> 30294, "##\:5065" -> 
                    30295, "##\:5143" -> 30296, "##\:5149" -> 30297, 
                    "##\:516b" -> 30298, "##\:516c" -> 30299, "##\:5185" -> 
                    30300, "##\:51fa" -> 30301, "##\:5206" -> 30302, 
                    "##\:524d" -> 30303, "##\:5289" -> 30304, "##\:529b" -> 
                    30305, "##\:52a0" -> 30306, "##\:52dd" -> 30307, 
                    "##\:5317" -> 30308, "##\:533a" -> 30309, "##\:5341" -> 
                    30310, "##\:5343" -> 30311, "##\:5357" -> 30312, 
                    "##\:535a" -> 30313, "##\:539f" -> 30314, "##\:53e3" -> 
                    30315, "##\:53e4" -> 30316, "##\:53f2" -> 30317, 
                    "##\:53f8" -> 30318, "##\:5408" -> 30319, "##\:5409" -> 
                    30320, "##\:540c" -> 30321, "##\:540d" -> 30322, 
                    "##\:548c" -> 30323, "##\:56d7" -> 30324, "##\:56db" -> 
                    30325, "##\:56fd" -> 30326, "##\:570b" -> 30327, 
                    "##\:571f" -> 30328, "##\:5730" -> 30329, "##\:5742" -> 
                    30330, "##\:57ce" -> 30331, "##\:5802" -> 30332, 
                    "##\:5834" -> 30333, "##\:58eb" -> 30334, "##\:590f" -> 
                    30335, "##\:5916" -> 30336, "##\:5927" -> 30337, 
                    "##\:5929" -> 30338, "##\:592a" -> 30339, "##\:592b" -> 
                    30340, "##\:5948" -> 30341, "##\:5973" -> 30342, 
                    "##\:5b50" -> 30343, "##\:5b66" -> 30344, "##\:5b80" -> 
                    30345, "##\:5b87" -> 30346, "##\:5b89" -> 30347, 
                    "##\:5b97" -> 30348, "##\:5b9a" -> 30349, "##\:5ba3" -> 
                    30350, "##\:5bae" -> 30351, "##\:5bb6" -> 30352, 
                    "##\:5bbf" -> 30353, "##\:5bfa" -> 30354, "##\:5c07" -> 
                    30355, "##\:5c0f" -> 30356, "##\:5c1a" -> 30357, 
                    "##\:5c71" -> 30358, "##\:5ca1" -> 30359, "##\:5cf6" -> 
                    30360, "##\:5d0e" -> 30361, "##\:5ddd" -> 30362, 
                    "##\:5dde" -> 30363, "##\:5dff" -> 30364, "##\:5e1d" -> 
                    30365, "##\:5e73" -> 30366, "##\:5e74" -> 30367, 
                    "##\:5e78" -> 30368, "##\:5e7f" -> 30369, "##\:5f18" -> 
                    30370, "##\:5f35" -> 30371, "##\:5f73" -> 30372, 
                    "##\:5f8c" -> 30373, "##\:5fa1" -> 30374, "##\:5fb7" -> 
                    30375, "##\:5fc3" -> 30376, "##\:5fc4" -> 30377, 
                    "##\:5fd7" -> 30378, "##\:5fe0" -> 30379, "##\:611b" -> 
                    30380, "##\:6210" -> 30381, "##\:6211" -> 30382, 
                    "##\:6226" -> 30383, "##\:6238" -> 30384, "##\:624b" -> 
                    30385, "##\:624c" -> 30386, "##\:653f" -> 30387, 
                    "##\:6587" -> 30388, "##\:65b0" -> 30389, "##\:65b9" -> 
                    30390, "##\:65e5" -> 30391, "##\:660e" -> 30392, 
                    "##\:661f" -> 30393, "##\:6625" -> 30394, "##\:662d" -> 
                    30395, "##\:667a" -> 30396, "##\:66f2" -> 30397, 
                    "##\:66f8" -> 30398, "##\:6708" -> 30399, "##\:6709" -> 
                    30400, "##\:671d" -> 30401, "##\:6728" -> 30402, 
                    "##\:672c" -> 30403, "##\:674e" -> 30404, "##\:6751" -> 
                    30405, "##\:6771" -> 30406, "##\:677e" -> 30407, 
                    "##\:6797" -> 30408, "##\:68ee" -> 30409, "##\:694a" -> 
                    30410, "##\:6a39" -> 30411, "##\:6a4b" -> 30412, 
                    "##\:6b4c" -> 30413, "##\:6b62" -> 30414, "##\:6b63" -> 
                    30415, "##\:6b66" -> 30416, "##\:6bd4" -> 30417, 
                    "##\:6c0f" -> 30418, "##\:6c11" -> 30419, "##\:6c34" -> 
                    30420, "##\:6c35" -> 30421, "##\:6c37" -> 30422, 
                    "##\:6c38" -> 30423, "##\:6c5f" -> 30424, "##\:6ca2" -> 
                    30425, "##\:6cb3" -> 30426, "##\:6cbb" -> 30427, 
                    "##\:6cd5" -> 30428, "##\:6d77" -> 30429, "##\:6e05" -> 
                    30430, "##\:6f22" -> 30431, "##\:702c" -> 30432, 
                    "##\:706b" -> 30433, "##\:7248" -> 30434, "##\:72ac" -> 
                    30435, "##\:738b" -> 30436, "##\:751f" -> 30437, 
                    "##\:7530" -> 30438, "##\:7537" -> 30439, "##\:7592" -> 
                    30440, "##\:767a" -> 30441, "##\:767d" -> 30442, 
                    "##\:7684" -> 30443, "##\:7687" -> 30444, "##\:76ee" -> 
                    30445, "##\:76f8" -> 30446, "##\:7701" -> 30447, 
                    "##\:771f" -> 30448, "##\:77f3" -> 30449, "##\:793a" -> 
                    30450, "##\:793e" -> 30451, "##\:795e" -> 30452, 
                    "##\:798f" -> 30453, "##\:79be" -> 30454, "##\:79c0" -> 
                    30455, "##\:79cb" -> 30456, "##\:7a7a" -> 30457, 
                    "##\:7acb" -> 30458, "##\:7ae0" -> 30459, "##\:7af9" -> 
                    30460, "##\:7cf9" -> 30461, "##\:7f8e" -> 30462, 
                    "##\:7fa9" -> 30463, "##\:8033" -> 30464, "##\:826f" -> 
                    30465, "##\:8279" -> 30466, "##\:82b1" -> 30467, 
                    "##\:82f1" -> 30468, "##\:83ef" -> 30469, "##\:8449" -> 
                    30470, "##\:85e4" -> 30471, "##\:884c" -> 30472, 
                    "##\:8857" -> 30473, "##\:897f" -> 30474, "##\:898b" -> 
                    30475, "##\:8a01" -> 30476, "##\:8a9e" -> 30477, 
                    "##\:8c37" -> 30478, "##\:8c9d" -> 30479, "##\:8cb4" -> 
                    30480, "##\:8eca" -> 30481, "##\:8ecd" -> 30482, 
                    "##\:8fb6" -> 30483, "##\:9053" -> 30484, "##\:90ce" -> 
                    30485, "##\:90e1" -> 30486, "##\:90e8" -> 30487, 
                    "##\:90fd" -> 30488, "##\:91cc" -> 30489, "##\:91ce" -> 
                    30490, "##\:91d1" -> 30491, "##\:9234" -> 30492, 
                    "##\:9547" -> 30493, "##\:9577" -> 30494, "##\:9580" -> 
                    30495, "##\:9593" -> 30496, "##\:961d" -> 30497, 
                    "##\:963f" -> 30498, "##\:9673" -> 30499, "##\:967d" -> 
                    30500, "##\:96c4" -> 30501, "##\:9752" -> 30502, 
                    "##\:9762" -> 30503, "##\:98a8" -> 30504, "##\:98df" -> 
                    30505, "##\:9999" -> 30506, "##\:99ac" -> 30507, 
                    "##\:9ad8" -> 30508, "##\:9f8d" -> 30509, "##\:9fb8" -> 
                    30510, "##\[FiLigature]" -> 30511, "##\[FlLigature]" -> 
                    30512, "##\:ff01" -> 30513, "##\:ff08" -> 30514, 
                    "##\:ff09" -> 30515, "##\:ff0c" -> 30516, "##\:ff0d" -> 
                    30517, "##\:ff0e" -> 30518, "##\:ff0f" -> 30519, 
                    "##\:ff1a" -> 30520, "##\:ff1f" -> 30521, "##\:ff5e" -> 
                    30522|>}, 
                    Flatten[
                    Map[
                    Function[$CellContext`s$, 
                    Last[
                    NestWhile[
                    Apply[
                    
                    Function[{$CellContext`strLen$, \
$CellContext`currentString$, $CellContext`pieces$}, 
                    
                    Block[{$CellContext`isInsideWord, $CellContext`curLen, \
$CellContext`subw, $CellContext`matched, $CellContext`subwLen}, \
$CellContext`isInsideWord = StringStartsQ[$CellContext`currentString$, 
                    "##"]; $CellContext`curLen = 
                    If[$CellContext`isInsideWord, 
                    StringLength[$CellContext`currentString$] - 2, 
                    
                    StringLength[$CellContext`currentString$]]; \
$CellContext`subw = NestWhile[(Decrement[$CellContext`curLen]; 
                    StringDrop[#, -1])& , $CellContext`currentString$, And[
                    Positive[$CellContext`curLen], 
                    MissingQ[
                    $CellContext`voc$[#]]]& ]; $CellContext`matched = Not[
                    MatchQ[$CellContext`subw, 
                    Alternatives["", "##"]]]; $CellContext`subwLen = 
                    StringLength[$CellContext`subw]; {$CellContext`strLen$ - 
                    If[$CellContext`isInsideWord, $CellContext`subwLen - 
                    2, $CellContext`subwLen], "##" <> 
                    StringDrop[$CellContext`currentString$, \
$CellContext`subwLen], 
                    If[$CellContext`matched, 
                    Append[$CellContext`pieces$, 
                    $CellContext`voc$[$CellContext`subw]], {101}]}]]], {
                    StringLength[$CellContext`s$], $CellContext`s$, {}}, 
                    MatchQ[#, {
                    PatternTest[
                    Blank[], Positive], 
                    Blank[], 
                    Except[{101}]}]& ]]], #, {2}], {{1}, {2, 3}}]]& , 
                    Function[$CellContext`stringBatch$, 
                    
                    Block[{$CellContext`batch, $CellContext`chars, \
$CellContext`regExMatch, $CellContext`codes, $CellContext`isPunctuation, \
$CellContext`lookUp}, $CellContext`batch = ToLowerCase[
                    
                    StringTrim[$CellContext`stringBatch$]]; \
$CellContext`batch = StringSplit[$CellContext`batch, Pattern[$CellContext`c, 
                    Apply[
                    Alternatives, {"\[AE]", "\[Eth]", "\[OSlash]", "\[Thorn]",
                     "\[SZ]", "\[CapitalAE]", "\[CapitalEth]", 
                    "\[CapitalOSlash]", 
                    "\[CapitalThorn]"}]] :> $CellContext`c]; \
$CellContext`batch = Apply[StringJoin, 
                    Replace[$CellContext`batch, Pattern[$CellContext`x, 
                    Except[
                    Apply[
                    Alternatives, {"\[AE]", "\[Eth]", "\[OSlash]", "\[Thorn]",
                     "\[SZ]", "\[CapitalAE]", "\[CapitalEth]", 
                    "\[CapitalOSlash]", "\[CapitalThorn]"}]]] :> 
                    RemoveDiacritics[$CellContext`x], {2}], {
                    1}]; $CellContext`chars = DeleteDuplicates[
                    Characters[
                    StringJoin[$CellContext`batch]]]; $CellContext`regExMatch = 
                    StringMatchQ[$CellContext`chars, 
                    RegularExpression["\\p{P}"]]; $CellContext`codes = Part[
                    ToCharacterCode[$CellContext`chars], All, 
                    1]; $CellContext`isPunctuation = Map[Or[
                    First[#], 
                    With[{$CellContext`c = Last[#]}, 
                    Or[
                    And[$CellContext`c >= 33, $CellContext`c <= 47], 
                    And[$CellContext`c >= 58, $CellContext`c <= 64], 
                    And[$CellContext`c >= 91, $CellContext`c <= 96], 
                    And[$CellContext`c >= 123, $CellContext`c <= 126]]]]& , 
                    
                    Transpose[{$CellContext`regExMatch, $CellContext`codes}]]; \
$CellContext`lookUp = 
                    AssociationThread[$CellContext`chars, \
$CellContext`isPunctuation]; StringSplit[$CellContext`batch, {Condition[
                    Pattern[$CellContext`y, 
                    Blank[]], 
                    $CellContext`lookUp[$CellContext`y]] :> $CellContext`y, 
                    " "}]]], 
                    Function[$CellContext`stringBatch, 
                    StringReplace[$CellContext`stringBatch, {Alternatives[
                    FromCharacterCode[0], 
                    FromCharacterCode[65533], 
                    Except[
                    Alternatives["\t", "\n", "\n"], 
                    RegularExpression["\\p{C}"]]] -> "", Alternatives[
                    RegularExpression["\\p{Zs}"], "\t", "\n", "\n"] -> 
                    " "}]]][$CellContext`stringBatch$]], \
$CellContext`batch$]}, 
                    Map[
                    Composition[
                    Prepend[{102, 1}], Flatten[#, 1]& , 
                    MapIndexed[Transpose[{
                    Append[#, 103], 
                    Table[
                    First[#2], Length[#] + 1]}]& ]], $CellContext`tokens$]]], 
                    "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1907867702], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    PatternTest[
                    Blank[], Developer`StringVectorQ]], "Batched" -> True, 
                    "$Version" -> "13.2.1", 
                    "Initialization" -> (Initialization :> None)|>, 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1907867702], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]]], 
                    Map[List]], "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[452535835], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 30522]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> True, 
                    "Initialization" -> (Initialization :> None), "$Version" -> 
                    "13.2.1"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"positive\"", "\"neutral\"", "\"negative\""}, 
                    "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                    3, "$Rank" -> 0, "$Version" -> "13.2.1"|>|>, 
                    "InteriorStates" -> <|{2, 2, "State"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Nodes", "2", "States", "State"], {
                    2, 2, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Nodes", "2", "States", "CellState"]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]2\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "30522", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "5", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8830183511730585`*^9, 3.883025843200429*^9, 
  3.883026608254804*^9, 3.8830394101743345`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"6f0d2fe0-82e4-43ee-836c-d3b9b974be27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finroberta", "=", 
  RowBox[{"Import", "[", "\"\<FinRoBERTa.WLNET\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8806095167587*^9, 3.880609540811245*^9}, 
   3.881469391838472*^9, 3.8830181648173323`*^9, 3.8830266202944045`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"13f10e83-e83c-4bdf-91ae-3b1d87412f76"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "embedding" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "part1" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 1}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>|>, 
                    "embeddingtokens" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50265, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 50265, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "posembed" -> <|
                    "Type" -> "SequenceIndices", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Maximum" -> 512, "$Length" -> 
                    NeuralNetworks`LengthVar[2086583627]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 512]]|>|>, 
                    "embeddingpos" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 512, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 512]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "part2" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 2}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Min[2, #]& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627]}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 2]]|>|>, 
                    "embeddingsegments" -> <|
                    "Type" -> "Embedding", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{2, 768}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {768}, "ClassCount" -> 2, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627]}, "$OutputDimension" -> 
                    768|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`IndexIntegerT[1, 2]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "inputCombine" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 + #3& ], 
                    "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "normalize" -> <|
                    "Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|
                    "AggregationLevels" -> NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.1, "Method" -> "Dropout", 
                    "OutputPorts" -> NeuralNetworks`ValidatedParameter[{
                    "Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "part2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingtokens", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "posembed", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingpos", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "part2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingsegments", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embeddingsegments", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "normalize", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "inputCombine", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "normalize", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"]}|>, 
                    "encoder" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, "ExtraOutputs" -> <|
                    "AttentionWeights" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "11" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "12" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"attention" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"1" -> <|"Type" -> "NetMap", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{768, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {12, 64}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[0.125 #& ], 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {12, 64},
                     "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Attention", "Arrays" -> <||>, 
                    "Parameters" -> <|"ScoringNet" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Query" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, "Nodes" -> <|
                    "1" -> <|"Type" -> "Dot", "Arrays" -> <||>, 
                    "Parameters" -> <|"TransposeSpecifications" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{64},
                     NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "1"] -> NeuralNetworks`NetPath[
                    "Inputs", "Query"], NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "2"] -> NeuralNetworks`NetPath[
                    "Inputs", "Input"], NeuralNetworks`NetPath[
                    "Outputs", "Output"] -> NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, "Mask" -> None, 
                    "ScoreRescaling" -> None, "MultiHead" -> True, 
                    "$InputPorts" -> "KeyValueQuery", "$KeyAndValueShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, "$QueryShape" -> {
                    NeuralNetworks`LengthVar[2086583627], 12}, 
                    "$QueryChannels" -> {64}, "$KeyChannels" -> {64}, 
                    "$ValueChannels" -> {64}, "Dropout" -> 0.|>, 
                    "Inputs" -> <|"Key" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Value" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT], "Query" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "ExtraOutputs" -> <|"AttentionWeights" -> 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 
                    NeuralNetworks`LengthVar[2086583627]}, 
                    NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|"OutputDimensions" -> {768}, 
                    "$OutputSize" -> 768, "$InputSize" -> 768, 
                    "$InputDimensions" -> {12, 64}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{12, 64}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{12, 64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 12, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Key"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Query"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Value"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", 
                    "Output"]}|>, "dropout" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Inputs", "Query"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "attention", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"linear1" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3072, 
                    768}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    3072}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {3072}, "$OutputSize" -> 3072, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "gelu" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[(0.5 #) (1 + 
                    Erf[0.7071067811865475 #])& ], "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>|>, 
                    "linear2" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|"Net" -> <|
                    "Type" -> "Linear", "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{768, 
                    3072}], "Biases" -> NeuralNetworks`Private`DummyArray[{
                    768}]|>, "Parameters" -> <|
                    "OutputDimensions" -> {768}, "$OutputSize" -> 768, 
                    "$InputSize" -> 3072, "$InputDimensions" -> {3072}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{3072}, NeuralNetworks`RealT], 
                    "$OutputShape" -> NeuralNetworks`TensorT[{768}, 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3072}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "dropout" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|"DropoutProbability" -> 0.1, "Method" -> 
                    "Dropout", "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "add" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[None]|>, 
                    "Inputs" -> <|"1" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "norm" -> <|"Type" -> "Normalization", 
                    "Arrays" -> <|"Scaling" -> 
                    NeuralNetworks`Private`DummyArray[{768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{768}]|>, 
                    "Parameters" -> <|"AggregationLevels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]], "ScalingLevels" -> 
                    NeuralNetworks`ValidatedParameter["Same"], "Epsilon" -> 
                    1.*^-12, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    "$StatsDimensions" -> {768}, "Unbiased" -> False|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "add", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "gelu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "add", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "dropout", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "add", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "norm", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "encoder", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "embedding", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "encoder", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{3, 768}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{3}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 768, "$InputDimensions" -> {768}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2086583627], "$InputShape" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 3}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 768}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> <|"Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2086583627], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]], "Type" -> 
                    "Function", "Function" -> Composition[
                    Row[{Function, "[", 
                    Row[{
                    Style["x", Italic], ",", "\[Ellipsis]"}], "]"}], 
                    Map[List]], "OutputType" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2129928939], 2}, 
                    NeuralNetworks`IndexIntegerT[1, 50265]], "Pattern" -> 
                    NeuralNetworks`ValidatedParameter[
                    Blank[String]], "Batched" -> True, "$Version" -> "13.2.1",
                     "Initialization" -> (Initialization :> None)|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"positive\"", "\"neutral\"", "\"negative\""}, 
                    "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                    3, "$Rank" -> 0, "$Version" -> "13.2.1"|>|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"matrix \"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]2\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of indices \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\[VeryThinSpace]range: \"", "1", 
                    "\"..\"", "50265", "\"\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]768\[VeryThinSpace])\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "4", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8830183585872965`*^9, 3.8830258450765057`*^9, 
  3.8830266228231697`*^9, 3.8830394120243354`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"116f1a8c-94e0-4c4a-803f-1932d7ccddcb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sentiment Analysis", "Section",
 CellChangeTimes->{{3.8830270979630575`*^9, 
  3.8830271038143215`*^9}},ExpressionUUID->"591f1b77-df0c-4b3e-95af-\
a009df8cad37"],

Cell["A simple example to show the application of both networks.", "Text",
 CellChangeTimes->{{3.8830358808225803`*^9, 
  3.8830359063594055`*^9}},ExpressionUUID->"6bcae872-9fff-4094-8373-\
b185a892895c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "sentence", "=", 
   "\"\<The company said that sales in the three months to the end of March \
slid to EUR86 .4 m US$ 113.4 m from EUR91 .2 m last year\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8830267990957637`*^9, 3.883026821110333*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ddd1ef7e-2539-4c28-af07-76f0269c810a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sentimentFinBERT", "=", 
  RowBox[{"finbert", "[", "sentence", "]"}]}]], "Input",
 CellChangeTimes->{{3.883026828856285*^9, 3.883026862340499*^9}, {
  3.883026892635274*^9, 3.883026897792742*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"181d0ec3-4ac6-4775-8c4b-8ef0c501b1c5"],

Cell[BoxData["\<\"negative\"\>"], "Output",
 CellChangeTimes->{{3.8830268705611815`*^9, 3.8830268993301935`*^9}, 
   3.883039431143832*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"2bfc3769-f948-4c5e-ab7c-ca8e34ff8cb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sentimentFinRoBERTa", "=", 
  RowBox[{"finroberta", "[", "sentence", "]"}]}]], "Input",
 CellChangeTimes->{{3.883026877769963*^9, 3.883026920692747*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a9744f4b-6af3-4bbe-9a36-1446e43c2712"],

Cell[BoxData["\<\"negative\"\>"], "Output",
 CellChangeTimes->{3.883026923963406*^9, 3.883039432548832*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"6058410a-81b0-4058-ad96-3ac84b6f0d4a"]
}, Open  ]],

Cell["The answers are acceptable for both Sentiment Analysis.", "Text",
 CellChangeTimes->{{3.883027188057128*^9, 
  3.883027241051423*^9}},ExpressionUUID->"8a38e0ee-6157-4ff8-84c8-\
17279b1707a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison with other BERTs", "Section",
 CellChangeTimes->{{3.8830272984734774`*^9, 
  3.883027322927453*^9}},ExpressionUUID->"99e89d0f-2bb1-45f2-8ac4-\
ed9e9b8b150f"],

Cell["\<\
Let\[CloseCurlyQuote]s look at a prepared dataset for this step. To avoid \
further file import, the dataset is compressed.\
\>", "Text",
 CellChangeTimes->{{3.883027349106666*^9, 3.8830274657506437`*^9}, 
   3.8830299665721645`*^9, {3.883035928323896*^9, 
   3.883035929098948*^9}},ExpressionUUID->"16f65cc7-92d1-4976-935e-\
466b7459baad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{
  "Uncompress", "[", 
   "\"\<1:eJztXFtz28YZVe+\
Z6Uwv05k8f51m6hfJI8lJbKvtpLo6cixLI8p23tolsCA2XGCR3QUpZPq3+\
95zFqRsJbYjy4ouVl84XBIAwcPv+875Lss/D91h8YuFhYXwGzxsqaiCjsXf+\
cIv8fDEhFj8iqvf4mE9BJcZFY2ri5/PDzlsrR58hCcDXUddZ3rAs4/M+\
MiNJXN1MLn2QZ64One1qDoXF0vtxbosXSlI4byUWuXftspHHPu9a/\
8OTw66WOLsHVNvbB8eDXivtW6jV/Y1B++paNXwDAf/qT+\
41BXuJFNnOOPjH55x6HiOOnXSuyL2D2JvQq07ydoYROUSGl3nph4Jv7bK9NABTlWZXEbeTfnG0HWZi\
3FNXgwe/zhkH6XbG+\
FWJvrHMXvL0W8C7S2nvAW1U2e9K2y7NDSvjBVXSGVCICwvjNeZ8rnoYw0wcV2xMK4g0cmGtsq3YVG2\
YICDxuiRtuJ143y8aKs7B4LnMrv3AnCPAE5NhNdJUB0ML0aVjemvuZvW1qlc55IjKkjhXSVtQxS1GZ\
VRalcvTbQ3hcEhKstcW99OEL/\
C4tndwV051E07tLg0YlrQeizWqKGxJnbSeBd11oc7FRAWvavVxMAWRcGlh8Ddwk6dq64BhFfgyY+\
weKGslUH0Wkd5QfjWSQprstOCMypVqxHtkrDhQ7TceZrMEJ6P25EnZkLn39LqZrIH0WhcMOdC7y7dW\
I01LjjRa/Kla4gFaTWWKsrzpVCqRoupRStf472rp9hT3/dyUDrCYntiZl5YAwrbwfOyMWNa4/\
VSA3GiK5OBLybaBuIVXKUlObfyWoU12UzvUcXsIOyF2ObdrXTYB1g8cm6EqDVkvCPB4hu/Gtio/\
RrjVdbRQ53v+ArOjrcSsK+x2LEpZMHcQjts/TBAw7kAvZcsrIStDVtjqfoWZdhG2dx/vru1tPIQh/\
uRFu1drntc24qMjWub6kyAvsXd3oDoG46+eETP7c/k3S1toU2mBsyhJg5M2hjrohStt64dlfDhRA+\
dqBF4hch7nbcZXLcytanaShrVrUmlK3eDQ+\
K5jfILLv56IJ8tLwvSjSAlDBSWBYmCG09525RqD4EOYFmqFUS+\
3r2nznujz8Ak7555nMP2LplLvqQ3H22e5Lfk21zzcngSXfMyZTvJQhKfKHhsBHqRinCoz5i7fYDhkB\
nvC5ialhxeS+VHFTdsLXh35L6QQ7wE64Lh8T3Y4/YzRMGqMlGGemTqayCTLz/\
TWMNiw0KxHDqoFlhQkeBQYJCZbtZ0VKjjlGVUyo813vOwRGjoa8ISl+yprBFsOYu8XwqYEnJ/\
3XoHsp0wukEdF671SxWUSZmi38zW8Bu5aBKSXoes1eCUs0D4AbrqIa3OudI5iZr++\
ewrpBjQxQOdeR0VhB1+mpAiGsNfViqolZBqMso2EIC4nZR9hLZpoLlxgPn+J94YKN+nzPcCi+\
3jDDya8jSYGUBBgBuDTQ3sbw/6rlKLsmHc06izclE2W6+\
fqyxJRvAIwiUcIZghZHcShzJRWWbqs9DwO8N5M3x7x3lq4QNd6WPI6QCfhi4h3abUDgDv6WOTuZQOj\
7wqoL+9URZxoGaxGZEAWUp8LSgfet2AVZfT5T8QRZSVe8snBT3oPxhdpEdHqGbAmXVDKsRUKARpGx6\
ixzfVnd8rMm70CxUdJTO8eA5mj2Nmlamok8d4aQpeaVjrgyuX2ja9x5cA8VZCd0DTY0ml9d2dIHt1m\
5UwLtfomggNraqhXei0I1weAa5vEwUwigWaQ4TQ9KLXkImFWKcuXBKeL4O75CT4b1js16Inmnw7BGq\
+bWLWLfY1hcL4CiK6dHDjlIrMmGbo6jbosHYtILtk1vgnXzUTZeGPPjLJiKyd0lchBx9pX6maNjnIS\
me/EwrFl02lkCEDvnCyuBk+\
u7Mwa3RopL2u6iCoM6ZoZlSbgm2PKN4gDC7CHaEDvVN5X3HJiGG3Jrt7O0zoiuKiiwaX6arnhm8di2\
3mHt+5WsMnFRILKSxsrk855jhJg+\
AnaqoMGHdRtr3J8AGsRauz9MYvpdF7yXUquuymK3UNtzxwpo73V2lZiS1eABU1RfQrmGUkkmByktTf\
7MWo1YX31W5EqLuPxW4tz6JCLqEk10N2zkI00L0prm2H6GoDc/MqN46ZGogEUiW+\
znRuTIQ7N17sh29zQqVvKn7TVkO3Jhue+W0p68ZPqZKR9Br67v1P70vfRcrbVFs+\
1f1AKDTXoEp1BYGOVWV2x+\
ieQe7sIduf1afuJKHGSgEysYqQ1a7u61gszKhAMgYBnzHMfWi1qsfpUBmaUa/\
eKOeCWOjgrIWjVmkuQ1vVsWvBxk+\
iWgBqkfemSlVFrNs6s7DLa0IVl2x8pIpnG4NF2UPqoGh4qra6g/\
htdMYUFkbHeSB57nJVkImPkjjePdhfA3O0PrvwYsqNoIr9hVO1qaOyg0mlbKKf+\
TlurPOsgvo0veeal7N7qYmZJg5MrWpKwqUzdtQ+\
RCemAe5maUZAGZ8qd5QimRqyeOL1NLV2x1o3EH8dYVMFawaFMpbmyXLgraSNbVpgyixM9lIMzw0Oep\
hzBPDoeVsjlqYeg51PGiKb2/u8mYsuqNyIOgA5d1uF7jHIIvXAAyt6fe+7VBB1NeVJXZich7OOt7m/\
L4kscGWZuLMovp+cLy598Hb3dNT7crCxicxMp2nRhr6IA5mejawbKiv629akikEqNINGJinY/\
TS0cTO8luHuiXUdINuAXJGQXDPVixn7TJ2xygf7g5YmbxQcWzFgjeS3Zy0HfIDNCwL36sijqpXtOAx\
kOTbQIAeTpzoW5vgOK+\
xqzJmhgKyCKIJ1dYYjroHLXoHJPT7ttAdIW2lqLK43DpaVucwp8KlPghkxrtHepCGCk4GqEgmHsNl2\
1rb4NR1gOTeGD7HYRXzrq00wOjOTcMBvvY0QdJz/kWE3y3BXl1dXro8+\
vnSeYKenrwyL4rC2g7KblYKl4Y6NzDlL/AJcWFcBtJrDT/sebWhcTJN/\
t5IgCN0Pm7RP3HeuU6nynho+8y7sTAynHi5WJ+3bq4fu0m1uc4FzF17nqQ7wSgmgsK4fWs5Vt0Q/\
peHBjSOcF6aXt2kcbT7NfOXOegXRbZWL6E2jZWoQ3U7ahYWztt89Ne/\
o3KHvWquacNElzxuR9nMofpc783RgGTh2CGS1DJRl55rQZdaFWbeidJZBjblCP+tdR5/\
GqAw89ZN7MjTWMpnI9U/SILv+ku4eFqmRM2othwICUi8b5clge1EOdWFqXraf/\
FzsGzxpb9XVx7YrcFHOnjzpipj2XrgJ8lLJObfjZx3q1JvlRWB7Rtv8B/umXm6puqF++z7c8HSBs+\
8QHlmpZcMBNU1AcBOaW1um4nFKX51Dygq22Fr/\
mjW81gZCClqdsueNbGweB68FiJdcNGHFaUuZihMlrNMx55/\
vwECamlMYc0KvnO8BStoksP2dL812K6fa++3Mw/6FxVFJcjANBG/\
aLerFsHbCqW2kDnViD853cyCAOHLLitfkjolOxU+\
o5tQ745v4Abwaac4VcNvkmXYXfGiZxn66rFfpS74c5yY8EMRt8lkT572eZKhpfAV2euCJuznmGMsns\
npfqp6Qbx+I/5lZZuYqyOBOQhq8417IoKw+\
cepYclNQmv0OcxvUffsXP0FWSrD9wN72s8MHn8vdT6WSZ4NPZGXlXnqe9kTjvYcrcncVa8uiTXdrW2\
876dV2PDbyyLu2kUzZjEoo2S/Ah94pFQtcgAmwyadVPf8pZt0PcNg3IPXbid9/\
sdhQYQqpLZvONwiGvQCKzPf0cVaqGtHRa5sqquvtiBuJ7q3I6vLKMp1+\
5fO11c9kfgnOZTH2wiy5e5CqvJdWiqiDuup0+\
ZRl57gSp6L55xL44eaXSBvrcm2py2S3njhO07A8VM3uzNk2PeG2sE1X1xRkE254H2g/\
MWwFsjD3Y593K5MFSrj9RvM3Zrbeb+\
bxTLb6gCOfwTvmEUZW7z6QV7zFsSsmcwmCeLW6vPzgdvZbOQEb004yKA/\
FWVcfKSIASqZSTWkxmedUQxhr/i0IrGjWqgbyFx1qbsQo4jIW/BsZ2JDhHjtPeTYDKXULGza+\
OmJoDRKIHC59O63rLyfWxXiYu3YY59sk4IMnEw9Xb0WXvxvxD8S1n91K4HCU9cql5gVUMtJZf8TDUd\
foQarn//s5iM351741iL7NZn+Sxc/iX2adBuo1KLzmu77pG735tk9/ZvEzrn5/+\
ubWQdXh1wt9NRTB7k3H9H8B9vHpN7Zr/s1AsoNTCL36s5wG/P+Xf/PlDf8WrVh4jZP9D+GMYRo=\>\
\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.883022924617601*^9, 3.883023022598472*^9}, {
   3.8830251291939106`*^9, 3.8830251335113993`*^9}, 3.8830252119043503`*^9, 
   3.8830253624069767`*^9, {3.8830254824267445`*^9, 3.8830254831241646`*^9}, {
   3.883025592977889*^9, 3.8830255958512335`*^9}, {3.8830256778645415`*^9, 
   3.8830256787578154`*^9}, {3.883027268265029*^9, 3.883027268340977*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"94543f50-2c0f-4c64-9f4a-201640017b17"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "Sentence" -> 
        "TikTok considers London and other locations for headquarters", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "neutral"|>, <|
       "Sentence" -> 
        "Disney cuts ad spending on Facebook amid growing boycott: WSJ", 
        "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Trail of missing Wirecard executive leads to Belarus, Der Spiegel \
reports", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Twitter says attackers downloaded data from up to eight non-verified \
accounts", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "U.S. Republicans seek liability protections as coronavirus aid \
battle looms", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Wall Street Week Ahead: Fund managers navigate 'Night of the Living \
Dea", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> "Take Five: Hoping for that V-shape in earnings", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Evictions nearly back to pre-pandemic levels in some U.S. areas: \
Cleveland Fed study", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> 
        "negative", "Mathematica FinBERT" -> "negative", 
        "Mathematica FinRoBERTa" -> "negative"|>, <|
       "Sentence" -> 
        "Google bans ads on coronavirus conspiracy theory content", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Flight to suburbs boosts U.S. homebuilding, but COVID-19 surge \
erodes consumer sentiment", "Python FinBERT" -> "positive", "Matlab FinBERT" -> 
        "positive", "Mathematica FinBERT" -> "negative", 
        "Mathematica FinRoBERTa" -> "positive"|>, <|
       "Sentence" -> 
        "Delta will avoid pilot furloughs if they agree to reduced minimum \
pay: memo", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "S&P 500 ends higher as traders weigh stimulus and virus worries", 
        "Python FinBERT" -> "negative", "Matlab FinBERT" -> "positive", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "FTC considering deposing top Facebook executives in antitrust probe: \
WSJ", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Where did all the bulls go? Rallies stall as EU summit begins", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "BlackRock profit beats Street estimates as markets rebound", 
        "Python FinBERT" -> "positive", "Matlab FinBERT" -> "positive", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Dollar falls, euro hovers at four-month high as EU negotiates rescue \
fund", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Boohoo tells UK Home Secretary itis probing charges of malpractice \
in supply chain", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> 
        "negative", "Mathematica FinBERT" -> "negative", 
        "Mathematica FinRoBERTa" -> "neutral"|>, <|
       "Sentence" -> 
        "Exclusive: EU in talks with Modema, BioNtech, CureVac to secure \
possible COVID vaccines", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> 
        "positive", "Mathematica FinBERT" -> "positive", 
        "Mathematica FinRoBERTa" -> "positive"|>, <|
       "Sentence" -> 
        "Former Pemex boss arrives back in Mexico for graft trial, enters \
hospital", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Twitter says about 130 accounts were targeted in cyber attack this \
week", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Senator asks Twitter about claim worker was paid to help with hack", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Treasury's Mnuchin open to blanket forgiveness for smaller business \
relief loans", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "On eve of bankruptcy, U.S. firms shower execs with bonuses:", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Rival parties take aim at Germany's Scholz over Wirecard scandal", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "U.S. economy faces significant risks, long road to recovery: IMF \
staff", "Python FinBERT" -> "negative", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Euro zone shares flat as EU recovery plan awaited, Ericsson soars", 
        "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Cohen's Point72 to open Warsaw office for some back office teams", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "In Utah, a debate stirs over Estonian radioactive waste", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "End of the jumbo: British Airways retires 747 early due to \
coronavirus crisis", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> 
        "negative", "Mathematica FinBERT" -> "negative", 
        "Mathematica FinRoBERTa" -> "negative"|>, <|
       "Sentence" -> 
        "Fed opens 'Main Street' loan program to nonprofits, eases terms", 
        "Python FinBERT" -> "positive", "Matlab FinBERT" -> "positive", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "As big U.S. banks let customers delay payments, loan losses remain \
unclear", "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "UBS, Morgan Stanley expected to lead Vodafone Tower IPO: sources", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Exclusive: Thyssenkrupp to explore further options for boosting \
finances - memo", "Python FinBERT" -> "positive", "Matlab FinBERT" -> 
        "positive", "Mathematica FinBERT" -> "positive", 
        "Mathematica FinRoBERTa" -> "positive"|>, <|
       "Sentence" -> 
        "Icelandair to sack cabin crew but keep flying after failed talks", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Economic recovery further away than markets think: BlackRock CEO \
Fink", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "EasyJet pilots say they have no confidence in COO in union vote", 
        "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "neutral"|>, <|
       "Sentence" -> 
        "Exclusive: HSBC sheds top talent as global equities boss leaves - \
sources", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Lloyds Bank sets target to increase number of senior Black staff", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "positive", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Wall Street analysts look past Netfix's weak subscriber forecast", 
        "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Exclusive: Pact to aid poor cocoa farmers in peril as COVID-19 hits \
demand", "Python FinBERT" -> "negative", "Matlab FinBERT" -> "positive", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Italy plans listing for Autostrade by early 2021: sources", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "neutral"|>, <|
       "Sentence" -> 
        "German abattoir scandal puts cooling systems under COVID spotlight", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Former Pemex boss Lozoya taken to hospital after arrival in Mexico", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "neutral"|>, <|
       "Sentence" -> 
        "Bored bank customers flock to day-trading platforms during pandemic",
         "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> "Stripe wins business following Wirecard's collapse", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Indonesian tycoon Salim wins close shareholder vote on controversial \
$3 billion deal", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> 
        "positive", "Mathematica FinBERT" -> "positive", 
        "Mathematica FinRoBERTa" -> "positive"|>, <|
       "Sentence" -> "EU regulators halt LSE, Refinitiv probe, await data", 
        "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Lyftto provide drivers with partition shields as coronavirus \
protection", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "neutral"|>, <|
       "Sentence" -> 
        "Deutsche Boerse proposes new rules for quick DAX expulsion in wake \
of Wirecard", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> 
        "Daimler to stop building sedans in the U.S. after second-quarter \
loss", "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "The ship unloader is totally enclosed along the entire conveying \
line to the storage facilities", "Python FinBERT" -> "neutral", 
        "Matlab FinBERT" -> "neutral", "Mathematica FinBERT" -> "neutral", 
        "Mathematica FinRoBERTa" -> "neutral"|>, <|
       "Sentence" -> 
        "Marathon estimates the value of its remaining stake in Protalix at $ \
27 million", "Python FinBERT" -> "neutral", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "neutral", "Mathematica FinRoBERTa" -> 
        "neutral"|>, <|
       "Sentence" -> 
        "The company said that sales in the three months to the end of March \
slid to EUR86 .4 m US$ 113.4 m from EUR91 .2 m last year", "Python FinBERT" -> 
        "negative", "Matlab FinBERT" -> "negative", "Mathematica FinBERT" -> 
        "negative", "Mathematica FinRoBERTa" -> "negative"|>, <|
       "Sentence" -> 
        "Ruukki Group calculates that it has lost EUR 4mn in the failed \
project", "Python FinBERT" -> "negative", "Matlab FinBERT" -> "negative", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> 
        "Basware Corporation stock exchange release August 31 2010 at 16:25 \
Basware signed a large deal with an international industrial group Basware \
will deliver Invoice Automation solution and Connectivity Services to an \
international industrial group", "Python FinBERT" -> "neutral", 
        "Matlab FinBERT" -> "positive", "Mathematica FinBERT" -> "positive", 
        "Mathematica FinRoBERTa" -> "positive"|>, <|
       "Sentence" -> 
        "Operating profit rose to EUR 5mn from EUR 2.8 mn in the fourth \
quarter of 2008", "Python FinBERT" -> "positive", "Matlab FinBERT" -> 
        "positive", "Mathematica FinBERT" -> "positive", 
        "Mathematica FinRoBERTa" -> "positive"|>, <|
       "Sentence" -> 
        "there is a shortage of capital, and we need extra financing", 
        "Python FinBERT" -> "negative", "Matlab FinBERT" -> "neutral", 
        "Mathematica FinBERT" -> "negative", "Mathematica FinRoBERTa" -> 
        "negative"|>, <|
       "Sentence" -> "growth is strong and we have plenty of liquidity", 
        "Python FinBERT" -> "positive", "Matlab FinBERT" -> "positive", 
        "Mathematica FinBERT" -> "positive", "Mathematica FinRoBERTa" -> 
        "positive"|>, <|
       "Sentence" -> "there are doubts about our finances", "Python FinBERT" -> 
        "negative", "Matlab FinBERT" -> "neutral", "Mathematica FinBERT" -> 
        "neutral", "Mathematica FinRoBERTa" -> "negative"|>, <|
       "Sentence" -> "profits are flat", "Python FinBERT" -> "neutral", 
        "Matlab FinBERT" -> "neutral", "Mathematica FinBERT" -> "positive", 
        "Mathematica FinRoBERTa" -> "negative"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Sentence"} -> 
        1, {All, "Python FinBERT"} -> 1, {All, "Matlab FinBERT"} -> 
        1, {All, "Mathematica FinBERT"} -> 1, {All, "Mathematica FinRoBERTa"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Sentence" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Python FinBERT" -> TypeSystem`PackageScope`AtomShape[84.], 
            "Matlab FinBERT" -> TypeSystem`PackageScope`AtomShape[84.], 
            "Mathematica FinBERT" -> TypeSystem`PackageScope`AtomShape[84.], 
            "Mathematica FinRoBERTa" -> 
            TypeSystem`PackageScope`AtomShape[84.]|>], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Sentence", "Python FinBERT", "Matlab FinBERT", "Mathematica FinBERT",
          "Mathematica FinRoBERTa"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]]}], 60], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "Sentence"} -> 
        1, {All, "Python FinBERT"} -> 1, {All, "Matlab FinBERT"} -> 
        1, {All, "Mathematica FinBERT"} -> 1, {All, "Mathematica FinRoBERTa"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "Sentence" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Python FinBERT" -> TypeSystem`PackageScope`AtomShape[84.], 
            "Matlab FinBERT" -> TypeSystem`PackageScope`AtomShape[84.], 
            "Mathematica FinBERT" -> TypeSystem`PackageScope`AtomShape[84.], 
            "Mathematica FinRoBERTa" -> 
            TypeSystem`PackageScope`AtomShape[84.]|>], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Sentence", "Python FinBERT", "Matlab FinBERT", "Mathematica FinBERT",
          "Mathematica FinRoBERTa"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["negative", "neutral", "positive"]]}], 60], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 5, 
     "DataRowCount" -> 60, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Sentence", 
                  Style[
                  "Sentence", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Sentence"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Sentence"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Python FinBERT", 
                  Style[
                  "Python FinBERT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Python FinBERT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Python FinBERT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Matlab FinBERT", 
                  Style[
                  "Matlab FinBERT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Matlab FinBERT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Matlab FinBERT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mathematica FinBERT", 
                  Style[
                  "Mathematica FinBERT", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mathematica FinBERT"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mathematica FinBERT"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mathematica FinRoBERTa", 
                  Style[
                  "Mathematica FinRoBERTa", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Mathematica FinRoBERTa"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Mathematica FinRoBERTa"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
              "TikTok considers London and other locations for headquarters", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Disney cuts ad spending on Facebook amid growing boycott: WSJ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Trail of missing Wirecard executive leads to Belarus, Der \
Spiegel reports", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Twitter says attackers downloaded data from up to eight \
non-verified accounts", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "U.S. Republicans seek liability protections as coronavirus aid \
battle looms", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Wall Street Week Ahead: Fund managers navigate 'Night of the \
Living Dea", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Take Five: Hoping for that V-shape in earnings", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Evictions nearly back to pre-pandemic levels in some U.S. \
areas: Cleveland Fed study", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Google bans ads on coronavirus conspiracy theory content", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Flight to suburbs boosts U.S. homebuilding, but COVID-19 surge \
erodes consumer sentiment", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Delta will avoid pilot furloughs if they agree to reduced \
minimum pay: memo", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "S&P 500 ends higher as traders weigh stimulus and virus \
worries", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "FTC considering deposing top Facebook executives in antitrust \
probe: WSJ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Where did all the bulls go? Rallies stall as EU summit begins", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "BlackRock profit beats Street estimates as markets rebound", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Dollar falls, euro hovers at four-month high as EU negotiates \
rescue fund", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Boohoo tells UK Home Secretary itis probing charges of \
malpractice in supply chain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Exclusive: EU in talks with Modema, BioNtech, CureVac to \
secure possible COVID vaccines", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Former Pemex boss arrives back in Mexico for graft trial, \
enters hospital", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["positive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Twitter says about 130 accounts were targeted in cyber attack \
this week", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Sentence"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["neutral", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Python FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Matlab FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Mathematica FinBERT"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["negative", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Mathematica FinRoBERTa"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 60, 1], {1, 60 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 60, 1], {1, 60 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[60, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[60, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 60, 1], {1, 60 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 60, 1], {1, 60 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1087., {299.63403309800196`, 305.36596690199804`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1087., {299.63403309800196`, 305.36596690199804`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883025134609501*^9, 3.883025230103362*^9, 
  3.8830252857125587`*^9, 3.8830253701269827`*^9, 3.883025845350503*^9, 
  3.8830274789988036`*^9, 3.883039443409308*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"628860c6-d180-42c9-997b-1a8a3f80f903"]
}, Open  ]],

Cell["\<\
The column \[OpenCurlyDoubleQuote]Sentence\[CloseCurlyDoubleQuote] contains \
60 sentences from across the internet. The \[OpenCurlyDoubleQuote]Sentence\
\[CloseCurlyDoubleQuote] sentiments are listed in the columns \
\[OpenCurlyDoubleQuote]Mathematica FinBERT\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]Mathematica FinRoBERTa.\[CloseCurlyDoubleQuote] It is \
recognizable, that few sentiments differ among these two networks.
Sentiment analysis has been done with the \[OpenCurlyDoubleQuote]Huggingface \
FinBERT solution for Python\[CloseCurlyDoubleQuote] [7][8], and with the \
Matlab FinBERT solution [9]. A comparison of all the sentiments shows that \
there are differences between the sentiments. 
The person who wrote the notebook is not a native English speaker, so some \
mistakes might happen during sentence interpretation. The sentiments \
calculated by Mathematica FinRoBERTA fit the expectations  of most of the \
author. In general, the differences might be caused by a lack of training \
settings that are standard. 
Therefore, the user is free to choose which solution he/she prefers.\
\>", "Text",
 CellChangeTimes->{{3.8830275451613455`*^9, 3.883027583014541*^9}, {
   3.883027636570013*^9, 3.8830278536273794`*^9}, {3.8830282072732673`*^9, 
   3.88302828203712*^9}, {3.883028390036439*^9, 3.883028406887045*^9}, {
   3.883028449942246*^9, 3.8830284665170164`*^9}, {3.883028517351506*^9, 
   3.8830285251054196`*^9}, {3.883028560065195*^9, 3.883028588790477*^9}, {
   3.883028854844845*^9, 3.8830289898583283`*^9}, {3.8830290412278366`*^9, 
   3.8830290840408554`*^9}, {3.88302911631159*^9, 3.8830291285522833`*^9}, {
   3.88302917065574*^9, 3.8830293331241674`*^9}, {3.8830293646665072`*^9, 
   3.883029504387131*^9}, {3.883029541094909*^9, 3.883029542226996*^9}, 
   3.883029866218113*^9, {3.883036000704812*^9, 3.88303606384709*^9}, {
   3.883036105307846*^9, 
   3.8830361053652983`*^9}},ExpressionUUID->"ee642f77-1523-40b3-ae30-\
ca5d2c353e26"]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.873271894740443*^9, 
  3.8732719014674425`*^9}},ExpressionUUID->"0bf06213-2adb-4df1-9a72-\
9310ad91d4ee"],

Cell["\<\
[1] Wolfram Neural Net Repository, \
https://resources.wolframcloud.com/NeuralNetRepository

[2] Wolfram Neural Net Repository, Text Domain, \
https://resources.wolframcloud.com/NeuralNetRepository/inputdomain/Text/

[3] Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, \
Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov, 2019, RoBERTa: A \
Robustly Optimized BERT Pretraining Approach, \
https://arxiv.org/abs/1907.11692, arXiv:1907.11692v1

[4] The dataset of the Financial Phrase-Bank can be found here: \
https://www.researchgate.net/publication/251231364_FinancialPhraseBank-v10

[5] Pekka Malo, Ankur Sinha, Pekka Korhonen, Jyrki Wallenius, and Pyry \
Takala, 2014, Good debt or bad debt: Detecting semantic orientations in \
economic texts. Journal of the Association for Information Science and \
Technology 65, 4 (2014), 782\[Dash]796. https://doi.org/10.1002/asi.23062 \
arXiv:arXiv:1307.5336v2

[6] selection of FiQA-2018 data, https://sites.google.com/view/fiqa/home

[7] https://github.com/yya518/FinBERT

[8] https://finbert.ai/sentiment

[9] https://github.com/matlab-deep-learning/transformer-models

[10] BERT Trained on BookCorpus and Wikipedia Data, \
https://resources.wolframcloud.com/NeuralNetRepository/resources/BERT-Trained-\
on-BookCorpus-and-Wikipedia-Data/

[11] RoBERTa Trained on BookCorpus, English Wikipedia, CC-News, OpenWebText \
and Stories Datasets,  \
https://resources.wolframcloud.com/NeuralNetRepository/resources/RoBERTa-\
Trained-on-BookCorpus-English-Wikipedia-CC-News-OpenWebText-and-Stories-\
Datasets/



\
\>", "Text",
 CellChangeTimes->{{3.8732719252404437`*^9, 3.8732719272624426`*^9}, {
   3.873272298879242*^9, 3.8732723474372425`*^9}, {3.8732726261294184`*^9, 
   3.8732726305887966`*^9}, {3.873272670513507*^9, 3.8732727222029805`*^9}, {
   3.873275069178156*^9, 3.8732750914365597`*^9}, 3.873275134505531*^9, {
   3.8732751906714025`*^9, 3.873275265005368*^9}, {3.8732754254675674`*^9, 
   3.873275439567587*^9}, {3.8732775821741495`*^9, 3.873277582494794*^9}, {
   3.8732791686792364`*^9, 3.873279170351777*^9}, {3.8732792491674986`*^9, 
   3.873279266236265*^9}, {3.873279302423193*^9, 3.873279338540767*^9}, {
   3.873282060018075*^9, 3.873282066225943*^9}, 3.873282282341378*^9, {
   3.8806187102089972`*^9, 3.880618739484062*^9}, {3.8830281069888153`*^9, 
   3.8830281482852488`*^9}, {3.883028415152729*^9, 3.883028434339212*^9}, {
   3.883032778952236*^9, 3.883032826847636*^9}, {3.8830344506331043`*^9, 
   3.8830344738786945`*^9}, {3.8830345073739862`*^9, 3.883034604003543*^9}, {
   3.8830349479387608`*^9, 3.8830349624843693`*^9}, {3.8830353885733004`*^9, 
   3.8830355292167983`*^9}},ExpressionUUID->"74a7fde5-9b9b-46d5-8e64-\
89ffa677b293"],

Cell["\<\

\
\>", "Text",
 CellChangeTimes->{{3.873279138246061*^9, 
  3.8732791670137568`*^9}},ExpressionUUID->"d7df8766-1a06-40fb-85c3-\
717882b3bfde"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 747.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.275590551181, 841.8897637795276}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"121a86da-89e3-4372-82d8-438ddf40b13f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 300, 6, 71, "Title",ExpressionUUID->"ca8aae2a-8ff6-4bab-a453-968b890a65b4"],
Cell[883, 30, 351, 8, 58, "Text",ExpressionUUID->"3e69ced5-0093-46ba-9425-8a4bcdc3236f"],
Cell[CellGroupData[{
Cell[1259, 42, 159, 3, 67, "Section",ExpressionUUID->"6bd81347-6538-4eee-b272-ddd3f2a415c7"],
Cell[1421, 47, 1342, 22, 265, "Text",ExpressionUUID->"7c8b96c7-8f6b-43e0-b2fc-81de31bdd4bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2800, 74, 156, 3, 67, "Section",ExpressionUUID->"fd770504-02ce-4349-bde3-6c341dc61dba"],
Cell[2959, 79, 475, 9, 58, "Text",ExpressionUUID->"6b31f098-dc27-47c3-af1d-07f2c24a52c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3471, 93, 251, 4, 67, "Section",ExpressionUUID->"12b386a3-01ba-4149-9fcd-5ec2891d395e"],
Cell[3725, 99, 1477, 26, 173, "Text",ExpressionUUID->"3c93e734-1e8b-4367-9f21-ede99a081a94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5239, 130, 155, 3, 67, "Section",ExpressionUUID->"8d692d9c-5f50-46e7-830f-0481be4b4bd8"],
Cell[CellGroupData[{
Cell[5419, 137, 197, 3, 54, "Subsection",ExpressionUUID->"37a89efe-12c0-408d-be55-3c59c6f695ce"],
Cell[5619, 142, 135150, 2219, 365, "Text",ExpressionUUID->"8d2df918-c15f-45eb-8fc5-f79e2e23f2e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140806, 2366, 204, 3, 54, "Subsection",ExpressionUUID->"6f2a1c45-9589-4981-b0ba-ce5076e31aea"],
Cell[141013, 2371, 525, 9, 35, "Text",ExpressionUUID->"f1435e26-abed-47de-bb8f-5346980d0b30"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141587, 2386, 221, 4, 67, "Section",ExpressionUUID->"43e5c50b-a420-4b8e-b0c6-c81f4057d10d"],
Cell[141811, 2392, 78130, 1281, 527, "Text",ExpressionUUID->"bc2ac7b4-a27c-4f5b-9159-1044406941d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219978, 3678, 155, 3, 67, "Section",ExpressionUUID->"f42ee9ad-615a-4633-88a5-dd99eefcb801"],
Cell[220136, 3683, 249, 6, 35, "Text",ExpressionUUID->"9ed88a0f-a4ae-4102-88d0-8d4c97c90237"],
Cell[220388, 3691, 351, 7, 32, "Item",ExpressionUUID->"ffe69cbe-73f1-4dc8-8537-4a61a8fbe773"],
Cell[220742, 3700, 401, 8, 32, "Item",ExpressionUUID->"de6e6cf0-d5d6-4a7c-a284-4321b309d75b"],
Cell[221146, 3710, 336, 7, 32, "Item",ExpressionUUID->"aaa81c63-88b6-4305-818f-e0b02612865d"],
Cell[221485, 3719, 309, 7, 32, "Item",ExpressionUUID->"7f7371ca-747c-42ff-9609-14e64567e5bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221831, 3731, 248, 4, 67, "Section",ExpressionUUID->"117b1508-688e-4062-a944-9a487ca908cb"],
Cell[CellGroupData[{
Cell[222104, 3739, 294, 4, 54, "Subsection",ExpressionUUID->"eec7b8c4-653d-4179-8818-495e1e411340"],
Cell[222401, 3745, 446, 9, 35, "Text",ExpressionUUID->"ecec216c-831a-4aa0-a29d-a7c79b135e3b"],
Cell[222850, 3756, 496, 10, 35, "Text",ExpressionUUID->"0751c07a-407c-453d-9f47-2f7adf4e5708"],
Cell[223349, 3768, 270, 4, 35, "Text",ExpressionUUID->"110accda-a906-46ee-8435-3b6fde285bd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223656, 3777, 193, 3, 54, "Subsection",ExpressionUUID->"dda815d4-e168-420f-9d5c-4026798fc0e9"],
Cell[223852, 3782, 296, 6, 35, "Text",ExpressionUUID->"7bb6493a-10ee-4980-bb68-95eda794c7fc"],
Cell[CellGroupData[{
Cell[224173, 3792, 277, 5, 28, "Input",ExpressionUUID->"0f045cb9-ecb2-41b4-a623-e2a359cfd4c0"],
Cell[224453, 3799, 286, 4, 32, "Output",ExpressionUUID->"2902503c-af37-4663-b935-856b44243859"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224776, 3808, 328, 5, 28, "Input",ExpressionUUID->"109a9d8d-06e8-4f7d-890d-4da4c497bb80"],
Cell[225107, 3815, 2538333, 37388, 67, "Output",ExpressionUUID->"6f0d2fe0-82e4-43ee-836c-d3b9b974be27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2763477, 41208, 330, 5, 28, "Input",ExpressionUUID->"13f10e83-e83c-4bdf-91ae-3b1d87412f76"],
Cell[2763810, 41215, 333823, 5413, 67, "Output",ExpressionUUID->"116f1a8c-94e0-4c4a-803f-1932d7ccddcb"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3097694, 46635, 167, 3, 67, "Section",ExpressionUUID->"591f1b77-df0c-4b3e-95af-a009df8cad37"],
Cell[3097864, 46640, 204, 3, 35, "Text",ExpressionUUID->"6bcae872-9fff-4094-8373-b185a892895c"],
Cell[3098071, 46645, 363, 8, 28, "Input",ExpressionUUID->"ddd1ef7e-2539-4c28-af07-76f0269c810a"],
Cell[CellGroupData[{
Cell[3098459, 46657, 298, 5, 28, "Input",ExpressionUUID->"181d0ec3-4ac6-4775-8c4b-8ef0c501b1c5"],
Cell[3098760, 46664, 217, 3, 32, "Output",ExpressionUUID->"2bfc3769-f948-4c5e-ab7c-ca8e34ff8cb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3099014, 46672, 255, 4, 28, "Input",ExpressionUUID->"a9744f4b-6af3-4bbe-9a36-1446e43c2712"],
Cell[3099272, 46678, 185, 2, 32, "Output",ExpressionUUID->"6058410a-81b0-4058-ad96-3ac84b6f0d4a"]
}, Open  ]],
Cell[3099472, 46683, 197, 3, 35, "Text",ExpressionUUID->"8a38e0ee-6157-4ff8-84c8-17279b1707a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3099706, 46691, 174, 3, 67, "Section",ExpressionUUID->"99e89d0f-2bb1-45f2-8ac4-ed9e9b8b150f"],
Cell[3099883, 46696, 350, 7, 35, "Text",ExpressionUUID->"16f65cc7-92d1-4976-935e-466b7459baad"],
Cell[CellGroupData[{
Cell[3100258, 46707, 5007, 82, 581, "Input",ExpressionUUID->"94543f50-2c0f-4c64-9f4a-201640017b17"],
Cell[3105268, 46791, 113709, 2159, 624, "Output",ExpressionUUID->"628860c6-d180-42c9-997b-1a8a3f80f903"]
}, Open  ]],
Cell[3218992, 48953, 1989, 30, 173, "Text",ExpressionUUID->"ee642f77-1523-40b3-ae30-ca5d2c353e26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3221018, 48988, 157, 3, 67, "Section",ExpressionUUID->"0bf06213-2adb-4df1-9a72-9310ad91d4ee"],
Cell[3221178, 48993, 2749, 58, 656, "Text",ExpressionUUID->"74a7fde5-9b9b-46d5-8e64-89ffa677b293"],
Cell[3223930, 49053, 153, 6, 58, "Text",ExpressionUUID->"d7df8766-1a06-40fb-85c3-717882b3bfde"]
}, Open  ]]
}, Open  ]]
}
]
*)

